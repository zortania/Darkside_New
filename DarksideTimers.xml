<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage />
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Sunder</name>
			<script></script>
			<command></command>
			<packageName>Sunder</packageName>
			<time>00:00:00.000</time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>Sunder</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Vermin</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>moveroom</name>
						<script>snd.move()
disableTimer("moveroom")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:55.000</time>
					</Timer>
				</TimerGroup>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Bard</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Singing Song</name>
						<script>snd.song = "none"
snd.singing = false
snd.midsong = false
disableTimer("Singing Song")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:08.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Playing Song</name>
						<script>snd.song_instrument = "none"
snd.playing = false
disableTimer("Playing Song")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.100</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>Darkside Timers</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>blackout</name>
					<script>if snd.have_aff("blackout") then 
	send("eat"..snd.sep.."stand"..snd.sep.."meditate"..snd.sep.."clot"..snd.sep.."queue pipe smoke"..snd.sep.."concentrate"..snd.sep.."insomnia"..snd.sep.."wear glasses"..snd.sep.."wear armour"..snd.sep.."say"..snd.sep.."apply paste")
  cecho("\n&lt;green&gt;Health: " ..snd.percentesthealth.. " Mana: " ..snd.percentestmana)
  snd.hidden_afflictions = snd.hidden_afflictions + 1
  cecho("&lt;red&gt;\nYour Hidden Aff Total: "..snd.hidden_afflictions)
else
  disableTimer("blackout")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>recklessblackouttimer</name>
					<script>if snd.have_aff("blackout") or snd.have_aff("recklessness") then
	local percentesthealth =  (snd.percentesthealth  / gmcp.Char.Vitals.maxhp)*100
	local percentestmana =  (snd.percentestmana  / gmcp.Char.Vitals.maxmp)*100
	
	if tonumber(percentesthealth) &gt; 74 and tonumber(percentestmana) &gt; 74 then
		cecho("\n&lt;green&gt;Health: " ..snd.percentesthealth.. " Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 50 and tonumber(percentesthealth) &lt; 75  and tonumber(percentestmana) &gt; 50 and tonumber(percentestmana) &lt; 75 then
		cecho("\n&lt;yellow&gt;Health: " ..snd.percentesthealth.. " Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 0 and tonumber(percentesthealth) &lt; 50  and tonumber(percentestmana) &gt; 0 and tonumber(percentestmana) &lt; 50 then
		cecho("\n&lt;red&gt;Health: " ..snd.percentesthealth.. " Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 74 and tonumber(snd.percentestmana) &gt; 0 and tonumber(percentestmana) &lt; 50 then
		cecho("\n&lt;green&gt;Health: " ..snd.percentesthealth.. "&lt;red&gt; Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 50 and tonumber(percentesthealth) &lt; 75 and tonumber(percentestmana) &gt; 0 and tonumber(percentestmana) &lt; 50 then
		cecho("\n&lt;yellow&gt;Health: " ..snd.percentesthealth.. "&lt;red&gt; Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 0 and tonumber(percentesthealth) &lt; 50 and tonumber(percentestmana) &gt; 75 then
		cecho("\n&lt;red&gt;Health: " ..snd.percentesthealth.. "&lt;green&gt; Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 50 and tonumber(percentesthealth) &lt; 75 and tonumber(percentestmana) &gt; 74 then
		cecho("\n&lt;yellow&gt;Health: " ..snd.percentesthealth.. "&lt;green&gt; Mana: " ..snd.percentestmana)
	elseif tonumber(percentesthealth) &gt; 0 and tonumber(percentesthealth) &lt; 50 and tonumber(percentestmana) &gt; 74 then
		cecho("\n&lt;red&gt;Health: " ..snd.percentesthealth.. "&lt;green&gt; Mana: " ..snd.percentestmana)
	else
		cecho("\n&lt;yellow&gt;Health: " ..snd.percentesthealth.. " Mana: " ..snd.percentestmana)
	end
  if snd.have_aff("blackout") then
    snd.hidden_afflictions = snd.hidden_afflictions + 1
    cecho("&lt;red&gt;\nYour Hidden Aff Total: "..snd.hidden_afflictions)
  end
else
	disableTimer("recklessblackouttimer")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>looktimer</name>
					<script>if not snd.channeling then
  --snd.send("ql")
end
disableTimer("looktimer")
if snd.def_needed then
  expandAlias("defup")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Firstaidstatustimer</name>
					<script>if snd.toggles.active then
	if gmcp.Char.Status.race == "Idreth" and snd.endgamedef == "" then
		snd.endgamedef = "safeguard"
		snd.endgamehealth = "pulse"
	end
  
  if gmcp.Char.Vitals.equilibrium == "1" then
    if snd.have_aff("disrupted") then snd.aff_remove("disrupted") end
  end
  
  if gmcp.Char.Vitals.balance == "1" then
    if snd.have_aff("stun") then snd.aff_remove("stun") end
    if snd.have_aff("unconsciousness") then snd.aff_remove("unconsciousness") end
  end

	if (snd.checksomeSelfAffs({"slickness","slough"},1) and snd.checksomeSelfAffs({"paralysis","paresis"},1) and snd.have_aff("asthma"))
		or snd.checksomeSelfAffs({"asthma","hellsight"},2)
		or snd.checksomeSelfAffs({"asthma","slickness","anorexia"},3)
		or snd.checksomeSelfAffs({"asthma","weariness","slickness"},3)
		or snd.checksomeSelfAffs({"asthma","confusion","paralysis"},3) 
		or (snd.checksomeSelfAffs({"paralysis","paresis"},1) and snd.have_aff("anorexia") and snd.checksomeSelfAffs({"slickness","slough"},1))
		or (snd.checksomeSelfAffs({"paralysis","paresis"},1) and snd.checksomeSelfAffs({"asthma","anorexia"},2))
		or snd.checksomeSelfAffs({"crippled","paralysis","anorexia"},3)
		or snd.checksomeSelfAffs({"asthma","aeon"},2) then
		snd.need_fitness = true 
	else
		snd.need_fitness = false
	end

	if snd.firstaid then
		if snd.have_aff("hypothermia") and tonumber(snd.my_limb_damage["torso"]) &gt; 1 then
			if snd.firstaidcuretrack.torso ~= "11" and snd.firstaidcuretrack.pretorso ~= "1" then
				send("FIRSTAID PRIORITY PRESTORE torso 1% 11", false)
			end
		elseif snd.have_aff("pre_restore_head") then
			if snd.firstaidcuretrack.head ~= "24" or snd.firstaidcuretrack.prehead ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE head 1% 24", false) 
			end
			snd.canprerestorenow = true
			snd.firstaidchangecure = true  
		elseif snd.have_aff("pre_restore_left_arm") then
			if snd.firstaidcuretrack.leftarm ~= "24" or snd.firstaidcuretrack.preleftarm ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE left arm 1% 24", false) 
			end
			snd.canprerestorenow = true
			snd.firstaidchangecure = true 
		elseif snd.have_aff("pre_restore_right_arm") then
			if snd.firstaidcuretrack.rightarm ~= "24" or snd.firstaidcuretrack.prerightarm ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE right arm 1% 24", false) 
			end 
		elseif snd.have_aff("pre_restore_torso") then 
			if snd.firstaidcuretrack.torso ~= "24" or snd.firstaidcuretrack.pretorso ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE torso 1% 24", false) 
			end 
			snd.canprerestorenow = true
			snd.firstaidchangecure = true
		elseif snd.have_aff("pre_restore_right_leg") then
			if snd.firstaidcuretrack.rightleg ~= "24" or snd.firstaidcuretrack.prerightleg ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE right leg 1% 24", false) 
			end  
			snd.canprerestorenow = true
			snd.firstaidchangecure = true   
		elseif snd.have_aff("pre_restore_left_leg") then
			if snd.firstaidcuretrack.leftleg ~= "24" or snd.firstaidcuretrack.preleftleg ~= "1" and snd.canprerestorenow then
				send("FIRSTAID PRIORITY PRESTORE left leg 1% 24", false) 
			end  
			snd.canprerestorenow = true
			snd.firstaidchangecure = true
		elseif snd.canprerestorenow then  
			snd.canprerestorenow = false
			snd.firstaidchangecure = true
		end
    
		snd.firstaidresetlistnone()    
		snd.firstaidassist()
		snd.parry()
		snd.avoidancecheck()
		snd.elevatecheck()
		snd.hiddencheckfunc() 
		snd.masterprerestore()
		snd.core()
    
		if snd.disablefocus and snd.focusing then
			send("firstaid use focus off", false) 
		elseif not snd.disablefocus and not snd.focusing then
			send("firstaid use focus on", false)
		end
    if snd.not_aff("gloom") and not snd.focusing and not snd.disablefocus then
      send("firstaid use focus on")
    else
      if snd.cureset == "runecarver" and snd.have_aff("gloom") then
        send("firstaid use focus off")
      end
    end
    if snd.cureset == "shaman" then
      if snd.have_aff("paralysis") and snd.stormtouching then
        send("firstaid stormtouched off")	
      elseif not snd.stormtouching then
		    send("firstaid stormtouched on")
      end
    elseif snd.stormtouching then
      send("firstaid stormtouched off")
    end
    
		if snd.have_aff("nyctophobia") and gmcp.Char.Vitals.herb == "1" then
			send("firstaid priority nyctophobia 3", false)
			snd.firstaidchangecure = true
		end 
    if #snd.elevatedaff &gt; 0 then
      cecho("\n&lt;blue&gt;Current elevated affs: "..table.concat(snd.elevatedaff, ", "))
    end
    if #snd.ordered_list &gt; 0 then
      cecho("\n&lt;blue&gt;Affs needing elevating: "..table.concat(snd.ordered_list, ", "))
      if snd.have_aff(snd.ordered_list[1]) then
      else
        table.remove(snd.ordered_list, table.index_of(snd.ordered_list, snd.ordered_list[1]))
      end
    end 
    if #snd.firstaidtobepredicted &gt; 0 then
      cecho("\n&lt;blue&gt;Affs needing predicting: "..table.concat(snd.firstaidtobepredicted, ", "))
    end
    if #snd.firstaidpredict &gt; 0 then
      cecho("\n&lt;blue&gt;Affs predicted: "..table.concat(snd.firstaidpredict, ", "))
    end
    
		if snd.class == "Monk" then
			snd.stance = gmcp.Char.Vitals.stance
		end

		if snd.not_aff("recklessness") and snd.not_aff("blackout") then 
			snd.percentesthealth = gmcp.Char.Vitals.hp
			snd.percentestmana = gmcp.Char.Vitals.mp
			snd.lasthealth = gmcp.Char.Vitals.hp
			snd.lastmana = gmcp.Char.Vitals.mp
		end

		local healthchangeval = 0

		if gmcp.Char.Vitals ~= nil then
			healthchangeval = (tonumber(gmcp.Char.Vitals.hp) - tonumber(snd.lasthealth))
			if snd.not_aff("blackout") then
				if tonumber(healthchangeval) &gt;= 100 then
					if tonumber(snd.lasthealth) &gt; tonumber(gmcp.Char.Vitals.hp) then 
						cecho("&lt;red&gt;\[\- " ..healthchangeval.. " \-\]") 
					elseif tonumber(snd.lasthealth) &lt; tonumber(gmcp.Char.Vitals.hp) then 
						cecho("&lt;cyan&gt;\[\+ " ..healthchangeval.. " +\]")
					end
				end
			end	
			snd.percenthealth = (tonumber(gmcp.Char.Vitals.hp) / tonumber(gmcp.Char.Vitals.maxhp) * 100)
			snd.percenthealth = roundDown(snd.percenthealth,0)
			snd.percentmana = (tonumber(gmcp.Char.Vitals.mp) / tonumber(gmcp.Char.Vitals.maxmp) * 100)
			snd.percentmana = roundDown(snd.percentmana,0)
		end
    
    if not table.contains(snd.firstaidpredict, "recklessness") and not table.contains(snd.firstaidtobepredicted, "recklessness") and snd.hidden_afflictions &gt;= 3 then
      if snd.cureset ~= "none" then
        if gmcp.Char.Vitals.hp == gmcp.Char.Vitals.maxhp and gmcp.Char.Vitals.mp == gmcp.Char.Vitals.maxmp and snd.not_aff("recklessness") then
          table.remove(snd.firstaidtobepredicted, table.index_of(snd.firstaidtobepredicted, "recklessness"))
          table.insert(snd.firstaidtobepredicted, "recklessness")
        end
      end
    else
      if gmcp.Char.Vitals.hp ~= gmcp.Char.Vitals.maxhp and gmcp.Char.Vitals.mp ~= gmcp.Char.Vitals.maxmp then
        if table.contains(snd.firstaidpredict, "recklessness") then
          table.remove(snd.firstaidpredict, table.index_of(snd.firstaidpredict, "recklessness"))
        end
        if table.contains(snd.firstaidtobepredicted, "recklessness") then
          table.remove(snd.firstaidtobepredicted, table.index_of(snd.firstaidtobepredicted, "recklessness"))
        end
      end
    end  
  
		  if gmcp.Char.Vitals.prone == "1" and snd.not_entangled() and snd.not_aff("paralysis") then
				snd.aff_have("prone")
			else
				snd.aff_remove("prone")
			end
			if gmcp.Char.Vitals.fangbarrier == "0" then
				if snd.defenses.def_fangbarrier.state == "deffed" then
					snd.def_remove("fangbarrier")
				end 
			else 
				if snd.defenses.def_fangbarrier.state ~= "deffed" then
					snd.def_gain("fangbarrier") 
				end 
			end
			if gmcp.Char.Vitals.cloak == "0" then
				if snd.defenses.def_cloak.state == "deffed" then
					snd.def_remove("cloak")
				end 
			else 
				if snd.defenses.def_cloak.state ~= "deffed" then
					snd.def_gain("cloak")  
				end 
			end	
			if gmcp.Char.Vitals.maxhp ~= gmcp.Char.Vitals.hp and snd.have_aff("recklessness") then 
				snd.aff_remove("recklessness") 
			end
      if snd.defenses.def_insomnia.state ~= "deffed" then
        send("insomnia")
      end
      if not snd.firstaiddefence then
        if snd.defenses.def_speed.state ~= "deffed" and gmcp.Char.Vitals.elixir == "1" then
          send("drink speed")
        elseif snd.defenses.def_levitation.state ~= "deffed" and gmcp.Char.Vitals.elixir == "1" then
          send("drink levitation")
        end
      end
  
		if snd.have_aff("asleep") and not snd.waking and snd.not_aff("stun") and snd.not_aff("unconsciousness") then 
			send("wake")
			snd.waking = true
			if waketimer_timer then 
			killTimer(waketimer_timer) 
		end
		waketimer_timer = tempTimer(3.0,[[if snd.have_aff("asleep") then snd.waking = false end]])
  
		if snd.not_aff("stun") and snd.not_aff("unconsciousness") and snd.not_aff("asleep") then
			if snd.have_aff("fallen") and snd.restand and gmcp.Char.Vitals.equilibrium == "1" then
				if snd.not_aff("paralysis") and (snd.not_aff("right_leg_broken") or snd.not_aff("left_leg_broken")) and snd.not_aff("right_leg_crippled") and snd.not_aff("left_leg_crippled") and snd.not_aff("frozen") then 
					if snd.class == "Monk" and not snd.kipup then 
						snd.send("qeb kipup")
						snd.kipup = true 
						tempTimer(5,[[snd.kipup = false]])
					end
					snd.send("qeb stand")
					snd.restand = false
					if restandtimer_timer then 
						killTimer(restandtimer_timer) 
					end
					restandtimer_timer = tempTimer(2,[[snd.restand = true]]) 
				end
			end
		end

		if snd.clottime and tonumber(gmcp.Char.Vitals.bleeding) &gt; 30 and not (snd.have_aff("haemophilia") or snd.have_aff("stun")) then 
			snd.clotcheck()
			snd.clottime = false 
			if reclottimer_timer then killTimer(reclottimer_timer) end
				reclottimer_timer = tempTimer(1,[[snd.clottime = true]])
			end
		end
    if #snd.people_hitting_me == 0 and not snd.toggles.attacking then snd.cureset = "none" end
  
	end
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>reset check</name>
					<script>    if #snd.setting_priority &gt; 0 then
      reset_cures = true
      local x = #snd.setting_priority
      while x &gt; 0 and snd.firstaid_go do
        snd.firstaid_go = false
        snd.send("firstaid priority "..snd.setting_priority[x])
        table.remove(snd.setting_priority, x)
        x = x - 1
      end
      tempTimer(.1, [[snd.firstaid_go = true]])
    else
      reset_cures = false
      snd.firstaid_go = false
      disableTimer("reset check")
    end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.150</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Sneezy</name>
					<script>if not snd.spoken then
  local commands = {"A sneeze", "Snez", "Sneeze!"}
  local which = math.random(#commands)
  
  snd.send("wt "..commands[which])
end
snd.sneeze = false
disableTimer("Sneezy")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Spoken</name>
					<script>snd.spoken = false
disableTimer("Spoken")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.750</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Deathsense</name>
					<script>send("wt "..snd.deathsense())
disableTimer("Deathsense")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Stay online</name>
					<script>sendGMCP("Core.KeepAlive")
--snd.send("ql")</script>
					<command></command>
					<packageName></packageName>
					<time>00:15:00.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage />
	<ActionPackage />
	<ScriptPackage />
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
