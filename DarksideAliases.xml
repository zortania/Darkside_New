<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage />
	<TimerPackage />
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Sunder</name>
			<script></script>
			<command></command>
			<packageName>Sunder</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Sunder</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Core</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Help System</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Main Index</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Main index</name>
								<script>cecho("\n&lt;CadetBlue&gt;Sunder Helpfile")
cecho("\n&lt;MediumSeaGreen&gt;---------------")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;Welcome to &lt;green&gt;Sunder&lt;ForestGreen&gt;! This helpfile is meant to give you an introduction to different things that &lt;green&gt;Sunder &lt;ForestGreen&gt;can do. It will not cover every option entirely, but it will provide the most often used or asked about items a bit more light to show how or when to use them.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;The first thing you should know is the &lt;DeepSkyBlue&gt;stap &lt;ForestGreen&gt;command. You type &lt;DeepSkyBlue&gt;stap &lt;ForestGreen&gt;and &lt;green&gt;Sunder &lt;ForestGreen&gt;will cease whatever it is currently attempting to do, for the most part. Some items may need to be toggled manually depending on the situation, but by and large &lt;DeepSkyBlue&gt;stap &lt;ForestGreen&gt;will keep you from hitting someone or something, or any other number of items.")
cecho("\n")
cecho("\n&lt;MediumTurquoise&gt;The index for the rest of the helpfiles is as such:")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;Bashing               &lt;ForestGreen&gt;Do you want to go bashing? &lt;green&gt;Sunder&lt;ForestGreen&gt; has you covered!")
cecho("\n&lt;DeepSkyBlue&gt;PK                    &lt;ForestGreen&gt;Playerkilling and you. Please practice safe PvP.")
cecho("\n&lt;DeepSkyBlue&gt;Defenses              &lt;ForestGreen&gt;How to upkeep, turn on/off and customize defenses.")
cecho("\n&lt;DeepSkyBlue&gt;Ylem                  &lt;ForestGreen&gt;Finding minors and other ylem based information.")
cecho("\n&lt;DeepSkyBlue&gt;Utilities             &lt;ForestGreen&gt;Vermin, fishing, shops, questing and more.")
cecho("\n&lt;DeepSkyBlue&gt;War                   &lt;ForestGreen&gt;Helpful aliases for handling war divisions")
cecho("\n&lt;ForestGreen&gt;Each above entry will point you toward more specific items in each section as needed.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;Use &lt;DeepSkyBlue&gt;sunder help &lt;subject&gt; &lt;ForestGreen&gt;to navigate through everything else.")
cecho("\n")
raiseEvent("sunder_update_vitals")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Ylem helpfile</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;YLEM &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;----------------------------------------")
cecho("\n&lt;ForestGreen&gt;Hunting after those elusive minors and lessers has never been easier! This will walk you through how to do that with a few easy steps. To start, you will need to make sure you have learned &lt;DeepSkyBlue&gt;LEYLINES &lt;ForestGreen&gt;in &lt;MediumTurquoise&gt;Vision &lt;ForestGreen&gt;(289 lessons) and &lt;DeepSkyBlue&gt;SHACKLING &lt;ForestGreen&gt;in &lt;MediumTurquoise&gt;Refining &lt;ForestGreen&gt;(239 lessons). While &lt;DeepSkyBlue&gt;shackling &lt;ForestGreen&gt;is not necessarily needed for this to work, it will benefit you in the long run and keep you from having to deal with multiple eld at once. In the process of learning &lt;DeepSkyBlue&gt;leylines&lt;ForestGreen&gt;, you will also learn &lt;DeepSkyBlue&gt;DETECTION&lt;ForestGreen&gt;, which will assist you in finding focal points. This is only needed if you do not have any reserves to use &lt;MediumTurquoise&gt;MANIPULATE PYLON FOR NODESENSE&lt;ForestGreen&gt;, which allows you to PATH TRACK MINOR directly to the focal point. For this, you will also need to purchase ylem goggles from the vendor at your pylon. Just PATH TRACK PYLON and ASK &lt;vendor&gt; WARES to BUY GOGGLES FROM &lt;vendor&gt;.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;The &lt;green&gt;Sunder &lt;ForestGreen&gt;ylem finder is simple to use! To start, just type in &lt;DeepSkyBlue&gt;goylem start &lt;ForestGreen&gt;and watch as it does all the work of walking around for you. It has a set path that it follows and is easy to change if you wish to do so or if new areas are added before &lt;green&gt;Sunder &lt;ForestGreen&gt;is updated again. It will continually run until it finds either a minor or a lesser. If it finds a minor, you can either DETECTION ON and walk around to find the focal point (it is highlighted in &lt;green&gt;Sunder&lt;ForestGreen&gt; already, so you won't miss it!) or you can PATH TRACK MINOR if you have ylem goggles and have used MANIPULATE PYLON FOR NODESENSE. The nodesense defense will only last for one hour or ten uses. Once you find the minor and extract it (EXTRACTION is the syntax) fully, you can &lt;DeepSkyBlue&gt;goylem next &lt;ForestGreen&gt;to have &lt;green&gt;Sunder &lt;ForestGreen&gt;continue the set path. If you need to stop at any point, you can &lt;DeepSkyBlue&gt;goylem stop &lt;ForestGreen&gt;and it will take you back to your city and reset the variables to start over if you decide to pick it up again. If you need to stop temporarily, you can just &lt;DeepSkyBlue&gt;stap&lt;ForestGreen&gt; and then &lt;DeepSkyBlue&gt;goylem &lt;ForestGreen&gt;to start back up again where you left off!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;goylem start          &lt;ForestGreen&gt;Start finding foci")
cecho("\n&lt;DeepSkyBlue&gt;goylem next           &lt;ForestGreen&gt;Move to the next area")
cecho("\n&lt;DeepSkyBlue&gt;goylem stop           &lt;ForestGreen&gt;Stop and return to your city")
cecho("\n&lt;DeepSkyBlue&gt;goylem                &lt;ForestGreen&gt;Continue if you had to stop")
cecho("\n&lt;DeepSkyBlue&gt;sh                    &lt;ForestGreen&gt;Shackle an eld in the room to stop it from hitting you!")
cecho("\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (Y|y)lem$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Toggles help</name>
								<script>cecho("\n&lt;MediumSeaGreen&gt;*------------------------------------------------------------------------------------------------*")
cecho("\n&lt;MediumSeaGreen&gt;|                                           &lt;CadetBlue&gt;SUNDER TOGGLES                                       &lt;MediumSeaGreen&gt;|")                                                    
cecho("\n&lt;MediumSeaGreen&gt;*------------------------------------------------------------------------------------------------*")
cecho("\n&lt;MediumSeaGreen&gt;| &lt;ansiCyan&gt;TOGGLE NAME &lt;MediumSeaGreen&gt; |                 &lt;ansiCyan&gt;INFOMATION                  &lt;MediumSeaGreen&gt;|             &lt;ansiCyan&gt;TOGGLES               &lt;MediumSeaGreen&gt;|")
cecho("\n&lt;MediumSeaGreen&gt;|------------------------------------------------------------------------------------------------|\n")

local togglecolor = ""

for k, v in pairs(snd.toggle_info) do

if snd.toggles[k] then togglecolor = "DeepSkyBlue" else togglecolor = "SlateGray" end

  cecho("&lt;MediumSeaGreen&gt;|&lt;"..togglecolor.."&gt; "..padRight(k, 13).. "&lt;MediumSeaGreen&gt;|&lt;ForestGreen&gt; "..padRight(tostring(v.info), 44).."&lt;MediumSeaGreen&gt;|&lt;MediumTurquoise&gt; "..padRight(tostring(v.command), 34).."&lt;MediumSeaGreen&gt;|\n")
end

cecho("&lt;MediumSeaGreen&gt;*------------------------------------------------------------------------------------------------*\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (T|t)oggles$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Bashing helpfiles</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder bashing</name>
								<script>cecho("&lt;CadetBlue&gt;Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;bashing&lt;CadetBlue&gt; help file!")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n&lt;green&gt;Sunder &lt;ForestGreen&gt;has several methods of helping you bash, from hitting things in your room to helping you navigate the landscape of Aetolia and its many areas. You can easily know if &lt;green&gt;Sunder&lt;ForestGreen&gt; recognizes your area by doing a check with the &lt;red&gt;SURVEY&lt;ForestGreen&gt; command. As long as you see mob names, &lt;green&gt;Sunder&lt;ForestGreen&gt; will be able to hit things for you.")
cecho("\n")
cecho("\n&lt;red&gt;Consider this your warning: &lt;ForestGreen&gt;The folks who upkeep Sunder do not, by any means, condone or suggest using Sunder to do things while you are AFK or otherwise unable to attend to your character. From HELP AUTOMATION -&gt; FULLY automating quests and hunting - with movement and all actions included in the triggers - are allowed so long as one is present at the computer, as well as gambling automation. Please do not abuse what is being given to you without regard for the admin stance.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;DeepSkyBlue&gt;aa                    &lt;ForestGreen&gt;Make &lt;green&gt;Sunder &lt;ForestGreen&gt;try to hit everything in the room!")
cecho("\n                     &lt;ForestGreen&gt; If there is nothing left in the room, this will turn off.")
cecho("\n&lt;DeepSkyBlue&gt;ff                    &lt;ForestGreen&gt;Want to walk around manually and have Sunder hit things? Use this.")
cecho("\n                     &lt;ForestGreen&gt; It automatically turns on hitting when it finds a valid target.")
cecho("\n&lt;DeepSkyBlue&gt;grp &lt;person&gt;          &lt;ForestGreen&gt;Inform &lt;green&gt;Sunder&lt;ForestGreen&gt; of your bashing party.")
cecho("\n&lt;DeepSkyBlue&gt;grp queen rook pawn   &lt;ForestGreen&gt;Example of adding more than one person.")
cecho("\n&lt;DeepSkyBlue&gt;orbs                  &lt;ForestGreen&gt;Activate your ylem orbs with one alias!")
cecho("\n&lt;DeepSkyBlue&gt;sunder toggle generic &lt;ForestGreen&gt;Use generic mob type instead of number to bash.")
cecho("\n")
cecho("\n")
cecho("\n&lt;green&gt;Sunder&lt;ForestGreen&gt; has some more advanced features listed in &lt;DeepSkyBlue&gt;sunder help autobashing&lt;ForestGreen&gt;.")


cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (B|b)ashing$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder auto bashing</name>
								<script>cecho("&lt;CadetBlue&gt;Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;autobashing&lt;CadetBlue&gt; help file!")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n&lt;green&gt;Sunder &lt;ForestGreen&gt;recognizes a good majority of the areas in the game, including the main bashing areas and most of the ones you might use while gaining levels. The following methods will help you bash these areas, either singular or multiple at a time.")
cecho("\n")
cecho("\n&lt;red&gt;Consider this your warning: &lt;ForestGreen&gt;The folks who upkeep Sunder do not, by any means, condone or suggest using Sunder to do things while you are AFK or otherwise unable to attend to your character. From &lt;red&gt;HELP AUTOMATION -&gt;&lt;ForestGreen&gt; 'FULLY automating quests and hunting - with movement and all actions included in the triggers - are allowed so long as one is present at the computer, as well as gambling automation.' &lt;red&gt;Please do not abuse what is being given to you without regard for the admin stance.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;DeepSkyBlue&gt;goarea               &lt;ForestGreen&gt;Bash the current area you're in and then walk back to your city.")
cecho("\n                     &lt;ForestGreen&gt;Use this for bashing just one area. No need to use the below command.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;bashpath &lt;areas&gt;     &lt;ForestGreen&gt;Define your custom bashing route from valid areas.")
cecho("\n                     &lt;ForestGreen&gt;It will automatically walk you from the last room of area 1 to area 2, etc.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;bashpath tiyen, xaanhal, mamashi &lt;ForestGreen&gt;- for example, would bash those areas and then head home.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;There are some more functions in the scripts for use in your code for creating paths, doing new areas, etc.")
--You would want to look into SND Autopaths-&gt;Creating-&gt;start/add/compile.


cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (A|a)utobashing$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Utility helpfiles</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Questing Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;QUESTING &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;-------------------------------------------")
cecho("\n&lt;ForestGreen&gt;Always ending up with odds and ends in your inventory or kestrels following you around EVERYWHERE because you dared to walk through Three Widows? Well no more! You will now be able to toggle quests on and off so that you only whistle or pick up items when you want!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;------------")
cecho("\n&lt;ForestGreen&gt;As of right now, there is only one toggle to turn it on/off. More may be added in the future! It will not auto-walk areas for you, you will still need to walk around and while you do so &lt;green&gt;Sunder&lt;ForestGreen&gt; will pick up items and turn them in as appropriate. ")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;toggle questing       &lt;ForestGreen&gt;Toggles questing on/off")
cecho("\n&lt;MediumSeaGreen&gt;-------------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (q|Q)uesting$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Who Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;WHO &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;---------------------------------------")
cecho("\n&lt;ForestGreen&gt;Tired of looking through the who list trying to figure out who is where and who they are with when looking for that pesky lesser that was just tapped? Well, thanks to &lt;green&gt;Czcibor&lt;ForestGreen&gt;, &lt;green&gt;Sunder &lt;ForestGreen&gt;has built in group checking via the who list!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;Using the alias &lt;DeepSkyBlue&gt;WHO GROUPS &lt;green&gt;Sunder &lt;ForestGreen&gt;will now sift through the who list and capture room locations. Once it is done with that, it will show you the names of the rooms that have more than one person in that location, how many people are there, and then who all is in that location! Note that those with the &lt;red&gt;cloaking&lt;ForestGreen&gt; artifact or in hidden rooms are unable to be tracked in this manner.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;who groups            &lt;ForestGreen&gt;Shows the full WHO list and then the grouped rooms with more than one person")
cecho("\n&lt;MediumSeaGreen&gt;---------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (w|W)ho$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Vermin Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;VERMIN &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;-----------------------------------------")
cecho("\n&lt;ForestGreen&gt;We get it! Every time you see that daily/weekly/monthly(especially the monthly) milestone for vermin, you just want to run head first into a team of mages collapsing singularities and calamaties! So hopefully these will make your life easier from here on out and save you from death by mages! No guarantees :(")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;First, you will want to make sure you are wielding whatever you need to kill the vermin. After you are ready to start your quest of ridding a city of its vermin, you just &lt;DeepSkyBlue&gt;PATH TRACK &lt;ForestGreen&gt;to any city &lt;LimeGreen&gt;(make sure you are not an enemy!) &lt;ForestGreen&gt;and then type &lt;DeepSkyBlue&gt;toggle vermin &lt;ForestGreen&gt;to start! This will work similar to &lt;DeepSkyBlue&gt;gogo &lt;ForestGreen&gt;in that it will just begin bashing from where you are currently. No matter which city you begin your vermin bashing in, it will end at the vermin mob and will automatically sell your vermin! So no more accidental offerings of vermin to your gods! Should you need to finish early, just type &lt;DeepSkyBlue&gt;toggle vermin &lt;ForestGreen&gt;again and an echo will pop up to remind you to go sell your vermin!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;toggle vermin         &lt;ForestGreen&gt;Toggles the vermin autobasher on/off")
cecho("\n&lt;MediumSeaGreen&gt;-----------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (v|V)ermin$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Fluidcache Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;FLUIDCACHE &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;---------------------------------------------")
cecho("\n&lt;ForestGreen&gt;Ever log in and notice you lost a bunch of refills because your vials, bandages, or (gods forbid) rags decayed? Well NO MORE! Or at least, LESS LIKELY! &lt;green&gt;Sunder &lt;ForestGreen&gt;is now equipped with a few more aliases to help alleviate this problem!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;Simply input the alias you want to use and then either let &lt;green&gt;Sunder &lt;ForestGreen&gt;fill your empty vials, bandages, or rags or consume them into your fluidcache. If you are new to Aetolia, make sure you read &lt;green&gt;HELP FLUIDCACHE &lt;ForestGreen&gt;if you have not already!")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;Keep in mind that these aliases will not buy anything for you. Please refer to &lt;DeepSkyBlue&gt;sunder help shops &lt;ForestGreen&gt;to see the aliases that will purchase bulk items for you!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;venoms                &lt;ForestGreen&gt;First buy the rags you need for combat and type &lt;DeepSkyBlue&gt;venoms")
cecho("\n                      &lt;ForestGreen&gt;to have &lt;green&gt;Sunder &lt;ForestGreen&gt;fill your rags for you. You can search this")
cecho("\n                      &lt;ForestGreen&gt;alias in your scripts to change which venoms you want it to fill!")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;unvenom               &lt;ForestGreen&gt;Just what it says! Typing &lt;DeepSkyBlue&gt;unvenom &lt;ForestGreen&gt;will fluidcache consume")
cecho("\n                      &lt;ForestGreen&gt;all the venoms from your rags!")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;fillvials             &lt;ForestGreen&gt;This alias will fill the vials in your inventory from your fluidcache.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;unfillvials           &lt;ForestGreen&gt;Like &lt;DeepSkyBlue&gt;unvenom&lt;ForestGreen&gt;, this alias will consume the elixirs")
cecho("\n                      &lt;ForestGreen&gt;in your vials back into your fluidcache.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;fillbandages          &lt;ForestGreen&gt;This will fill the clean bandages in your inventory with the poultices")
cecho("\n                      &lt;ForestGreen&gt;from your fluidcache.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;unfillbandages        &lt;ForestGreen&gt;Again... same as the other 'un' aliases, but for poultices.")
cecho("\n&lt;MediumSeaGreen&gt;---------------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (F|f)luidcache$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Shop Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;SHOPS &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;----------------------------------------")
cecho("\n&lt;ForestGreen&gt;Purchasing necessary items from shops can be a bit mundane, but NO MORE! Often you will find yourself buying many refills or masses of pills - to help combat this, &lt;green&gt;Sunder &lt;ForestGreen&gt;includes a few aliases to help make that less painful!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;The first thing you need to do is find a shop. You can do this by going to any city (including Esterport!) and using &lt;DeepSkyBlue&gt;PATH TRACK DIRECTORY&lt;ForestGreen&gt;. This will take you to the directory where you can peruse all the shops in that city (think of it like a search engine). From there you can &lt;DeepSkyBlue&gt;DIRECTORY &lt;ForestGreen&gt;'&lt;DeepSkyBlue&gt;item&lt;ForestGreen&gt;' to see which shop is carrying the item(s) you need. If you have MXP turned on, you can click on the vnum for the shop you want or &lt;DeepSkyBlue&gt;PATH TRACK vnum &lt;ForestGreen&gt;to get there.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;Once you are in a shop, you will simply need to put in the alias for the items you wish to purchase and let &lt;green&gt;Sunder &lt;ForestGreen&gt;do the rest!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;buypills #            &lt;ForestGreen&gt;Pills! Typing &lt;DeepSkyBlue&gt;buypills &lt;ForestGreen&gt;followed by an amount will buy that amount")
cecho("\n                      &lt;ForestGreen&gt;of every type of pill! EXAMPLE: &lt;DeepSkyBlue&gt;buypills 500 &lt;ForestGreen&gt;will buy &lt;LimeGreen&gt;500 &lt;ForestGreen&gt;of each pill.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;fillcache # type      &lt;ForestGreen&gt;Fluidcache! Just use &lt;DeepSkyBlue&gt;fillcache &lt;ForestGreen&gt;followed by the number of times")
cecho("\n                      &lt;ForestGreen&gt;you want to buy a refill and what type of refill you want to buy.")
cecho("\n                      &lt;ForestGreen&gt;The types are: &lt;DeepSkyBlue&gt;venoms&lt;ForestGreen&gt;, &lt;DeepSkyBlue&gt;poultices&lt;ForestGreen&gt;, and &lt;DeepSkyBlue&gt;elixirs&lt;ForestGreen&gt;. EXAMPLE: &lt;DeepSkyBlue&gt;fillcache") 
cecho("\n                      &lt;DeepSkyBlue&gt;10 elixirs &lt;ForestGreen&gt;will purchase &lt;LimeGreen&gt;10 &lt;ForestGreen&gt;refills of each type of elixir. The purchase")
cecho("\n                      &lt;ForestGreen&gt;line may be gagged, so just check your FC before and after purchasing!")
cecho("\n                      &lt;LimeGreen&gt;**NOTE** &lt;ForestGreen&gt;This will buy the amount of refills, so to fill your cache(&lt;LimeGreen&gt;1500&lt;ForestGreen&gt;)")
cecho("\n                      &lt;ForestGreen&gt;you will only need to purchase &lt;LimeGreen&gt;30 &lt;ForestGreen&gt;refills!")
cecho("\n&lt;MediumSeaGreen&gt;----------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (S|s)hops$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Fishing Help File</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;FISHING &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n&lt;ForestGreen&gt;Our &lt;green&gt;Sunder &lt;ForestGreen&gt;fishing system has been put together from several different systems, and will help you with your fishing milestones or just when you want to kick back and relax to earn some gold. The first thing you will want to do is set the amount of max fish you want to catch using &lt;DeepSkyBlue&gt;sunder maxfish # &lt;ForestGreen&gt;and the amount of fish currently in your bucket using &lt;DeepSkyBlue&gt;sunder fishbucket #&lt;ForestGreen&gt;. Once this is done just turn on the autofisher and let &lt;green&gt;Sunder &lt;ForestGreen&gt;do the rest. You will notice that all the spam has been removed, but it is still working and will notify you when it turns off due to reaching the maxfish amount or if the fishing hole is empty.")
cecho("\n")
cecho("\n&lt;red&gt;Consider this your warning: &lt;ForestGreen&gt;The folks who upkeep Sunder do not, by any means, condone or suggest using Sunder to do things while you are AFK or otherwise unable to attend to your character. From HELP AUTOMATION -&gt; FULLY automating quests and hunting - with movement and all actions included in the triggers - are allowed so long as one is present at the computer, as well as gambling automation. Please do not abuse what is being given to you without regard for the admin stance.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n&lt;ForestGreen&gt;1. Put up your wielded items manually and wield your pole.\n")
cecho("&lt;ForestGreen&gt;2. Go to a fishing hole.\n")
cecho("&lt;ForestGreen&gt;3. Do '&lt;DeepSkyBlue&gt;FISHING DISCERN&lt;ForestGreen&gt;' to make sure you see fish. This will\n")
cecho("&lt;ForestGreen&gt;   track the hole type, vnum, and what fish you see automatically\n")
cecho("&lt;ForestGreen&gt;   in a database it creates on the first time you use it.\n")
cecho("&lt;ForestGreen&gt;4. If you can fish there and there are fish, type in '&lt;DeepSkyBlue&gt;afish&lt;ForestGreen&gt;'\n") 
cecho("&lt;ForestGreen&gt;   to turn on the auto-fisher.\n")
cecho("&lt;ForestGreen&gt;5. If you run out of fish in this hole, it will turn off fishing on\n")
cecho("&lt;ForestGreen&gt;   its own. You can also type in '&lt;DeepSkyBlue&gt;afish&lt;ForestGreen&gt;' to turn it off.\n")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;afish                       &lt;ForestGreen&gt; Turns the auto-fisher off/on")
cecho("\n&lt;DeepSkyBlue&gt;sunder maxfish &lt;amount&gt;  &lt;ForestGreen&gt;    Set and check the max amount of fish you want to catch.")
cecho("\n&lt;DeepSkyBlue&gt;sunder fishbucket &lt;amount&gt; &lt;ForestGreen&gt;  Set and check the amount of fish in your bucket.\n                             Using &lt;DeepSkyBlue&gt;sunder fishbucket clear &lt;ForestGreen&gt;will set the amount to '&lt;green&gt;0&lt;ForestGreen&gt;'")
cecho("\n&lt;DeepSkyBlue&gt;fishing search ??        &lt;ForestGreen&gt;    You can search for a water hole type, or fish, from holes you've\n                             discerned.")
cecho("\n&lt;DeepSkyBlue&gt;fishing search full ??       &lt;ForestGreen&gt;If you prepend &lt;DeepSkyBlue&gt;info&lt;ForestGreen&gt; or &lt;DeepSkyBlue&gt;full&lt;ForestGreen&gt; it displays complete info instead of\n                             abridged.")
cecho("\n&lt;DeepSkyBlue&gt;fgo ?? &lt;ForestGreen&gt;                      Search and path to a specific fishing hole. EX: &lt;DeepSkyBlue&gt;fgo vortex&lt;ForestGreen&gt;.")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (F|f)ishing$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Name database help file</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;Name Database &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;-------------------------------------------")
cecho("\n&lt;ForestGreen&gt;The name databse that &lt;green&gt;Sunder&lt;ForestGreen&gt; utilizes will be familiar to many of you who have come from other IRE games, including the utilization and coloring effects. See below for aliases to toggle certain items and general upkeep of the names contained.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;Please note that you do NOT need to utilize the highlighting if you do not want to, but you absolutely do need the name database for other functions of &lt;green&gt;Sunder&lt;ForestGreen&gt;.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;------------")
cecho("\n&lt;ForestGreen&gt;By default, the name database should be installed when you set everything up. You can either make your own database of names as you go, or check on the discord and see if there's an updated list - you'll probably wind up with 1000+ names!")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;sndb settings         &lt;ForestGreen&gt;Shows you current color configuration of everyone.")
cecho("\n&lt;DeepSkyBlue&gt;sndb hl               &lt;ForestGreen&gt;Toggles the highlighting of names on/off.")
cecho("\n&lt;DeepSkyBlue&gt;sndb hl &lt;org&gt; &lt;color&gt; &lt;ForestGreen&gt;Change your custom color config per city.")
cecho("\n&lt;DeepSkyBlue&gt;As a note --          Enemy highlighting isn't functional yet but is being worked on.")
cecho("\n&lt;DeepSkyBlue&gt;qwp                   &lt;ForestGreen&gt;Parse the who list to add new names.")
cecho("\n&lt;DeepSkyBlue&gt;whois &lt;person&gt;        &lt;ForestGreen&gt;Shows basic info like level and class. Currently disabled.")
cecho("\n&lt;tomato&gt;Please don't use this to metagame. Self police.")
cecho("\n&lt;DeepSkyBlue&gt;honors &lt;person&gt;       &lt;ForestGreen&gt;Update one individual person. Not as useful due to API changes.")
cecho("\n&lt;DeepSkyBlue&gt;sndb clearout         &lt;ForestGreen&gt;Remove unranked/people below level 50.")
cecho("\n&lt;DeepSkyBlue&gt;sndb redo             &lt;ForestGreen&gt;Re-check everyone in the database.")
cecho("\n")
cecho("\n&lt;ForestGreen&gt;There are some more functions in the scripts for use in your code for checking city/class/if they exist in the database etc.")

cecho("\n&lt;MediumSeaGreen&gt;-------------------------------------------")

--[[
sndb settings - Shows basic settings information
sndb install - Initial install alias, otherwise unused

sndb hl - Highlight Names
sndb hl (org) (colour) - Change highlighting of a particular city
sndb hlprio (org|enemies) - Change highlight priority between cities/enemies
sndb ehl (i|u|b) - Change format of enemy highlighting (italics/bold/underline)
 -- Enemy highlighting isn't functional yet but is being worked on.

qwp - Parse online people. As a failsafe, it won't print if there's unchecked people. Just use it again once it's checked them.
whois (person) - Prints information pertaining to a person.
honours (person) - Will honours as per usual, but also check them via API.
sndb clearout - Remove unranked/low level people (under 50).
sndb redo - Will re-honours everyone currently in the database.


sndNDB_getColour(person) - Useful for highlighting; will return the colour of the person's city.
sndNDB_Exists(person) - Will tell you if they're tracked by the NDB yet.

sndNDB_getClass(person)
sndNDB_getCitizenship(person) - Both self-explanatory.
sndNDB_isCitizenOf(city, person) - Will return true if they're a citizen of X city.

]]</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (N|n)amedb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder Utilities Index</name>
								<script>cecho("&lt;CadetBlue&gt;Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;UTILITIES &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n&lt;green&gt;Sunder &lt;ForestGreen&gt;has several different utilities that are quite useful! Below is a summarized list that will direct you to the correct files so that you can become familiar with them and reference back to them at any time!")
cecho("\n")
cecho("\n&lt;MediumTurquoise&gt;To view the following &lt;green&gt;Sunder &lt;MediumTurquoise&gt;help files, use &lt;DeepSkyBlue&gt;sunder help &lt;MediumTurquoise&gt;&lt;filename&gt;!")
cecho("\n&lt;DeepSkyBlue&gt;Vermin               &lt;ForestGreen&gt;Explantion on &lt;green&gt;Sunder's &lt;ForestGreen&gt;vermin autobasher!")
cecho("\n&lt;DeepSkyBlue&gt;Fishing              &lt;ForestGreen&gt;Explantion on how to use &lt;green&gt;Sunder's &lt;ForestGreen&gt;fishing utilities!")
cecho("\n&lt;DeepSkyBlue&gt;Shops                &lt;ForestGreen&gt;Quick aliases to make purchasing easier!")
cecho("\n&lt;DeepSkyBlue&gt;Fluidcache           &lt;ForestGreen&gt;Aliases to consume and fill vials/rags/bandages!")
cecho("\n&lt;DeepSkyBlue&gt;Who                  &lt;green&gt;Sunder's &lt;ForestGreen&gt;WHO parsing system and how it works!")
cecho("\n&lt;DeepSkyBlue&gt;Questing             &lt;ForestGreen&gt;Helpful questing aliases (no more pesky kestrels following you around!)")
cecho("\n&lt;DeepSkyBlue&gt;Namedb               &lt;ForestGreen&gt;All the commands for the databse.")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (U|u)tilities$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Offense/defense helpfiles</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder PK helpfile</name>
								<script>cecho("&lt;CadetBlue&gt;Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;PvP&lt;CadetBlue&gt; help file!")
cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n&lt;green&gt;Sunder &lt;ForestGreen&gt;has several built in ways for every class to be, at some level, useful. Even if it is just automatically attacking a target with a bashing attack. &lt;green&gt;Sunder &lt;ForestGreen&gt;is not and will not be updated with the best 1v1 PvP methods, nor will requests for 1v1 specific items be given time. The intent of Sunder has been and always will be the ability for the average player to get into the PvP scene at the lowest level and be able to participate in team scenarios.")
cecho("\n")
cecho("\n&lt;red&gt;Some of the classes have decently fine-tuned aliases (Infiltrator, Templar) due to the original creator  spending time in those classes. Remember that these were built on the effort of another player and they do not speak to your own skill or development. Using them to beat people at the low or middle tier of skill level does not indicate that you are improving. If you are interested in learning to PvP in the 1v1 arena, your best bet is to examine what is built here and expand or change it as opposed to relying on it without modification. These are public offenses and people can and will abuse their access to them to make it easy to beat you.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;DeepSkyBlue&gt;ls &lt;person&gt;                         &lt;ForestGreen&gt;Choose your target caller(s)")
cecho("\n&lt;DeepSkyBlue&gt;ls stine vaessa bob                 &lt;ForestGreen&gt;Example of listening to more than one person.")
cecho("\n&lt;DeepSkyBlue&gt;loc                                 &lt;ForestGreen&gt;Need help?! Call out your place in the world over web!")
cecho("\n&lt;DeepSkyBlue&gt;acl                                 &lt;ForestGreen&gt;Toggle calling of afflictions over web.")
cecho("\n&lt;DeepSkyBlue&gt;tcl                                 &lt;ForestGreen&gt;Toggle calling of targets over web.")
cecho("\n&lt;DeepSkyBlue&gt;toggles disperse &lt;none/callers/all&gt; &lt;ForestGreen&gt;Automatic dispersing of writhe affs.")
cecho("\n                                    &lt;ForestGreen&gt;Default none. Not always necessary.")
cecho("\n")
cecho("\n&lt;green&gt;Sunder&lt;ForestGreen&gt; target calling - instead of the old rigid lists found within Sunder, we will now utilize the custom, on the fly lists along with our name database to be able to cycle through targets effectively in the room. Please see &lt;DeepSkyBlue&gt;sunder help calling&lt;ForestGreen&gt; for more information on using that.")
cecho("\n")
cecho("\n&lt;green&gt;Sunder&lt;ForestGreen&gt; has the following aliases available for you to use in combat. There may be more aliases included in the settings, but not always!")

if snd.class == "Monk" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Will use mind batter to hit with affs, if enemy prone then wrench.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;head &lt;white&gt;              - Used for damage, does not deviate unless target is proned.")
cecho("\n&lt;goldenrod&gt;Limbs:")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Used to hit different limbs, will change combo depending on parry.")
elseif snd.class == "Shapeshifter" then
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Goes for the head. Each time. Big damage/bleeding if not parried.")
cecho("\n&lt;goldenrod&gt;Limb:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Straight limb breaks into jawlocks.")
cecho("\n &lt;green&gt;insta&lt;white&gt;              - Goes for quarter kills. Check AB QUARTER for more information.")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Utilizes slash to delay limb breaks, good for pushing level 2 breaks.")
elseif snd.class == "Infiltrator" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Basic dstab w/venoms. No hypnosis.")
cecho("\n &lt;green&gt;magic&lt;white&gt;              - More advanced, geared towards magic, uses hypnosis.")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - More advanced, geared towards physical, uses hypnosis.")
cecho("\n &lt;green&gt;kl&lt;white&gt;                 - 1v1 offense. Does not snap for you as that requires timing.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Straight damage.")
elseif snd.class == "Wayfarer" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;legs &lt;white&gt;              - Uses lob to pressure leg breaks, will try to dropstrike if able.")
cecho("\n &lt;green&gt;lock&lt;white&gt;               - Experimental skirmish route to seal locks w/slaughter and muddled.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Sensitivity/sight to support transfix. Boosted halt to keep people in room.")
cecho("\n &lt;green&gt;gaff&lt;white&gt;               - Group affs w/preference toward venom lock. Slaughter if prone w/sensitivity.")
cecho("\n &lt;green&gt;bleed&lt;white&gt;              - Bleed focused to assist Templar w/hemorrhage.")
elseif (snd.class == "Templar" or snd.class == "Revenant") then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ret &lt;white&gt;               - The 1v1 standard. Lock into retribution.")
cecho("\n &lt;green&gt;newb&lt;white&gt;               - Basic venoms, no bladefire empowerments, no vorpal.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Use a 2h weapon to zeal/dsw someone and do physical damage.")
cecho("\n &lt;green&gt;bleed&lt;white&gt;              - Bleed focused affs into hemorrhage.")
cecho("\n&lt;goldenrod&gt;Limb:")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Two small bludgeon weapons to deal bruising and limb damage.")
elseif snd.class == "Shaman" or snd.class == "Alchemist" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Straight vinelash w/venoms.")
cecho("\n &lt;green&gt;storm&lt;white&gt;              - Works toward stormtouched, then goes for lightning damage.")
cecho("\n &lt;green&gt;supp&lt;white&gt;               - Aff-lock support.")
elseif snd.class == "Sentinel" or snd.class == "Executor" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;salve&lt;white&gt;              - Works towards frozen w/limb breaks. Need raloth/icewyrm.")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Venom lock into spinecut death sequence.")
cecho("\n &lt;green&gt;group&lt;white&gt;              - Group focused small aff pool into spinecut.")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Just venoms, no dhuriv attacks, perfect for starters.")
cecho("\n &lt;white&gt;Bashing Pets: Brutaliser, Darkhound, Lightdrinker")
cecho("\n &lt;white&gt;Solo Long Aff Pets: Brutaliser, Throatripper, Eviscerator, Wardpeeler")
cecho("\n &lt;white&gt;Solo Damage: Brutaliser, Darkhound, Monstrosity, Murder")
cecho("\n &lt;white&gt;Group Aff Pets: Lightdrinker, Monstrosity, Brutaliser, Wardpeeler")
cecho("\n &lt;white&gt;Group Limb Pets: Brutaliser, Monstrosity, Rimestalker, Murder")
elseif snd.class == "Luminary" or snd.class == "Earthcaller" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;git&lt;white&gt;                - Damage kill with aff stacking and overwhelm.")
cecho("\n &lt;green&gt;mana&lt;white&gt;               - Straight mana sap.")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Smite + chasten.")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Sight into tfix/overwhelm.")
elseif snd.class == "Ascendril" or snd.class == "Bloodborn" then
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;damage&lt;white&gt;             - Damage kill.")
cecho("\n &lt;green&gt;fire&lt;white&gt;               - Set them ablaze and watch them burn.")
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;affs&lt;white&gt;               - Build affs!")
cecho("\n &lt;green&gt;solo&lt;white&gt;               - Push limb damage/frozen for a shatter!")
elseif snd.class == "Zealot" or snd.class == "Ravager" then
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Damage kill.")
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;fire&lt;white&gt;               - Focus on ablaze for Zealot support I guess? idk")
elseif snd.class == "Archivist" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build mental affs and go for unravel")
elseif snd.class == "Carnifex" or snd.class == "Warden" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Overall limb route")
cecho("\n &lt;green&gt;legs&lt;white&gt;               - Specifically for legs!")
elseif snd.class == "Indorani" or snd.class == "Oneiromancer" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs! High Aeon/Hourglass prio.")
elseif snd.class == "Praenomen" or snd.class == "Akkari" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;mez&lt;white&gt;                - Work on siphoning mana for annihilate and mesmerize!")
elseif snd.class == "Teradrim" or snd.class == "Tidesage" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Overall limb route")
elseif snd.class == "Sciomancer" or snd.class == "Runecarver"  then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Overall limb route via grip and erupt, adds in transfix/chill")
cecho("\n &lt;green&gt;gdmg &lt;white&gt;               - Damage kill with singularity/morass involved")
cecho("\n &lt;green&gt;gaff&lt;white&gt;                - Build affs with singularity/morass involved!")
cecho("\n &lt;green&gt;sing1&lt;white&gt;                - Make your singularity/morass")
cecho("\n &lt;green&gt;gc&lt;white&gt;                   - Shoot your cannon/mortify at your target nearby")
end

cecho("\n&lt;MediumSeaGreen&gt;------------------------------------------")
cecho("\n")
cecho("\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (p|P)(K|k)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder defenses helpfile</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;Defenses &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;----------------------------------------")
cecho("\n&lt;ForestGreen&gt;Upkeep of defenses can be a tedious task, especially those stripped after a certain amount of time or if you just don't want to worry about it. To that end, Sunder is equipped to be able to help you upkeep defenses in a mildly intelligent manner via checking what skills you have access. The system uses GMCP to automatically check your skills, as well as checking your tattoos and raceskills, to accurately and easily keep track.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;HOW IT WORKS!")
cecho("\n&lt;MediumSeaGreen&gt;-------------")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;defup                 &lt;ForestGreen&gt;Turn on automatic defense upkeep of defenses.")
cecho("\n&lt;DeepSkyBlue&gt;kd &lt;defname&gt;          &lt;ForestGreen&gt;Toggle a specific defense upkeep on/off.")
cecho("\n")
cecho("\n&lt;green&gt;Sunder&lt;ForestGreen&gt; also has the built in capability to utilize the antiquated artifact goggles, making a number of defs instantaneous and without cost.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;toggle goggles        &lt;ForestGreen&gt;Toggle Sunder using goggles or not.")
cecho("\n&lt;DeepSkyBlue&gt;mygoggles #           &lt;ForestGreen&gt;Tell Sunder what level your goggles are set to.")
cecho("\n")
cecho("\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (D|d)efenses$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sunder calling helpfile</name>
								<script>cecho("&lt;CadetBlue&gt; Welcome to the &lt;green&gt;Sunder &lt;DeepSkyBlue&gt;Calling &lt;CadetBlue&gt;help file!")
cecho("\n&lt;MediumSeaGreen&gt;----------------------------------------")
cecho("\n&lt;ForestGreen&gt;In previous iterations of Sunder, we used static calling lists that were susceptible to failure due to not having new people updated, people switching tethers, needing different orders, etc. To that end, we have updated our methodology and you may find all of the ways to manipulate targets below.")
cecho("\n")
cecho("\n&lt;CadetBlue&gt;ALIASES")
cecho("\n&lt;MediumSeaGreen&gt;-------")
cecho("\n&lt;DeepSkyBlue&gt;tcl                   &lt;ForestGreen&gt;Turn on automatic target calling.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;atl [name]&lt;ForestGreen&gt;            Add targets in the priority you specify.")
cecho("\n              &lt;white&gt;        Example &gt; &lt;red&gt;atl ezreal nazeebo meepo")
cecho("\n&lt;DeepSkyBlue&gt;atp [name] [position]&lt;ForestGreen&gt; Add target with/without a # value for priority.")
cecho("\n              &lt;white&gt;        Example &gt; &lt;red&gt;atp tryndamere 1")
cecho("\n&lt;DeepSkyBlue&gt;tlist&lt;ForestGreen&gt;                 List your targets in web for others.")
cecho("\n&lt;DeepSkyBlue&gt;atlc&lt;ForestGreen&gt;                  Clears your targets out to start over.")
cecho("\n&lt;DeepSkyBlue&gt;atr&lt;ForestGreen&gt;                   Remove a singular target from your list.")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;nt&lt;ForestGreen&gt;                    Manually skip to the next target in line.")
cecho("\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^(S|s)under (H|h)elp (C|c)alling$</regex>
							</Alias>
						</AliasGroup>
						<Alias isActive="yes" isFolder="no">
							<name>^sunder help directory$</name>
							<script>cecho("\n&lt;MediumSeaGreen&gt;Found: &lt;white&gt;"..getMudletHomeDir())</script>
							<command></command>
							<packageName></packageName>
							<regex>^sunder help find my profile$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Vitals</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>setup</name>
							<script>snd.send("config wrapwidth 0")
snd.send("config outcache on")
snd.send("config combatmessages on")
snd.send("config showafflictions on")
snd.send("config simplediagnose on")
snd.send("config curingtype default")
snd.send("config fishgraphic off")
snd.send("gathering on")
if not sndNDB.installed then
  sndNDB_Install()
  sndNDB.highlightNames = false
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\?setup$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>toggles</name>
							<script>cecho("&lt;white&gt;Toggles:")
for tog in pairs(snd.toggles) do
 if snd.toggles[tog] then
  cecho("&lt;green&gt;\n"..string.title(tog))
 else
  cecho("&lt;red&gt;\n"..string.title(tog))
 end
end
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^togs$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toggles</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>lighting</name>
							<script>snd.toggle("lighting")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(lgt|toggle lighting|toggle pipes)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>on</name>
							<script>snd.toggles.active = true
snd.channeling = false
cecho("&lt;green&gt;Darkside is ON!")
snd.send("def")
send("firstaid on")
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sndon$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>off</name>
							<script>snd.toggles.active = false
snd.channeling = true
cecho("&lt;red&gt;Darkside is OFF!")
send("firstaid off")
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sndoff$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>calling</name>
							<script>--snd.clearTargetList()
snd.toggle("calling")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tcl|toggle calling)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>affcalling</name>
							<script>snd.toggle("affcalling")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(acl|toggle affcalling)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>gallop</name>
							<script>snd.toggle("gallop")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tgl|toggle gallop)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>newb basher</name>
							<script>snd.toggle("newbie")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tnewb|toggle newbie)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>parry</name>
							<script>snd.toggle("parrying")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tpry|toggle parry)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>attack echoes</name>
							<script>snd.toggle("atkecho")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tatk|toggle attack echo)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>listening</name>
							<script>if matches[2] == "off" then
  if snd.toggles.listening then
    snd.toggle("listening")
  end
else
  if not snd.toggles.listening then
    snd.toggle("listening")
  end
  snd.toggles.listening = true
  if snd.offense_loaded then
    snd.callers = {}
    for name in string.gmatch(matches[2], '([^ ]+)') do
      table.insert(snd.callers, string.title(name))
    end
    cecho("&lt;white&gt;Listening to: &lt;green&gt;"..table.concat(snd.callers, "&lt;white&gt;, &lt;green&gt;").."&lt;white&gt;!")
    send(" ")
  else
    cecho("&lt;white&gt;Listening &lt;green&gt;ON&lt;white&gt;!")
    send(" ")
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^ls (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>rockharvest</name>
							<script>snd.toggle("rockharvest")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tr|toggle rockharvest)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>lightning</name>
							<script>snd.toggle("lightning")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tlgt|toggle lightning)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dash</name>
							<script>snd.toggle("dash")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tds|toggle dash)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Chameleon</name>
							<script>snd.toggle("chameleon")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(tcm|toggle chameleon)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Questing</name>
							<script>snd.toggle("questing")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle questing$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Ylem Goggles</name>
							<script>snd.toggle("goggles")
snd.goggle_update()
  
</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle goggles$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Goggle level</name>
							<script>if matches[3] then
  cecho("&lt;red&gt;You have set your ylem goggles level to:&lt;orange_red&gt; "..matches[3].."&lt;red&gt;.")
  snd.toggles.goggle_level = tonumber(matches[3])
  snd.goggle_update()
else
  cecho("&lt;red&gt;You have set your ylem goggles level to:&lt;orange_red&gt; "..snd.toggles.goggle_level.."&lt;red&gt;.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(mygoggles|mygoggles (\d+))$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Dome auto use</name>
							<script>snd.toggle("dome")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle dome$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Auto check plants</name>
							<script>snd.toggle("plants")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle plants$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Cobra bashing</name>
							<script>snd.toggle("cobra")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle cobra$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Gag non target curing</name>
							<script>snd.toggle("nontargetgags")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle non target gagging$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>auto reject lust</name>
							<script>snd.toggle("auto_reject")</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle reject$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Purge/Purify/Panacea</name>
							<script>if snd.class == "Praenomen" or snd.class == "Akkari" then
	snd.toggle("purify")
elseif snd.class == "Carnifex" or snd.class == "Warden" then
	snd.toggle("purge")
elseif snd.class == "Shaman" or snd.class == "Alchemist" then
	snd.toggle("panacea")
else
  cecho("\nYou have no purging ability for your class that needs to be turned on.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^pon$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Prism Bashing</name>
							<script>if snd.class == "Ascendril" or snd.class == "Bloodborn" then
	snd.toggle("prism")
else
  cecho("\nYou cannot prism bash in this class.")
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^prism$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Enrich Bashing</name>
							<script>if snd.class == "Ascendril" or snd.class == "Bloodborn" then
	snd.toggle("enrich")
else
  cecho("\nYou cannot enrich bash in this class.")
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^prism$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Hidden afflictions diagnose count</name>
							<script>if matches[2] then
  cecho("&lt;red&gt;You will diagnose at &lt;yellow&gt;"..matches[2].."&lt;red&gt; hidden afflictions.")
  snd.toggles.diagaffs = tonumber(matches[2])
else
  cecho("&lt;red&gt;You currently diagnose at&lt;yellow&gt; "..snd.toggles.diagaffs.."&lt;red&gt; hidden afflictions.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^diagaffs(?: (\d+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Chameleon Targets</name>
							<script>local people = matches[2]:gsub(",", "")
peopleTable = matches[2]:split(" ")
snd.toggles.chameleonPeople = peopleTable
snd.message("Will try to chameleon as one of: "..table.concat(snd.toggles.chameleonPeople, ", "))</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^chamtargets (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>target rune for tidesage/teradrim</name>
							<script>snd.toggles.targetrune = not snd.toggles.targetrune
if snd.toggles.targetrune then
  cecho("&lt;red&gt;Will now factor in targeting rune for tidesage/teradrim limb damage.")
else
  cecho("&lt;red&gt;Will no longer factor in targeting rune for tidesage/teradrim limb damage.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle targetrune$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Misc</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>mount</name>
							<script>if snd.class == "Executor" and snd.my_raloth ~= "" then
  snd.send("qeb quickmount brutaliser")
else
  snd.mount()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^mnt$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dismount</name>
							<script>if snd.class == "Executor" and snd.my_raloth ~= ""  then
  snd.send("qeb quickdismount brutaliser")
else
  snd.dismount()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^dm$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>shield tattoo</name>
							<script>if snd.toggles.attacking then
 snd.send("undefend")
end

if snd.toggles.attacking then snd.toggle("attacking") end
if snd.toggles.bashing then snd.toggle("bashing") end
if snd.toggles.fasthunt then snd.toggle("fasthunt") end


if snd.have_aff("paresis") and not snd.elevatedaff["paresis"] and #snd.elevatedaff &lt; 1 then
  send("firstaid elevate paresis")
elseif snd.have_aff("paralysis") and not snd.elevatedaff["paralysis"] and #snd.elevatedaff &lt; 1 then
  send("firstaid elevate paralysis")
end
if snd.class == "Carnifex" then
 snd.send("qeb soul shield")
else
 snd.send("qeb touch shield tattoo")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^ts$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>wield none</name>
							<script>snd.send("wipe left"..snd.sep.."wipe right"..snd.sep.."secure left"..snd.sep.."secure right"..snd.sep.."wear tower"..snd.sep.."wear buckler"..snd.sep.."wear shield"..snd.sep.."wear bow"..snd.sep.."unwield rod")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^wnon$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>directions</name>
							<script>--if snd.toggles.calling and not snd.toggles.fasthunt then
 --snd.send("qeb get monolith"..snd.sep..matches[2]..snd.sep.."drop monolith")
--else
 snd.send("qeb "..matches[2])
--end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^(n|e|s|w|ne|nw|se|sw|in|up?|out|o|d|down)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>group</name>
							<script>snd.group = {}
if matches[2] ~= "none" then
 for name in string.gmatch(matches[2], '([^ ]+)') do
  table.insert(snd.group, string.title(name))
 end
end
display(snd.group)</script>
							<command></command>
							<packageName></packageName>
							<regex>^grp (.*)$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>Landmarks w/descriptions</name>
							<script>snd.landmarks_descs =
  {
    {"tear", "The tear of Lleis"},
    {"orrery", "The Celestial Orrery"},
    {
      "Tara, Cosmina, Derryk, Sylvos, Tiber, Gladius, Gloom, Derban, Grothgar, Grollum, Smirnick, Smythe, Helfga, Naggamantex, Glixx, Quelzar, Sisters, Hecuba",
      "Fengard Mobs",
    },
    {"Tellimerius, Broondac, Belmith, Marcello, Axel, Makkali, Mamba, Tolonar", "Milestone mobs"},
    {"hg", "Outside the Hunting Grounds"},
    {"Nighteye, Claw, Shade, Staghelm, Silence, Rose, Ivory, Rowan, HGShrine", "Approximate locations of hunting grounds items."},
    {"herolt", "Herolt's quiz"},
    {"farkle", "The permanent farkle table"},
    {"lineconnect", "The game of Line Connect"},
    {"poker", "The poker table in esterport"},
    {"safari", "Giovelli's Safari"},
    {"boggard", "Boggard in esterport. Takes black ylem."},
    {"staging", "Where your city gathers for combat."},
    {"training", "Your city's training room."},
  }
for _, landmark in ipairs(snd.landmarks_descs) do
  cecho("\n&amp;lt;sandy_brown&amp;gt;" .. string.title(landmark[1]) .. ": &amp;lt;aquamarine&amp;gt;" .. landmark[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^landmarks$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>landmarks</name>
							<script>local tmp = getRoomUserData(1, "gotoMapping")
if not tmp or tmp == '' then
  tmp = "[]"
end
local temp, maptable = yajl.to_value(tmp), {}
for k, v in pairs(temp) do
  maptable[k:lower()] = v
end
local destinationRoom = maptable[matches[2]:lower()]
snd.moving_to = (destinationRoom or snd.landmarks[matches[2]:lower()] or matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^pth(.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>walkarea</name>
							<script>-- Used to quickly walk through an area without touching the mobs, use triggers to define ways to stop as in the Orrery Globe method
snd.toggles.fastwalk = true
snd_walkArea()
snd.move()</script>
							<command></command>
							<packageName></packageName>
							<regex>^walkarea$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>target</name>
						<script>snd.setTarget(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^t (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>stop attacking</name>
						<script>snd.stap()</script>
						<command></command>
						<packageName></packageName>
						<regex>^stap$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>target call over web - individual targets</name>
						<script>send("wt Target: "..matches[2])
snd.target = string.title(matches[2])
echo("Target: "..snd.target)
send(" ")
raiseEvent("sunder_enemy_affs_updated")

if snd.target_trigger_id then killTrigger(snd.target_trigger_id) end
snd.target_trigger_id = tempTrigger(snd.target, [[selectString("]] .. snd.target .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.target_trigger_idlow then killTrigger(snd.target_trigger_idlow) end
snd.target_trigger_idlow = tempTrigger(string.lower(snd.target), [[selectString("]] .. string.lower(snd.target) .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.offense_loaded then
 snd.reset_target()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^tc (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset sunder</name>
						<script>snd.reset_me()
snd.defenses_loaded = false
snd.crescentable = true
snd.target_aegis = false
snd.growbal = 0
snd.infiltrate = false
</script>
						<command></command>
						<packageName></packageName>
						<regex>^rst$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Bashing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Autobashing</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>move</name>
							<script>x = bot.info.room
x = "v"..x
if bot.going then
 if bot.path[x] ~= nil then
  if string.find(bot.path[x], "pt") then
	 y = string.sub(bot.path[x], 3)
	 snd.moving_to = y
	 send(" ")
	elseif mmp ~= nil then
   mmp.gotoRoom(bot.path[last_room_of_this_area])
  else
   snd.moving_to = bot.path[x]
	 send(" ")
  end
 else
  echo("where r we")
 end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^move$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>initiate</name>
							<script>snd.which_path = ""

--Set the correct path, whether that is by checking level or using input from the user.
if matches[3] then
	if matches[3] == "arbothia" or matches[3] == "bloodwood" or matches[3] == "tcanna" or matches[3] == "vortex" or matches[3] == "lair" or matches[3] == "endgame" or matches[3] == "high" or matches[3] == "medium" or matches[3] == "low" then 
		snd.which_path = matches[3]
	else
		cecho("\n&lt;red&gt;Not a viable choice! Enter a viable choice or only enter 'gogo'!")
		cecho("\n&lt;green&gt;arbothia, tcanna, bloodwood (99+ and separate), vortex (99+ and separate), luziths lair (99+ and separate), endgame (93+), high (61-93), medium (31-60), and low (1-30)")
	end
else
	local level = ""
	for check in string.gmatch(gmcp.Char.Status.level, '[%d]+') do
		if level == "" then
			level = tonumber(check)
		end
	end
	if level &gt; 93 then
		snd.which_path = "endgame"
	elseif (level &lt; 93 and level &gt; 60) then
		snd.which_path = "high"
	elseif (level &lt; 60 and level &gt; 31) then
		snd.which.path = "medium"
	else
		snd.which_path = "low"
	end
end

if snd.which_path ~= "" then
  bot.going = true
	bot.path =  sndpathpick()
  if not snd.toggles.fasthunt then
  	snd.toggle("fasthunt")
  end
  
  expandAlias("aa")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^gogo( (\w+))?$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>start bashing</name>
						<script>if not snd.toggles.bashing then snd.toggle("bashing") end
snd.room_clear = true
snd.defenses.def_vigor.needit = true
snd.send("leading on")</script>
						<command></command>
						<packageName></packageName>
						<regex>^aa$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>stop bashing</name>
						<script>if snd.toggles.bashing then snd.toggle("bashing") end
snd.defenses.def_vigor.needit = false
cecho("&lt;green&gt;Bashing OFF!")
if snd.toggles.fasthunt then
 snd.toggles.fasthunt = false
 echo("\nFasthunt OFF!")
end
snd.send("queue clear")
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ast$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>fasthunt</name>
						<script>snd.toggle("fasthunt")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ff$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>generics</name>
						<script>snd.toggle("generics")
if snd.toggles.generics then
  cecho("\n&lt;red&gt;The use of a generic word (ie 'kelki' instead of 'kelki1234' or just '1234') brings with it a certain amount of risk. You risk hitting an NPC that you may not mean to, including quest mobs with the same short name, or boss mobs in the same vein. This is your warning. Please use it when appropriate.")
else
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^toggle generic$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>orbs</name>
						<script>snd.send("activate amberorb"..snd.sep.."activate greenorb"..snd.sep.."activate whiteorb"..snd.sep.."activate crimsonorb"..snd.sep.."activate ceruleanorb")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^orbs$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>chocolates</name>
						<script>snd.send("eat mint;eat hazelnut;eat strawberry;eat cherry;eat fudge;eat whitechocolate;drink chalice")</script>
						<command></command>
						<packageName></packageName>
						<regex>^choc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>See if Sunder has path</name>
						<script>if sunder_areaPaths[gmcp.Room.Info.area] then 
  snd.message("We've got a path here")
else
  snd.message("No path here.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^check this area$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>single attack</name>
						<script>if snd.bashing.target ~= snd.target then snd.bashing.target = snd.target end
battack = ""
for k,v in pairs(snd.class_list) do
  if snd.class_list[k].class == snd.class then
  if snd[v.class:lower().."_bash_override"] then
    snd[v.class:lower().."_bash_override"]()
  else
    v.func()
  end
  snd.send("qeb stand"..snd.sep..battack)
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^f$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Move to next area</name>
						<script>if snd.toggles.fasthunt then

  local area = sunder_areaPaths[gmcp.Room.Info.area]
  local last_room_of_this_area = ""

  for k, v in pairs(area) do
    if v == "pthcity" then
      last_room_of_this_area =  k
    end
  end

  mmp.gotoRoom(bot.path[last_room_of_this_area])

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^move to next area$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Apothecary mode</name>
						<script>if matches[2] then
  snd.apothecaryEnabled = matches[2] == "on"
else
  snd.apothecaryEnabled = not snd.apothecaryEnabled
end

cecho("&lt;green&gt;Apothecary mode: &lt;orange&gt;"..(snd.apothecaryEnabled and "ON!" or "OFF!"))</script>
						<command></command>
						<packageName></packageName>
						<regex>^snd apothecary(?: (on|off))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Healing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>defense toggle</name>
						<script>local defense = matches[2]:lower()
if not string.find(defense, "def_") then
 defense = "def_"..defense
end
if snd.defenses[defense] then --check for exact match
  if snd.defenses[defense].needit then
   snd.defenses[defense].needit = false
   snd.message("No longer keeping &lt;red&gt;"..defense.."&lt;white&gt;.", "echo")
   send(" ")
  else
   snd.defenses[defense].needit = true
   snd.message("Now keeping &lt;green&gt;"..defense.."&lt;white&gt;.", "echo")
   send(" ")
  end
  return
end
for i in pairs(snd.defenses) do --if no exact match found, search for approx matches
 if string.find(i, defense) then
  if snd.defenses[i].needit then
   snd.defenses[i].needit = false
   snd.message("No longer keeping &lt;red&gt;"..i.."&lt;white&gt;.", "echo")
   send(" ")
  else
   snd.defenses[i].needit = true
   snd.message("Now keeping &lt;green&gt;"..i.."&lt;white&gt;.", "echo")
   send(" ")
  end
  return
 end
end
snd.message("No such defense as &lt;red&gt;"..matches[2].."&lt;white&gt;!", "echo")
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^kd (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>defense options</name>
						<script>local selection = ""
if matches[3] then 
  selection = matches[3] 
else
  if snd.class == "None" and snd.toggles.ascendedtype ~= "none" then
    selection = snd.toggles.ascendedtype
  else
    selection = snd.class:lower()
  end
end

if snd.class == "Ascendril" then send("simultaneity") end
if snd.class == "Bloodborn" then send("prowess") end
--if snd.class == "Archivist" then snd.send("incite lens") end
--if snd.class == "Voidseer" then snd.send("foment longing") end
if snd.class == "Sciomancer" then snd.send("channel shadow") end
if snd.class == "Runecarver" then snd.send("straddle line") end
if snd.class == "Teradrim" then snd.send("golem call") end
if snd.class == "Tidesage" then snd.send("synth call") end
 if not snd.toggles.active then
  display("Sunder is currently off. Please SNDON to turn it back on! If you wish to remove this behavior, alter it in the 'general deaths' trigger.")
else
  send("def", false)
end

snd.load_def(selection)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(ldd (.*)|defup)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toggles</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="no" isFolder="no">
							<name>healing</name>
							<script>snd.toggle("healing")</script>
							<command></command>
							<packageName></packageName>
							<regex>^hl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>defenses</name>
							<script>snd.toggle("defenses")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tdf$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>clotting</name>
							<script>snd.toggle("clotting")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tclt$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>standing</name>
							<script>snd.toggle("standing")</script>
							<command></command>
							<packageName></packageName>
							<regex>^ss$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ylem</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>move on</name>
						<script>ylm.active = true
if ylm.next_zone == "none" then
 ylm.next_zone = "1680"
end
snd.moving_to = ylm.next_zone
send(" ")
if ylm.next_zone == "city" then
  ylm.active = false
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>move to next</name>
						<script>ylm.active = true
if ylm.next_zone == "none" then
  ylm.next_zone = "5730"
end
ylm.next_zone = ylm.path["v" .. ylm.next_zone]
snd.moving_to = ylm.next_zone
send(" ")
if ylm.next_zone == "city" then
  ylm.active = false
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem next$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>move on start</name>
						<script>ylm.active = true
ylm.next_zone = "1680"
snd.moving_to = ylm.next_zone
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem start$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>stop ylem</name>
						<script>ylm.next_zone = "city"
snd.moving_to = ylm.next_zone
ylm.active = false
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem stop$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Utilities</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Sunder Shop Aliases</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Buying Fluids</name>
							<script>local fluid_types = {
  venoms = {
  --"epteth",
  "gecko",
  --"epseth",
  "prefarar",
  "delphinium",
  "digitalis",
  "curare",
  "darkshade",
  "hepafarin",
  "monkshood",
  "oculus",
  "selarnia",
  "kalmia",
  "xentio",
  "eurypteria",
  "aconite",
  "vernalius",
  "slike",
  "euphorbia",
  "larkspur",
  "oleander",
  "voyria",
  },
  
  elixirs = {
  "health",
  "mana",
  "immunity",
  "levitation",
  "harmony",
  "arcane",
  "speed",
  "vigor",
  },
  
  poultices = {
  "mending",
  "mass",
  "restoration",
  "caloric",
  "epidermal",
  },
}
for _, v in ipairs(fluid_types[matches[3]]) do
  currentamount = 0
  while currentamount &lt; tonumber(matches[2]) do
    snd.send("buy refill of " .. v .. " for fluidcache")
    currentamount = currentamount + 1
  end
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^fillcache (\d+) (elixirs|poultices|venoms)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Filling Elixirs!</name>
							<script>local elixirs = {
"health",
"mana",
"immunity",
"levitation",
"harmony",
"arcane",
"speed",
"vigor",
}
for elixir in pairs(elixirs) do
 snd.send("fc fill "..elixirs[elixir])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^fillvials$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Consuming Elixirs</name>
							<script>local elixirs = {
"health",
"mana",
"immunity",
"levitation",
"harmony",
"arcane",
"speed",
"vigor",
}
for elixir in pairs(elixirs) do
 snd.send("fc consume "..elixirs[elixir])
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^unfillvials$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Filling Poultices</name>
							<script>local poultices = {
"mending",
"mass",
"restoration",
"caloric",
"epidermal",
}
for poultice in pairs(poultices) do
 snd.send("fc fill "..poultices[poultice])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^fillbandages$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Consuming Poultices</name>
							<script>local poultices = {
"mending",
"mass",
"restoration",
"caloric",
"epidermal",
}
for poultice in pairs(poultices) do
 snd.send("fc consume "..poultices[poultice])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^unfillbandages$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>priceall</name>
							<script>snd.shopitem = matches[2]
snd.shopprice = matches[3]
snd.shopshelf = matches[4]
snd.shopih = true
snd.send("ih "..snd.shopitem)</script>
							<command></command>
							<packageName></packageName>
							<regex>^priceall (\w+) (\d+) (\d+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Buying pills</name>
							<script>pills = {
"waterbreathing",
"kawhepil",
"acuity",
"steroid",
"stimulant",
"coagulation",
"thanatonin",
"paste",
"somnium",
"ototoxin",
"decongestant",
"amaurosis",
"depressant",
"antipsychotic",
"panacea",
"euphoriant",
"anabiotic",
"opiate",
"eucrasia",
}
for pillname in pairs(pills) do
 snd.send("buy "..matches[2].." "..pills[pillname])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^buypills (\d+)$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>rockcrush</name>
						<script>snd.send("qeb rockcrush rock for ink")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>harvest rock</name>
						<script>snd.send("qeb rockharvest")</script>
						<command></command>
						<packageName></packageName>
						<regex>^hr$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Check stuff</name>
						<script>send("pull "..matches[2])
send("look in "..matches[2])
send("push "..matches[2])
send("turn "..matches[2])
send("enter "..matches[2])
send("read "..matches[2])
send("touch "..matches[2])
send("ponder "..matches[2])
send("probe "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^check (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Separator changing</name>
						<script>enableTrigger("Separator Check/Update")
if matches[2]~= nil then send("config separator"..matches[2]) else send("config separator") end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^config separator( (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Who Parsing</name>
						<script>snd.parse_who()
registerAnonymousEventHandler("sunder_who_parsing_finished", snd.parse_who_groups, true)</script>
						<command></command>
						<packageName></packageName>
						<regex>^who groups$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Easy logging</name>
						<script>local name_table = string.split(matches[3], " ")
local name_string = ""
local city_logging = {["Duiran"] = "Dion", ["Enorian"] = "Enorian", ["Spinesreach"] = "Command", ["Bloodloch"] = "Raiders",}
table.sort(name_table, function(a, b) return a:lower() &lt; b:lower() end)
for _, v in pairs(name_table) do
  if name_string ~= "" then
    name_string = name_string..", "..v
  else
    name_string = v
  end
end
send("writelog "..city_logging[gmcp.Char.Status.city].." "..matches[2]..": "..name_string)</script>
						<command></command>
						<packageName></packageName>
						<regex>^logfoci (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>re-show windows</name>
						<script>if matches[2] == "chat" then
  yatcoContainer:load()
  yatcoContainer:show()

elseif matches[2] == "map" then
  mapContainer:load()
  mapContainer:show()

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^reload window (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>gauntlet change</name>
						<script>if matches[3] then
  cecho("&lt;red&gt;You have set your gauntlet level to:&lt;orange_red&gt; "..matches[3].."&lt;red&gt;.")
  snd.toggles.gauntlet_level = tonumber(matches[3])
else
  cecho("&lt;red&gt;You have set your gauntlet level to:&lt;orange_red&gt; "..snd.toggles.gauntlet_level.."&lt;red&gt;.")
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^(mygauntlet|mygauntlet (\d+))$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toxicology</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>sacs</name>
							<script>snd.send("harvest sac from "..matches[2]..snd.sep.."drop "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^sac (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>milking</name>
							<script>snd.send("qeb milk "..matches[2].." into fluidcache")</script>
							<command></command>
							<packageName></packageName>
							<regex>^milk (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>cask</name>
							<script>snd.send("qeb milk "..matches[2].." into cask")</script>
							<command></command>
							<packageName></packageName>
							<regex>^cask (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>unvenom</name>
							<script>local venoms = {
--"epteth",
"gecko",
--"epseth",
"prefarar",
"delphinium",
"digitalis",
"curare",
"darkshade",
"hepafarin",
"monkshood",
"oculus",
"selarnia",
"kalmia",
"xentio",
"eurypteria",
"aconite",
"vernalius",
"slike",
"euphorbia",
"larkspur",
"oleander",
"voyria",
"vardrax",
}
for venom in pairs(venoms) do
 snd.send("fc consume "..venoms[venom])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^unvenom$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>venoms</name>
							<script>local venoms = {
--"epteth",
"gecko",
--"epseth",
"prefarar",
"aconite",
"vernalius",
"slike",
"digitalis",
"curare",
"darkshade",
"oculus",
"selarnia",
"kalmia",
"xentio",
"hepafarin",
"monkshood",
"eurypteria",
"delphinium",
"euphorbia",
"larkspur",
"oleander",
"voyria",
"vardrax",
}
for venom in pairs(venoms) do
 snd.send("fc fill "..venoms[venom])
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^venoms$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>rag</name>
							<script>snd.send("qeb craft rag")</script>
							<command></command>
							<packageName></packageName>
							<regex>^rag$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Sunder Name DB</name>
					<script></script>
					<command></command>
					<packageName>Sunder Name DB</packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Sunder Ndb Aliases</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Configurations</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Toggle Highlighting</name>
								<script>if sndNDB.highlightNames then
	--Remove any highlights, and turn off the toggle.
	sndNDB.highlightNames = false
	sndNDB_Unhighlight()
	snd.message("Disabled name highlighting.")
else
	--Begin highlighting again, and enable them all.
	sndNDB.highlightNames = true
	sndNDB_loadHighlights()
	snd.message("Enabled name highlighting.")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb hl$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Set Org Colours</name>
								<script>local cities = {"Bloodloch", "Duiran", "Enemies", "Enorian", "Rogues", "Spinesreach"}

local city, colour = "", ""

if table.contains(cities, matches[2]:title()) then
	city = matches[2]:title()
	colour = matches[3]
elseif table.contains(cities, matches[3]:title()) then
	city = matches[3]:title()
	colour = matches[2]
else
	snd.message("That is not a valid option, please choose from: &lt;green&gt;Bloodloch, Duiran, Enemies, Enorian, Rogues or Spinesreach")
end

if city ~= "" then
	if table.contains(color_table, colour) then
		snd.message(city.." will now be highlighted in &lt;"..colour.."&gt;"..colour..".")
		if city ~= "Enemies" then
			sndNDB_updateHighlights(city, colour)
		else
			sndNDB_enemyHighlights()
		end
	else
		snd.message("That is not a valid colour to choose from.")
	end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb hl (\w+) (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Show Settings</name>
								<script>local count = 0
for i,v in pairs(sndNDB.players) do
	count = count + 1
end

snd.message("       snd Name Database Settings")
echo("\n ")
snd.message((sndNDB.highlightNames and "&lt;green&gt;We are" or "&lt;red&gt;We are not").."&lt;NavajoWhite&gt; currently highlighting names.")
cecho("\n       &lt;NavajoWhite&gt;      Total of &lt;white&gt;"..count.."&lt;NavajoWhite&gt; names!\n\n")

snd.message("       Highlight settings:")
for city, colour in pairs(sndNDB.highlighting) do
	cecho("\n &lt;"..colour.."&gt;"..city.."&lt;white&gt;"..string.rep(" ", 12-string.len(city)).."citizens will be highlighted in &lt;"..colour.."&gt;"..colour..".")
end

cecho("\n ")
snd.message("       Enemy settings:")
cecho("\n "..(sndNDB.highlightPriority == "enemies" and "&lt;green&gt;Prioritising" or "&lt;red&gt;Not prioritising").."&lt;NavajoWhite&gt; highlighting of enemies.")
cecho("\n &lt;LightSkyBlue&gt;Enemies will be highlighted in &lt;"..sndNDB.highlighting.Enemies.."&gt;"..sndNDB.highlighting.Enemies..".")
cecho("\n    &lt;LightSkyBlue&gt;-Special-")
cecho("\n  "..(sndNDB.enemySettings.bold and "&lt;green&gt;" or "&lt;red&gt;")..string.char(7).." &lt;NavajoWhite&gt;Bolded letters.")
cecho("\n  "..(sndNDB.enemySettings.underline and "&lt;green&gt;" or "&lt;red&gt;")..string.char(7).." &lt;NavajoWhite&gt;Underlined letters.")
cecho("\n  "..(sndNDB.enemySettings.italics and "&lt;green&gt;" or "&lt;red&gt;")..string.char(7).." &lt;NavajoWhite&gt;Italicized letters.")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb settings$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Set Highlight Priority</name>
								<script>local type, colour = matches[2], matches[3]

if sndNDB.highlightPriority ~= matches[2] then
	sndNDB.highlightPriority = matches[2]
	snd.message("Highlighting will give priority to "..sndNDB.highlightPriority..".")
	sndNDB_enemyHighlights()
else
	snd.message("Already prioritising highlighting of that.")
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb hlprio (enemies|city)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Toggle Highlighting Options For Enemies</name>
								<script>local x = { i = "italics", b = "bold", u = "underline" }
local opt = x[matches[2]]
if not sndNDB.enemySettings[opt] then
	sndNDB.enemySettings[opt] = true
	snd.message("Enemies &lt;green&gt;will now have &lt;NavajoWhite&gt;"..opt.." applied to it.")
else
	sndNDB.enemySettings[opt] = false
	snd.message("Enemies &lt;red&gt;will no longer have &lt;NavajoWhite&gt;"..opt.." applied to it.")
end
sndNDB_enemyHighlights()</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb ehl (i|u|b)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Actions</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Install</name>
								<script>sndNDB_Install()</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb install$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Parse Names Online</name>
								<script>if not sndNDB.installed then
	snd.message("Please install name database first.")
else
  ndbCity = ""
	parsingQW = true
	peopleOnline = {}
	if matches[2] then
		parsingCity = matches[2]
	end
	sendGMCP("Comm.Channel.Players")
	send(" ")
	if tonumber(snd.toggles.goggle_level) == 20 then
    snd.true_who = {}
    enableTrigger("QWP for level 20 goggles")
    send("qw")
  else  
    sndNDB_GetOnline()
  end
end
	</script>
								<command></command>
								<packageName></packageName>
								<regex>^qwp(?: (\w+)|)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Honours Person</name>
								<script>checkingPlayerCity = tempTimer(2, [[; checkingPlayerCity = nil;]])
ndbCity = ""
sndNDB_Acquire(matches[2]:title(),false)
send(matches[1])</script>
								<command></command>
								<packageName></packageName>
								<regex>^honou?r?s (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Whois Person</name>
								<script>local name = matches[2]:title()
local x, c
if not sndNDB_Exists(name) then
	snd.message(name.." isn't tracked by database.")
else
	x = sndNDB.players[name]
	c = sndNDB_getColour(name)

	cecho("\n&lt;blue&gt;- &lt;NavajoWhite&gt;"..x.title.." &lt;blue&gt;"..string.rep("-", 70-(string.len(x.title)+3)).."\n")
	cecho("\n&lt;DimGrey&gt; City :   &lt;"..c.."&gt;"..x.city..string.rep(" ", 31-string.len(x.city)).."&lt;DimGrey&gt; Tether:  &lt;white&gt;"..x.tether)
	cecho("\n\n&lt;blue&gt;"..string.rep("-", 70))
	cecho("\n ")
	send(" ",false)
end	</script>
								<command></command>
								<packageName></packageName>
								<regex>^whois (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Remove Low/Unranked</name>
								<script>local remove = {}

for i,v in pairs(sndNDB.players) do
	if v.xp_rank == nil or v.level &lt; 50 or v.xp_rank == 0 then
		table.insert(remove, v.name)
		sndNDB.players[v.name] = nil
	end
end
table.sort(remove)

snd.message("Removed a total of &lt;green&gt;"..#remove.."&lt;NavajoWhite&gt; unranked people from the database:\n - "..
	table.concat(remove, ", ")..".")
send(" ")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb clearout$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Remove single person</name>
								<script>local remove = (matches[2]:lower()):title()

sndNDB.players[remove] = nil

snd.message("Removed &lt;NavajoWhite&gt;from the database:\n - "..remove..".")

</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb remove (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Re-honours everyone</name>
								<script>local count = 0
ndbCity = ""
snd.message("Updating everyone who's currently in the database.")
for i,v in pairs(sndNDB.players) do
	count = count + 1
	sndNDB_Acquire(v.name:title(),false)
end
snd.message("This may take a minute or two. Total of "..count.." people are being re-checked.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^sndb redo$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Individual Update</name>
								<script>-- Allow users to update names individually
local valid_fields = {"guild","city",}
local name = (matches[3]:lower()):title()
local field = matches[4]:lower()
local value = (matches[5]:lower()):title()
local tether = ""

if table.contains(valid_fields, field) then
  if field == "city" then
    local valid_cities = {"Enorian","Spinesreach","Bloodloch","Duiran","None"}
    if not table.contains(valid_cities, value) then
      snd.message("Invalid city. Your options are: "..table.concat(valid_cities, ", "))
      return
    end
  end
  sndNDB.players[name][field] = value

  if sndNDB.players[name].city == "Duiran" or sndNDB.players[name].city == "Enorian" then 
    tether2 = "Spirit"
  elseif sndNDB.players[name].city == "Spinesreach" or sndNDB.players[name].city == "Bloodloch" then 
    tether2 = "Shadow" 
  else
    tether2 = "none"
  end

  sndNDB.players[name]["tether"] = tether2

  snd.message("Changed "..field.." to "..value.." for "..name..". You may check WHOIS &lt;name&gt; to confirm.")
  sndNDB_saveSettings(false)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(U|u)pdate (\w+) (\w+) (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Checky check</name>
								<script>local valid_cities = {"Enorian","Spinesreach","Bloodloch","Duiran","None"}
for name, data in pairs(sndNDB.players) do
  if not table.contains(valid_cities, data.city) then
    echo("\n"..name..": "..data.city)
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^checksy$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>War</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Set Division</name>
						<script>snd.current_division = matches[2]
snd.message("Current Division is "..matches[2], "atk")</script>
						<command></command>
						<packageName></packageName>
						<regex>^war division (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>March Troops</name>
						<script>snd.send("order "..snd.current_division.." march " .. matches[2])
snd.send("qeb " .. matches[2]..snd.sep.."path find "..snd.marching_destination)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^mt (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set March Destination</name>
						<script>snd.marching_destination = matches[2]
snd.message("New troop destination is: "..matches[2], "atk")</script>
						<command></command>
						<packageName></packageName>
						<regex>^war destination (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Fortify</name>
						<script>snd.send("order " .. snd.current_division .. " fortify")</script>
						<command></command>
						<packageName></packageName>
						<regex>^war fort$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Attack Division</name>
						<script>snd.send("order " .. snd.current_division .. " attack "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^war kill (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Order Division</name>
						<script>snd.send("order "..snd.current_division.." "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^war order (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Sunder Help War</name>
						<script>cecho("\n&lt;CadetBlue&gt;Sunder War")
cecho("\n&lt;MediumSeaGreen&gt;---------------")
cecho("\n")
cecho("\n&lt;MediumTurquoise&gt;The commands are as follows")
cecho("\n")
cecho("\n&lt;DeepSkyBlue&gt;war division &lt;divisionNumber&gt;  &lt;ForestGreen&gt;Set your tracked division")
cecho("\n&lt;DeepSkyBlue&gt;war destination &lt;vNum&gt;         &lt;ForestGreen&gt;Set the room number for your division's destination")
cecho("\n&lt;DeepSkyBlue&gt;mt &lt;dir&gt;                       &lt;ForestGreen&gt;March division in direction")
cecho("\n&lt;DeepSkyBlue&gt;war kill &lt;enemyDivision&gt;       &lt;ForestGreen&gt;Start the slaughter")
cecho("\n&lt;DeepSkyBlue&gt;war fort                       &lt;ForestGreen&gt;Order your division to fortify")
cecho("\n&lt;DeepSkyBlue&gt;war order &lt;order&gt;              &lt;ForestGreen&gt;General catchall, will order your division anything you give it")
cecho("\n&lt;DeepSkyBlue&gt;War package created by &lt;purple&gt;Teflin Vyktaire")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(S|s)under (H|h)elp (W|w)ar$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Vermin</name>
					<script></script>
					<command></command>
					<packageName>Vermin</packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Vermin Basher</name>
						<script>if snd.toggles.vermin then
  snd.toggles.vermin = false
  bot.going = false
  disableTimer("moveroom")
  cecho("&lt;red&gt;----------------\n   &lt;red&gt;VERMIN OFF\n&lt;red&gt;----------------")
  snd.send("vermin")
else
  snd.toggles.vermin = true
  if gmcp.Room.Info.area == "Spinesreach" then
    snd.send("vermin"..snd.sep.."path track 11687")
    snd.which_path = "verminspines"
  elseif gmcp.Room.Info.area == "Bloodloch" then
    snd.send("vermin"..snd.sep.."path track 9194")
    snd.which_path = "verminbloodloch"
  elseif gmcp.Room.Info.area == "Duiran" then
    snd.send("vermin"..snd.sep.."path track 44060")
    snd.which_path = "verminduiran"	
  elseif gmcp.Room.Info.area == "Enorian" then
    snd.send("vermin"..snd.sep.."path track 56484")
    snd.which_path = "verminenorian"	
  end
  
  cecho("\n&lt;green&gt;----------------\n   &lt;green&gt;VERMIN ON\n&lt;green&gt;----------------")
  enableTimer("moveroom")
  
  if snd.which_path ~= "" then
    bot.going = true
    bot.path =  sndpathpick()
  end
  
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^toggle vermin$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Auto Targeting</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Add Target List</name>
						<script>local list = matches[2]:gsub(" ", ", ")

snd.addTargetList(list)
snd.callTargetList()</script>
						<command></command>
						<packageName></packageName>
						<regex>^atl (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add Target Position</name>
						<script>local tar = matches[2]:title()
local pos = matches[3] or nil

snd.addSingleTarget(tar, pos)

if snd.toggles.calling then
	if pos then
		send("wt Target priority: " .. tar .. " " .. pos)
	else
		send("wt Target priority: " .. tar)
	end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^atp (\w+)(?:\s)?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List Targets</name>
						<script>snd.displayTargetList()
snd.callTargetList()</script>
						<command></command>
						<packageName></packageName>
						<regex>^tlist$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear Target List</name>
						<script>snd.clearTargetList()</script>
						<command></command>
						<packageName></packageName>
						<regex>^atlc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Remove Target</name>
						<script>local who = matches[2]:title()

snd.removeTarget(who)

if snd.toggles.calling then 
	send("wt Target removed: " .. who)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^atr (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Skip current target</name>
						<script>snd.targeting.skip = true
snd.get_new_target()</script>
						<command></command>
						<packageName></packageName>
						<regex>^nt$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Snd Autopaths</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Using Paths</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Bash areas of your choice</name>
							<script>snd_bashAreas(matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^bashpath (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Single Area Path</name>
							<script> snd_bashArea() </script>
							<command></command>
							<packageName></packageName>
							<regex>^goarea$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Creating</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Compile Pather</name>
							<script> snd_patherCompile() </script>
							<command></command>
							<packageName></packageName>
							<regex>^path compile$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Add Path Room</name>
							<script> snd_patherAdd() </script>
							<command></command>
							<packageName></packageName>
							<regex>^path addroom$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Start Pather</name>
							<script> snd_createPather() </script>
							<command></command>
							<packageName></packageName>
							<regex>^path create$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>My Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Bashing Aliases</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Slow Route</name>
						<script>expandAlias("bashpath mannaseh, zenith, shoals, reef, underbelly, clawhook, a basilisk lair, bakal, dovan, maul, beggar, encampment, vault, sunwash")
--luzith, squal, spiral, 
--dramedo, forgotten depths, </script>
						<command></command>
						<packageName></packageName>
						<regex>^bash3$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Squish Route</name>
						<script>expandAlias("bashpath luzith, squal, tiyen, spiral, zenith, nal'jin, forgotten dome, underbelly, shoals, reef, clawhook, a basilisk lair, bakal, ia'shal, dovan, maul")</script>
						<command></command>
						<packageName></packageName>
						<regex>^bash4</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Gold Route</name>
						<script>expandAlias("bashpath fengard, rebels, three rock, squal, yuzurai, tiyen, caldera, drakuum, ollin, ayhesa, dome, dovan, maul, sunwash")
--underbelly, a basilisk lair, 
--clawhook, a basilisk lair, bakal, 
--expandAlias("bashpath mannaseh, zenith, shoals, reef, underbelly, clawhook, a basilisk lair, bakal, dovan, maul, beggar, encampment, vault, sunwash")
--shoals, reef, underbelly, 
--dovan, maul, beggar, encampment, vault, 

--expandAlias("bashpath fengard, rebels, three rock, squal, yuzurai, tiyen, caldera, drakuum, ollin, augerweald, ayhesa, dome, dovan, maul, ia'shal, sunwash")</script>
						<command></command>
						<packageName></packageName>
						<regex>^route2$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Group Large XP</name>
						<script>expandAlias("bashpath mannaseh, zenith, shoals, reef, underbelly, clawhook, a basilisk lair, bakal, dovan, maul, beggar, vault, sunwash")
--clawhook, 
--dramedo, forgotten depths, </script>
						<command></command>
						<packageName></packageName>
						<regex>^route1$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Route Newbie Gold</name>
						<script>expandAlias("bashpath fengard, rebels, three rock, squal, yuzurai, tiyen, caldera, drakuum, ollin, augerweald, ayhesa, dome, dovan, maul, ia'shal, sunwash")</script>
						<command></command>
						<packageName></packageName>
						<regex>^gold1$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Deathsense</name>
					<script>A = {}
B = {}
snd.send("compendium deathsense mannaseh##compendium deathsense varianstatue##compendium deathsense maestralshoals##compendium deathsense underbelly##compendium deathsense memoryscape##compendium deathsense eftehl##compendium deathsense clawhook##compendium deathsense volcanisle##compendium deathsense tcanna##compendium deathsense welto##compendium deathsense kcaverns##compendium deathsense bakal##compendium deathsense bonro##compendium deathsense dramedowarrens")
enableTimer("Deathsense")</script>
					<command></command>
					<packageName></packageName>
					<regex>^deathsense$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Color Illusion</name>
					<script>snd.send("qeb conjure illusion nobody color:brightred "..matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^cill (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>OOC</name>
					<script>send("tell " .. matches[2] .. " (( " .. matches[3] .. " ))", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ooc (\w+) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Shrines</name>
					<script>display(shrine_list)</script>
					<command></command>
					<packageName></packageName>
					<regex>^shrine list$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>firstaidstart</name>
					<script>snd.firstaidstart()</script>
					<command></command>
					<packageName></packageName>
					<regex>^firstaidstart$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>Check stuff</name>
					<script>send("pull "..matches[2])
send("look in "..matches[2])
send("push "..matches[2])
send("turn "..matches[2])
send("enter "..matches[2])
send("read "..matches[2])
send("touch "..matches[2])
send("ponder "..matches[2])
send("probe "..matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^check (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>set 200 race</name>
					<script>local ascendantTypes =
{
  "none",
  -- "adherent", split this up into the flavors below
  "seraph",
  "aetherial",
  "titan",
  "glacian",
  "nocturn",
  "sagani",
  "chaos",
  "tiarna",
  "astral",
  
  "instinct",
  "malevolent",
  "strife",
  "corruption",
  "memory",
  "tyranny",
}
if table.contains(ascendantTypes, matches[2]:lower()) then
  snd.toggles.ascendedtype = matches[2]:lower()
  cecho("&lt;red&gt;Ascended race set to: "..matches[2]:lower())
else
  cecho("&lt;red&gt;Invalid ascended race. Options are: "..table.concat(ascendantTypes, ", "))
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^toggle ascendant (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Astral</name>
					<script>hecho("\n#f1c0e8                     :::      :::::::: ::::::::::: :::::::::      :::     :::   ")
hecho("\n#cfbaf0                  :+: :+:   :+:    :+:    :+:     :+:    :+:   :+: :+:   :+:    ")
hecho("\n#a3c4f3                +:+   +:+  +:+           +:+     +:+    +:+  +:+   +:+  +:+   ")
hecho("\n#90dbf4              +#++:++#++: +#++:++#++    +#+     +#++:++#:  +#++:++#++: +#+   ")
hecho("\n#8eecf5             +#+     +#+        +#+    +#+     +#+    +#+ +#+     +#+ +#+   ")
hecho("\n#98f5e1            #+#     #+# #+#    #+#    #+#     #+#    #+# #+#     #+# #+#   ")
hecho("\n#b9fbc0           ###     ###  ########     ###     ###    ### ###     ### ########## ")
echo("\n")
echo("\n")
cechoLink("\n\n                                       &lt;white&gt;* &lt;alice_blue&gt;C&lt;azure&gt;a&lt;ghost_white&gt;l&lt;gainsboro&gt;l&lt;light_grey&gt;i&lt;ansi_white&gt;o&lt;grey&gt;p&lt;gray&gt;e     ", function() send("path track 70907") end, "Calliope", true)
echo("\n")
cechoLink("\n &lt;plum&gt;* Vog       ",  function() send("path track 23691") end, "Vog", true)cecho("   ")cechoLink("&lt;LemonChiffon&gt;* Chelya  ",  function() send("path track 20397") end, "Chelya", true)cecho("       ")cechoLink("&lt;LightSalmon&gt;* Nkdatha",  function() send("path track 70042") end, "Nkdatha       ", true)cecho("        ")cechoLink("&lt;medium_aquamarine&gt;* Sha'ahanidhi   ",  function() send("path track 71047") end, "Sha'ahanidhi", true)cecho("   ")cechoLink("&lt;sky_blue&gt;* Inasea    ",  function() send("path track 20385") end, "Inasea", true)cecho("   ")cechoLink("&lt;medium_purple&gt;* Eudaimonia ",  function() send("path track 70906") end, "Eudaimonia", true)

cechoLink("\n &lt;plum&gt;* Dvovion",  function() send("path track 23699") end, "Dvovion", true)cecho("      ")cechoLink("&lt;LemonChiffon&gt;* Ghel  ",  function() send("path track 70006") end, "Ghel", true)cecho("         ")cechoLink("&lt;LightSalmon&gt;* Ryb    ",  function() send("path track 68319") end, "ryb", true)cecho("        ")cechoLink("&lt;medium_aquamarine&gt;* Ranna  ",  function() send("path track 71046") end, "Ranna", true)cecho("           ")cechoLink("&lt;sky_blue&gt;* Cym   ",  function() send("path track 20380") end, "Cym", true)cecho("       ")cechoLink("&lt;medium_purple&gt;* Viskein", function() send("path track 20383") end, "Viskein", true)

cechoLink("\n &lt;plum&gt;* Jomunth",  function() send("path track 23704") end, "Jomunth", true)cecho("      ")cechoLink("&lt;LemonChiffon&gt;* Mar ",  function() send("path track 70004") end, "Mar", true)cecho("           ")cechoLink("&lt;LightSalmon&gt;* Hraqa",  function() send("path track 23687") end, "Hraqa", true)cecho("          ")cechoLink("&lt;medium_aquamarine&gt;* Yollotl",  function() send("path track 12721") end, "Yollotl", true)cecho("           ")cechoLink("&lt;sky_blue&gt;* Amsatha",  function() send("path track 23700") end, "Amsatha", true)cecho("      ")cechoLink("&lt;medium_purple&gt;* Ecdysia", function() send("path track 70908") end, "Ecdysia", true)
echo("\n")
cechoLink("\n\n                                 &lt;lemon_chiffon&gt;  E &lt;peach_puff&gt;N &lt;dark_salmon&gt;T &lt;plum&gt;R &lt;medium_purple&gt;E &lt;light_slate_blue&gt;A &lt;light_sky_blue&gt;T   &lt;medium_turquoise&gt;A &lt;medium_aquamarine&gt;L &lt;dark_sea_green&gt;L     ", function() send("qeb entreat all contracts") end, "Entreat All Contracts", true)
cechoLink("\n\n                                        &lt;lemon_chiffon&gt;T &lt;dark_salmon&gt;I &lt;medium_purple&gt;P &lt;light_sky_blue&gt;T &lt;medium_aquamarine&gt;O &lt;dark_sea_green&gt;E     ", function() send("qeb tiptoe") end, "Tiptoe", true)
cechoLink("\n\n                                        &lt;lemon_chiffon&gt;B &lt;dark_salmon&gt;R &lt;medium_purple&gt;I &lt;light_sky_blue&gt;D &lt;medium_aquamarine&gt;G &lt;dark_sea_green&gt;E     ", function() send("qeb entreat bridge") end, "Bridge", true)
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^astral$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Chaos</name>
					<script>enableTrigger("Chaos Sense")
snd.send("chaostrap sense")</script>
					<command></command>
					<packageName></packageName>
					<regex>^chaost$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Mine Deposit</name>
					<script>snd.send("qeb quickwield left pickaxe"..snd.sep.."mine deposit")</script>
					<command></command>
					<packageName></packageName>
					<regex>^md$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Aetolia Exploration</name>
				<script></script>
				<command></command>
				<packageName>Aetolia Exploration</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Exploration</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Restart Atlas</name>
						<script>atlas.explored = nil
aatlas.default()</script>
						<command></command>
						<packageName></packageName>
						<regex>^atlas refresh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Atlas Completion</name>
						<script>aatlas.output()</script>
						<command></command>
						<packageName></packageName>
						<regex>^atlas show$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clean Lessers From Atlas</name>
						<script>aatlas.clean()</script>
						<command></command>
						<packageName></packageName>
						<regex>^atlas clean$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Aetolia Hunt Tracking</name>
				<script></script>
				<command></command>
				<packageName>Aetolia Hunt Tracking</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Hunt Tracker</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Show A Specific Run</name>
						<script>local area, id = matches[3], tonumber(matches[2])

if huntdata.trackeddata[area] then
  if huntdata.trackeddata[area][id] then
    huntdata.showhunt(area, id)
  else
    huntdata.echo("No such id found for "..area.."!")
  end
else
  local found = false
  for areas, list in pairs(huntdata.trackeddata) do
    if string.find(areas:lower(), area:lower()) then
      if huntdata.trackeddata[areas][id] then
        huntdata.showhunt(areas, id)
        found = true
      end
    end
  end
  if not found then
    huntdata.echo("Cannot find any matching area containing '"..area.."'")
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt review (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show All Runs/Area</name>
						<script>if matches[2] == "all" then
  huntdata.listruns()
else
  huntdata.searchruns(matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt show (all|.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete An Entry</name>
						<script>local area, id = matches[3], tonumber(matches[2])

if huntdata.trackeddata[area] then
  if huntdata.trackeddata[area][id] then
    huntdata.removeentry(area, id)
  else
    huntdata.echo("No such id found for "..area.."!")
  end
else
  local found = false
  for areas, list in pairs(huntdata.trackeddata) do
    if string.find(areas:lower(), area:lower()) then
      if huntdata.trackeddata[areas][id] then
        huntdata.removeentry(areas, id)
        found = true
      end
    end
  end
  if not found then
    huntdata.echo("Cannot find any matching area containing '"..area.."'")
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt delete (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Reset / Install</name>
						<script>huntdata.install()</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt (reset|install)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Manually save/load for whatever reason</name>
						<script>if matches[2] == "save" then
  huntdata.savedata()
  huntdata.echo("Saved your data safely!")
else
  huntdata.loaddata()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt (save|load)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete a range of entries</name>
						<script>local range, deltype, area = tonumber(matches[2]), matches[3], matches[4]

--area, id = matches[3], tonumber(matches[2])

if huntdata.trackeddata[area] then
  huntdata.massdelete(area, range, deltype)

else
  local found = false
  for areas, list in pairs(huntdata.trackeddata) do
    if string.find(areas:lower(), area:lower()) then
      if huntdata.trackeddata[areas] then
        huntdata.massdelete(areas, range, deltype)
        found = true
      end
    end
  end
  if not found then
    huntdata.echo("Cannot find any matching area containing '"..area.."'")
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntt massdel (\d+) (time|overtime|kills) (.+)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Fishing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>FishingGo</name>
					<script>local results = get_fishing_holes(matches[2], true)
if #results == 1 then
	echo("Pathing to " .. results[1].name .. ".\n")
	results[1].rooms = results[1].rooms or {}
	if #results[1].rooms &lt;= 0 then
		echo("That fishing hole has no rooms saved. Aborting.\n")
		return
	else
		send("path find " .. results[1].rooms[1])
	end
	if gmcp.Char.Vitals.mounted == "0" then
		send("path go dash")
	else
		send("path go gallop")
	end
else
	echo("Please specify a unique fishing location.\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fgo (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>FishSearch</name>
					<script>get_fishing_holes(matches[3], true, (matches[2] ~= ""))
</script>
					<command></command>
					<packageName></packageName>
					<regex>^fishing search\s*(full|info)*\s*(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ToggleAutoFish</name>
					<script>if currently_fishing then
	echo("Autofishing disabled.\n")
	if currently_fishing then snd.send("qeb fishing cut", false) end
	currently_fishing = false
  expandAlias("wnon")
else
	echo("Autofishing enabled.\n")
	currently_fishing = true
  if hasSkill("Quickwield") then
	  snd.send("secure left"..snd.sep.."secure right"..snd.sep.."wear shield"..snd.sep.."wield pole"..snd.sep.."qeb fishing cast", false)
  else
    snd.send("unwield left"..snd.sep.."unwield right"..snd.sep.."wield pole"..snd.sep.."qeb fishing cast", false)
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^afish$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Offense</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Generic</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>my location</name>
						<script>snd.send("wt I'm at ("..gmcp.Room.Info.num..") '"..gmcp.Room.Info.name.."' in "..gmcp.Room.Info.area)</script>
						<command></command>
						<packageName></packageName>
						<regex>^loc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>eye sigil</name>
						<script>snd.set_queue("quickwield right eyesigil"..snd.sep.."relax grip"..snd.sep.."throw eyesigil at ground")</script>
						<command></command>
						<packageName></packageName>
						<regex>^eye$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>web tattoo</name>
						<script>snd.toggles.attacking = false
if matches[2] == nil then
 snd.send("qeb touch web "..snd.target)
else
 snd.send("qeb touch web "..matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^tw(?: (.*))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>brazier</name>
						<script>if matches[2] == nil then
 snd.attack("touch brazier "..snd.target)
else
 snd.attack("touch brazier "..matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^brz(?: (.*))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>tentacle</name>
						<script>if matches[2] == nil then
 snd.attack("touch tentacle "..snd.target)
else
 snd.attack("touch tentacle "..matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^tnt(?: (.*))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>orrery</name>
						<script>snd.send("infuse orrery with "..snd.faction)</script>
						<command></command>
						<packageName></packageName>
						<regex>^or$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>breathe fire</name>
						<script>snd.send("qeb breathe fire at icewall")</script>
						<command></command>
						<packageName></packageName>
						<regex>^bf$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>prism</name>
						<script>if matches[2] == nil then
 snd.attack("touch prism "..snd.target)
else
 snd.attack("touch prism "..matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^prm(?: (.*))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>shackle</name>
						<script>snd.send("qeb refining shackle eld")</script>
						<command></command>
						<packageName></packageName>
						<regex>^sh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>tumble</name>
						<script>snd.send("qeb tumble "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^tm (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>dummy mode</name>
						<script>snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = "punch "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^dummy$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>swing up</name>
						<script>snd.toggles.attacking = false
snd.send("qeb swing up")</script>
						<command></command>
						<packageName></packageName>
						<regex>^su$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>swing down</name>
						<script>snd.toggles.attacking = false
snd.send("qeb swing down")</script>
						<command></command>
						<packageName></packageName>
						<regex>^sd$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>use translocator</name>
						<script>snd.toggles.attacking = false
snd.toggles.bashing = false
snd.toggles.fasthunt = false
snd.send("qeb use translocator")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ut$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Wield bashing</name>
						<script>if snd.class == "Archivist" then
	if (snd.wielded.left.name or snd.wielded.right.name) == "rod" then
		snd.send("qeb unwield pole")
		tempTimer(3, [[expandAlias("wbsh")]])
	else
		snd.send("qeb quickwield right codex"..snd.sep.."quickwield left shield")
	end
elseif snd.class == "Carnifex" then
  snd.send("quickwield both warhammer")
elseif snd.class == "Revenant" then
  snd.send("quickwield both longsword shield")
elseif snd.class == "Templar" then
  snd.send("quickwield left 234557"..snd.sep.."quickwield right 234759")
elseif snd.class == "Wayfarer" then
  snd.send("quickwield left shield"..snd.sep.."quickwield right axe")
elseif snd.class == "Infiltrator" then
  snd.send("quickwield left shield"..snd.sep.."quickwield right dirk")
else
  expandAlias("wpvp")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^wbsh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>wield pvp</name>
						<script>if snd.class == "Carnifex" then
  snd.send("quickwield both bardiche")
elseif snd.class == "Sciomancer" then
	snd.send("quickwield both 247003 buckler")
elseif snd.class == "Praenomen" then
  snd.send("quickwield both scythe")
elseif snd.class == "Earthcaller" then 
  snd.send("quickwield right crozier"..snd.sep.."quickwield left buckler")
elseif snd.class == "Alchemist" then
  snd.send("quickwield both conduit")
elseif snd.class == "Shaman" then
  snd.send("quickwield both quarterstaff")
elseif snd.class == "Executor" then
  snd.send("quickwield both ringblade")
elseif snd.class == "Carnifex" then
  snd.send("quickwield both bardiche")
elseif snd.class == "Revenant" then
  snd.send("quickwield both shortsword shortsword.2")
elseif snd.class == "Templar" then
  snd.send("quickwield left 256415"..snd.sep.."quickwield right 256823")
elseif snd.class == "Wayfarer" then
  snd.send("quickwield left axe"..snd.sep.."quickwield right axe")
elseif snd.class == "Infiltrator" then
  snd.send("quickwield left whip"..snd.sep.."quickwield right dirk")
elseif snd.class == "Archivist" then
	if (snd.wielded.left.name or snd.wielded.right.name) == "rod" then
		snd.send("qeb unwield pole")
		tempTimer(3, [[expandAlias("wpvp")]])
	else
		snd.send("qeb quickwield right codex"..snd.sep.."quickwield left dirk")
	end
else
  expandAlias("wbsh")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^wpvp$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Generic</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="no" isFolder="no">
							<name>my location</name>
							<script>snd.send("wt I'm at ("..gmcp.Room.Info.num..") '"..gmcp.Room.Info.name.."' in "..gmcp.Room.Info.area)</script>
							<command></command>
							<packageName></packageName>
							<regex>^loc$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>eye sigil</name>
							<script>snd.set_queue("quickwield both eyesigil"..snd.sep.."relax grip"..snd.sep.."throw eye at ground"..snd.sep.."qeb secure eyesigil")</script>
							<command></command>
							<packageName></packageName>
							<regex>^eye$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>web tattoo</name>
							<script>if snd.toggles.attacking then snd.toggle("attacking") end
if matches[2] == nil then
 snd.send("qeb touch web "..snd.target)
else
 snd.send("qeb touch web "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tw(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>brazier</name>
							<script>if matches[2] == nil then
 snd.attack("touch brazier "..snd.target)
else
 snd.attack("touch brazier "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^brz(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tentacle</name>
							<script>if matches[2] == nil then
 snd.attack("touch tentacle "..snd.target)
else
 snd.attack("touch tentacle "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tnt(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>orrery</name>
							<script>snd.send("infuse orrery with "..snd.faction)</script>
							<command></command>
							<packageName></packageName>
							<regex>^or$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>breathe fire</name>
							<script>snd.send("qeb breathe fire at icewall")</script>
							<command></command>
							<packageName></packageName>
							<regex>^bf$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>prism</name>
							<script>if matches[2] == nil then
 snd.attack("touch prism "..snd.target)
else
 snd.attack("touch prism "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^prm(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>shackle</name>
							<script>snd.send("qeb refining shackle eld")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sh$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tumble</name>
							<script>snd.send("qeb tumble "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^tm (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dummy mode</name>
							<script>snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = "punch "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^dummy$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>swing up</name>
							<script>if snd.toggles.attacking then snd.toggle("attacking") end
snd.send("qeb swing up")</script>
							<command></command>
							<packageName></packageName>
							<regex>^su$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>swing down</name>
							<script>if snd.toggles.attacking then snd.toggle("attacking") end
snd.send("qeb swing down")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sd$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Quick translocator alias</name>
							<script>if snd.toggles.attacking then snd.toggle("attacking") end
if snd.toggles.bashing then snd.toggle("bashing") end
if snd.toggles.fasthunt then snd.toggle("fasthunt") end
snd.send("qeb use translocator")</script>
							<command></command>
							<packageName></packageName>
							<regex>^ut$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>disperse</name>
							<script>if matches[2] ~= "none" and matches[2]~= "callers" and matches[2]~="all" then 
	send(" ")
	cecho("\n&lt;red&gt;Not a viable choice! &lt;white&gt;Enter either: &lt;red&gt;none &lt;white&gt;| &lt;yellow&gt;callers &lt;white&gt;| &lt;green&gt;all")
	snd.toggles.dispersing = false
else
	snd.disperse = matches[2]
	if snd.disperse == "none" then
		snd.toggles.dispersing = false
		send(" ")
		cecho("\n&lt;red&gt;Dispersing is now off.")
	else
		snd.toggles.dispersing = true
		send(" ")
		cecho("\n&lt;red&gt;Dispersing: &lt;green&gt;"..snd.disperse)
	end
  raiseEvent("sunder_update_toggles")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle disperse (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>survive</name>
							<script>if not snd.toggles.survive then 
	snd.toggles.survive = true
  cecho("\n&lt;red&gt;Survive ON")
else
	snd.toggles.survive = false
  cecho("\n&lt;red&gt;Survive OFF")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^toggle survive$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Shooting / Misc</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>snipe</name>
							<script>if snd.class == "Infiltrator" then
  snd.set_queue("secure dirk"..snd.sep.."secure whip"..snd.sep.."wear buckler"..snd.sep.."bowstance"..snd.sep.."switch normal"..snd.sep.."snipe "..snd.target.." "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^snp(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>meteor</name>
							<script>if snd.class == "Indorani" then
  if matches[2] == nil then
    snd.set_queue("fling star at "..snd.target)
  else
    snd.set_queue("fling star at "..matches[2])
  end
elseif snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
else
  if matches[2] == nil then
    snd.set_queue("switch meteor"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch meteor"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^met(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>ghost</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch ghost"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch ghost"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^gs(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Shoot Sumac</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch normal"..snd.sep.."shoot "..snd.target.." sumac")
  else
    snd.set_queue("switch normal"..snd.sep.."shoot "..matches[2].." sumac")
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^sht(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Ice Arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch ice"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch ice"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^ia(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>ember arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch ember"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch ember"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^emb(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>barbed arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch barbed"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch barbed"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^barb(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>spiral arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch spiral"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch spiral"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^spr(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>shock arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch shock"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch shock"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^shk(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>razor arrow</name>
							<script>if snd.wielded.left.name ~= "bow" and snd.class ~= "Executor" then
  expandAlias("wbow")
elseif not snd.efficiency and snd.class == "Executor" then
  snd.set_queue("efficiency")
else
  if matches[2] == nil then
    snd.set_queue("switch razor"..snd.sep.."shoot "..snd.target)
  else
    snd.set_queue("switch razor"..snd.sep.."shoot "..matches[2])
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^rz(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>part</name>
							<script>snd.set_queue("point parting "..matches[2])
</script>
							<command></command>
							<packageName></packageName>
							<regex>^part(?: (.*))?$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>200</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>heal</name>
							<script>snd.send("qeb stand"..snd.sep.."astral ambrosia "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^heal (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>PvP (Long Damage)</name>
							<script>if snd.class == "None" then
  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
    
    local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		     
      if snd.used.shield then
      	if not snd.hamartia_used then
          string = "AETHERIAL OMISSION  "..snd.target.." shield"
        else
          string = "touch hammer "..snd.target
        end
      
      elseif snd.checkAff("barrier") or snd.checkAff("dome") then
        string = "touch hourglass "..snd.target
      elseif not snd.huntresses_used then
        string = "chaos summon "..snd.target
        snd.huntresses_used = true
        tempTimer(90, [[snd.huntresses_used = false]])
      elseif snd.glory &gt; 1 and not snd.unmasked then
        string = "chaos warp "..snd.target
      elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
        string = "astral ambrosia"
      elseif snd.glory &gt;= 3 then
        string = "chaos erupt "..snd.target
      else
        string = "astral evert "..snd.target
      end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
      
      cecho("\n".."Motes: "..snd.glory)

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^kll$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Limbs / Salvemode</name>
							<script>if snd.class == "None" then
	snd.starting_attack()
	function snd.attack_function()
    if not snd.waiting.queue then
    
  local string = "" -- we'll load this with our attack string
	local call = "" -- and this with our affliction call
	local venom1 = "none"
  local venom2 = "none"
	local shieldkill = "none"
	local venattack = "none"
	local limb = "none"
    
  if not snd.used.shield and not snd.hamartia_used then
		if snd.doubleattack then
			if snd.storedascendvenom ~= "slike" and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
      elseif snd.storedascendvenom ~= "kalmia" and not snd.checkAff("asthma") then
				venom1 = "asthma"         
			elseif snd.storedascendvenom ~= "aconite" and not snd.checkAff("stupidity") then
				venom1 = "stupidity" 
			end      
		else
			if not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif not snd.checkAff("asthma") then
				venom1 = "asthma"
			elseif not snd.checkAff("stupidity") then
				venom1 = "stupidity"
			end
		end  
  end
	
	shieldkill = "astral hamartia  "..snd.target.." "..venom1
	
	if snd.checkAff("left_leg_crippled") and not snd.checkAff("left_leg_damged") then
		limb = "left leg"
	elseif snd.checkAff("right_leg_crippled") and not snd.checkAff("right_leg_damged") then
		limb = "right leg"
	elseif snd.checkAff("left_arm_crippled") and not snd.checkAff("left_arm_damged") then
		limb = "left arm"
	elseif snd.checkAff("right_arm_crippled") and not snd.checkAff("right_arm_damged") then
		limb = "right arm"
	else
		limb = "head" 
	end
      
  if snd.used.shield then
		if not snd.hamartia_used then
			string = "astral hamartia  "..snd.target.." shield"
      call = ""
		else
			string = "touch hammer "..snd.target
      call = ""
		end
  elseif snd.checkAff("barrier") or snd.checkAff("dome") then
    string = "touch hourglass "..snd.target
    call = ""
  elseif not snd.huntresses_used then
		string = "ASTRAL HUNTRESSES "..snd.target
      call = ""
		snd.huntresses_used = true
		tempTimer(90, [[snd.huntresses_used = false]])
  elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
		string = "astral ambrosia"
      call = ""
  else
    if snd.no_parry() or (shieldkill ~= "none" and venom1 ~= "none") then
      venattack = "ASTRAL CONTAMINATE "..snd.target.." "..limb.." "..venom1    
      string = shieldkill..snd.sep..venattack..snd.sep
    elseif shieldkill ~= "none" and venom1 ~= "none" then
      venattack = "ASTRAL CONTAMINATE "..snd.target.." "..limb.." "..venom1      
      string = shieldkill..snd.sep..venattack..snd.sep
    else
			if snd.glory &gt;= 3 then
				string = "astral crescent "..snd.target
        call = ""
			elseif not snd.checkAff("recklessness") and snd.doubleattack then
				string = "ASTRAL PYRESCE "..snd.target
        call = ""
			else
				string = "astral evert "..snd.target
        call = ""
			end
		end	 
  end	
      
	cecho("\n".."Motes: "..snd.glory.." Limb: "..limb .." Venom: "..venom1)
		
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end

		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^limbs$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Mazz Fast Lock</name>
							<script>if snd.class == "None" then
	snd.starting_attack()
	function snd.attack_function()
    if not snd.waiting.queue then
    
  local string = "" -- we'll load this with our attack string
	local call = "" -- and this with our affliction call
	local venom1 = "none"
  local venom2 = "none"
	local shieldkill = "none"
	local venattack = "none"
	local limb = "none"
    
  if not snd.used.shield and not snd.hamartia_used then
		if snd.doubleattack then
			if snd.storedascendvenom == "kalmia" and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif snd.storedascendvenom == "anorexia" and not snd.checkAff("asthma") then
				venom1 = "asthma"         
			elseif snd.storedascendvenom == "gecko" and not snd.checkAff("anorexia") then
				venom1 = "anorexia"   
			elseif not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("asthma") and not snd.checkAff("slickness") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma" 
			elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") and snd.storedascendvenom ~= "slike" then
				venom1 = "anorexia"
			elseif not snd.checkAff("asthma") and snd.checkAff("slickness") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("anorexia") and not snd.checkAff("asthma") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") and snd.storedascendvenom ~= "slike" then
				venom1 = "anorexia"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("stupidity") and snd.storedascendvenom ~= "aconite" then
				venom1 = "stupidity"   
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
			end      
		else
			if not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) then
				venom1 = "asthma"
			elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif not snd.checkAff("asthma") and snd.checkAff("slickness") then
				venom1 = "asthma"
			elseif snd.checkAff("anorexia") and not snd.checkAff("asthma") then
				venom1 = "asthma"
			elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("stupidity") then
				venom1 = "stupidity"
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience" 
			end
		end  
    end
	
	 shieldkill = "chaos shock  "..snd.target.." "..venom1
	
    if snd.doubleattack then
		if snd.storedascendvenom == "kalmia" and not snd.checkAff("slickness") and venom1 ~= "asthma" then
			venom2 = "gecko"    
		elseif venom1 ~= "anorexia" and snd.storedascendvenom == "kalmia" and snd.checkAff("slickness") and not snd.checkAff("anorexia") and venom1 ~= "anorexia" then
			venom2 = "slike"
		elseif not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and venom1 ~= "asthma" and snd.storedascendvenom ~= "kalmia" then
			venom2 = "kalmia"
		elseif snd.checkAff("asthma") and not snd.checkAff("slickness") and snd.storedascendvenom ~= "gecko" then
			venom2 = "gecko"
		elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") and venom1 ~= "anorexia" and (snd.storedascendvenom == "gecko" or snd.checkAff("slickness")) and snd.storedascendvenom ~= "slike" then
			venom2 = "slike"
		elseif not snd.checkAff("asthma") and venom1 ~= "asthma" and snd.storedascendvenom ~= "kalmia" then
			venom2 = "kalmia"
		elseif not snd.checkAff("slickness") and venom1 ~= "slickness" and snd.storedascendvenom ~= "gecko" then
			venom2 = "gecko"
		elseif not (snd.checkAff("paralysis") or snd.checkAff("paresis")) and snd.storedascendvenom ~= "curare" then
			venom2 = "curare"
		elseif not snd.checkAff("clumsiness") and snd.storedascendvenom ~= "xentio" then
			venom2 = "xentio"
		elseif not snd.checkAff("stupidity") and snd.storedascendvenom ~= "aconite" and venom1 ~= "stupidity" then
			venom2 = "aconite"
		elseif not (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			venom2 = "epseth"
		elseif not (snd.checkAff("right_arm_crippled") or snd.checkAff("left_arm_crippled")) then
			venom2 = "epteth"
		end
	else
		if not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and venom1 ~= "asthma" then
			venom2 = "kalmia"
		elseif snd.checkAff("asthma") and not snd.checkAff("slickness") then
			venom2 = "gecko"
		elseif snd.checksomeAffs({"asthma", "slickness"}, 2) and not snd.checkAff("anorexia") and venom1 ~= "anorexia" then
			venom2 = "slike"
		elseif venom1 == "asthma" and snd.checkAff("slickness") and not snd.checkAff("anorexia") then
			venom2 = "slike"      
		elseif not snd.checkAff("asthma") and venom1 ~= "asthma" then
			venom2 = "kalmia"
		elseif not snd.checkAff("slickness") then
			venom2 = "gecko"
		elseif not (snd.checkAff("paralysis") or snd.checkAff("paresis")) then
			venom2 = "curare"
		elseif not snd.checkAff("clumsiness") then
			venom2 = "xentio"
		elseif not snd.checkAff("stupidity") and venom1 ~= "stupidity" then
			venom2 = "aconite"
		elseif not (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			venom2 = "epseth"
		elseif not (snd.checkAff("right_arm_crippled") or snd.checkAff("left_arm_crippled")) then
			venom2 = "epteth"
		end  
	end
	
	venattack = "chaos claw "..snd.target.." "..venom2
	
	if snd.checkAff("left_leg_crippled") and not snd.checkAff("left_leg_damged") then
		limb = "left leg"
	elseif snd.checkAff("right_leg_crippled") and not snd.checkAff("right_leg_damged") then
		limb = "right leg"
	elseif snd.checkAff("left_arm_crippled") and not snd.checkAff("left_arm_damged") then
		limb = "left arm"
	elseif snd.checkAff("right_arm_crippled") and not snd.checkAff("right_arm_damged") then
		limb = "right arm"
	else
		limb = "head" 
	end
      
  if snd.used.shield then
		if not snd.hamartia_used then
			string = "chaos shock  "..snd.target.." shield"
      call = ""
		else
			string = "touch hammer "..snd.target
      call = ""
		end
  
  elseif snd.checkAff("barrier") or snd.checkAff("dome") then
    string = "touch hourglass "..snd.target
    call = ""
  elseif not snd.huntresses_used then
		string = "chaos summon "..snd.target
      call = ""
		snd.huntresses_used = true
		tempTimer(90, [[snd.huntresses_used = false]])
  elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
		string = "astral ambrosia"
    call = ""
  else
    if snd.no_parry() and venom2 ~= "none" and venom1 ~= "none" then
      venattack = "chaos claw "..snd.target.." "..limb.." "..venom2    
      string = shieldkill..snd.sep..venattack..snd.sep
    elseif snd.no_parry() and venom2 ~= "none" and venom1 == "none" then    
      string = venattack..snd.sep
    elseif venom2 ~= "none" and venom1 ~= "none" then
      venattack = "chaos claw "..snd.target.." "..limb.." "..venom2      
      string = shieldkill..snd.sep..venattack..snd.sep
    elseif venom2 ~= "none" then
      string = venattack..snd.sep
    elseif venom1 ~= "none" and venom2 == "none" then
      string = "target nothing"..snd.sep..shieldkill..snd.sep
		else
			if snd.glory &gt;= 3 then
				string = "chaos erupt "..snd.target
        call = ""
			elseif not snd.checkAff("recklessness") and snd.doubleattack then
				string = "chaos fever "..snd.target
        call = ""
			else
				string = "astral evert "..snd.target
        call = ""
			end
		end	 
  end	
      
	cecho("\n".."Motes: "..snd.glory.." Limb: "..limb .." Venom: "..venom1..", "..venom2)
		
		if venom2 ~= "none" then
			call = "wt Afflicting "..snd.target..": "..venom2
		end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end

		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^aff$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Mazz Damage</name>
							<script>if snd.class == "None" then
	snd.starting_attack()
	function snd.attack_function()
    if not snd.waiting.queue then
    
  local string = "" -- we'll load this with our attack string
	local call = "" -- and this with our affliction call
	local limb = "none"
    
        
  if snd.used.shield then
		if not snd.hamartia_used then
			string = "chaos shock  "..snd.target.." shield"
		else
			string = "touch hammer "..snd.target
		end
  
  elseif snd.checkAff("barrier") or snd.checkAff("dome") then
    string = "touch hourglass "..snd.target
    call = ""
  elseif not snd.huntresses_used then
		string = "chaos summon "..snd.target
		snd.huntresses_used = true
		tempTimer(90, [[snd.huntresses_used = false]])
  elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
		string = "astral ambrosia"
  elseif snd.glory &gt;= 3 then
		string = "chaos erupt "..snd.target
	elseif not snd.checkAff("recklessness") and snd.doubleattack then
		string = "chaos fever "..snd.target
  else
		string = "astral evert "..snd.target
  end
      
	cecho("\n".."Motes: "..snd.glory)

		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^dmg$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Mazz Lock Mode</name>
							<script>if snd.class == "None" then
	snd.starting_attack()
	function snd.attack_function()
    if not snd.waiting.queue then
    
  local string = "" -- we'll load this with our attack string
	local call = "" -- and this with our affliction call
	local venom1 = "none"
  local venom2 = "none"
	local shieldkill = "none"
	local venattack = "none"
	local limb = "none"
    
    if not snd.used.shield and not snd.hamartia_used then
		if snd.doubleattack then
			if snd.storedascendvenom ~= "kalmia" and not snd.checkAff("asthma") then
				venom1 = "asthma" 
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif not snd.checkAff("stupidity") and snd.storedascendvenom ~= "aconite" then
				venom1 = "stupidity"  
			elseif snd.storedascendvenom == "kalmia" and not snd.checkAff("anorexia") then
				venom1 = "anorexia"    
			elseif snd.storedascendvenom == "gecko" and not snd.checkAff("anorexia") then
				venom1 = "anorexia"   
			elseif not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("asthma") and not snd.checkAff("slickness") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma" 
			elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") and snd.storedascendvenom ~= "slike" then
				venom1 = "anorexia"
			elseif not snd.checkAff("asthma") and snd.checkAff("slickness") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("anorexia") and not snd.checkAff("asthma") and snd.storedascendvenom ~= "kalmia" then
				venom1 = "asthma"
			elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") and snd.storedascendvenom ~= "slike" then
				venom1 = "anorexia"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("stupidity") and snd.storedascendvenom ~= "aconite" then
				venom1 = "stupidity"   
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
			end      
		else
			if not snd.checkAff("asthma") then
				venom1 = "asthma"  
			elseif not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif not snd.checkAff("stupidity") then
				venom1 = "stupidity"     
			elseif not snd.checkAff("asthma") and not snd.checkAff("anorexia") and not snd.checkAff("slickness") then
				venom1 = "asthma"
			elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif not snd.checkAff("asthma") and snd.checkAff("slickness") then
				venom1 = "asthma"
			elseif snd.checkAff("anorexia") and not snd.checkAff("asthma") then
				venom1 = "asthma"
			elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") then
				venom1 = "anorexia"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("impatience") then
				venom1 = "impatience"
			elseif snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and not snd.checkAff("stupidity") then
				venom1 = "stupidity" 
			end
		end  
    end
	
	shieldkill = "chaos shock  "..snd.target.." "..venom1
	
    if snd.doubleattack then
		if not snd.checkAff("clumsiness") and snd.storedascendvenom ~= "xentio" then
			venom2 = "xentio"
		elseif not (snd.checkAff("paralysis") or snd.checkAff("paresis")) and snd.storedascendvenom ~= "curare" then
			venom2 = "curare"
		elseif snd.storedascendvenom == "kalmia" and not snd.checkAff("slickness") and venom1 ~= "asthma" then
			venom2 = "gecko"    
		elseif venom1 ~= "anorexia" and snd.storedascendvenom == "kalmia" and snd.checkAff("slickness") and not snd.checkAff("anorexia") and venom1 ~= "anorexia" then
			venom2 = "slike"
		elseif not snd.checkAff("asthma") and not snd.checkAff("anorexia") and not snd.checkAff("slickness") and venom1 ~= "asthma" and snd.storedascendvenom ~= "kalmia" then
			venom2 = "kalmia"
		elseif snd.checkAff("asthma") and not snd.checkAff("slickness") and snd.storedascendvenom ~= "gecko" then
			venom2 = "gecko"
		elseif snd.checkAff("asthma") and not snd.checkAff("anorexia") and venom1 ~= "anorexia" and (snd.storedascendvenom == "gecko" or snd.checkAff("slickness")) and snd.storedascendvenom ~= "slike" then
			venom2 = "slike"
		elseif not snd.checkAff("asthma") and venom1 ~= "asthma" and snd.storedascendvenom ~= "kalmia" then
			venom2 = "kalmia"
		elseif not snd.checkAff("slickness") and venom1 ~= "slickness" and snd.storedascendvenom ~= "gecko" then
			venom2 = "gecko"
		elseif not snd.checkAff("clumsiness") and snd.storedascendvenom ~= "xentio" then
			venom2 = "xentio"
		elseif not snd.checkAff("stupidity") and snd.storedascendvenom ~= "aconite" and venom1 ~= "stupidity" then
			venom2 = "aconite"
		elseif not (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			venom2 = "epseth"
		elseif not (snd.checkAff("right_arm_crippled") or snd.checkAff("left_arm_crippled")) then
			venom2 = "epteth"
		end
	else
		if not snd.checkAff("clumsiness") then
			venom2 = "xentio"  
		elseif not (snd.checkAff("paralysis") or snd.checkAff("paresis")) then
			venom2 = "curare"
		elseif not snd.checksomeAffs({"asthma", "anorexia", "slickness"}, 3) and venom1 ~= "asthma" then
			venom2 = "kalmia"
		elseif snd.checkAff("asthma") and not snd.checkAff("slickness") then
			venom2 = "gecko"
		elseif snd.checkAff("asthma") and snd.checkAff("slickness") and not snd.checkAff("anorexia") and venom1 ~= "anorexia" then
			venom2 = "slike"
		elseif venom1 == "asthma" and snd.checkAff("slickness") and not snd.checkAff("anorexia") then
			venom2 = "slike"      
		elseif not snd.checkAff("asthma") and venom1 ~= "asthma" then
			venom2 = "kalmia"
		elseif not snd.checkAff("slickness") then
			venom2 = "gecko"
		elseif not snd.checkAff("stupidity") and venom1 ~= "stupidity" then
			venom2 = "aconite"
		elseif not (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			venom2 = "epseth"
		elseif not (snd.checkAff("right_arm_crippled") or snd.checkAff("left_arm_crippled")) then
			venom2 = "epteth"
		end  
	end
	
	venattack = "chaos claw "..snd.target.." "..venom2
	
	if snd.checkAff("left_leg_crippled") and not snd.checkAff("left_leg_damged") then
		limb = "left leg"
	elseif snd.checkAff("right_leg_crippled") and not snd.checkAff("right_leg_damged") then
		limb = "right leg"
	elseif snd.checkAff("left_arm_crippled") and not snd.checkAff("left_arm_damged") then
		limb = "left arm"
	elseif snd.checkAff("right_arm_crippled") and not snd.checkAff("right_arm_damged") then
		limb = "right arm"
	else
		limb = "head" 
	end
      
	if snd.used.shield then
		if not snd.hamartia_used then
			string = "chaos shock  "..snd.target.." shield"
      call = ""
		else
			string = "touch hammer "..snd.target
      call = ""
		end	
  elseif snd.checkAff("barrier") or snd.checkAff("dome") then
    string = "touch hourglass "..snd.target
    call = ""
  elseif not snd.huntresses_used then
		string = "chaos summon "..snd.target
    call = ""
		snd.huntresses_used = true
		tempTimer(90, [[snd.huntresses_used = false]])
	elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
		string = "astral ambrosia"
    call = ""
	else
    if snd.no_parry() and venom2 ~= "none" and venom1 ~= "none" then
      venattack = "chaos claw "..snd.target.." "..limb.." "..venom2    
      string = shieldkill..snd.sep..venattack..snd.sep
    elseif snd.no_parry() and venom2 ~= "none" and venom1 == "none" then    
      string = venattack..snd.sep
    elseif venom2 ~= "none" and venom1 ~= "none" then
      venattack = "chaos claw "..snd.target.." "..limb.." "..venom2      
      string = shieldkill..snd.sep..venattack..snd.sep
    elseif venom2 ~= "none" then
      string = venattack..snd.sep
    elseif venom1 ~= "none" and venom2 == "none" then
      string = "target nothing"..snd.sep..shieldkill..snd.sep
		else
			if snd.glory &gt;= 3 then
				string = "chaos erupt "..snd.target
        call = ""
			elseif not snd.checkAff("recklessness") and snd.doubleattack then
				string = "chaos fever "..snd.target
        call = ""
			else
				string = "astral evert "..snd.target
        call = ""
			end
		end		
    end
      
	cecho("\n".."Motes: "..snd.glory.." Limb: "..limb .." Venom: "..venom1..", "..venom2)
		
		if venom2 ~= "none" then
			call = "wt Afflicting "..snd.target..": "..venom2
		end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end

		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^aff2$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Blender</name>
							<script>if snd.class == "None" then
  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
    
    local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		     
      if snd.used.shield then
      	if not snd.hamartia_used then
          string = "chaos shock  "..snd.target.." shield"
        else
          string = "touch hammer "..snd.target
        end
      
      elseif snd.checkAff("barrier") or snd.checkAff("dome") then
        string = "touch hourglass "..snd.target
      elseif (hp &lt;= 75 or snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon")) and not snd.self_prone() then
        string = "astral ambrosia"
      else
        string = "chaos maelstrom havoc"
      end
      
      cecho("\n".."Motes: "..snd.glory)

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^blend$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Neutral</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Monk</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>afflictions</name>
								<script>if snd.class == "Monk" then
  snd.starting_attack()

  snd.giving = {"paresis", "stupidity", "anorexia", "recklessness", "dizziness", "confusion", "epilepsy", "hallucinations"}
  mymental_aff_count = 0
  for aff in pairs(snd.mental_affs) do
    if table.contains(snd.have_aff, snd.mental_affs[aff]) then
      mymental_aff_count = mymental_aff_count + 1
    end
  end
  local kai = tonumber(gmcp.Char.Vitals.kai) 
    
  function snd.attack_function()
    local mental_aff_count = snd.aff_count_mental()

    if not snd.waiting.queue then
      if snd.used.shield then
        string = "sck "..snd.target
      elseif snd.checkAff("blackout") and not snd.checkAff("disrupted") and mental_aff_count &gt; 2 then
        string = "mind disrupt"
      elseif snd.proned and not snd.target_impaled then
        if snd.parried_limb == "left leg" then
          string = "combo "..snd.target.." wrt right leg hfp right hfp right"
        elseif snd.parried_limb == "right leg" then
          string = "combo "..snd.target.." wrt left leg hfp left hfp left"
        else
          if (snd.limb_dmg["head"] &gt;= 56) and snd.no_parry() and snd.stance == "tiger" then
            string = "combo "..snd.target.." axk ucp ucp"
          else
            string = "tgs"
          end
        end
      elseif snd.target_impaled then
        string = "combo "..snd.target.." axk ucp ucp"
      elseif snd.aff_tally() &gt; 4 and (snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon") or snd.have_aff("ablaze") or snd.have_aff("heatspear")) and snd.balance.mindpush then
        string = "mind push "..snd.target
      elseif mymental_aff_count &gt;= 2 and not snd.balance.mindcleanse then 
        string = "mind cleanse me"
      else
        one = "none"
        two = "none"
        three = "none"
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if one == "none" then
              one = snd.giving[i]
            elseif two == "none" then
              two = snd.giving[i]
            elseif three == "none" then
              three = snd.giving[i]
            end
          end
        end
        if three ~= "none" then
          string = "mind batter "..snd.target.." "..one.." "..two.." "..three
        else
          if snd.parried_limb == "head" then
            string = "combo "..snd.target.." spk hkp hkp"
          else
            string = "combo "..snd.target.." wwk ucp ucp"
          end
        end
      end
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end
end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Default Aff</name>
								<script>if snd.class == "Monk" then
snd.giving = {
"paresis",
"stupidity",
"anorexia",
"recklessness",
"dizziness",
"confusion",
"epilepsy",
"hallucinations"
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  if snd.used.shield then
   string = "combo "..snd.target.." sck ucp ucp"
    elseif snd.proned() and not snd.checkAff("writhe_impaled") then
     if snd.parried_limb == "left leg" then
      string = "combo "..snd.target.." wrt right leg hfp right hfp right"
     else
      string = "combo "..snd.target.." wrt left leg hfp left hfp left"
     end
  else
     one = "none"
     two = "none"
     three = "none"
   for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
     if one == "none" then
      one = snd.giving[i]
         elseif two == "none" then
          two = snd.giving[i]
         elseif three == "none" then
          three = snd.giving[i]
     end
    end
   end
     if three ~= "none" then
    string = "mind batter "..snd.target.." "..one.." "..two.." "..three
        if snd.toggles.affcalling and not snd.target_gone then
         string = "wt Battering "..snd.target..": "..one..", "..two..", "..three..snd.sep..string
        end
     else
    if snd.parried_limb == "head" then
     string = "combo "..snd.target.." spk hkp hkp"
        else
       string = "combo "..snd.target.." wwk ucp ucp"
        end
     end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^daff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>mouse mode</name>
								<script>if snd.class == "Monk" then
  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
      if snd.used.shield then
        string = "combo "..snd.target.." sck ucp ucp"
      elseif snd.proned() and not snd.checkAff("writhe_impaled") then
        if snd.parried_limb == "left leg" then
          string = "combo "..snd.target.." wrt right leg hfp right hfp right"
        else
          string = "combo "..snd.target.." wrt left leg hfp left hfp left"
        end
      elseif snd.parried_limb == "head" or not snd.no_parry() then
        string = "combo "..snd.target.." spk hkp hkp"
      else
        string = "combo "..snd.target.." wwk ucp ucp"
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>head</name>
								<script>if snd.class == "Monk" then
  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
      if snd.used.shield then
        string = "combo "..snd.target.." sck ucp ucp"
      elseif (snd.checkAff("left_leg_crippled") or snd.checkAff("right_leg_crippled")) then
        string = "swk "..snd.target
      elseif snd.checkAff("fallen") and not snd.checkAff("writhe_impaled") then
        string = "bbt "..snd.target
      else
        string = "combo "..snd.target.." wwk ucp ucp"
      end
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^head$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Kll Route 1</name>
								<script>if snd.class == "Monk" then
--1v1 stance is dragon. wolf if you are under clumsy or blurry vision. cobra if you're bbt'ing for the finisher. tiger is sub-optimal.
--cripple gives 4x mending cripples. Don't use it before you break their limbs - the break will already give you a free cripple on that limb. use cripple to counter pre-restore. if your opponent applies restoration, and you're like, halfway to recovering bal, cripple them. that hinders them for a good while.
--clairvoyance: anorexia, stupidity, paresis, recklessness, and whatever else. against competent opponents, you'll never get past anorexia, and it'll only force them to use epidermal once every 2 rounds or so, but that's all it's good for. against a target with sub-optimal prios, you can cheese kill them outright because they don't cure anorexia and just fall over to damage.
--wrench: fallen does not prevent parry. combine your wrenches with normal punches to continue building trauma. generally speaking, legs are good to build trauma on while they are fallen to keep them fallen. if your opponent knows this, they might parry their legs, so hit other limbs accordingly. wrench can also be parried.
--blocks: just go with legblock by default. armblock is good for when your opponent is a limb class, because legblocks are disabled once you have any one crippled leg. armblocks are also good if you want to try to break arms heavily to hinder or thunderkick.
--strike is great, but only use it after a torso break at the very least. Use it specifically after they apply to torso - that neuters that specific resto apply and saves the trauma to other limbs. if torso is damaged enough, it can break the other limbs.

  snd.starting_attack()
  function snd.attack_function()

    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    local kai = tonumber(gmcp.Char.Vitals.kai) 
    local string = "" -- this will populate with our attack
    local call = "" -- this will be for affliction calling
    wp = 100*(gmcp.Char.Vitals.wp/gmcp.Char.Vitals.maxwp)

    if not snd.waiting.queue then

      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      snd.giving = {"anorexia", "stupidity", "epilepsy", "amnesia", "deadening", "recklessness"}
      
      if (snd.limb_dmg["head"] or snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt; 33.33 and not snd.checkAff("stupidity") then 
        snd.mindAffliction = "stupidity"
	    elseif not snd.checkAff("confusion") and snd.checkAff("blackout") then 
        snd.mindAffliction = "confuse"
      elseif not snd.checkAff("paresis") or snd.checkAff("paralysis") then
        snd.mindAffliction = "paralyse"
      elseif not snd.checkAff("pacifism") then
        snd.mindAffliction = "pacify"
	    else
        snd.mindAffliction = "none"
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.mindAffliction == "none" then
              snd.mindAffliction = snd.giving[i]
            end
          end
        end    
      end

      if snd.used.shield then
	       tekuraKick = "sck"
      elseif (snd.limb_dmg["head"] &gt;= 66.66 or snd.checkAff("head_mangled")) and snd.checkAff("fallen") and snd.resto_limb ~= "head" then
		     tekuraKick = "axk"
	    elseif snd.stance ~= "bear" and not snd.can_arms() and snd.not_aff("fallen") then
		     tekuraKick = "brs"
	    elseif snd.stance ~= "dragon" and snd.checksomeAffs({"left_arm_broken", "right_arm_broken"},2) then
		     tekuraKick = "drs"
	    elseif snd.stance ~= "tiger" then
		     tekuraKick = "tgs"
	    elseif not snd.checkAff("fallen") and ((snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt;= 33.33 or snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},1)) then
		     tekuraKick = "swk"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left leg"] &lt; 33.33 or not snd.checkAff("left_leg_broken") or not snd.checkAff("left_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "left leg" then
		     tekuraKick = "wrt left leg"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right leg"] &lt; 33.33 or not snd.checkAff("right_leg_broken") or not snd.checkAff("right_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "right leg" then
		     tekuraKick = "wrt right leg"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left arm"] &lt; 33.33 or not snd.checkAff("left_arm_broken") or not snd.checkAff("left_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "left arm" then
		     tekuraKick = "wrt left arm"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right arm"] &lt; 33.33 or not snd.checkAff("right_arm_broken") or not snd.checkAff("right_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "right arm" then
		     tekuraKick = "wrt right arm"
	    elseif snd.resto_limb ~= "head" and snd.resto_limb ~= "none" and snd.parried_limb ~= "head" and not snd.no_parry() then
      	 tekuraKick = "wwk"
	    elseif snd.limb_dmg["left leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" then
		     tekuraKick = "snk left"
	    elseif snd.limb_dmg["right arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "right arm" then
		     tekuraKick = "mnk right"			
	    elseif snd.limb_dmg["left arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "left arm" then
		     tekuraKick = "mnk left"
	    elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" then
		     tekuraKick = "snk right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     tekuraKick = "snk left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "left arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     tekuraKick = "mnk right"		
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "right arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     tekuraKick = "mnk left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     tekuraKick = "snk right"
	    else 
		     tekuraKick = "wwk"
      end

      if snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     firstPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     firstPunch = "hfp right"
	    elseif snd.mindAffliction == "stupidity" and not snd.checkAff("blurry_vision") then
		     firstPunch = "pmp"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and not snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 and tekuraKick ~= "mnk left" then
		     firstPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and not snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 and tekuraKick ~= "snk left" then
		     firstPunch = "hfp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and not snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 and tekuraKick ~= "snk right" then
		     firstPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and not snd.checkAff("right_arm_broken") and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 and tekuraKick ~= "mnk right" then
		     firstPunch = "spp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and not snd.checkAff("head_broken") and snd.resto_limb ~= "head" then
		     firstPunch = "ucp"
	    else
		     firstPunch = "hkp"
      end

      if snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     secondPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.limb_dmg["right arm"] &lt; 33.33 and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     secondPunch = "spp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.limb_dmg["left arm"] &lt; 33.33 and snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     secondPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     secondPunch = "hfp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and snd.resto_limb ~= "head" then
		     secondPunch = "ucp"
	    else
		     secondPunch = "hkp"
      end      
      
      if snd.theytumbling then
           string = "slt "..snd.target
      elseif snd.used.shield then
		       string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		  elseif not snd.mindlocked and not snd.locking then
           string = "mind lock "..snd.target
		  elseif (snd.aff_tally() &gt; 4 or (snd.have_aff("paresis") and snd.have_aff("asthma") and snd.have_aff("slickness")) or snd.have_aff("aeon") or (snd.have_aff("ablaze") and snd.have_aff("heatspear"))) and wp &gt; 50 and snd.balance.mindpush then
           string = "mind push "..snd.target
      elseif snd.checkAff("fallen") and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},1) then 
         string = "bbt "..snd.target
      elseif snd.parried_limb ~= "torso" and snd.limb_dmg["torso"] &gt; 19.99 and snd.balance.kaistrike then
         string = "kai strike "..snd.target
      elseif (snd.limb_dmg["head"] &gt;= 56 or snd.checkAff("head_mangled")) and snd.checkAff("fallen")  and snd.no_parry() then
    	   string = "combo "..snd.target.." axk ucp ucp"
      elseif kai &gt;= 40 and snd.resto_limb ~= "none" and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},2) then
			    string = "kai cripple "..snd.target
      --elseif snd.checkAff("blackout") and not snd.checkAff("disrupted") then
			 --  string = "mind disrupt "..snd.target
		  elseif not snd.checkAff("fallen") then
	       if snd.limb_dmg["left leg"] &gt;= 33.33 and snd.limb_dmg["right leg"] &gt;= 33.33 and snd.limb_dmg["left arm"] &gt;= 33.33 and snd.limb_dmg["right arm"] &gt;= 33.33 and snd.limb_dmg["head"] &lt; 66.66 then 
			     string = "combo "..snd.target.." wrt left leg ucp ucp "..snd.sep.."mind "..snd.mindAffliction.." "..snd.target
		     --elseif ((snd.limb_dmg["left arm"] &gt;= 26 and snd.limb_dmg["left arm"] &lt;= 33.33 and snd.resto_limb ~= "left arm") or (snd.limb_dmg["right arm"] &gt;= 26 and snd.limb_dmg["right arm"] &lt;= 33.33 and snd.resto_limb ~= "right arm") or (snd.limb_dmg["left leg"] &gt;= 26 and snd.limb_dmg["left leg"] &lt;= 33.33 and snd.resto_limb ~= "left leg") or (snd.limb_dmg["right leg"] &gt;= 26 and snd.limb_dmg["right leg"] &lt;= 33.33 and snd.resto_limb ~= "right leg")) and snd.balance.blackout and snd.mindlocked then
			    -- string = "mind blackout"
		     else
			     string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		     end
       elseif snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},2) and snd.checkAff("fallen") then 
			   --if snd.balance.blackout and snd.mindlocked then
				    --string = "mind blackout"
			   --else
				    string = "mind batter "..snd.target.." epilepsy dizziness stupidity"
			   --end
       else
         string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		   end
    
		   if snd.toggles.affcalling and not snd.target_gone then
			   string = call..snd.sep..string
		   end

       if string ~= snd.last_attack and not snd.waiting.queue then
         snd.last_attack = string
         snd.attack(snd.last_attack)
         snd.waiting.queue = true
         tempTimer(snd.delay(), [[snd.waiting.queue = false]])
       end
    end
  end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Monk Sunder Limbs</name>
								<script>if snd.class == "Monk" then

  snd.starting_attack()
  
  function snd.attack_function()
    if not snd.waiting.queue then
      
      local string = "" -- this will populate with our attack
      local call = "" -- call your aff you're pushing
      local kai = tonumber(gmcp.Char.Vitals.kai) 
      
      snd.giving = {"anorexia", "stupidity", "paresis", "recklessness", "confusion", "epilepsy"}      
      
      snd.mindAffliction = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) then
          if snd.mindAffliction == "none" then
            snd.mindAffliction = snd.giving[i]
            if snd.mindAffliction == "confusion" then
              snd.mindAffliction = "confuse"
            elseif snd.mindAffliction == "paresis" then
              snd.mindAffliction = "paralyse"
            end
          end
        end
      end
      
      if snd.used.shield then
        tekuraKick = "sck"
      elseif snd.stance ~= "bear" and not snd.can_arms() and snd.not_aff("fallen") then
		     tekuraKick = "brs"
	    elseif snd.stance ~= "tiger" then
		     tekuraKick = "tgs"
	    elseif snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"},1) and not snd.checkAff("fallen") then
        tekuraKick = "swk"
      elseif (snd.checkAff("writhe_impaled") or snd.checkAff("head_mangled") or snd.limb_dmg["head"] &gt;= 66.66) and snd.checkAff("fallen") then
        tekuraKick = "axk"
      elseif snd.limb_dmg["left leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" then
        tekuraKick = "snk left"
	    elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" then
        tekuraKick = "snk right"
	    else 
        tekuraKick = "wwk"
      end
      
      if snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
        firstPunch = "hfp left"
      elseif snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
        firstPunch = "hfp right"
      else
		    firstPunch = "hkp"
      end
      
      if snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
        secondPunch = "hfp left"
      elseif snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
        secondPunch = "hfp right"
      else
		    secondPunch = "hkp"
      end
      
      if snd.theytumbling then
        string = "slt "..snd.target
      elseif (snd.aff_tally() &gt; 4 or (snd.have_aff("paresis") and snd.have_aff("asthma") and snd.have_aff("slickness")) or snd.have_aff("aeon") or (snd.have_aff("ablaze") and snd.have_aff("heatspear"))) and snd.balance.mindpush then
           string = "mind push "..snd.target
      elseif kai &gt;= 40 and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},4) then
			     string = "kai cripple "..snd.target
      elseif snd.checkAff("fallen") and not snd.checkAff("writhe_impaled") and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},1) then
           string = "bbt "..snd.target
      elseif not snd.mindlocked and not snd.locking then
           string = "mind lock "..snd.target
		  else
        string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
        call = "wt Afflicting "..snd.target..": "..snd.mindAffliction..snd.sep
      end
      
      if snd.toggles.affcalling and not snd.target_gone then
        string = call..string
		  end
       
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
      
    end
    
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Kll Route 2</name>
								<script>if snd.class == "Monk" then

  snd.starting_attack()
  function snd.attack_function()

    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    local kai = tonumber(gmcp.Char.Vitals.kai) 
    local string = "" -- this will populate with our attack
    local call = "" -- this will be for affliction calling
    wp = 100*(gmcp.Char.Vitals.wp/gmcp.Char.Vitals.maxwp)

    if not snd.waiting.queue then

      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      snd.giving = {"anorexia", "stupidity", "epilepsy", "amnesia", "deadening", "recklessness"}
      
      if (snd.limb_dmg["head"] or snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt; 33.33 and not snd.checkAff("stupidity") then 
        snd.mindAffliction = "stupidity"
	    elseif not snd.checkAff("confusion") and snd.checkAff("blackout") then 
        snd.mindAffliction = "confuse"
      elseif not snd.checkAff("paresis") or snd.checkAff("paralysis") then
        snd.mindAffliction = "paralyse"
      elseif not snd.checkAff("pacifism") then
        snd.mindAffliction = "pacify"
	    else
        snd.mindAffliction = "none"
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.mindAffliction == "none" then
              snd.mindAffliction = snd.giving[i]
            end
          end
        end    
      end

      if snd.used.shield then
	       tekuraKick = "sck"
      elseif (snd.limb_dmg["head"] &gt;= 66.66 or snd.checkAff("head_mangled")) and snd.checkAff("fallen") and snd.resto_limb ~= "head" then
		     tekuraKick = "axk"
	    elseif snd.stance ~= "bear" and not snd.can_arms() and snd.not_aff("fallen") then
		     tekuraKick = "brs"
	    elseif snd.stance ~= "dragon" and snd.checksomeAffs({"left_arm_broken", "right_arm_broken"},2) then
		     tekuraKick = "drs"
	    elseif snd.stance ~= "tiger" then
		     tekuraKick = "tgs"
	    elseif not snd.checkAff("fallen") and ((snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt;= 33.33 or snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},1)) then
		     tekuraKick = "swk"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left leg"] &lt; 33.33 or not snd.checkAff("left_leg_broken") or not snd.checkAff("left_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "left leg" then
		     tekuraKick = "wrt left leg"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right leg"] &lt; 33.33 or not snd.checkAff("right_leg_broken") or not snd.checkAff("right_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "right leg" then
		     tekuraKick = "wrt right leg"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left arm"] &lt; 33.33 or not snd.checkAff("left_arm_broken") or not snd.checkAff("left_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "left arm" then
		     tekuraKick = "wrt left arm"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right arm"] &lt; 33.33 or not snd.checkAff("right_arm_broken") or not snd.checkAff("right_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "right arm" then
		     tekuraKick = "wrt right arm"
	    elseif snd.resto_limb ~= "head" and snd.resto_limb ~= "none" and snd.parried_limb ~= "head" and not snd.no_parry() then
      	 tekuraKick = "wwk"
	    elseif snd.limb_dmg["left leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" then
		     tekuraKick = "snk left"
	    elseif snd.limb_dmg["right arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "right arm" then
		     tekuraKick = "mnk right"			
	    elseif snd.limb_dmg["left arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "left arm" then
		     tekuraKick = "mnk left"
	    elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" then
		     tekuraKick = "snk right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     tekuraKick = "snk left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "left arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     tekuraKick = "mnk right"		
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "right arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     tekuraKick = "mnk left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     tekuraKick = "snk right"
	    else 
		     tekuraKick = "wwk"
      end

      if snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     firstPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     firstPunch = "hfp right"
	    elseif snd.mindAffliction == "stupidity" and not snd.checkAff("blurry_vision") then
		     firstPunch = "pmp"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and not snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 and tekuraKick ~= "mnk left" then
		     firstPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and not snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 and tekuraKick ~= "snk left" then
		     firstPunch = "hfp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and not snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 and tekuraKick ~= "snk right" then
		     firstPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and not snd.checkAff("right_arm_broken") and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 and tekuraKick ~= "mnk right" then
		     firstPunch = "spp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and not snd.checkAff("head_broken") and snd.resto_limb ~= "head" then
		     firstPunch = "ucp"
	    else
		     firstPunch = "hkp"
      end

      if snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     secondPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.limb_dmg["right arm"] &lt; 33.33 and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     secondPunch = "spp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.limb_dmg["left arm"] &lt; 33.33 and snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     secondPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     secondPunch = "hfp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and snd.resto_limb ~= "head" then
		     secondPunch = "ucp"
	    else
		     secondPunch = "hkp"
      end      
      
      if snd.theytumbling then
           string = "slt "..snd.target
      elseif snd.used.shield then
		       string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		  elseif not snd.mindlocked and not snd.locking then
           string = "mind lock "..snd.target
		  elseif snd.aff_tally() &gt; 4 and snd.not_aff("paresis") and (snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon") or snd.have_aff("ablaze") or snd.have_aff("heatspear")) and snd.balance.mindpush then
           string = "mind push "..snd.target
      elseif snd.checkAff("fallen") and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},1) then 
         string = "bbt "..snd.target
      elseif snd.parried_limb ~= "torso" and snd.limb_dmg["torso"] &gt; 19.99 and snd.balance.kaistrike then
         string = "kai strike "..snd.target
      elseif not snd.checkAff("fallen") then
	       if snd.limb_dmg["left leg"] &gt;= 33.33 and snd.limb_dmg["right leg"] &gt;= 33.33 and snd.limb_dmg["left arm"] &gt;= 33.33 and snd.limb_dmg["right arm"] &gt;= 33.33 and snd.limb_dmg["head"] &lt; 66.66 then 
			     string = "combo "..snd.target.." wrt left leg ucp ucp "..snd.sep.."mind "..snd.mindAffliction.." "..snd.target
		     elseif snd.checkAff("blackout") and kai &gt;= 40 then
			    string = "kai cripple "..snd.target
		     elseif ((snd.limb_dmg["left arm"] &gt;= 26 and snd.limb_dmg["left arm"] &lt;= 33.33 and snd.resto_limb ~= "left arm") or (snd.limb_dmg["right arm"] &gt;= 26 and snd.limb_dmg["right arm"] &lt;= 33.33 and snd.resto_limb ~= "right arm") or (snd.limb_dmg["left leg"] &gt;= 26 and snd.limb_dmg["left leg"] &lt;= 33.33 and snd.resto_limb ~= "left leg") or (snd.limb_dmg["right leg"] &gt;= 26 and snd.limb_dmg["right leg"] &lt;= 33.33 and snd.resto_limb ~= "right leg")) and snd.balance.blackout and snd.mindlocked then
			     string = "mind blackout"
		     elseif kai &gt;= 40 and snd.resto_limb~="none" and snd.checksomeAffs({"left_leg_broken", "right_leg_broken", "right_arm_broken", "left_arm_broken"},2) then
			     string = "kai cripple "..snd.target
		     else
			     string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		     end
       elseif snd.checkAff("blackout") and kai &gt;= 40 then
			   string = "kai cripple "..snd.target
		   elseif snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},2) and snd.checkAff("fallen") then 
			   if snd.balance.blackout and snd.mindlocked then
				    string = "mind blackout"
			   else
				    string = "mind batter "..snd.target.." epilepsy dizziness stupidity"
			   end
       else
         string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		   end
    
		   if snd.toggles.affcalling and not snd.target_gone then
			   string = call..snd.sep..string
		   end

       if string ~= snd.last_attack and not snd.waiting.queue then
         snd.last_attack = string
         snd.attack(snd.last_attack)
         snd.waiting.queue = true
         tempTimer(snd.delay(), [[snd.waiting.queue = false]])
       end
    end
  end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Arms</name>
								<script>if snd.class == "Monk" then

  snd.starting_attack()
  function snd.attack_function()

    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    local kai = tonumber(gmcp.Char.Vitals.kai) 
    local string = "" -- this will populate with our attack
    local call = "" -- this will be for affliction calling
    wp = 100*(gmcp.Char.Vitals.wp/gmcp.Char.Vitals.maxwp)

    if not snd.waiting.queue then

      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      snd.giving = {"anorexia", "stupidity", "epilepsy", "amnesia", "deadening", "recklessness"}
      
      if (snd.limb_dmg["head"] or snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt; 33.33 and not snd.checkAff("stupidity") then 
        snd.mindAffliction = "stupidity"
	    elseif not snd.checkAff("confusion") and snd.checkAff("blackout") then 
        snd.mindAffliction = "confuse"
      elseif not snd.checkAff("paresis") or snd.checkAff("paralysis") then
        snd.mindAffliction = "paralyse"
      elseif not snd.checkAff("pacifism") then
        snd.mindAffliction = "pacify"
	    else
        snd.mindAffliction = "none"
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.mindAffliction == "none" then
              snd.mindAffliction = snd.giving[i]
            end
          end
        end    
      end

      if snd.used.shield then
	       tekuraKick = "sck"
      elseif (snd.limb_dmg["head"] &gt;= 66.66 or snd.checkAff("head_mangled")) and snd.checkAff("fallen") and snd.resto_limb ~= "head" then
		     tekuraKick = "axk"
	    elseif snd.stance ~= "dragon" and snd.checksomeAffs({"left_arm_broken", "right_arm_broken"},2) then
		     tekuraKick = "drs"
	    elseif snd.stance ~= "bear" and not snd.can_arms() and snd.not_aff("fallen") then
		     tekuraKick = "brs"
	    elseif snd.stance ~= "tiger" then
		     tekuraKick = "tgs"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "left arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     tekuraKick = "mnk right"		
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "right arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     tekuraKick = "mnk left"
	    elseif snd.limb_dmg["right arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.resto_limb ~= "right arm" then
		     tekuraKick = "mnk right"			
	    elseif snd.limb_dmg["left arm"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.resto_limb ~= "left arm" then
		     tekuraKick = "mnk left"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left arm"] &lt; 33.33 or not snd.checkAff("left_arm_broken") or not snd.checkAff("left_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "left arm" then
		     tekuraKick = "wrt left arm"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right arm"] &lt; 33.33 or not snd.checkAff("right_arm_broken") or not snd.checkAff("right_arm_crippled")) and snd.no_parry() and snd.resto_limb ~= "right arm" then
		     tekuraKick = "wrt right arm"
	    elseif not snd.checkAff("fallen") and ((snd.limb_dmg["left leg"] or snd.limb_dmg["right leg"]) &gt;= 33.33 or snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},1)) then
		     tekuraKick = "swk"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["left leg"] &lt; 33.33 or not snd.checkAff("left_leg_broken") or not snd.checkAff("left_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "left leg" then
		     tekuraKick = "wrt left leg"
	    elseif snd.checkAff("fallen") and (snd.limb_dmg["right leg"] &lt; 33.33 or not snd.checkAff("right_leg_broken") or not snd.checkAff("right_leg_crippled")) and snd.no_parry() and snd.resto_limb ~= "right leg" then
		     tekuraKick = "wrt right leg"
	    elseif snd.resto_limb ~= "head" and snd.resto_limb ~= "none" and snd.parried_limb ~= "head" and not snd.no_parry() then
      	 tekuraKick = "wwk"
	    elseif snd.limb_dmg["left leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" then
		     tekuraKick = "snk left"
	    elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" then
		     tekuraKick = "snk right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     tekuraKick = "snk left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     tekuraKick = "snk right"
	    else 
		     tekuraKick = "wwk"
      end

      if (snd.no_parry() or snd.parried_limb ~= "left arm") and not snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 and tekuraKick ~= "mnk left" then
		     firstPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right arm") and not snd.checkAff("right_arm_broken") and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 and tekuraKick ~= "mnk right" then
		     firstPunch = "spp right"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     firstPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     firstPunch = "hfp right"
	    elseif snd.mindAffliction == "stupidity" and not snd.checkAff("blurry_vision") then
		     firstPunch = "pmp"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and not snd.checkAff("head_broken") and snd.resto_limb ~= "head" then
		     firstPunch = "ucp"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and not snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 and tekuraKick ~= "snk left" then
		     firstPunch = "hfp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and not snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 and tekuraKick ~= "snk right" then
		     firstPunch = "hfp right"
	    else
		     firstPunch = "hkp"
      end

      if (snd.no_parry() or snd.parried_limb ~= "right arm") and snd.limb_dmg["right arm"] &lt; 33.33 and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &lt; 66.66 then
		     secondPunch = "spp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left arm") and snd.limb_dmg["left arm"] &lt; 33.33 and snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &lt; 66.66 then
		     secondPunch = "spp left"
	    elseif (snd.no_parry() or snd.parried_limb ~= "head") and snd.resto_limb ~= "head" then
		     secondPunch = "ucp"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" then
		     secondPunch = "hfp left"
	    elseif snd.checkAff("fallen") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "right leg") and snd.limb_dmg["right leg"] &lt; 33.33 and snd.resto_limb ~= "right leg" and snd.limb_dmg["right leg"] &lt; 66.66 then
		     secondPunch = "hfp right"
	    elseif (snd.no_parry() or snd.parried_limb ~= "left leg") and snd.limb_dmg["left leg"] &lt; 33.33 and snd.resto_limb ~= "left leg" and snd.limb_dmg["left leg"] &lt; 66.66 then
		     secondPunch = "hfp left"
	    else
		     secondPunch = "hkp"
      end      
      
      if snd.theytumbling then
           string = "slt "..snd.target
      elseif snd.used.shield then
		       string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		  elseif not snd.mindlocked and not snd.locking then
           string = "mind lock "..snd.target
		  elseif snd.aff_tally() &gt; 4 and wp &gt; 50 and (snd.have_aff("paresis") or snd.have_aff("asthma") or snd.have_aff("slickness") or snd.have_aff("aeon") or snd.have_aff("ablaze") or snd.have_aff("heatspear")) and snd.balance.mindpush then
           string = "mind push "..snd.target
      elseif snd.checkAff("fallen") and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled", "right_arm_crippled", "left_arm_crippled"},1) then 
         string = "bbt "..snd.target
      elseif snd.parried_limb ~= "torso" and snd.limb_dmg["torso"] &gt; 19.99 and snd.balance.kaistrike then
         string = "kai strike "..snd.target
      elseif (snd.limb_dmg["head"] &gt;= 56 or snd.checkAff("head_mangled")) and snd.checkAff("fallen")  and snd.no_parry() then
    	   string = "combo "..snd.target.." axk ucp ucp"
      elseif snd.checkAff("blackout") and kai &gt;= 40 then
			   string = "kai cripple "..snd.target
		  elseif snd.balance.blackout and snd.mindlocked then
			   string = "mind blackout"
		  elseif snd.checksomeAffs({"left_leg_broken", "right_leg_broken"},2) and snd.checkAff("fallen") then 
			   if snd.balance.blackout and snd.mindlocked then
				    string = "mind blackout"
			   else
				    string = "mind batter "..snd.target.." epilepsy dizziness stupidity"
			   end
       else
         string = "combo "..snd.target.." "..tekuraKick.." "..firstPunch.." "..secondPunch..snd.sep.." mind "..snd.mindAffliction.." "..snd.target
		   end
    
		   if snd.toggles.affcalling and not snd.target_gone then
			   string = call..snd.sep..string
		   end

       if string ~= snd.last_attack and not snd.waiting.queue then
         snd.last_attack = string
         snd.attack(snd.last_attack)
         snd.waiting.queue = true
         tempTimer(snd.delay(), [[snd.waiting.queue = false]])
       end
    end
  end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^arms$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Infiltrator</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Wielding</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>wield bow</name>
								<script>if hasSkill("Quickwield") then
  snd.send("secure left"..snd.sep.."secure right"..snd.sep.."wear buckler"..snd.sep.."bowstance")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wbow$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Assassination</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>yank</name>
								<script>if snd.class == "Infiltrator" then
  if matches[2] == "" then
    snd.send("qeb quickwield left whip"..snd.sep.."yank "..snd.target)
  else
    snd.send("qeb quickwield left whip"..snd.sep.."yank "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^yank(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>backstab</name>
								<script>if snd.class == "Infiltrator" then
  if matches[2] == "" then
    snd.send("qeb quickwield right dirk"..snd.sep.."backstab "..snd.target.." selarnia")
  else
    snd.send("qeb quickwield right dirk"..snd.sep.."backstab "..matches[2].." selarnia")
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bs(.*)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Subterfuge</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>darkflood</name>
								<script>if snd.class == "Infiltrator" then
  snd.send("qeb conjure darkflood")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^df$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>abduct</name>
								<script>if snd.class == "Infiltrator" then
  if matches[2] == nil then
    snd.send("qeb abduct "..snd.target)
  else
    snd.send("qeb abduct "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^at(?: (.*))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Vortex</name>
								<script>if snd.class == "Infiltrator" then
  if matches[2] == nil then
    snd.send("qeb worm vortex "..snd.target)
  else
    snd.send("qeb worm vortex "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^vt(?: (.*))?$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Hypnosis</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>hypnotise</name>
								<script>if snd.class == "Infiltrator" then
  snd.send("qeb hypnotise "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hyp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>suggest</name>
								<script>if snd.class == "Infiltrator" then
local shorthand = {
["clu"] = "clumsiness",
["imp"] = "impatience"
}
if shorthand[matches[2]] then
 snd.send("qeb suggest "..snd.target.." "..shorthand[matches[2]])
else
 cecho("&lt;red&gt;No such affliction!")
end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sg (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>shadow mark</name>
								<script>if snd.class == "Infiltrator" then
  snd.send("qeb shadow mark numbness "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sm$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>hypnotise stack</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = {
 "hypochondria",
 "clumsiness",
 "impatience",
 "lethargy",
 "hypochondria",
 "impatience",
 "clumsiness",
 "lethargy",
 "impatience",
 "loneliness",
 "lethargy",
 "claustrophobia",
 "impatience",
 "agoraphobia"
}
snd.hyp = 0
snd.last_hypno = 0
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.hypno == "open" or snd.hypno == "none" then
   if snd.hypno == "none" then
    string = "hypnotise "..snd.target..snd.sep
   end
   if #snd.hypno_stack &gt; snd.last_hypno + 1 then
    snd.hyp = snd.last_hypno+1
    string = string.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
   else
    string = "seal "..snd.target.." 3"
   end
  else
   snd.message("Good to go! KILL THEM NOW!")
  end
 end
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hypno$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>hypnotise magic stack</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = {
 "hypochondria",
 "clumsiness",
 "impatience",
 "confusion",
 "hypochondria",
 "impatience",
 "clumsiness",
 "confusion",
 "impatience",
 "loneliness",
 "confusion",
 "claustrophobia",
 "impatience",
 "agoraphobia"
}
snd.hyp = 0
snd.last_hypno = 0
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.hypno == "open" or snd.hypno == "none" then
   if snd.hypno == "none" then
    string = "hypnotise "..snd.target..snd.sep
   end
   if #snd.hypno_stack &gt; snd.last_hypno + 1 then
    snd.hyp = snd.last_hypno+1
    string = string.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
   else
    string = "seal "..snd.target.." 3"
   end
  else
   snd.message("Good to go! KILL THEM NOW!")
  end
 end
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hypm$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Remove amulet</name>
								<script>if snd.class == "Infiltrator" then
  snd.set_queue("hypnotise "..snd.target..snd.sep.."suggest "..snd.target.." action remove amulet"..snd.sep.."qeb seal "..snd.target.." 3"..snd.sept.."snap "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ra$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>mouse mode</name>
								<script>if snd.class == "Infiltrator" then
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
  
	if snd.target_locked() then
		snd.giving = {
		"left_leg_crippled",
		"right_leg_crippled",
		"hearing",
		"sensitivity",
		"voyria"
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"clumsiness",
		"asthma",
		"paresis",
		"slickness",
		"stupidity",
		"anorexia",
		"hearing",
		"sensitivity",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		--"voyria",
		}
	end
  
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
	 		string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." selarnia"
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting", "mental disruption"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield right dirk"..snd.sep.."wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>magic</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "hypochondria",
 "impatience",
 "loneliness",
 "confusion",
 "hypochondria",
 "impatience",
 "vertigo",
 "confusion",
 "impatience",
 "loneliness",
 "confusion"
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
  
	if snd.target_locked() then
		snd.giving = {
		"left_leg_crippled",
		"right_leg_crippled",
		"hearing",
		"sensitivity",
		"voyria"
		}
	elseif snd.hypno == "running" then
		snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		--"sight",
		"paresis",
		"weariness",
		"asthma",
		"shyness", -- to keep impatience stuck, this buries it
		"slickness",
		"anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		"stupidity", -- not as important, since we're running impatience
		--"vomiting",
		"allergies",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"clumsiness",
		--"dizziness",
		"voyria",
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"weariness",
		"asthma",
		"paresis",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"clumsiness",
		--"dizziness",
		--"voyria",
		}
	end
  
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
	 		string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." selarnia"
		elseif not snd.checkAff("numbed_skin") then
			-- they don't have numbness yet
			if snd.used.paste then -- but they have fangbarrier, so we can't give it
				-- we need to flay first
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else -- they don't have fangbarrier - go for it!
				string = "shadow mark numbness "..snd.target
			end
		-- they already have numbness, let's move on
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting", "mental disruption"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield right dirk"..snd.sep.."wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- now let's see if we can append some hypnosis
  	if snd.hypno == "open" or snd.hypno == "none" then
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno+1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and table.contains(snd.target_has, "numbed_skin") then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^mg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>damage</name>
								<script>if snd.class == "Infiltrator" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
	elseif not snd.used.shield and snd.balance.backstab then
	 		string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." selarnia"
	elseif snd.proned() and not snd.used.shield then
   string = "quickwield left whip"..snd.sep.."garrote "..snd.target
  else
	 if snd.used.paste then
	  string = "quickwield left whip"..snd.sep.."flay "..snd.target
	 else
    string = "bite "..snd.target.." camus"
	 end
  end
 if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
	-- we do have shadow balance
  string = string..snd.sep.."shadow sleight pall "..snd.target
 end
 
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
 
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs / Squelch</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "stuttering",
 "dementia",
 "anorexia",
}
  snd.starting_attack()
  function snd.attack_function()
	 local string = "" -- this will populate with our attack
	 local call = "" -- this will be for affliction calling
	 local touse = {} -- this will store the affs we still want to hit with
	 local tohit = {} -- this will store the effects from touse
	 local extraaff = "delphinium" -- what to use if we used everything else
	 -- and how far away we are from a lock
	 local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	 if snd.target_locked() then
		  snd.giving = {
		  "squelched",
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "hearing",
		  "sensitivity",
		  "voyria"
		  }
	 elseif snd.hypno == "running" then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		  "squelched", 
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "paresis",
		  "clumsiness",
		  "asthma",
		  "shyness", -- to keep impatience stuck, this buries it
		  "slickness",
		  "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		  "stupidity", -- not as important, since we're running impatience
		  "vomiting",
		  "allergies",
		  "sensitivity",
		  "weariness",
		  "voyria",
		  }
	 else
		  snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		  "squelched", 
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "anorexia",
		  "slickness",
		  "clumsiness",
		  "asthma",
		  "paresis",
		  "shyness", -- to bury impatience once hypno fires
		  "allergies", 
		  "stupidity",
		  "sensitivity",
		  "weariness",
		  }
	end
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then	 		
	 		string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." curare"..snd.sep
      call = "wt Afflicting "..snd.target..": curare"
		elseif snd.target_locked() then
			-- they're locked and ready to be finished off
			if snd.used.paste then				
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield right dirk"..snd.sep.."wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string..snd.sep
		end
    
		if snd.hypno == "open" or snd.hypno == "none" then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno+1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
    
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and table.contains(snd.target_has, "numbed_skin") then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>legs</name>
								<script>if snd.class == "Infiltrator" then
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")

		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		"left_leg_crippled",
		"right_leg_crippled",
		"left_arm_crippled",
		"right_arm_crippled",
		"stupidity",
		"anorexia",
		"hearing",
		"sensitivity",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"haemophilia",
		"recklessness",
		"weariness",
		"dizziness",
		"voyria",

}
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		-- let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental_disruption")) and not snd.checkAff("thin_blood") then
			if snd.used.paste then					
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." curare"..snd.sep
        call = "wt Afflicting "..snd.target..": curare"
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then				
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if #snd.giving &gt; 0 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving &lt; 2 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else -- otherwise, we don't need to flay - go full ham!
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        elseif not snd.used.paste then
          string = "bite "..snd.target.." camus"
        else
          string = "garrote "..snd.target
        end
      end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^legs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>arms</name>
								<script>if snd.class == "Infiltrator" then
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")

		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		"left_arm_crippled",
		"right_arm_crippled",
		"left_leg_crippled",
		"right_leg_crippled",
		"stupidity",
		"anorexia",
		"hearing",
		"sensitivity",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"haemophilia",
		"recklessness",
		"weariness",
		"dizziness",
		"voyria",

}
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		-- let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental_disruption")) and not snd.checkAff("thin_blood") then
			if snd.used.paste then					
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." curare"..snd.sep
        call = "wt Afflicting "..snd.target..": curare"
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then				
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if #snd.giving &gt; 0 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving &lt; 2 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else -- otherwise, we don't need to flay - go full ham!
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        elseif not snd.used.paste then
          string = "bite "..snd.target.." camus"
        else
          string = "garrote "..snd.target
        end
      end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
      
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^arms$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1 Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (My Original with Whirran venoms)</name>
								<script>if snd.class == "Infiltrator" then

snd.hypno_stack = { -- hypnosis affs, in priority order
  "hypochondria",
  "impatience",
  "loneliness",
  "hypersomnia",
  "lethargy",
  --"hypochondria",
  --"impatience",
  --"vertigo",
  --"lethargy",
  --"impatience",
 -- "loneliness",
  --"lethargy",
}

snd.starting_attack()

function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() and snd.checkAff("hypersomnia") then
		snd.giving = {
		"slickness",
    "anorexia",
    "stupidity",
    "voyria",
    "asleep",
    "weariness",
    "dizziness",
    "stupidity",
    "recklessness",
    "peace",
    "haemophilia",
    "sensitivity",
		}
    cecho("\n&lt;red&gt;Target is sleeplocked. Piling on affs.")
  elseif snd.target_locked() and not snd.checkAff("hypersomnia") then
		snd.giving = {
		"paresis",
		"clumsiness",
		"asthma",
		"slickness",
		"anorexia",
    "sensitivity",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.checkAff("hypochondria") and snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down and hypochondia is up.")
  elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "no_insomnia",
        "asleep",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock.")
	elseif snd.hypno == "running" then
    if snd.timer_check("focus", .2, "more than") or snd.checkAff("impatience") or snd.checkAff("stupidity") then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "stupidity", 
      "sensitivity",
      "haemophilia",
      "weariness",
      "dizziness",
      "voyria",
		  }
      cecho("\n&lt;red&gt;Suggesting affs and off focus bal.")
    else      
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "stupidity",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "haemophilia",
      "sensitivity",
      "weariness",
      "voyria",
		  } 
      cecho("\n&lt;red&gt;Suggesting things and afflicting stuff.")
    end
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
    "paresis",
    "clumsiness",
    "asthma",
    "vomiting",
    "slickness",
    "stupidity",
    "anorexia",
    "haemophilia",
    "sensitivity",
    "weariness",
    }
    cecho("\n&lt;red&gt;Starter table.")
	end

  for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
      if not table.contains(touse, snd.giving[i]) then
        table.insert(touse, snd.giving[i])
      end
    end
    if #missing == 2 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[missing[2]])
    elseif #missing == 1 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[snd.giving[i]])
    end          
  end
  for aff in pairs(touse) do
    table.insert(tohit, snd.effects[touse[aff]])
  end			
  if (snd.timer_check("rebounding", 2.5, "less than") and snd.timer_check("rebounding", 0.1, "more than")) or snd.used.rebounding then
    if not snd.checkAff("asthma") then
      table.insert(snd.giving, 1, "asthma") -- "rebounding_asthma"
		elseif not snd.checkAff("clumsiness") then
			table.insert(snd.giving, 1, "clumsiness") -- "rebounding_clumsiness"
		end
	end
  if not snd.checksomeAffs({"slickness", "anorexia"},1) and (not snd.timer_check("fitness", .1, "less than") and #snd.target_has &lt; 4) then -- "quicklock"
    if snd.checkAff("asthma") and snd.checkAff("clumsiness") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and (snd.checkAff("stupidity") or snd.timer_check("focus", 2.5, "more than")) then
		  table.insert(snd.giving, 1, "slickness")
			table.insert(snd.giving, 2, "anorexia")
		end
	end
     
	if not snd.waiting.queue then -- make sure not to spam
		if snd.theytumbling then
        string = "garrote "..snd.target
	  elseif snd.instakilltarget == snd.target then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with curare"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": curare"
    elseif not snd.can_arms() then -- this means we have at least one broken arm
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
      if #snd.giving &gt;= 1 then
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." "..tohit[1]..snd.sep
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      else
        string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target
      end
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..":  voyria"
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if #snd.giving &gt;= 1 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving == 1 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        else
          string = "bite "..snd.target.." camus"
        end
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	 
	
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (Whirran's Advice - Templar)</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
"lethargy",
"hypersomnia",
"impatience",
"hypochondria",
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
  
	if snd.target_locked() and snd.checkAff("hypersomnia") then
		snd.giving = {
		"slickness",
    "anorexia",
    "stupidity",
    "voyria",
    "weariness",
    "dizziness",
    "stupidity",
    "recklessness",
    "peace",
    "haemophilia",
    "sensitivity",
		}
    cecho("\n&lt;red&gt;Target is sleeplocked. Piling on affs.")
  elseif snd.target_locked() and not snd.checkAff("hypersomnia") then
		snd.giving = {
		"paresis",
		"clumsiness",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.checkAff("hypochondria") and snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down and hypochondia is up.")
  elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "no_insomnia",
        "asleep",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock.")
	elseif snd.hypno == "running" then
    if snd.timer_check("focus", .2, "more than") or snd.checkAff("impatience") or snd.checkAff("stupidity") then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "stupidity", 
      "sensitivity",
      "haemophilia",
      "weariness",
      "dizziness",
      "voyria",
		  }
      cecho("\n&lt;red&gt;Suggesting affs and off focus bal.")
    else      
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "stupidity",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "haemophilia",
      "sensitivity",
      "weariness",
      "voyria",
		  } 
      cecho("\n&lt;red&gt;Suggesting things and afflicting stuff.")
    end
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
    "paresis",
    "clumsiness",
    "asthma",
    "vomiting",
    "slickness",
    "stupidity",
    "anorexia",
    "haemophilia",
    "sensitivity",
    "weariness",
    }
    cecho("\n&lt;red&gt;Starter table.")
	end

  for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
      if not table.contains(touse, snd.giving[i]) then
        table.insert(touse, snd.giving[i])
      end
    end
    if #missing == 2 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[missing[2]])
    elseif #missing == 1 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[snd.giving[i]])
    end          
  end
  for aff in pairs(touse) do
    table.insert(tohit, snd.effects[touse[aff]])
  end
      
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			string = "bedazzle "..snd.target
		elseif (snd.target_locked() and snd.checkAff("asleep")) or (snd.target_locked() and snd.checkAff("voyria")) then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			elseif not snd.checkAff("thin_blood") then
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
      elseif snd.checkAff("thin_blood") then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."slit "..snd.target.." "..tohit[1]
        call = "wt Afflicting "..snd.target..": "..tohit[1]        
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if snd.used.rebounding or snd.used.shield then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      elseif snd.checkAff("hypersomnia") and snd.checkAff("no_insomnia") and not snd.checkAff("asleep") then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." delphinium "..tohit[1]
        call = "wt Afflicting "..snd.target..": delphinium, "..tohit[1]
      elseif snd.checkAff("hypersomnia") and not snd.checkAff("no_insomnia") and not snd.checkAff("asleep") then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." delphinium delphinium"
        call = "wt Afflicting "..snd.target..": delphinium, delphinium"
      elseif snd.checkAff("vomiting") and snd.checkAff("paresis") and not snd.checkAff("thin_blood") then
        if snd.used.paste then
				  string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
			  else
				  string = "bite "..snd.target.." scytherus"
          call = "wt Afflicting "..snd.target..":  scytherus"
			  end
      else
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
        call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
      end
		end   

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
    if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			string = string..snd.sep.."hypnotise "..snd.target
		end
	
	  if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and snd.hypno ~= "open" then
		-- we do have shadow balance and we don't need to hold it for numbness
		  if snd.hypno == "ready" then
        string = string..snd.sep.."snap "..snd.target
      elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			 -- the target's locked and affed up, let's hurry the finish along
			  string = string..snd.sep.."shadow sleight dissipate "..snd.target
		  elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			 -- they aren't under active hypnosis, and not locked - let's void!
			  string = string..snd.sep.."shadow sleight void "..snd.target
		  else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			  string = string..snd.sep.."shadow sleight dissipate "..snd.target
		  end
	  end
    
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (Whirran's Advice - Everyone Else)</name>
								<script>if snd.class == "Infiltrator" then

snd.hypno_stack = { -- hypnosis affs, in priority order
"hypersomnia",
"impatience",
"hypochondria",
"impatience",
}
snd.starting_attack()

function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
  
	if snd.target_locked() and snd.checkAff("hypersomnia") then
		snd.giving = {
		"slickness",
    "anorexia",
    "stupidity",
    "voyria",
    "weariness",
    "dizziness",
    "stupidity",
    "recklessness",
    "peace",
    "haemophilia",
    "sensitivity",
		}
    cecho("\n&lt;red&gt;Target is sleeplocked. Piling on affs.")
  elseif snd.target_locked() and not snd.checkAff("hypersomnia") then
		snd.giving = {
		"paresis",
		"clumsiness",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.checkAff("hypochondria") and snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down and hypochondia is up.")
  elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "no_insomnia",
        "asleep",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock.")
	elseif snd.hypno == "running" then
    if snd.timer_check("focus", .2, "more than") or snd.checkAff("impatience") or snd.checkAff("stupidity") then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "stupidity", 
      "sensitivity",
      "haemophilia",
      "weariness",
      "dizziness",
      "voyria",
		  }
      cecho("\n&lt;red&gt;Suggesting affs and off focus bal.")
    else      
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "stupidity",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "haemophilia",
      "sensitivity",
      "weariness",
      "voyria",
		  } 
      cecho("\n&lt;red&gt;Suggesting things and afflicting stuff.")
    end
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
    "paresis",
    "clumsiness",
    "asthma",
    "vomiting",
    "slickness",
    "stupidity",
    "anorexia",
    "haemophilia",
    "sensitivity",
    "weariness",
    }
    cecho("\n&lt;red&gt;Starter table.")
	end

  for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
      if not table.contains(touse, snd.giving[i]) then
        table.insert(touse, snd.giving[i])
      end
    end
    if #missing == 2 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[missing[2]])
    elseif #missing == 1 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[snd.giving[i]])
    end          
  end
  for aff in pairs(touse) do
    table.insert(tohit, snd.effects[touse[aff]])
  end
      
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			string = "bedazzle "..snd.target
		elseif (snd.target_locked() and snd.checkAff("asleep")) or (snd.target_locked() and snd.checkAff("voyria")) then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			elseif not snd.checkAff("thin_blood") then
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
      elseif snd.checkAff("thin_blood") then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."slit "..snd.target.." "..tohit[1]
        call = "wt Afflicting "..snd.target..": "..tohit[1]        
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if snd.used.rebounding or snd.used.shield then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      elseif snd.checkAff("hypersomnia") and snd.checkAff("no_insomnia") and not snd.checkAff("asleep") then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." delphinium "..tohit[1]
        call = "wt Afflicting "..snd.target..": delphinium, "..tohit[1]
      elseif snd.checkAff("hypersomnia") and not snd.checkAff("no_insomnia") and not snd.checkAff("asleep") then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." delphinium delphinium"
        call = "wt Afflicting "..snd.target..": delphinium, delphinium"
      elseif snd.checkAff("vomiting") and snd.checkAff("paresis") and not snd.checkAff("thin_blood") then
        if snd.used.paste then
				  string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
			  else
				  string = "bite "..snd.target.." scytherus"
          call = "wt Afflicting "..snd.target..":  scytherus"
			  end
      else
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
        call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
      end
		end   

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
    if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			string = string..snd.sep.."hypnotise "..snd.target
		end
	
	  if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and snd.hypno ~= "open" then
		-- we do have shadow balance and we don't need to hold it for numbness
		  if snd.hypno == "ready" then
        string = string..snd.sep.."snap "..snd.target
      elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			 -- the target's locked and affed up, let's hurry the finish along
			  string = string..snd.sep.."shadow sleight dissipate "..snd.target
		  elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			 -- they aren't under active hypnosis, and not locked - let's void!
			  string = string..snd.sep.."shadow sleight void "..snd.target
		  else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			  string = string..snd.sep.."shadow sleight dissipate "..snd.target
		  end
	  end
    
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (Whirran Venoms and Addiction update)</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
  "hypersomnia",
  "addiction",
  "impatience",
  "hypersomnia",
  "addiction",
  "impatience",
}
snd.starting_attack()

function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() and snd.checkAff("hypersomnia") then
		snd.giving = {
		"slickness",
    "anorexia",
    "stupidity",
    "voyria",
    "asleep",
    "weariness",
    "dizziness",
    "stupidity",
    "recklessness",
    "peace",
    "haemophilia",
    "sensitivity",
		}
    cecho("\n&lt;red&gt;Target is sleeplocked. Piling on affs.")
  elseif snd.target_locked() and not snd.checkAff("hypersomnia") then
		snd.giving = {
		"paresis",
		"clumsiness",
		"asthma",
		"slickness",
		"anorexia",
    "sensitivity",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.checkAff("hypochondria") and snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down and hypochondia is up.")
  elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "no_insomnia",
        "asleep",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock.")
	elseif snd.hypno == "running" then
    if snd.timer_check("focus", .2, "more than") or snd.checkAff("impatience") or snd.checkAff("stupidity") then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "stupidity", 
      "sensitivity",
      "haemophilia",
      "weariness",
      "dizziness",
      "voyria",
		  }
      cecho("\n&lt;red&gt;Suggesting affs and off focus bal.")
    else      
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "stupidity",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "haemophilia",
      "sensitivity",
      "weariness",
      "voyria",
		  } 
      cecho("\n&lt;red&gt;Suggesting things and afflicting stuff.")
    end
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
    "paresis",
    "clumsiness",
    "asthma",
    "vomiting",
    "slickness",
    "stupidity",
    "anorexia",
    "haemophilia",
    "sensitivity",
    "weariness",
    }
    cecho("\n&lt;red&gt;Starter table.")
	end

  for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
      if not table.contains(touse, snd.giving[i]) then
        table.insert(touse, snd.giving[i])
      end
    end
    if #missing == 2 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[missing[2]])
    elseif #missing == 1 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[snd.giving[i]])
    end          
  end
  for aff in pairs(touse) do
    table.insert(tohit, snd.effects[touse[aff]])
  end
     
	if not snd.waiting.queue then -- make sure not to spam
		if snd.theytumbling then
        string = "garrote "..snd.target
	  elseif snd.instakilltarget == snd.target then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with curare"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": curare"
    elseif not snd.can_arms() then -- this means we have at least one broken arm
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
      if #snd.giving &gt;= 1 then
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." "..tohit[1]..snd.sep
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      else
        string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target
      end
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..":  voyria"
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if #snd.giving &gt;= 1 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving == 1 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        else
          string = "bite "..snd.target.." camus"
        end
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
    
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
      
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll4$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (Sheryni Fix - for EC)</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
  "confusion",
  "lethargy",
  "addiction",
  "loneliness",
  "confusion",
  "lethargy",
  "loneliness",
  "addiction",
  --narco? hyper?
}
snd.starting_attack()

function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() and snd.checkAff("hypersomnia") then
		snd.giving = {
		"slickness",
    "anorexia",
    "stupidity",
    "voyria",
    "asleep",
    "weariness",
    "dizziness",
    "stupidity",
    "recklessness",
    "peace",
    "haemophilia",
    "sensitivity",
		}
    cecho("\n&lt;red&gt;Target is sleeplocked. Piling on affs.")
  elseif snd.target_locked() and not snd.checkAff("hypersomnia") then
		snd.giving = {
		"paresis",
		"clumsiness",
		"asthma",
		"slickness",
		"anorexia",
    "sensitivity",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.checkAff("hypochondria") and snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"voyria",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down and hypochondia is up.")
  elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "no_insomnia",
        "asleep",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock.")
	elseif snd.hypno == "running" then
    if snd.timer_check("focus", .2, "more than") or snd.checkAff("impatience") or snd.checkAff("stupidity") then
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "stupidity", 
      "sensitivity",
      "haemophilia",
      "weariness",
      "dizziness",
      "voyria",
		  }
      cecho("\n&lt;red&gt;Suggesting affs and off focus bal.")
    else      
		  snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "stupidity",
      "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
      "haemophilia",
      "sensitivity",
      "weariness",
      "voyria",
		  } 
      cecho("\n&lt;red&gt;Suggesting things and afflicting stuff.")
    end
  elseif snd.timer_check("pill", .2, "more than") then
    snd.giving = {
    "vomiting",
    "stupidity",
    "dizziness",
    "weariness",
    "haemophilia",
    }
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
    "paresis",
    "vomiting",
    "stupidity",
    "dizziness",
    "clumsiness",
    "weariness",
    "haemophilia",
    "asthma",
    "slickness",
    "anorexia",
    "sensitivity",
    }
    cecho("\n&lt;red&gt;Starter table.")
	end

  for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
      if not table.contains(touse, snd.giving[i]) then
        table.insert(touse, snd.giving[i])
      end
    end
    if #missing == 2 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[missing[2]])
    elseif #missing == 1 then
      table.insert(tohit, snd.effects[missing[1]])
      table.insert(tohit, snd.effects[snd.giving[i]])
    end          
  end
  for aff in pairs(touse) do
    table.insert(tohit, snd.effects[touse[aff]])
  end
     
	if not snd.waiting.queue then -- make sure not to spam
		if snd.theytumbling then
        string = "garrote "..snd.target
	  elseif snd.instakilltarget == snd.target then
        string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with curare"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": curare"
    elseif not snd.can_arms() then -- this means we have at least one broken arm
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
      if #snd.giving &gt;= 1 then
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." "..tohit[1]..snd.sep
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      else
        string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target
      end
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..":  voyria"
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if #snd.giving &gt;= 1 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving == 1 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        else
          string = "bite "..snd.target.." camus"
        end
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	 
	
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll5$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 (My Original)</name>
								<script>if snd.class == "Infiltrator" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "hypochondria",
 "impatience",
 "loneliness",
 "hypersomnia",
 "lethargy",
 "hypochondria",
 "impatience",
 "vertigo",
 "lethargy",
 "impatience",
 "loneliness",
 "lethargy"
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() then
		snd.giving = {
		"voyria",
		"sensitivity",
		"asleep",
		"allergies",
		"vomiting",
		}
	elseif snd.hypno == "running" then
		snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		"paresis",
		"clumsiness",
		"asthma",
		"shyness", -- to keep impatience stuck, this buries it,
		"vomiting",
		"allergies",
		"stupidity", -- not as important, since we're running impatience
		"dizziness",
		"slickness",
		"anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		"sensitivity",
		"haemophilia",
		"recklessness",
		"weariness",
		"voyria",
    "shyness", 
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		"paresis",
		"clumsiness",
		"asthma",
		"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"stupidity",
		"dizziness",
		"slickness",
		"anorexia",
		"sensitivity",
		"haemophilia",
		"recklessness",
		"weariness",
		"voyria",
    "shyness", 
		
		}
	end

  -- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
      
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.used.shield and snd.balance.backstab then
      if #snd.giving &gt;= 1 then
	 		  string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target.." "..tohit[1]..snd.sep
        call = "wt Afflicting "..snd.target..": "..tohit[1]
      else
        string = "quickwield right dirk"..snd.sep.."quickwield right dirk"..snd.sep.."backstab "..snd.target
      end
		elseif snd.checksomeAffs({"anorexia", "allergies", "vomiting", "mental_disruption"},1) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..": "..tohit[1]
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
        call = "wt Afflicting "..snd.target..":  scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        call = "wt Afflicting "..snd.target..":  voyria"
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
      if #snd.giving &gt;= 1 then
			  if snd.used.rebounding or snd.used.shield then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
          call = "wt Afflicting "..snd.target..": "..tohit[1]
        elseif #snd.giving == 1 then
          if snd.used.paste then
            string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          else
            string = "bite "..snd.target.." "..tohit[1]
            call = "wt Afflicting "..snd.target..": "..tohit[1]
          end
			  else
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
        end
      else
        if snd.used.shield or snd.used.paste then
          string = "wipe left"..snd.sep.."wipe right"..snd.sep.."envenom whip with voyria"..snd.sep.."flay "..snd.target
        else
          string = "bite "..snd.target.." camus"
        end
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
    
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" or snd.total_hypno == 0 then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno + 1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" and #snd.target_has &lt;= 8 then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
			elseif snd.hypno == "ready" then --They're sealed so snap em!
			  string = string..snd.sep.."snap "..snd.target
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	 
	
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.hypno == "ready" then
      string = string..snd.sep.."snap "..snd.target
    elseif snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
  
      if string:find("flay") then
        if not string.find(gmcp.Char.Vitals.wield_left, "whip") then
          string = "quickwield left whip"..snd.sep..string
        end
      elseif string:find("dstab") or string:find("slit") or string:find("backstab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield right dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Wayfarer</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Wayfarer Group Affs</name>
								<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "wipe left"..snd.sep.."wipe right"..snd.sep
		local call = "" 
		local touse = "none"
		local tohit = "none"
		local preatk = ""
		local axenumbers = 2
		local fury_amount = tonumber(gmcp.Char.Vitals.fury)
		local fury = ""
    snd.dropstrikecall()

		snd.giving = {
		"asthma",
		"paresis",
		"clumsiness",
		"slickness",
		"left_leg_crippled",
		"right_leg_crippled",
		"anorexia",
		"stupidity",
		"left_leg_crippled",
		"left_arm_crippled",
		"haemophilia",
		"allergies",
		"vomiting",
		"recklessness",
		"sensitivity",
		"sight",
		"shyness",
		"dizziness",
    }
		
		
		
	  if snd.not_aff("blackout") then
        if string.find(gmcp.Char.Vitals.wield_left, "axe") and string.find(gmcp.Char.Vitals.wield_right, "axe") then
            axenumbers = 2
        elseif not string.find(gmcp.Char.Vitals.wield_left, "axe") and string.find(gmcp.Char.Vitals.wield_right, "axe") then
            axenumbers = 1
        elseif string.find(gmcp.Char.Vitals.wield_left, "axe") and not string.find(gmcp.Char.Vitals.wield_right, "axe") then
            axenumbers = 1  
        elseif not string.find(gmcp.Char.Vitals.wield_left, "axe") and not string.find(gmcp.Char.Vitals.wield_right, "axe") then
            axenumbers = 0   
        end	
	 end	
	
    if snd.checkAff("fallen") and snd.checkAff("head_broken") and snd.checksomeAffs({"torso_broken", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken"}, 1) then
      if tonumber(axenumbers) &gt; 1 then
		     string = string.."fury threaten " ..snd.target.. " boost"..snd.sep.."axe execute "..snd.target..snd.sep
		  else
		     echo("Waiting to be able to execute!!!")
		     return
		  end
    
    elseif snd.dropstrikeready and not snd.highjumped then
      string = string.."highjump"
    
    elseif snd.highjumped then
      string = string.."axe dropstrike "..snd.target
      
    elseif snd.checkAff("barrier") and fury_amount &gt; 79 then
      string = string.."fury REVERBERATE "..snd.target.." boost"
		
    elseif snd.target_aegis and fury_amount &lt; 79 then
      if tonumber(axenumbers) &gt; 1 then
		    string = string.. "axe whirlwind curare"..snd.sep
		  else
		    echo("do nothing")
		    return
		  end
		  
	  elseif snd.used.shield then
	        if fury_amount &gt; 49 then
			   fury = string.."fury threaten " ..snd.target.. " boost"..snd.sep
			   
			   if snd.checkAff("asthma") and snd.checksomeAffs({"paresis", "paralysis"}, 1) and snd.checksomeAffs({"stupidity", "muddled"}, 1) and not snd.checkAff("slickness") then
                  string = string..fury.."axe lob " ..snd.target.. " gecko"..snd.sep
				  call = "wt Afflicting "..snd.target..": gecko"..snd.sep 				  
			   elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") then
			      string = string..fury.."axe lob "..snd.target.. " slike"..snd.sep
				  call = "wt Afflicting "..snd.target..": slike"..snd.sep				  
			   elseif not snd.checkAff("slickness") and snd.checkAff("anorexia") then
			      string = string..fury.."axe lob "..snd.target.. " gecko"..snd.sep
				  call = "wt Afflicting "..snd.target..": gecko"..snd.sep 					  
               elseif not snd.checkAff("asthma") and snd.checkAff("slickness") then
			      string = string..fury.."axe lob "..snd.target.. " kalmia"..snd.sep
 				  call = "wt Afflicting "..snd.target..": kalmia"..snd.sep 	
               elseif not snd.checksomeAffs({"paresis", "paralysis"}, 1) then	
			      string = string..fury.."axe lob "..snd.target.. " curare"..snd.sep
 				  call = "wt Afflicting "..snd.target..": curare"..snd.sep 					  
               elseif not snd.checkAff("asthma") then			
			      string = string..fury.."axe lob "..snd.target.. " kalmia"..snd.sep
 				  call = "wt Afflicting "..snd.target..": kalmia"..snd.sep 					  
               elseif not snd.checkAff("stupidity") then			
			      string = string..fury.."axe lob "..snd.target.. " aconite"..snd.sep
 				  call = "wt Afflicting "..snd.target..": aconite"..snd.sep 					   
               elseif not snd.checkAff("clumsiness") then			
			      string = string..fury.."axe lob "..snd.target.. " xentio"..snd.sep
 				  call = "wt Afflicting "..snd.target..": xentio"..snd.sep 		
               elseif not snd.checkAff("weariness") then			
			      string = string..fury.."axe lob "..snd.target.. " vernalius"..snd.sep
 				  call = "wt Afflicting "..snd.target..": vernalius"..snd.sep 	
               elseif not snd.checkAff("sensitivity") then			
			      string = string..fury.."axe lob "..snd.target.. " prefarar"..snd.sep
 				  call = "wt Afflicting "..snd.target..": prefarar"..snd.sep 				  
               elseif not snd.checkAff("allergies") then			
			      string = string..fury.."axe lob "..snd.target.. " darkshade"..snd.sep
 				  call = "wt Afflicting "..snd.target..": darkshade"..snd.sep 
               elseif not snd.checkAff("shyness") then			
			      string = string..fury.."axe lob "..snd.target.. " digitalis"..snd.sep
 				  call = "wt Afflicting "..snd.target..": digitalis"..snd.sep			  
               else
			      string = string..fury.."axe bash "..snd.target..snd.sep
 	   
			   end
			  
		    else
		
		       if snd.checkAff("asthma") and snd.checkAff("anorexia") and not snd.checkAff("slickness") then
                  tohit = "gecko"
               elseif not snd.checkAff("asthma") and snd.checkAff("anorexia") and snd.checkAff("slickness") then
                  tohit = "kalmia"	
	           elseif not snd.checkAff("anorexia") then
		          tohit = "slike"
	           elseif not snd.checkAff("stupidity") then
		         tohit = "aconite"
	           elseif not snd.checkAff("asthma") then
		          tohit = "kalmia"
	           elseif not snd.checkAff("slickness") then
		          tohit = "gecko"
	           elseif not snd.checksomeAffs({"paresis", "paralysis"}, 1) then
		          tohit = "curare"
	           elseif not snd.checkAff("clumsiness") then
		          tohit = "xentio"
	           elseif not snd.checkAff("weariness") then
		          tohit = "vernalius"
	           elseif not snd.checkAff("left_leg_crippled") or not snd.checkAff("right_leg_crippled") then
		          tohit = "epseth"	
	           elseif not snd.checkAff("left_arm_crippled") or not snd.checkAff("right_arm_crippled") then
		          tohit = "epteth"		              
	           end	
			end
			
			string = "axe devastate "..snd.target.. " " ..tohit.. ""..snd.sep
  	        call = "wt Afflicting "..snd.target..": "..tohit..""..snd.sep
			
        else
			 
		   if fury_amount &gt; 49 and not snd.checkAff("lethargy") and not snd.checkAff("halted") then -- boosted
			   fury = string.."fury halt " ..snd.target.. " boost" ..snd.sep
		   elseif fury_amount &gt; 29 and not snd.checkAff("weariness") then
			   fury = string.."fury shake " ..snd.target.. "" ..snd.sep
		   elseif fury_amount &gt; 29 and not snd.checkAff("exhausted") and snd.checkAff("lethargy") then
			   fury = string.."fury exhaust " ..snd.target.. "" ..snd.sep
		   elseif fury_amount &gt; 49 and snd.checkAff("exhausted") and snd.checkAff("lethargy") and not snd.checkAff("masochism") then -- boosted
			   fury = string.."fury threaten " ..snd.target.. " boost" ..snd.sep	
		   elseif fury_amount &gt; 59 and snd.checkAff("lethargy") and not snd.checkAff("hearing") and snd.checksomeAffs({"halted", "paralysis"}, 1) and not snd.checkAff("exhausted") and not snd.checkAff("masochism") then
			   fury = string.."fury shatter " ..snd.target.. "" ..snd.sep
		   end

		   if snd.checkAff("asthma") and snd.checksomeAffs({"paresis", "paralysis"}, 1) and snd.checksomeAffs({"stupidity", "muddled"}, 1) and not snd.checkAff("slickness") then
			  string = string..fury.."axe lob " ..snd.target.. " gecko"..snd.sep
			  call = "wt Afflicting "..snd.target..": gecko"..snd.sep 				  
		   elseif snd.checkAff("slickness") and not snd.checkAff("anorexia") then
			  string = string..fury.."axe lob "..snd.target.. " slike"..snd.sep
			  call = "wt Afflicting "..snd.target..": slike"..snd.sep				  
		   elseif not snd.checkAff("slickness") and snd.checkAff("anorexia") then
			  string = string..fury.."axe lob "..snd.target.. " gecko"..snd.sep
			  call = "wt Afflicting "..snd.target..": gecko"..snd.sep 					  
		   elseif not snd.checkAff("asthma") and snd.checkAff("slickness") then
			  string = string..fury.."axe lob "..snd.target.. " kalmia"..snd.sep
			  call = "wt Afflicting "..snd.target..": kalmia"..snd.sep 	
		   elseif not snd.checksomeAffs({"paresis", "paralysis"}, 1) then	
			  string = string..fury.."axe lob "..snd.target.. " curare"..snd.sep
			  call = "wt Afflicting "..snd.target..": curare"..snd.sep 					  
		   elseif not snd.checkAff("asthma") then			
			  string = string..fury.."axe lob "..snd.target.. " kalmia"..snd.sep
			  call = "wt Afflicting "..snd.target..": kalmia"..snd.sep 					  
		   elseif not snd.checkAff("stupidity") then			
			  string = string..fury.."axe lob "..snd.target.. " aconite"..snd.sep
			  call = "wt Afflicting "..snd.target..": aconite"..snd.sep
	     elseif not snd.checkAff("left_leg_crippled") or not snd.checkAff("right_leg_crippled") then
			  string = string..fury.."axe lob "..snd.target.. " epseth"..snd.sep
			  call = "wt Afflicting "..snd.target..": epseth"..snd.sep	   
		   elseif not snd.checkAff("clumsiness") then			
			  string = string..fury.."axe lob "..snd.target.. " xentio"..snd.sep
			  call = "wt Afflicting "..snd.target..": xentio"..snd.sep 		
		   elseif not snd.checkAff("weariness") then			
			  string = string..fury.."axe lob "..snd.target.. " vernalius"..snd.sep
			  call = "wt Afflicting "..snd.target..": vernalius"..snd.sep 	
		   elseif not snd.checkAff("sensitivity") then			
			  string = string..fury.."axe lob "..snd.target.. " prefarar"..snd.sep
			  call = "wt Afflicting "..snd.target..": prefarar"..snd.sep 				  
		   elseif not snd.checkAff("allergies") then			
			  string = string..fury.."axe lob "..snd.target.. " darkshade"..snd.sep
			  call = "wt Afflicting "..snd.target..": darkshade"..snd.sep         
		   elseif not snd.checkAff("shyness") then			
			  string = string..fury.."axe lob "..snd.target.. " digitalis"..snd.sep
			  call = "wt Afflicting "..snd.target..": digitalis"..snd.sep			  
		   else
			  string = string..fury.."axe bash "..snd.target..snd.sep

		   end 
	    end
			   
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end

	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
end
end
		
snd.attack_function()
end			   </script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>sensi + tfix support</name>
								<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	
	if not snd.waiting.queue then
	
		local string = ""
		local call = ""
		local touse = {}
		local tohit = {}
		local extraaff = ""
		local boosthalt = false
		if tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
			boosthalt = true -- spam it
		else
			boosthalt = false
		end
		
		snd.giving = {
		"sensitivity",
		"sight",
    "paresis",
		"asthma",
		"vomiting",
		"allergies",
		"slickness",
		"left_leg_crippled",
		"right_leg_crippled",
		"anorexia",
		"stupidity",
    }
		
		for i in pairs(snd.giving) do
			if not snd.checkAff(snd.giving[i]) then
			if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
 			end
		end
		
		for i in pairs(touse) do
			table.insert(tohit, snd.effects[touse[i]])
		end
		
		while #tohit &lt; 3 do
			table.insert(tohit, extraaff)
		end
		
		if snd.used.shield then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		elseif snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
		else
			string = "axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
		end
		
		if boosthalt and not snd.enraged then
			string = "fury halt "..snd.target.." boost"..snd.sep..string
		end
		
		if snd.proned() and boosthalt and not snd.enraged and snd.checkAff("sensitivity") and (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			string = "fury enrage"..snd.sep..string
		end

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Lacerate (Bleed) focused</name>
								<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local touse = {}
		local tohit = {}
    local fury = ""
    local current_fury = tonumber(gmcp.Char.Vitals.fury)
		local indoors = table.contains(gmcp.Room.Info.details, "indoors")		

		if current_fury &gt;=20 and not snd.checkAff("hearing") and not snd.checksomeAffs({"ringing_ears", "sensitivity"},2) then
      fury = "fury warcry " .. snd.target
        if current_fury &gt;= 40 and not snd.checksomeAffs({"ringing_ears", "hearing"},2) then
          fury = fury .. " boost"
        end
		elseif current_fury &gt;= 30 and not snd.checkAff("exhausted") then
      fury = "fury exhaust " .. snd.target    
    end
    
		-- set the affs we want to use
		snd.giving = {
    "sensitivity",
		"clumsiness",
		"allergies",
		"vomiting",
		"recklessness",
		"paresis",
		"asthma",
    "weariness",
    }
    
		-- pick affs from the list above
  	for i in pairs(snd.giving) do
  		-- make sure not to double up paresis and paralysis
  		if not snd.checkAff(snd.giving[i]) then
  			-- and don't add an aff we've already got one higher in the list!
				if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
  		end
  	end
		
		for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
		end
		
		while #tohit &lt; 3 do
			table.insert(tohit, "delphinium")
		end
		
		-- now to decide what attack to use!
    if snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
		
    elseif snd.used.shield then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]
      
    elseif not snd.checkAff("haemophilia") and not snd.used.rebounding then
      string = "axe lacerate " .. snd.target
      
    elseif snd.proned() and snd.checkAff("sensitivity") and (snd.checkAff("right_leg_crippled") or snd.checkAff("left_leg_crippled")) then
			string = "axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
      
		else
			string = "axe lob "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]
		end
				
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call .. snd.sep .. string
		end
    
    if fury ~= "" then string = string..snd.sep..fury end
		
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bleed$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Lock into Slaughter</name>
								<script>if snd.class == "Wayfarer" then -- Requires dropstrike

  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
		  local string = "wipe left"..snd.sep.."wipe right"..snd.sep
		  local call = ""
		  local touse = {}
		  local tohit = {}
		  local extraaff = "asthma"
      if snd.cureset == "templar" then
        extraaff = "weariness"
      end
		  local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		  local shatter = false
		  local boostshatter = false
		  local enrage = false
		
		  if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
			 shatter = true -- spam it
		  else
			 shatter = false
		  end

		  if tonumber(gmcp.Char.Vitals.fury) &gt;=60 then
			 boostshatter = true -- spam it
		  else
			 boostshatter = false
		  end

		  if tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
			 enrage = true
		  else
			 enrage = false
		  end
		
		  if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
			 shatter = true -- spam it
		  else
			 shatter = false
		  end
      
      if snd.timer_check("fitness", .2, "more than") and not snd.target_locked() then
		    snd.giving = {
		      "paresis",
		      "asthma",
		      "slickness",
		      "anorexia",
		      "stupidity",
		      "weariness",
		      "dizziness",
		      "stupidity",
		      "recklessness",
		      "haemophilia",
		      "sensitivity",
		    }
        cecho("\n&lt;red&gt;Fitness is down.")        
      elseif snd.timer_check("focus", .2, "more than") and not snd.target_locked() then
		    snd.giving = {
          "anorexia",
          "stupidity", 
          "paresis",
          "weariness",
          "clumsiness",
					"recklessness",
          "sensitivity",
					"dizziness",
          "peace",
		    }
        cecho("\n&lt;red&gt;Focus is down.")  
      else		
				snd.giving = {
					"clumsiness",
					"paresis",
					"asthma",
					"allergies",
					"slickness",
					"anorexia",
					"stupidity",
					"sensitivity",
					"recklessness",
					"weariness",
					"allergies",
					"haemophilia",
					"dizziness",
					"vomiting",
					"peace",
					"disfigurement",
					"shyness",
				}
        cecho("\n&lt;red&gt;Normal affs for lock.")
			end
    
		  if #missing == 2 and not snd.used.shield and not snd.used.rebounding then
        venom = snd.effects[missing[1]]
      elseif #missing == 1 and not snd.used.shield then
        venom = snd.effects[missing[1]]
		  end
		
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) then
          if not table.contains(touse, snd.giving[i]) then 
            table.insert(touse, snd.giving[i])
          end
        end
      end
        
      for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
      end
		
		  while #tohit &lt; 3 do
			  table.insert(tohit, snd.effects[extraaff])
		  end
		
		  if snd.used.shield then
        string = "touch hammer "..snd.target..snd.sep
      elseif snd.checkAff("barrier") and tonumber(gmcp.Char.Vitals.fury) &gt; 79 then
        string = string.."fury REVERBERATE "..snd.target.." boost"..snd.sep
      elseif #snd.target_has &gt; 8 and snd.checkAff("sensitivity") and snd.proned() and snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 1) then
        if snd.used.rebounding then
				  string = string.."axe devastate "..snd.target.." "..tohit[1]..snd.sep
				  call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
        else
          string = string.."axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
        end
      else
			  string = string.."axe lob "..snd.target.." "..tohit[1]
			  call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		  end
      
      if shatter and not snd.checkAff("lethargy") and snd.checkAff("allergies") then
        string = "fury halt "..snd.target..snd.sep..string
      elseif shatter and not snd.checkAff("exhausted") then
        string = "fury exhaust "..snd.target..snd.sep..string
      elseif shatter and snd.checkAff("exhausted") and not snd.checkAff("lethargy") then
        string = "fury halt "..snd.target..snd.sep..string
		  elseif shatter and snd.checkAff("slickness") and boostshatter then
			  string = "fury shatter "..snd.target.." boost"..snd.sep..string
		  end
		
		  if tonumber(gmcp.Char.Vitals.fury) &gt;=50 and not snd.enraged and snd.checkAff("sensitivity") and snd.canenrage then
			  string = "fury enrage "..snd.sep..string
		  end

		  if snd.toggles.affcalling and not snd.target_gone then
			  string = call..string
		  end
		
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
		
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Limbs into Execute</name>
								<script>if snd.class == "Wayfarer" then
  
  snd.starting_attack()
  function snd.attack_function()

  if not snd.waiting.queue then
    local string = "wipe left"..snd.sep.."wipe right"..snd.sep -- we'll load this with our attack string
    local call = ""
		local limb_tohit = ""
    local targ = "nothing"
		local touse = {}
    local tohit = {}
    local execute_check = false
    local fury = tonumber(gmcp.Char.Vitals.fury)
    local distract = false
    if gmcp.Char.Vitals.ability_bal == "1" and fury &gt;=30 then
      distract = true
    end
    
    snd.giving_limbs = {"head", "right leg", "left leg", "left arm", "right arm",}

    -- Initialize limb_tohit outside the loop
    local limb_tohit = nil

    -- Find the last selected limb index
    local lastLimbIndex = 1
    for i, limb in ipairs(snd.giving_limbs) do
      if limb == snd.last_struck_limb then
        lastLimbIndex = i
        break
      end
    end

    -- Iterate through the limbs in a rotating manner starting from the next index
    for i = 1, #snd.giving_limbs do
      local index = (lastLimbIndex + i - 1) % #snd.giving_limbs + 1
      local v = snd.giving_limbs[index]
      -- Check conditions for limb selection
      if snd.limb_status[v] == "healed" and ((snd.parried_limb ~= v and snd.last_struck_limb ~= v) or snd.no_parry() or distract) then
        limb_tohit = v
        break
      end
    end -- Now, limb_tohit contains the selected limb for the attack        
    
    snd.giving = {
      "anorexia",
      "asthma",
      "slickness",
      "stupidity",
      "paresis",
      "sensitivity",
      "weariness",
      "clumsiness",
    }
    
    for i in pairs(snd.giving) do
      if not snd.checkAff(snd.giving[i]) then
        if not table.contains(touse, snd.giving[i]) then 
          table.insert(touse, snd.giving[i])
        end
      end
		end
    
    for k, v in pairs(snd.limb_dmg) do
      if k ~= "torso" and k ~= "head" and snd.limb_status[k] ~= "healed" and snd.limb_status["head"] ~= "healed" and snd.checkAff("fallen") and snd.checksomeAffs({"right_leg_broken", "left_leg_broken", "right_arm_broken", "left_arm_broken"},1) and snd.checkAff("head_broken") then
        execute_check = true
      end
    end
    
    for i in pairs(touse) do
			table.insert(tohit, snd.effects[touse[i]])
		end
      
    if snd.used.shield then
      string = "touch hammer "..snd.target
    elseif snd.checkAff("barrier") and tonumber(gmcp.Char.Vitals.fury) &gt; 79 then
      string = string.."fury REVERBERATE "..snd.target.." boost"..snd.sep
    elseif execute_check then
      string = string.."axe execute "..snd.target
    elseif snd.used.rebounding then
      string = string.."axe devastate "..snd.target.." "..tohit[1]
      call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
    elseif snd.checksomeAffs({"right_leg_crippled", "left_leg_crippled", "right_leg_broken", "left_leg_broken"}, 1) and not snd.checkAff("fallen") and snd.checkAff("head_broken") then
      string = string.."axe sweep "..snd.target
    else
      string = string.."axe chop "..snd.target.." "..limb_tohit.." "..tohit[1]
      call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
    end
    
    if distract and fury &gt;=50 then
      string = "fury distract "..snd.target.." boost"..snd.sep..string
    elseif distract then
      string = "fury distract "..snd.target..snd.sep..string
    end

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
  
  	if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
  
  end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Lock into Execute</name>
								<script>if snd.class == "Wayfarer" then -- Requires dropstrike

	snd.starting_attack()
	function snd.attack_function()
		
		if not snd.waiting.queue then
	
			local string = "wipe left"..snd.sep.."wipe right"..snd.sep -- we'll load this with our attack string
			local call = "" -- and this with our affliction call
			local touse = {}
			local tohit = {}
			local extraaff = "asthma"
      if snd.cureset == "templar" then
        extraaff = "weariness"
      end
			local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
			local shatter = false
			local boostshatter = false
			local enrage = false
			local limb_tohit = ""
      local execute_check = false
      local distract = false
      if gmcp.Char.Vitals.ability_bal == "1" and tonumber(gmcp.Char.Vitals.fury) &gt;=30 then
        distract = true
      end
		
			if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
				shatter = true -- spam it
			else
				shatter = false
			end

			if tonumber(gmcp.Char.Vitals.fury) &gt;=60 then
				boostshatter = true -- spam it
			else
				boostshatter = false
			end

			if tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
				enrage = true
			else
				enrage = false
			end
    
			if not snd.can_axe() then return end
		
			if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
				shatter = true -- spam it
			else
				shatter = false
			end
      
			if snd.timer_check("fitness", .2, "more than") and not snd.target_locked() then
		    snd.giving = {
		      "paresis",
		      "asthma",
		      "slickness",
		      "anorexia",
		      "stupidity",
		      "weariness",
		      "dizziness",
		      "stupidity",
		      "recklessness",
		      "haemophilia",
		      "sensitivity",
		    }
        cecho("\n&lt;red&gt;Fitness is down.")        
      elseif snd.timer_check("focus", .2, "more than") and not snd.target_locked() then
		    snd.giving = {
          "anorexia",
          "stupidity", 
          "paresis",
          "weariness",
          "clumsiness",
					"recklessness",
          "sensitivity",
					"dizziness",
          "peace",
		    }
        cecho("\n&lt;red&gt;Focus is down.")  
      else		
				snd.giving = {
					"clumsiness",
					"paresis",
					"asthma",
					"allergies",
					"slickness",
					"anorexia",
					"stupidity",
					"sensitivity",
					"recklessness",
					"weariness",
					"allergies",
					"haemophilia",
					"dizziness",
					"vomiting",
					"peace",
					"disfigurement",
					"shyness",
				}
        cecho("\n&lt;red&gt;Normal affs for lock.")
			end
    
			if #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				venom = snd.effects[missing[1]]
			elseif #missing == 1 and not snd.used.shield then
				venom = snd.effects[missing[1]]
			end
		
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then 
						table.insert(touse, snd.giving[i])
					end
				end
			end
        
			for i in pairs(touse) do
				table.insert(tohit, snd.effects[touse[i]])
			end
		
			while #tohit &lt; 3 do
			  table.insert(tohit, snd.effects[extraaff])
			end
			
			snd.giving_limbs = {"head", "right leg", "left leg", "left arm", "right arm",}
			local limb_tohit = nil

			local lastLimbIndex = 1
			for i, limb in ipairs(snd.giving_limbs) do
				if limb == snd.last_struck_limb then
					lastLimbIndex = i
					break
				end
			end

			for i = 1, #snd.giving_limbs do
			local index = (lastLimbIndex + i - 1) % #snd.giving_limbs + 1
			local v = snd.giving_limbs[index]
				if snd.limb_status[v] == "healed" and ((snd.parried_limb ~= v and snd.last_struck_limb ~= v) or snd.no_parry() or distract) then
					limb_tohit = v
					break
				end
			end    
      
      for k, v in pairs(snd.limb_dmg) do
        if k ~= "torso" and k ~= "head" and snd.limb_status[k] ~= "healed" and snd.limb_status["head"] ~= "healed" and snd.checkAff("fallen") and snd.checksomeAffs({"right_leg_broken", "left_leg_broken", "right_arm_broken", "left_arm_broken"},1) and snd.checkAff("head_broken") then
          execute_check = true
        end
      end
		
			if snd.used.shield then
				string = "touch hammer "..snd.target
      elseif snd.checkAff("barrier") and tonumber(gmcp.Char.Vitals.fury) &gt; 79 then
        string = string.."fury REVERBERATE "..snd.target.." boost"..snd.sep
			elseif execute_check then
				string = string.."axe execute "..snd.target
			elseif snd.checksomeAffs({"right_leg_crippled", "left_leg_crippled", "right_leg_broken", "left_leg_broken"}, 1) and not snd.checkAff("fallen") and snd.checkAff("head_broken") then
				string = string.."axe sweep "..snd.target..snd.sep
			elseif snd.checksomeAffs({"paralysis","paresis","anorexia","slickness","asthma"}, 4) then
        if snd.used.rebounding then
				  string = string.."axe devastate "..snd.target.." "..tohit[1]
				  call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
				else
          string = string.."axe chop "..snd.target.." "..limb_tohit.." "..tohit[1]..snd.sep
				  call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
        end
			else
			  string = string.."axe lob "..snd.target.." "..tohit[1]
			  call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			end
      
			if shatter and not snd.checkAff("lethargy") and snd.checkAff("allergies") then
				string = "fury halt "..snd.target..snd.sep..string
			elseif shatter and not snd.checkAff("exhausted") then
				string = "fury exhaust "..snd.target..snd.sep..string
			elseif shatter and snd.checkAff("exhausted") and not snd.checkAff("lethargy") then
				string = "fury halt "..snd.target..snd.sep..string
			elseif shatter and snd.checkAff("slickness") and boostshatter then
				string = "fury shatter "..snd.target.." boost"..snd.sep..string
      elseif string:find("chop") and distract and tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
        string = "fury distract "..snd.target.." boost"..snd.sep..string
      elseif string:find("chop") and distract then
        string = "fury distract "..snd.target..snd.sep..string
      end
		
			if tonumber(gmcp.Char.Vitals.fury) &gt;=50 and not snd.enraged and snd.checkAff("sensitivity") and snd.canenrage then
				string = "fury enrage "..snd.sep..string
			end

			if snd.toggles.affcalling and not snd.target_gone then
				string = call..string
			end
		
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end
		
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Shapeshifter</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>mouse mode</name>
								<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not table.contains(snd.target_has, "writhe_thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not table.contains(snd.target_has, "writhe_necklock") then
		 mangled = limbs[limb]
		elseif not table.contains(snd.target_has, "writhe_armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 end
	end
	if snd.used.shield then
	 string = "touch hammer "..snd.target
	-- check if we can jawlock now!
  elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then
	 if string.find(mangled, "leg") then
	  string = "jawlock thigh of "..snd.target
	 elseif mangled == "head" then
	  string = "jawlock neck of "..snd.target
	 elseif mangled == "torso" or string.find(mangled, "arm") then
	  string = "jawlock armpit of "..snd.target
	 end
	elseif broken ~= "nothing" and not snd.jawlocked then
	 string = "destroy "..broken.." of "..snd.target
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>group quarter</name>
								<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not snd.checkAff("writhe_thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not snd.checkAff("writhe_necklock") then
		 mangled = limbs[limb]
		elseif not snd.checkAff("writhe_armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 end
	end
  
	if snd.used.shield then
	 	string = "pounce "..snd.target
	elseif snd.theyran and snd.neckdragdir ~= "none" then
	  string = "neckdrag "..snd.target.." "..snd.neckdragdir
	-- check if we can jawlock now!
	elseif snd.checksomeAffs({"writhe_thighlock", "writhe_necklock", "writhe_armpitlock"}, 1) and not snd.jawlocked then
	 string = "quarter "..snd.target
	elseif broken ~= "nothing" and not snd.jawlocked then
	 string = "destroy "..broken.." of "..snd.target
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^insta$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>limbs</name>
								<script>local rips = {
  Werecroc = "deathroll",
  Werewolf = "rupture",
  Werebear = "buffet",
  Wereboar = "gore",
  Wereraven = "headdrop"
}
if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	crippled = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not snd.checkAff("writhe_thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not snd.checkAff("writhe_necklock") then
		 mangled = limbs[limb]
		elseif not snd.checkAff("writhe_armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 elseif snd.checkAff(limbs[limb]:gsub(" ","_").."_crippled") and snd.limb_dmg[limbs[limb]] &lt; 33.33 and crippled == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
		 crippled = limbs[limb]
		end
	 end
	end
	if snd.used.shield then
	 	string = "pounce "..snd.target
	elseif snd.theyran and snd.neckdragdir ~= "none" then
	  string = "neckdrag "..snd.target.." "..snd.neckdragdir
	elseif not not snd.proned() then
    string = "quickmount 416056"..snd.sep.."leapslash "..snd.target..snd.sep
  elseif snd.jawlocked then
	  string = rips[gmcp.Char.Status.spec].." "..snd.target
	-- check if we can jawlock now!
  elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then
	 if string.find(mangled, "leg") then
	  string = "jawlock thigh of "..snd.target
	 elseif mangled == "head" then
	  string = "jawlock neck of "..snd.target
	 elseif mangled == "torso" or string.find(mangled, "arm") then
	  string = "jawlock armpit of "..snd.target
	 end
	elseif broken ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then
	 string = "mangle "..broken.." of "..snd.target
	elseif crippled ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then
	 string = "destroy "..crippled.." of "..snd.target
	elseif snd.resto_limb ~= "none" and snd.defenses.def_fury.state ~= "deffed" then
	 string = "combo "..snd.target.." hamstring left hamstring right"
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	 if snd.defenses.def_fury.state == "deffed" then
	  string = "pounce "..snd.target..snd.sep..string
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Semi 1v1 Route</name>
								<script>local lockMap = {
  ["left leg"] = "thigh",
  ["right leg"] = "thigh",
  ["left arm"] ="armpit",
  ["right arm"] = "armpit",
  ["torso"] = "armpit",
  ["head"] = "neck"
}
local strikeMap = {
  ["left leg"] = "hamstring left",
  ["right leg"] = "hamstring right",
  ["left arm"] = "rend left",
  ["right arm"] = "rend right",
  ["torso"] = "bodypunch",
  ["head"] = "skullwhack"
}
local ripMap = {
  ["left leg"] = "groin",
  ["right leg"] = "groin",
  ["left arm"] ="spleen",
  ["right arm"] = "spleen",
  ["torso"] = "spleen",
  ["head"] = "throat"
}

if snd.class == "Shapeshifter" then
	snd.starting_attack()
	function snd.attack_function()
 		if not snd.waiting.queue then
			local function feralityConvert(limb)
				return strikeMap[limb]
			end
			
			limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
			local mangled = "nothing"
			local crippled = "nothing"
			local broken = "nothing"
			for _, limb in pairs(limbs) do
	 			if snd.limb_status[limb] == "mangled" and mangled == "nothing" and (snd.parried_limb~= limb or snd.no_parry()) then
					if not snd.checkAff("writhe_"..lockMap[limb].."lock") and not snd.checkAff("ripped_"..ripMap[limb]) then
						mangled = limb
					end
	 			elseif snd.limb_status[limb] == "broken" and snd.limb_dmg[limb] &lt; 66.66 and broken == "nothing" and (snd.parried_limb~= limb or snd.no_parry()) and limbs[limb] ~= snd.resto_limb then
					if string.find(limb, "leg") or string.find(limb, "arm") and snd.parried_limb ~= limb then
						broken = limb
					end
	 			end
			end  --end of for loop
      
			for _, aff in pairs(snd.target_has) do
				if string.find(aff, "_crippled") then
					local limb = aff:gsub("_crippled",""):gsub("_"," ")
					if snd.limb_status[limb] == "healed" and snd.parried_limb ~= limb and limbs[limb] ~= snd.resto_limb then
						crippled = limb
						break
					end
				end
			end  --end of for loop  
			
			if snd.used.shield then           
		 		string = "pounce "..snd.target
			elseif snd.theyran and snd.neckdragdir ~= "none" then
			  string = "neckdrag "..snd.target.." "..snd.neckdragdir
			elseif snd.checksomeAffs({"ripped_groin", "ripped_throat", "ripped_spleen"},2) then
				string = "devour "..snd.target                   
			elseif snd.checkAff("writhe_necklock") and not snd.checkAff("ripped_throat") then
				string = "throatrip "..snd.target          
			elseif snd.checkAff("writhe_armpitlock") and not snd.checkAff("ripped_spleen") then
				string = "spleenrip "..snd.target
			elseif snd.checkAff("writhe_thighlock") and not snd.checkAff("ripped_groin") then
				string = "groinrip "..snd.target 
			elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then
				string = "jawlock "..lockMap[mangled].." of "..snd.target
			elseif (crippled == "left leg" or crippled == "right leg" and not snd.proned()) and (limbs[limb] ~= snd.last_struck_limb or limbs[limb] ~= snd.resto_limb) then
				string = "destroy "..crippled.." of "..snd.target
			elseif broken ~= "nothing" and not snd.jawlocked and limbs[limb] ~= snd.resto_limb then
				string = "mangle "..broken.." of "..snd.target
			elseif crippled ~= "nothing" and not snd.jawlocked and (limbs[limb] ~= snd.last_struck_limb or limbs[limb] ~= snd.resto_limb) then
	 			string = "destroy "..crippled.." of "..snd.target
			else
	 			left = "nothing"
	 			right = "nothing"
	 			for limb in pairs(limbs) do
          if snd.proned() or snd.no_parry() then -- focus legs hard on prone
            if snd.parried_limb == "right leg" then
              right = "hamstring left"
            elseif snd.parried_limb == "left leg" then
              right = "hamstring right"
            else
              right = "hamstring right"
              left = "hamstring left"
            end
					else
            if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and (limbs[limb] ~= snd.last_struck_limb or limbs[limb] ~= snd.resto_limb) then
						  if right == "nothing" then
                right = feralityConvert(limbs[limb])
						  elseif left == "nothing" then
							  left = feralityConvert(limbs[limb])
						  end
            end
          end
	 			end
	 			if left == "nothing" and right ~= "nothing" then -- we only found one limb to hit
          left = right -- double up!
        elseif left ~= "nothing" and right == "nothing" then
          right = left
	 			end
        if snd.parried_limb ~= "head" and (left == "nothing" and right == "nothing") and not snd.checkAff("head_mangled") then
          left = "skullwhack"
          right = "skullwhack"
          cecho("\n&lt;red&gt;Target's getting their head smacked.")
        elseif snd.parried_limb ~= "torso" and (left == "nothing" and right == "nothing") and not snd.checkAff("torso_mangled") then
          left = "bodypunch"
          right = "bodypunch"
          cecho("\n&lt;red&gt;Target's getting their torso smacked.")
        end
        if snd.defenses.def_fury.state == "deffed" then
          if not snd.checkAff("spinal_rip") and snd.checksomeAffs({"right_leg_broken", "right_arm_broken", "left_leg_broken", "left_arm_broken"},1) then
            string = "spinalrip "..snd.target..snd.sep.."combo "..snd.target.." "..left.." "..right
          elseif snd.checkAff("head_broken") then
            string = "skullcrush "..snd.target..snd.sep.."combo "..snd.target.." "..left.." "..right
          elseif snd.checkAff("torso_broken") then
            string = "gut "..snd.target..snd.sep.."combo "..snd.target.." "..left.." "..right
          else
            string = "pounce "..snd.target..snd.sep.."combo "..snd.target.." "..left.." "..right
          end
        else
	 			  string = "combo "..snd.target.." "..left.." "..right
        end
			end -- end of primary attacking function setup
				
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end--end the actual attack rolling
		end --end the main code
	end --end the function
	
--and sending it to the mud
snd.attack_function()   

end -- end the class </script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>More In-Depth Quartering</name>
								<script>--Note, this one is using more than just slashing to do limb damage. So, it's a bit more effective at getting quarters.

local lockMap = {
  ["left arm"] ="armpit",
  ["right arm"] = "armpit",
  ["left leg"] = "thigh",
  ["right leg"] = "thigh",
  ["torso"] = "armpit",
  ["head"] = "neck"
}
local strikeMap = {
  ["left arm"] = "rend left",
  ["right arm"] = "rend right",
  ["left leg"] = "hamstring left",
  ["right leg"] = "hamstring right",
  ["torso"] = "bodypunch",
  ["head"] = "skullwhack"
}

if snd.class == "Shapeshifter" then
	snd.starting_attack()
	function snd.attack_function()
 		if not snd.waiting.queue then
  		local function feralityConvert(limb)
    		return strikeMap[limb]
  		end
  -- list what limbs to hit
  		limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
			local mangled = "nothing"
      local crippled = "nothing"
			local broken = "nothing"
  		for _, limb in pairs(limbs) do
	 			if snd.limb_status[limb] == "mangled" and mangled == "nothing" and (snd.parried_limb~= limb or snd.no_parry()) then
	         if not snd.checkAff("writhe_"..lockMap[limb].."lock") then
            mangled = limb
           end
	 			elseif snd.limb_status[limb] == "broken" and snd.limb_dmg[limb] &lt; 66.66 and broken == "nothing" and (snd.parried_limb~= limb or snd.no_parry()) then
	  			if string.find(limb, "leg") or string.find(limb, "arm") and snd.parried_limb ~= limb then
	   				broken = limb
					end
	 			end
  		end  --end of for loop
      
  		for _, aff in pairs(snd.target_has) do
        if string.find(aff, "_crippled") then
        local limb = aff:gsub("_crippled",""):gsub("_"," ")
      	if snd.limb_status[limb] == "healed" and snd.parried_limb ~= limb then
        	crippled = limb
          break
        end
        end
      end  --end of for loop  
			
			if snd.used.shield then
	 			string = "pounce "..snd.target
				
			elseif snd.checksomeAffs({"writhe_thighlock", "writhe_necklock", "writhe_armpitlock"},1) and not snd.jawlocked and hasSkill("Quarter") then -- check if we can jawlock now!
	 			string = "quarter "..snd.target
  		elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then -- Checking for Jawlock opertunities
				string = "jawlock "..lockMap[mangled].." of "..snd.target
      elseif crippled == "left leg" or crippled =="right leg" and not snd.proned() then
      	string = "destroy "..crippled.." of "..snd.target
			elseif broken ~= "nothing" and not snd.jawlocked then
        string = "mangle "..broken.." of "..snd.target
      elseif crippled ~= "nothing" and not snd.jawlocked then
	 			string = "destroy "..crippled.." of "..snd.target
      else
	 			left = "nothing"
	 			right = "nothing"
	 			for limb in pairs(limbs) do
	  			if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and limbs[limb] ~= snd.last_struck_limb then
		 				if right == "nothing" then
		  				right = feralityConvert(limbs[limb])
		 				elseif left == "nothing" then
		  				left = feralityConvert(limbs[limb])
		 				end
					end
	 			end
	 			if left == "nothing" then -- we only found one limb to hit
	  			left = right -- double up!
	 			end
	 			string = "combo "..snd.target.." "..left.." "..right
			end -- end of primary attacking function setup
				
  		if string ~= snd.last_attack and not snd.waiting.queue then
   			snd.last_attack = string
   			snd.send("qeb "..snd.last_attack)
   			snd.waiting.queue = true
   			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  	end--end the actual attack rolling
 	end --end the main code
end --end the function
--and sending it to the mud
snd.attack_function()   
end -- end the class </script>
								<command></command>
								<packageName></packageName>
								<regex>^quart$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Kill 2</name>
								<script>if snd.class == "Shapeshifter" then    
	snd.starting_attack()
		
	function snd.attack_function()        
 		if not snd.waiting.queue then                    
  		local function feralityConvert(limb)            
    		if string.find(limb, "leg") then              
    		  return "hamstring "..limb:gsub(" leg", "")
    		elseif string.find(limb, "arm") then
      		return "rend "..limb:gsub(" arm", "")
    		elseif limb == "torso" then
      		return "bodypunch"         
    		elseif limb == "head" then
      		return "skullwhack"
    		else
      		return "slash "..limb
    		end
  		end
	
-- Making the table of limbs and damage
  		limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
			mangled = "nothing"
			broken = "nothing"
			crippled = "nothing"
			
			for limb in pairs(limbs) do
	 			if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then -- checking for mangle opertunities
		  		if string.find(limbs[limb], "leg") and not snd.checksomeAffs({"ripped_groin","writhe_thighlock"},1) then	
				 		mangled = limbs[limb]
					elseif limbs[limb] == "head" and not snd.checksomeAffs({"ripped_throat","writhe_necklock"},1) then
				 		mangled = limbs[limb]
					elseif not snd.checksomeAffs({"ripped_spleen","writhe_armpitlock"},1) and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
				 		mangled = limbs[limb]
					end
			 	elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then -- Updating the table with current breaks
			  	if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   				broken = limbs[limb]
					end
	 			elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 33.33 and crippled == "nothing" then -- Updating the table with current cripples
	  			if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
				 		crippled = limbs[limb]
					end
	 			end
			end  --end of for loop       
	
	 		if snd.used.shield then           
		 		string = "pounce "..snd.target
			elseif snd.theyran then
			   string = "neckdrag "..snd.target.." "..snd.neckdragdir
		  elseif snd.checksomeAffs({"ripped_groin", "ripped_throat", "ripped_spleen"},2) then --nom nom nom
				string = "devour "..snd.target            
			elseif snd.checkAff("writhe_necklock") and not snd.checkAff("ripped_throat") then-- Checking for Rip opertunities
				string = "throatrip "..snd.target          
			elseif snd.checkAff("writhe_armpitlock") and not snd.checkAff("ripped_spleen") then-- Checking for Rip opertunities
				string = "spleenrip "..snd.target
			elseif snd.checkAff("writhe_thighlock") and not snd.checkAff("ripped_groin") then-- Checking for Rip opertunities
				string = "groinrip "..snd.target
			elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then -- Checking for Jawlock opertunities
				if string.find(mangled, "leg") and not snd.checkAff("writhe_thighlock")then
	  			string = "jawlock thigh of "..snd.target
	 			elseif mangled == "head" and not snd.checkAff("writhe_necklock") then
	  			string = "jawlock neck of "..snd.target
	 			elseif mangled == "torso" or string.find(mangled, "arm") and not snd.checkAff("writhe_armpitlock") then
	  			string = "jawlock armpit of "..snd.target
				end
			elseif broken ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then  -- Limb escalation
		 		string = "destroy "..broken.." of "..snd.target   
			elseif crippled ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then -- Limb escalation
	 			string = "mangle "..crippled.." of "..snd.target

			else -- build the limb breaks if nothing else major going on
	 			left = "nothing"       
	 			right = "nothing"          
	 			for limb in pairs(limbs) do
	  			if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and not table.contains(snd.target_has, limb.."_crippled") then  
		 				if right == "nothing" then  
		  				right = limbs[limb]
		 				elseif left == "nothing" then  
		  				left = limbs[limb]
		 				end
					end
	 			end
	 
--Doubling up the same attack if only one is found
	 			if left == "nothing" then 
	  			left = right 
	 			end
	 
-- using the feraility convert with what we've made so far
        if snd.defenses.def_fury.state == "deffed" then
          if not snd.checkAff("spinal_rip") and snd.checksomeAffs({"right_leg_broken", "right_arm_broken", "left_leg_broken", "left_arm_broken"},1) then
            string = "spinalrip "..snd.target..snd.sep.."combo "..snd.target.." "..feralityConvert(left).." "..feralityConvert(right) 
          elseif snd.checkAff("head_broken") then
            string = "skullcrush "..snd.target..snd.sep.."combo "..snd.target.." "..feralityConvert(left).." "..feralityConvert(right) 
          elseif snd.checkAff("torso_broken") then
            string = "gut "..snd.target..snd.sep.."combo "..snd.target.." "..feralityConvert(left).." "..feralityConvert(right) 
          else
            string = "spinalrip "..snd.target..snd.sep.."combo "..snd.target.." "..feralityConvert(left).." "..feralityConvert(right) 
          end
        else
          string = "combo "..snd.target.." "..feralityConvert(left).." "..feralityConvert(right)  
        end
			end -- end of primary attacking function setup
	
--queuing it so we can keep the attack rolling
  	if string ~= snd.last_attack and not snd.waiting.queue then   
   		snd.last_attack = string 
   		snd.send("qeb "..snd.last_attack)
   		snd.waiting.queue = true
   		tempTimer(snd.delay(), [[snd.waiting.queue = false]])  
  	end--end the actual attack rolling
 	end --end the main code
end --end the function
--and sending it to the mud
snd.attack_function()   
end -- end the class if
</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>raw damage</name>
								<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 	if not snd.waiting.queue then
  	if snd.used.shield then
   		string = "pounce "..snd.target
		elseif snd.theyran and snd.neckdragdir ~= "none" then
			string = "neckdrag "..snd.target..snd.neckdragdir
		elseif snd.defenses.def_fury.state == "deffed" then
	 		string = "pounce "..snd.target..snd.sep.."combo "..snd.target.." jugular jugular"
		elseif not snd.no_parry() then
	 		string = "combo "..snd.target.." bodypunch jugular"
    elseif not snd.parried_limb == "head" then
      string = "combo "..snd.target.." jugular skullwhack"
		else
	 		string = "combo "..snd.target.." jugular jugular"
		end
  	if string ~= snd.last_attack and not snd.waiting.queue then
   		snd.last_attack = string
   		snd.attack(snd.last_attack)
   		snd.waiting.queue = true
   		tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  	end
 	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Bard</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Team Afflictions</name>
							<script>if snd.class == "Bard" then -- We're a super awesome badass bard, obv

snd.starting_attack() -- always run this first, it does some important resets

function snd.attack_function() -- defining this function is how we tell sunder what to do

	if not snd.waiting.queue then -- don't want to spam, this will prevent that
 
 
 -- if i'm in a rhythm combo, i can't use sword affs.
 
 if snd.rhythm then
    snd.giving = {
    "perplexed",
    "self_loathing",
    "berserking",
    "dazed",
    
     }    

-- Feel free to uncomment this. I have not been able to test it entirely, so ymmv. :)
--  if snd.rhythm
--  and snd.checkAff("fallen")
--  and snd.checkAff("dizziness")
--  and hasSkill("Sock", "Performance")
--  and (string.find((gmcp.Char.Vitals.wield_left), "empty") or  string.find((gmcp.Char.Vitals.wield_right), "empty")) then
--    table.insert(snd.giving, 1, "dazed")
--  end    
    
    
    else
  
  
  -- My affs normally when not in a rhythm combo.
  
    snd.giving = {
--  "misery",
  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
--  "misery",
  "perplexed",
  "shyness",
  "dizziness",
  "weariness",
  "sensitivity",
  "haemophilia",
  "vomiting",
  "allergies",
  "recklessness",
  --"voyria",
  }
  
    
 end
  
		-- declare some important variables, you can add more here if you need
    local canWeave = false
    local canSing = false
    local canPlay = false
    local myinstrument = "saxophone69420" -- put your own instrument's id# here.
    local needInstrument = false
		local string = ""
		local call = ""
    local nextaff = "none"
    local tempoaff = "none"
    -- 1 affliction from snd.giving
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and nextaff == "none"
      and snd.giving[i] ~= snd.needle
    then
      nextaff = snd.giving[i]
    end
  end
  
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and tempoaff == "none"
      and snd.giving[i] ~= snd.needle
      and table.contains(snd.venom_affs, snd.giving[i])
        then
          tempoaff = snd.giving[i]
        end
    end  
   
 
 -- Let's run a check for weaving. If I need to modify this in some way (i.e a support route), I will there. 
  
  if tonumber(gmcp.Char.Vitals.dithering) &lt; 1
  and (string.find((gmcp.Char.Vitals.wield_left), "empty") or  string.find((gmcp.Char.Vitals.wield_right), "empty")) then
			canWeave = true -- Hell yeah brother
  end     
  
  -- Let's run a check for singing. I don't want to sing if it's not cheap. Ymmv on this decision - I will modify it in the support route example.
    
  if not snd.singing
  and snd.halfbeat then
			canSing = true -- I'm an idol
  end    


-- Let's run a check for playing. I will really not be using it in this route,  but it's nice to write and use later.

  if not snd.playing
  and (string.find((gmcp.Char.Vitals.wield_left), myinstrument) or  string.find((gmcp.Char.Vitals.wield_right), myinstrument)) then
			canPlay = true -- Jam out!!
  end 




      
    -- Only cowards and losers spam shield or rebounding &gt;:(
  if snd.used.shield then
      string = "pierce "..snd.target  
  elseif snd.used.rebounding then
      string = "pierce "..snd.target

    -- K, Tempo if you got some big dmg for it.    
  elseif not snd.rhythm
    and snd.checksomeAffs({"paresis", "shyness"}, 2) then
      string = "tempo "..snd.target..snd.effects[tempoaff]
    
    
    -- Addiction check.
  elseif canSing 
    and hasSkill("Decadence", "Songcalling")
    and not snd.checkAff("addiction") then
      string = "sing song of decadence"
  
    -- Sorrow pushing logic.
  elseif canSing
    and hasSkill("Sorrow", "Songcalling")
    and not snd.checksomeAffs({"migraine", "squelched"}, 1) then
      string = "sing song of sorrow" 
      
    -- Let's still efficiently use sing in teams if we can.    
  elseif canSing
    and hasSkill("Youth", "Songcalling") then
      string = "sing song of youth"
        
    -- Dithering Block. 
    -- 
    -- Let's check for globes first. If we don't have destiny up, we need to do that here.
    -- If we do have destiny, we can do it as part of our string later.
    
  elseif canWeave
   and hasSkill("Runeband", "Weaving")
   and not snd.checkAff("runeband") then
        string = "weave runeband "..snd.target
       
        
  elseif canWeave
    and not snd.checkAff("besilence")
    and hasSkill("Headstitch", "Weaving")
    and snd.checkAff("asthma") then
        string = "weave headstitch "..snd.target    
            
     
  elseif canWeave
    and not snd.checkAff("bladestorm")
    and hasSkill("Bladestorm", "Weaving")
    and snd.checkAff("runeband") then
        string = "weave bladestorm "..snd.target
    
    -- Anelace Check 
      
 --     elseif not snd.checkAff("ringing_ears") then
 --       string = "weave soundblast"
        
    --- Balance Block
          
  elseif snd.aff_count_all() &gt; 2
    and not snd.checkAff("magnanimity") then
      string = "ridicule "..snd.target
  
  elseif table.contains(snd.performance_affs, nextaff) then
      string = snd.performance_attacks[nextaff].." "..snd.target
  else    
		  string = "tempo "..snd.target.." "..snd.effects[nextaff]
	 	  call = "wt Afflicting "..snd.target..":"..snd.effects[nextaff]
    end
  
  if snd.balance.inspire
    and hasSkill("Inspire", "Songcalling") then
      string = "inspire"..snd.sep..string
    end

		-- check if we need to prepend an affliction call
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- we don't want to resend our existing attack, so check against that
		if string ~= snd.last_attack and not snd.waiting.queue then
			-- if we've got a new attack now, 
			snd.last_attack = string
			snd.attack(snd.last_attack)
			-- manage the anti-spam check below
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function() -- make sure to actually send the attack once on use!
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^affs$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Team Damage</name>
							<script>if snd.class == "Bard" then -- We're a super awesome badass bard, obv

snd.starting_attack() -- always run this first, it does some important resets

function snd.attack_function() -- defining this function is how we tell sunder what to do

    if not snd.waiting.queue then -- don't want to spam, this will prevent that
 
 
 -- if i'm in a rhythm combo, i can't use sword affs.
 
 if snd.rhythm then
    snd.giving = {
    "perplexed",
    "self_loathing",
    "berserking",
    "dazed",
    
     }    
    
    
    else
  
  
  -- My affs normally when not in a rhythm combo.
  
    snd.giving = {
  "paresis",
  "clumsiness",
  "sensitivity",
  "asthma",
  "shyness",
  "haemophilia",
  "vomiting",
  "allergies",
  "slickness",
  "anorexia",
  "weariness",
  "misery",
  "perplexed",
  "dizziness",
  "recklessness",
  --"voyria",
  }
  
    if not snd.rhythm
    and snd.checkAff("fallen")
    and snd.checkAff("dizziness")
    and hasSkill("Sock", "Performance")
    and (string.find((gmcp.Char.Vitals.wield_left), "empty") or  string.find((gmcp.Char.Vitals.wield_right), "empty")) then
      table.insert(snd.giving, 1, "dazed")
    end   
  
    
    
 end
  
		-- declare some important variables, you can add more here if you need
    local canWeave = false
    local canSing = false
    local canPlay = false
    local myinstrument = "saxophone69420" -- put your own instrument's id# here.
    local needInstrument = false
		local string = ""
		local call = ""
    local nextaff = "none"
    local tempoaff = "none"
    -- 1 affliction from snd.giving
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and nextaff == "none"
      and snd.giving[i] ~= snd.needle
    then
      nextaff = snd.giving[i]
    end
  end
  
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and tempoaff == "none"
      and snd.giving[i] ~= snd.needle
      and table.contains(snd.venom_affs, snd.giving[i])
        then
          tempoaff = snd.giving[i]
        end
    end  
   
 
 -- Let's run a check for weaving. If I need to modify this in some way (i.e a support route), I will there. 
  
  if tonumber(gmcp.Char.Vitals.dithering) &lt; 1
  and (string.find((gmcp.Char.Vitals.wield_left), "empty") or  string.find((gmcp.Char.Vitals.wield_right), "empty")) then
			canWeave = true -- Hell yeah brother
  end     
  
  -- Let's run a check for singing. I don't want to sing if it's not cheap. Ymmv on this decision - I will modify it in the support route example.
    
  if not snd.singing
  and snd.halfbeat then
			canSing = true -- I'm an idol
  end    


-- Let's run a check for playing. I will really not be using it in this route,  but it's nice to write and use later.

  if not snd.playing
  and (string.find((gmcp.Char.Vitals.wield_left), myinstrument) or  string.find((gmcp.Char.Vitals.wield_right), myinstrument)) then
			canPlay = true -- Jam out!!
  end 




      
    -- Only cowards and losers spam shield or rebounding &gt;:(
  if snd.used.shield then
      string = "pierce "..snd.target  
  elseif snd.used.rebounding then
      string = "pierce "..snd.target

    -- K, Tempo if you got some big dmg for it.    
  elseif not snd.rhythm
    and snd.checksomeAffs({"paresis", "shyness"}, 2) then
      string = "tempo "..snd.target.." "..snd.effects[tempoaff]
      call = "wt Afflicting "..snd.target..": "..snd.effects[nextaff]
  
    -- Ringing_ears check.    
  elseif not snd.checkAff("ringing_ears")
    and hasSkill("Soundblast", "Weaving")
    and canWeave then
      string = "weave soundblast"


    -- Unheard Song Check. This is just DMG.
  elseif canSing
    and hasSkill("Unheard", "Songcalling")
    and snd.checkAff("hearing") then
      string = "sing song of the unheard" 
      
    -- Let's still efficiently use sing in teams if we can.    
  elseif canSing
    and hasSkill("Youth", "Songcalling") then
      string = "sing song of youth"
        
    -- Dithering Block. 
    -- 
    -- Let's check for globes first. If we don't have destiny up, we need to do that here.
    -- If we do have destiny, we can do it as part of our string later.


   elseif canWeave
    and hasSkill("Tearing", "Weaving") then
        string = "weave tearing "..snd.target
        
    --- Balance Block
          

  elseif table.contains(snd.performance_affs, nextaff) then
      string = snd.performance_attacks[nextaff].." "..snd.target
  else    
		  string = "tempo "..snd.target.." "..snd.effects[nextaff]
	 	  call = "wt Afflicting "..snd.target..": "..snd.effects[nextaff]
    end
      

  if snd.balance.inspire
  and hasSkill("Inspire", "Songcalling") then
      string = "inspire"..snd.sep..string
    end

		-- check if we need to prepend an affliction call
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- we don't want to resend our existing attack, so check against that
		if string ~= snd.last_attack and not snd.waiting.queue then
			-- if we've got a new attack now, 
			snd.last_attack = string
			snd.attack(snd.last_attack)
			-- manage the anti-spam check below
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function() -- make sure to actually send the attack once on use!
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tdmg$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Support Audience/Allies</name>
							<script>if snd.class == "Bard" then -- We're a super awesome badass bard, obv

snd.starting_attack() -- always run this first, it does some important resets

function snd.attack_function() -- defining this function is how we tell sunder what to do

    if not snd.waiting.queue then -- don't want to spam, this will prevent that
 
 -- if i'm in a rhythm combo, i can't use sword affs.
 
 if snd.rhythm then
    snd.giving = {
    "perplexed",
    "self_loathing",
    "berserking",
    "dazed",
    
     }    

    else
  
  -- My affs normally when not in a rhythm combo.
  
    snd.giving = {
  "misery",
  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
  "perplexed",
  "shyness",
  "dizziness",
  "weariness",
  "sensitivity",
  "haemophilia",
  "vomiting",
  "allergies",
  "recklessness",
  --"voyria",
  }
    
 end
  
		-- declare some important variables, you can add more here if you need
    local canWeave = false
    local canSing = false
    local canPlay = false
    local myinstrument = "ocarina449359" -- put your own instrument's id# here.
    local needInstrument = false
		local string = ""
		local call = ""
    local nextaff = "none"
    local tempoaff = "none"
    -- 1 affliction from snd.giving
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and nextaff == "none"
      and snd.giving[i] ~= snd.needle
    then
      nextaff = snd.giving[i]
    end
  end
  
  for i in pairs(snd.giving) do
    if
      not snd.checkAff(snd.giving[i]) 
      and tempoaff == "none"
      and snd.giving[i] ~= snd.needle
      and table.contains(snd.venom_affs, snd.giving[i])
        then
          tempoaff = snd.giving[i]
        end
    end  
   
 
 -- Let's run a check for weaving. If I need to modify this in some way (i.e a support route), I will there. 
  
  if tonumber(gmcp.Char.Vitals.dithering) &lt; 1
  and (string.find((gmcp.Char.Vitals.wield_left), "empty") or  string.find((gmcp.Char.Vitals.wield_right), "empty")) then
			canWeave = true -- Hell yeah brother
  end     
  
  -- Let's run a check for singing. I don't want to sing if it's not cheap. Ymmv on this decision - I will modify it in the support route example.
    
  if not snd.singing then
			canSing = true -- I'm an idol
  end    


-- Let's run a check for playing. I will really not be using it in this route,  but it's nice to write and use later.

  if not snd.playing
  and (string.find((gmcp.Char.Vitals.wield_left), myinstrument) or  string.find((gmcp.Char.Vitals.wield_right), myinstrument)) then
			canPlay = true -- Jam out!!
  end 




      
    -- Only cowards and losers spam shield or rebounding &gt;:(
  if canPlay
    and hasSkill("Youth", "Songcalling") then
      string = "play song of youth"
      
    -- Let's still efficiently use sing in teams if we can.    
  elseif canSing
    and hasSkill("Youth", "Songcalling") then
      string = "sing song of youth"
        
    -- Dithering Block. 
    -- 
    -- Let's check for globes first. If we don't have destiny up, we need to do that here.
    -- If we do have destiny, we can do it as part of our string later.
    
-- There is no dithering in this route.
-- ... yet.


    --- Balance Block
    
  elseif snd.used.shield then
      string = "pierce "..snd.target  
  elseif snd.used.rebounding then
      string = "pierce "..snd.target
          
  elseif snd.aff_count_all() &gt; 2
    and not snd.checkAff("magnanimity") then
      string = "ridicule "..snd.target
  
  elseif table.contains(snd.performance_affs, nextaff) then
      string = snd.performance_attacks[nextaff].." "..snd.target
  else    
		  string = "tempo "..snd.target.." "..snd.effects[nextaff]
	 	  call = "wt Afflicting "..snd.target..": "..snd.effects[nextaff]
    end
  
  if snd.balance.inspire
    and hasSkill("Inspire", "Songcalling") then
      string = "inspire"..snd.sep..string
    end

		-- check if we need to prepend an affliction call
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- we don't want to resend our existing attack, so check against that
		if string ~= snd.last_attack and not snd.waiting.queue then
			-- if we've got a new attack now, 
			snd.last_attack = string
			snd.attack(snd.last_attack)
			-- manage the anti-spam check below
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function() -- make sure to actually send the attack once on use!
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^supp$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Shadow</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Archivist</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Create Mutagens</name>
								<script>-- create a mutagen called "one" based on chronic narcotic (addiction) somnolent (lethargy) reactive (allergies)
-- create a mutagen called "two" based on chronic narcotic (addiction) atrophic (weariness) degenerative (impairment)
-- create a mutagen called "three" based on damage set chronic psychoactive (masoschism)

snd.send("mutagen new one"..snd.sep.."mutagen one potency chronic"..snd.sep.."mutagen one effect narcotic"..snd.sep.."mutagen one effect somnolent"..snd.sep.."mutagen one effect reactive"..snd.sep.."mutagen one complete")
snd.send("mutagen new two"..snd.sep.."mutagen two potency chronic"..snd.sep.."mutagen two effect narcotic"..snd.sep.."mutagen two effect atrophic"..snd.sep.."mutagen two effect degenerative"..snd.sep.."mutagen two complete")
snd.send("mutagen new three"..snd.sep.."mutagen three potency chronic"..snd.sep.."mutagen three effect narcotic"..snd.sep.."mutagen three effect atrophic"..snd.sep.."mutagen three effect psychoactive"..snd.sep.."mutagen three complete")</script>
								<command></command>
								<packageName></packageName>
								<regex>^muts$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Bud Stuff</name>
								<script>snd.send("drop 234542"..snd.sep.."geo invert"..snd.sep.."qeb geo trace me")</script>
								<command></command>
								<packageName></packageName>
								<regex>^buddrop$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Damage</name>
								<script>if snd.class == "Archivist" then
  snd.starting_attack()
  function snd.attack_function()
  
  local string = ""
  local bioessence = tonumber(gmcp.Char.Vitals.bio) 
  local biostring = "" 
  if tonumber(gmcp.Char.Vitals.bio) &gt; 0 then
    biostring = "bio stimulant"..snd.sep
  end
  local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)

  if not snd.waiting.queue then
    if snd.flying then
      string = string.."touch tentacle "..snd.target..snd.sep
    elseif snd.used.shield then
   	  string = "incite fork "..snd.target
	  elseif snd.theytumbling then
			string = "elicit return "..snd.target.." 3"..biostring -- make them return in 3 seconds, no running
    elseif hp &lt;= 70 and not snd.knit and bioessence &gt; 0 then
      string = "bio knitting"
    elseif hp &lt;= 60 and bioessence &gt; 1 and not snd.balance.ethereal then
      string = "bio ethereal"
    else
      if snd.checkAff("blackout") and not snd.checkAff("patterns") then -- if crescent ticks blackout, go ahead and throw patterns for repeat crux
        string = "geo pattern "..snd.target..snd.sep
      elseif snd.my_incite == "Crescent" then -- if you incited crescent, go ahead and rod them so they can't teleport away
        string = "geo impress rod"..snd.sep.."incite crux "..snd.target..snd.sep..biostring..snd.sep..biostring..snd.sep
      elseif snd.my_incite ~= "Crescent" and snd.crescentable then -- if you can crescent, do it
        string = "geo impress star"..snd.sep.."incite crescent " ..snd.target..snd.sep
      else
        string = "geo impress star"..snd.sep.."incite crux "..snd.target..snd.sep..biostring..snd.sep..biostring..snd.sep
      end         
    end
      
      if string:find("jab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield left dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
  
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
  
 end
 
end

snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Afflictions</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Aff</name>
								<script>if snd.class == "Archivist" then

  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local touse2 = {}
      local tohit = {}
      local string = "" 
      local biostring = ""
      local empowerstring = ""
      local impressstring = ""
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      if bioessence &gt; 0 then
        biostring = "bio stimulant"..snd.sep
      else 
        biostring = ""
      end
				
			snd.giving = {
				"dizziness",
        "faintness",
        "epilepsy",
        "shyness",
        "laxity",
        "lovers_effect",
        "peace",
        "magnanimity",
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			}
      
      snd.giving_venom = {
		  "paresis",
		  "clumsiness",
		  "sensitivity",
		  "asthma",
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "left_arm_crippled",
		  "right_arm_crippled",
		  "vomiting",
		  "allergies",
		  }
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
      
    for k in pairs(snd.giving_venom) do
		  if not snd.checkAff(snd.giving_venom[k]) then
        if not table.contains(touse2, snd.giving_venom[k]) then
          table.insert(touse2, snd.giving_venom[k])
        end
			end
		end
		for aff in pairs(touse2) do
		  table.insert(tohit, snd.effects[touse2[aff]])
		end
      
      echo("\nMutagen Given by: "..snd.mutmaster.." Bioessence: "..bioessence.." Physicals: "..physcount.." Mentals: "..mentcount)
			
      if snd.empowerready then
        if physcount &gt;= 3 and mentcount &gt;= 3 then
          empowerstring = "empower rafic"..snd.sep
        elseif snd.balance.madness then
          empowerstring = "empower jhako"..snd.sep 
        else
          empowerstring = ""        
        end
      end
      
      if snd.my_impress == "" then
        impressstring = "geo impress swirl"..snd.sep
      elseif not snd.checkAff("vomiting") and (mentcount &gt; 3 and mentcount &lt; 12) then
        if snd.my_impress ~= "Bloom" then
          impressstring = "geo impress bloom"..snd.sep
        end
      elseif not snd.checkAff("paresis") and snd.checksomeAffs({"faintness", "dizziness", "epilepsy"}, 2) and not snd.checkAff("mental_disruption") then
        if snd.my_impress ~= "Star" then
          impressstring = "geo impress star"..snd.sep
        end
      elseif not snd.checkAff("mental_disruption") then
        if snd.my_impress ~= "Swirl" then
          impressstring = "geo impress swirl"..snd.sep
        end
      elseif not snd.checkAff("hypochondria") then
        if snd.my_impress ~= "Hex" then
          impressstring = "geo impress hex"..snd.sep
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield then
      	string = impressstring.."incite fork "..snd.target..snd.sep -- break shield
			elseif snd.theytumbling then
				string = impressstring.."elicit return "..snd.target.." 3" -- make them return in 3 seconds, no running
			elseif hp &lt;= 70 and bioessence &gt; 1 then
				if not snd.balance.ethereal and hasSkill("Ethereal") then
					string = "bio ethereal"
				end
			elseif physcount &gt;= 3 and mentcount &gt;= 3 and snd.my_mutagen then -- only do this if your revelation is on them
        string = empowerstring..impressstring.."elicit unravel "..snd.target..snd.sep
      elseif snd.mutmaster == "" and not snd.my_mutagen and bioessence &gt; 1 then
        string = impressstring.."bio infect "..snd.target.." with one"..snd.sep.."bio steroid"..snd.sep
      elseif physcount &lt;= 1 and mentcount &gt;= 3 then
        string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep.."bio steroid"..snd.sep
      elseif not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and snd.balance.madness then
        string = empowerstring..impressstring.."elicit madness "..snd.target..snd.sep
      elseif not snd.checkAff("patterns") then
				string = impressstring.."geo pattern "..snd.target..snd.sep	
      else
          if #touse &gt; 0 then
				    if not snd.conjoin then
              if not snd.checkAff("merciful") then
                string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep
              else
					      string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                call = "wt Afflicting "..snd.target..": "..touse[1]
              end
				    else
					    string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
              call = "wt Afflicting "..snd.target..": "..touse[1]
				    end
          else
            if snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				      string = impressstring.."incite hex " ..snd.target..snd.sep
            else
              string = impressstring.."elicit affliction " ..snd.target..snd.sep
            end
          end
      end
      
      if string:find("jab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield left dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
      if not string.find(gmcp.Char.Vitals.wield_right, "codex") then
        string = "quickwield right codex"..snd.sep..string
      end

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
  end
  
snd.attack_function()

end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Old 1v1</name>
								<script>if snd.class == "Archivist" then
snd.starting_attack()
function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local touse2 = {}
      local tohit = {}
      local string = "" 
      local biostring = ""
      local constring = ""
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      if bioessence &gt; 1 then
        biostring = "bio stimulant"..snd.sep
      end
				
			snd.giving = {
				"dizziness",
        "faintness",
        "epilepsy",
        "shyness",
        "laxity",
        "lovers_effect",
        "peace",
        "magnanimity",
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			}
      
      snd.giving_venom = {
		  "paresis",
		  "clumsiness",
		  "asthma",
		  "vomiting",
		  "allergies",
		  "sensitivity",
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "left_arm_crippled",
		  "right_arm_crippled",
		  }
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
      
    for k in pairs(snd.giving_venom) do
		  if not snd.checkAff(snd.giving_venom[k]) then
        if not table.contains(touse2, snd.giving_venom[k]) then
          table.insert(touse2, snd.giving_venom[k])
        end
			end
		end
		for aff in pairs(touse2) do
		  table.insert(tohit, snd.effects[touse2[aff]])
		end
      
      echo("\nMutagen Given by: "..snd.mutmaster.." Bioessence: "..bioessence.." Physicals: "..physcount.." Mentals: "..mentcount)
      
      if snd.used.shield then
      	string = "incite fork "..snd.target..snd.sep..biostring -- break shield
			elseif snd.theytumbling then
				string = "empower jhako"..snd.sep.."elicit return "..snd.target.." 3"..biostring -- make them return in 3 seconds, no running
			elseif physcount &gt;= 3 and mentcount &gt;= 3 then -- only do this if your revelation is on them
        if snd.empowerready then
					string = "empower rafic"..snd.sep.."elicit unravel "..snd.target..snd.sep..biostring -- try to hit transcend even if they run last minute
        else
       	  string = "elicit unravel "..snd.target..snd.sep..biostring -- transcend
				end
      elseif snd.mutmaster == "" and not snd.my_mutagen and bioessence &gt; 0 then
        string = "bio infect "..snd.target.." with one"..snd.sep.."bio steroid"..snd.sep -- if no one else has been seen to place a revelation, do it
			elseif physcount &lt;= 2 and mentcount &gt; 2 then
        if bioessence &gt; 0 and not snd.checkAff("addiction") then
          string = "geo impress swirl"..snd.sep.."bio flare "..snd.target..snd.sep..biostring
        else
          if snd.checkAff("blackout") then
            string = "geo impress swirl"..snd.sep.."jab "..snd.target.." "..tohit[1]..snd.sep.."bio steroid"
            snd.tailstrike = tohit[1]
          elseif not snd.growth and bioessence &gt; 2 then
            string = "bio growth " ..snd.target.. "" ..snd.sep
          end
        end
      elseif (snd.checksomeAffs({"faintness", "dizziness"}, 2) or snd.checksomeAffs({"shyness", "laxity"}, 1)) and not snd.checkAff("lemniscate") then
				string = "geo impress hex" ..snd.sep.. "incite lemniscate " ..snd.target.. "" ..snd.sep..biostring
			elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				string = "geo impress hex" ..snd.sep.. "geo matrix " ..snd.target.. "" ..snd.sep
			elseif snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") then
        string = "geo impress star"..snd.sep.."incite crescent " ..snd.target..snd.sep..biostring
      elseif not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 1) and not snd.balance.madness then
        if snd.empowerready then
          string = "empower jhako"..snd.sep.."geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep..biostring
        elseif not snd.checkAff("vomiting") and (mentcount == 6 or mentcount == 12) then
          string = "geo impress bloom" ..snd.sep.. "elicit madness " ..snd.target.. "" ..snd.sep..biostring
				else
					string = "geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep..biostring
				end
			elseif not snd.checkAff("patterns") and snd.checkAff("blackout") then
				string = "geo pattern "..snd.target..snd.sep..biostring		
			elseif snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 3) and not snd.my_incite == "Hex"  then
				string = "incite hex " ..snd.target.. "" ..snd.sep..biostring
			--elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				--string = "geo impress hex" ..snd.sep.. "geo matrix " ..snd.target.. "" ..snd.sep
			elseif (mentcount == 6 or mentcount == 12) and not snd.checkAff("vomiting") then 
				if not snd.conjoin then
					string = "geo impress bloom" ..snd.sep.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring
				else
					string = "geo impress bloom" ..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring
				end
			elseif mentcount &gt; 6 and physcount == 1 and not snd.checkAff("addiction") and bioessence &gt; 0 and not snd.growth then
				string = "bio growth " ..snd.target.. "" ..snd.sep
			elseif not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and not snd.balance.madness then
          if snd.empowerready then
            string = string.."empower jhako"..snd.sep.."geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep
					else
						string = string.."geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep
					end
      elseif not snd.checkAff("patterns") and snd.checksomeAffs({"lemniscate","matrix"}, 1) then
				string = "empower rafic"..snd.sep.."geo pattern "..snd.target..snd.sep		
			elseif (mentcount == 2 or mentcount == 7) and not snd.checkAff("vomiting") and not snd.balance.madness then 
				string = "empower jhako" ..snd.sep.. "geo impress bloom" ..snd.sep.. "elicit madness " ..snd.target.. "" ..snd.sep
			elseif (mentcount == 4 or mentcount == 9) and not snd.checkAff("vomiting") then 
				if not snd.conjoin then
					string = "empower jhako"..snd.sep.."geo impress bloom" ..snd.sep.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
				else
					string = "empower jhako"..snd.sep.."geo impress bloom" ..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
				end
			elseif mentcount &gt; 6 and physcount == 1 and not snd.checkAff("addiction") and bioessence &gt; 0 and not snd.growth then
				string = "empower jhako"..snd.sep.."geo impress bloom" ..snd.sep.."bio growth " ..snd.target.. "" ..snd.sep
			elseif mentcount &gt; 5 and physcount &lt; 2 and not snd.my_incite == "Hex"  then
				string = "empower jhako"..snd.sep.."geo impress star" ..snd.sep.. "incite hex " ..snd.target.. "" ..snd.sep
			elseif snd.checksomeAffs({"faintness", "dizziness"}, 2) or snd.checksomeAffs({"shyness", "laxity"}, 1) and not snd.checkAff("lemniscate") then
				string = "empower ef'tig"..snd.sep.."geo impress hex" ..snd.sep.. "incite lemniscate " ..snd.target.. "" ..snd.sep
			elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				string = "empower jhako"..snd.sep.."geo impress hex" ..snd.sep.. "geo matrix " ..snd.target.. "" ..snd.sep
			elseif snd.checksomeAffs({"dizziness", "faintness", "epilepsy", "shyness"}, 4) and not snd.checkAff("sealing_square") then
				string = "geo impress hex"..snd.sep.."geo sealing square " ..snd.target.. "" ..snd.sep
			elseif snd.checksomeAffs({"laxity", "lovers_effect", "peace", "magnanimity"}, 4) and not snd.checkAff("sealing_triangle") then
				string = "geo impress hex"..snd.sep.."geo sealing triangle " ..snd.target.. "" ..snd.sep
			elseif snd.checksomeAffs({"merciful", "masochism", "berserking", "recklessness"}, 4) and not snd.checkAff("sealing_circle") then
				string = "geo impress hex"..snd.sep.."geo sealing circle " ..snd.target.. "" ..snd.sep
      elseif snd.checksomeAffs({"sealing_circle", "sealing_triangle", "sealing_square"}, 3) then
        string = "geo impress hex"..snd.sep.."crux " ..snd.target.. "" ..snd.sep
			else
				if not snd.conjoin then
					string = "geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring
          call = "wt Afflicting "..snd.target..": "..touse[1]
				else
					string = "geo impress hex"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring
          call = "wt Afflicting "..snd.target..": "..touse[1]
				end
      end

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^old$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>New 1v1</name>
								<script>if snd.class == "Archivist" then

  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local touse2 = {}
      local tohit = {}
      local string = "" 
      local empowerstring = ""
      local impressstring = ""
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      
      local activelock = false
      local asthmacover = false
  
      if snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")) then
        asthmacover = true
      end
  
      if asthmacover and snd.have_aff("asthma") and (snd.have_aff("slickness") or snd.have_aff("slough")) and snd.have_aff("anorexia") then
        activelock = true
      elseif asthmacover and (snd.have_aff("slickness") or snd.have_aff("slough")) and (snd.have_aff("left_leg_crippled") or snd.have_aff("right_leg_crippled")) and snd.have_aff("fallen") then
        activelock = true
      elseif snd.have_aff("asthma") and (snd.have_aff("slickness") or snd.have_aff("slough")) and snd.have_aff("anorexia") and (snd.have_aff("impatience") or snd.have_aff("stupidity") or snd.have_aff("egocentric")) then
        activelock = true
      end
  
      if asthmacover then
        activelock = true
      end 
      
      if snd.timer_check("focus", .2, "more than") then
        snd.giving = {
				"laxity",
        "dizziness",        
        "faintness",
        "epilepsy",
        "shyness",        
        "lovers_effect",
        "peace",
        "magnanimity",        
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			 }
      else
        snd.giving = {
				"dizziness",
        "faintness",
        "epilepsy",
        "shyness",
        "laxity",
        "lovers_effect",
        "peace",
        "magnanimity",
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			 }
       
      end
      
      if snd.timer_check("fitness", .2, "more than") then
        snd.giving_venom = {
          "clumsiness",
          "asthma",
          "paresis",
				  "slickness",
          "anorexia",
		      "sensitivity",
		      "vomiting",
		      "allergies",
		      "asthma",
		      "left_leg_crippled",
		      "right_leg_crippled",
		      "left_arm_crippled",
		      "right_arm_crippled",
          }	
      elseif snd.timer_check("focus", .2, "more than") then	 
        snd.giving_venom = {
          "anorexia",
		      "clumsiness",
          "asthma",
          "paresis",
				  "slickness",
          "sensitivity",
		      "vomiting",
		      "allergies",
		      "asthma",
		      "left_leg_crippled",
		      "right_leg_crippled",
		      "left_arm_crippled",
		      "right_arm_crippled",
          } 
      else      
        snd.giving_venom = {
		    "paresis",
		    "clumsiness",
		    "sensitivity",
		    "vomiting",
		    "allergies",
		    "asthma",
		    "left_leg_crippled",
		    "right_leg_crippled",
		    "left_arm_crippled",
		    "right_arm_crippled",
		    }
      end
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
      
    for k in pairs(snd.giving_venom) do
		  if not snd.checkAff(snd.giving_venom[k]) then
        if not table.contains(touse2, snd.giving_venom[k]) then
          table.insert(touse2, snd.giving_venom[k])
        end
			end
		end
		for aff in pairs(touse2) do
		  table.insert(tohit, snd.effects[touse2[aff]])
		end
      
      echo("\nMutagen Given by: "..snd.mutmaster.." Bioessence: "..bioessence.." Physicals: "..physcount.." Mentals: "..mentcount)
			
      if snd.empowerready then
        if physcount &gt;= 3 and mentcount &gt;= 3 then
          empowerstring = "empower rafic"..snd.sep
        elseif activelock and (snd.not_aff("paresis") or snd.not_aff("paralysis")) and not snd.balance.fitness then
          empowerstring = "empower yuef"..snd.sep
        elseif snd.balance.madness then
          empowerstring = "empower jhako"..snd.sep 
        else
          empowerstring = ""        
        end
      end
      
      if snd.my_impress == "" then
        impressstring = "geo impress swirl"..snd.sep
      elseif not snd.checkAff("vomiting") and (mentcount &gt; 3 and mentcount &lt; 12) then
        if snd.my_impress ~= "Bloom" then
          impressstring = "geo impress bloom"..snd.sep
        end
      elseif (not snd.checkAff("paresis") and snd.checksomeAffs({"faintness", "dizziness", "epilepsy"}, 2) and not snd.checkAff("mental_disruption")) or snd.instakilltarget == snd.target then
        if snd.my_impress ~= "Star" then
          impressstring = "geo impress star"..snd.sep
        end
      elseif not snd.checkAff("mental_disruption") and snd.timer_check("focus", .2, "more than") then
        if snd.my_impress ~= "Swirl" then
          impressstring = "geo impress swirl"..snd.sep
        end
      elseif not snd.checkAff("hypochondria") then
        if snd.my_impress ~= "Hex" then
          impressstring = "geo impress hex"..snd.sep
        end
      end
      
      if activelock and (snd.not_aff("paresis") or snd.not_aff("paralysis")) and not snd.balance.fitness then
        string = string.."elicit recollection"..snd.sep
      elseif snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield then
      	string = impressstring.."incite fork "..snd.target..snd.sep
			elseif snd.theytumbling then
				string = impressstring.."elicit return "..snd.target.." 3"..snd.sep
			elseif snd.instakilltarget == snd.target then
        string = impressstring.."jab "..snd.target.." curare"..snd.sep
      elseif physcount &gt;= 3 and mentcount &gt;= 3 and snd.my_mutagen then
        string = empowerstring..impressstring.."elicit unravel "..snd.target 
      elseif snd.mutmaster == "" and not snd.my_mutagen and bioessence &gt; 0 then
        string = impressstring.."bio infect "..snd.target.." with one"..snd.sep
        if bioessence &gt;= 1 then
          string = string.."bio steroid"..snd.sep
        end
      elseif physcount &lt;= 2 and not snd.my_incite == "Hex"  then
				string = impressstring.."incite hex " ..snd.target..snd.sep 
			elseif physcount &gt;= 1 and mentcount &gt;= 5 then
        if bioessence &gt; 1 and not snd.checkAff("addiction") then
          string = impressstring.."bio flare "..snd.target..snd.sep
        else
          if snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") and not snd.checkAff("lemniscate") then
            string = impressstring.."incite crescent " ..snd.target..snd.sep
          elseif not snd.growth and bioessence &gt;= 2 then
            string = impressstring.."bio growth " ..snd.target..snd.sep
          elseif snd.checkAff("blackout") or mentcount &gt;= 6 then
            string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
            if bioessence &gt;= 1 then
              string = string.."bio steroid"..snd.sep
            end
          else
            if #touse &gt;= 1 then
              if not snd.conjoin then
                if not snd.checkAff("merciful") then
                  string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep
                  call = "wt Afflicting "..snd.target..": "..touse[1]
                else
					         string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                   call = "wt Afflicting "..snd.target..": "..touse[1]
                end
				      else
					       string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                 call = "wt Afflicting "..snd.target..": "..touse[1]
				      end
              if bioessence &gt;= 1 then
                string = string.."bio stimulant"..snd.sep
              end
            else
              if snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				        string = impressstring.."incite hex " ..snd.target..snd.sep
              else
                string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
                if bioessence &gt;= 1 then
                  string = string.."bio steroid"..snd.sep
                end
              end
            end
          end
        end
      elseif not snd.checkAff("patterns") and (snd.checksomeAffs({"lemniscate", "matrix"}, 1) or snd.timer_check("focus", .2, "more than")) then
				string = impressstring.."geo pattern "..snd.target..snd.sep	
      elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				string = impressstring.."geo matrix " ..snd.target..snd.sep
			elseif not snd.checksomeAffs({"sealing_circle", "sealing_triangle", "sealing_square"}, 2) then
        if not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and snd.balance.madness then
          string = empowerstring..impressstring.."elicit madness "..snd.target..snd.sep
        elseif (snd.checksomeAffs({"faintness","dizziness","shyness","laxity"}, 2)) and not snd.checkAff("lemniscate") then
				  string = impressstring.."incite lemniscate " ..snd.target..snd.sep
        elseif snd.checksomeAffs({"dizziness", "faintness", "epilepsy", "shyness"}, 4) and not snd.checkAff("sealing_square") then
				  string = impressstring.."geo sealing square " ..snd.target..snd.sep
			  elseif snd.checksomeAffs({"laxity", "lovers_effect", "peace", "magnanimity"}, 4) and not snd.checkAff("sealing_triangle") then
				  string = impressstring.."geo sealing triangle " ..snd.target..snd.sep 
			  elseif snd.checksomeAffs({"merciful", "masochism", "berserking", "recklessness"}, 4) and not snd.checkAff("sealing_circle") then
				  string = impressstring.."geo sealing circle " ..snd.target..snd.sep
        else
          if #touse &gt; 0 then
				    if not snd.conjoin then
              if not snd.checkAff("merciful") then
                string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep
              else
					      string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                call = "wt Afflicting "..snd.target..": "..touse[1]
              end
				    else
					    string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
              call = "wt Afflicting "..snd.target..": "..touse[1]
				    end
            if bioessence &gt;= 1 then
              string = string.."bio stimulant"..snd.sep
            end 
          else
            if snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				      string = impressstring.."incite hex " ..snd.target..snd.sep.."bio steroid"..snd.sep
            else
              string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
              if bioessence &gt;= 1 then
                string = string.."bio steroid"..snd.sep
              end
            end
          end
        end
			else
        if snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") then
          string = impressstring.."incite crescent " ..snd.target..snd.sep
        else
          string = impressstring.."incite crux " ..snd.target..snd.sep
        end
      end
      
      if string:find("jab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield left dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
  end
  
snd.attack_function()

end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Aff into Unravel</name>
								<script>if snd.class == "Archivist" then

  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local touse2 = {}
      local tohit = {}
      local string = "" 
      local empowerstring = ""
      local impressstring = ""
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
				
			snd.giving = {
				"dizziness",
        "faintness",
        "epilepsy",
        "shyness",
        "laxity",
        "lovers_effect",
        "peace",
        "magnanimity",
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			}
      
      snd.giving_venom = {
		  "paresis",
		  "clumsiness",
		  "sensitivity",
		  "vomiting",
		  "allergies",
		  "asthma",
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "left_arm_crippled",
		  "right_arm_crippled",
		  }
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
      
    for k in pairs(snd.giving_venom) do
		  if not snd.checkAff(snd.giving_venom[k]) then
        if not table.contains(touse2, snd.giving_venom[k]) then
          table.insert(touse2, snd.giving_venom[k])
        end
			end
		end
		for aff in pairs(touse2) do
		  table.insert(tohit, snd.effects[touse2[aff]])
		end
      
      echo("\nMutagen Given by: "..snd.mutmaster.." Bioessence: "..bioessence.." Physicals: "..physcount.." Mentals: "..mentcount)
			
      if snd.empowerready then
        if physcount &gt;= 3 and mentcount &gt;= 3 then
          empowerstring = "empower rafic"..snd.sep
        elseif snd.balance.madness then
          empowerstring = "empower jhako"..snd.sep 
        else
          empowerstring = ""        
        end
      end
      
      if snd.my_impress == "" then
        impressstring = "geo impress swirl"..snd.sep
      elseif not snd.checkAff("vomiting") and (mentcount &gt; 3 and mentcount &lt; 12) then
        if snd.my_impress ~= "Bloom" then
          impressstring = "geo impress bloom"..snd.sep
        end
      elseif (not snd.checkAff("paresis") and snd.checksomeAffs({"faintness", "dizziness", "epilepsy"}, 2) and not snd.checkAff("mental_disruption")) or snd.instakilltarget == snd.target then
        if snd.my_impress ~= "Star" then
          impressstring = "geo impress star"..snd.sep
        end
      elseif not snd.checkAff("mental_disruption") then
        if snd.my_impress ~= "Swirl" then
          impressstring = "geo impress swirl"..snd.sep
        end
      elseif not snd.checkAff("hypochondria") then
        if snd.my_impress ~= "Hex" then
          impressstring = "geo impress hex"..snd.sep
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield then
      	string = impressstring.."incite fork "..snd.target..snd.sep
			elseif snd.theytumbling then
				string = impressstring.."elicit return "..snd.target.." 3"
			elseif snd.instakilltarget == snd.target then
        string = impressstring.."jab "..snd.target.." curare"..snd.sep
      elseif physcount &gt;= 3 and mentcount &gt;= 3 and snd.my_mutagen then
        string = empowerstring..impressstring.."elicit unravel "..snd.target 
      elseif snd.mutmaster == "" and not snd.my_mutagen and bioessence &gt; 0 then
        string = impressstring.."bio infect "..snd.target.." with one"..snd.sep.."bio steroid"..snd.sep
      elseif physcount &lt;= 2 and not snd.my_incite == "Hex"  then
				string = impressstring.."incite hex " ..snd.target..snd.sep 
			elseif physcount &gt;= 1 and mentcount &gt;= 5 then
        if bioessence &gt; 1 and not snd.checkAff("addiction") then
          string = impressstring.."bio flare "..snd.target..snd.sep
        else
          if snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") and not snd.checkAff("lemniscate") then
            string = impressstring.."incite crescent " ..snd.target..snd.sep
          elseif snd.checkAff("blackout") then
            string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
            snd.tailstrike = tohit[1]
            if bioessence &gt;= 1 then
              string = string.."bio steroid"..snd.sep
            end
          elseif not snd.growth and bioessence &gt;= 2 then
            string = impressstring.."bio growth " ..snd.target..snd.sep
          else
            if #touse &gt; 0 then
              if not snd.conjoin then
                if not snd.checkAff("merciful") then
                  string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep
                  call = "wt Afflicting "..snd.target..": "..touse[1]
                else
					         string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring 
                   call = "wt Afflicting "..snd.target..": "..touse[1]
                end
				      else
					       string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                 call = "wt Afflicting "..snd.target..": "..touse[1]
				      end
              if bioessence &gt;= 1 then
                string = string.."bio stimulant"..snd.sep
              end
            else
              if snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				        string = impressstring.."incite hex " ..snd.target..snd.sep
              else
                string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
                snd.tailstrike = tohit[1]
                if bioessence &gt;= 1 then
                  string = string.."bio steroid"..snd.sep
                end
              end
            end
          end
        end
      --elseif snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") and not snd.checkAff("lemniscate") then
      --  string = impressstring.."incite crescent " ..snd.target..snd.sep
      elseif not snd.checkAff("patterns") and snd.checksomeAffs({"lemniscate", "matrix"}, 1) then
				string = impressstring.."geo pattern "..snd.target..snd.sep	
      elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				string = impressstring.."geo matrix " ..snd.target..snd.sep
			elseif not snd.checksomeAffs({"sealing_circle", "sealing_triangle", "sealing_square"}, 2) then
        if not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and snd.balance.madness then
          string = empowerstring..impressstring.."elicit madness "..snd.target..snd.sep
        elseif (snd.checksomeAffs({"faintness","dizziness","shyness","laxity"}, 2)) and not snd.checkAff("lemniscate") then
				  string = impressstring.."incite lemniscate " ..snd.target..snd.sep
        elseif snd.checksomeAffs({"dizziness", "faintness", "epilepsy", "shyness"}, 4) and not snd.checkAff("sealing_square") then
				  string = impressstring.."geo sealing square " ..snd.target..snd.sep
			  elseif snd.checksomeAffs({"laxity", "lovers_effect", "peace", "magnanimity"}, 4) and not snd.checkAff("sealing_triangle") then
				  string = impressstring.."geo sealing triangle " ..snd.target..snd.sep 
			  elseif snd.checksomeAffs({"merciful", "masochism", "berserking", "recklessness"}, 4) and not snd.checkAff("sealing_circle") then
				  string = impressstring.."geo sealing circle " ..snd.target..snd.sep
        else
          if #touse &gt; 0 then
				    if not snd.conjoin then
              if not snd.checkAff("merciful") then
                string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep
              else
					      string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
                call = "wt Afflicting "..snd.target..": "..touse[1]
              end
				    else
					    string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep
              call = "wt Afflicting "..snd.target..": "..touse[1]
				    end
            if bioessence &gt;= 1 then
              string = string.."bio stimulant"..snd.sep
            end 
          else
            if snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				      string = impressstring.."incite hex " ..snd.target..snd.sep
            else
              string = impressstring.."jab "..snd.target.." "..tohit[1]..snd.sep
              snd.tailstrike = tohit[1]
              if bioessence &gt;= 1 then
                string = string.."bio steroid"..snd.sep
              end
            end
          end
        end
			else
        if snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") then
          string = impressstring.."incite crescent " ..snd.target..snd.sep..biostring
        else
          string = impressstring.."incite crux " ..snd.target..snd.sep
        end
      end
      
      if string:find("jab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield left dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
  end
  
snd.attack_function()

end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Try to Just Seal and Kill</name>
								<script>if snd.class == "Archivist" then

  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local touse2 = {}
      local tohit = {}
      local string = "" 
      local biostring = ""
      local empowerstring = ""
      local impressstring = ""
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      if bioessence &gt; 0 then
        biostring = "bio stimulant"..snd.sep
      else 
        biostring = ""
      end
				
			snd.giving = {
				"dizziness",
        "faintness",
        "epilepsy",
        "shyness",
        "laxity",
        "lovers_effect",
        "peace",
        "magnanimity",
        "merciful",
        "masochism",
        "berserking",
        "recklessness",
			}
      
      snd.giving_venom = {
		  "paresis",
		  "clumsiness",
		  "sensitivity",
		  "asthma",
		  "left_leg_crippled",
		  "right_leg_crippled",
		  "left_arm_crippled",
		  "right_arm_crippled",
		  "vomiting",
		  "allergies",
		  }
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
      
      echo("\nMutagen Given by: "..snd.mutmaster.." Bioessence: "..bioessence.." Physicals: "..physcount.." Mentals: "..mentcount)
			
      if snd.empowerready then
        if snd.balance.madness then
          empowerstring = "empower jhako"..snd.sep 
        else
          empowerstring = ""        
        end
      end
      
      if snd.my_impress == "" then
        impressstring = "geo impress swirl"..snd.sep
      elseif not snd.checkAff("vomiting") and (mentcount &gt; 3 and mentcount &lt; 12) then
        if snd.my_impress ~= "Bloom" then
          impressstring = "geo impress bloom"..snd.sep
        end
      elseif not snd.checkAff("paresis") and snd.checksomeAffs({"faintness", "dizziness", "epilepsy"}, 2) and not snd.checkAff("mental_disruption") then
        if snd.my_impress ~= "Star" then
          impressstring = "geo impress star"..snd.sep
        end
      elseif not snd.checkAff("mental_disruption") then
        if snd.my_impress ~= "Swirl" then
          impressstring = "geo impress swirl"..snd.sep
        end
      elseif not snd.checkAff("hypochondria") then
        if snd.my_impress ~= "Hex" then
          impressstring = "geo impress hex"..snd.sep
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield then
      	string = impressstring.."incite fork "..snd.target..snd.sep..biostring -- break shield
			elseif snd.theytumbling then
				string = impressstring.."elicit return "..snd.target.." 3"..biostring -- make them return in 3 seconds, no running
			elseif snd.mutmaster == "" and not snd.my_mutagen and bioessence &gt; 1 then
        string = impressstring.."bio infect "..snd.target.." with one"..snd.sep.."bio steroid"..snd.sep
      elseif snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") and not snd.checkAff("lemniscate") then
        string = impressstring.."incite crescent " ..snd.target..snd.sep..biostring
      elseif not snd.checkAff("patterns") and snd.checksomeAffs({"lemniscate", "matrix"}, 1) then
				string = impressstring.."geo pattern "..snd.target..snd.sep..biostring	
      elseif snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
				string = impressstring.."geo matrix " ..snd.target..snd.sep..biostring 
			elseif not snd.checksomeAffs({"sealing_circle", "sealing_triangle", "sealing_square"}, 2) then
        if not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and snd.balance.madness then
          string = empowerstring..impressstring.."elicit madness "..snd.target..snd.sep..biostring 
        elseif (snd.checksomeAffs({"faintness","dizziness","shyness","laxity"}, 2)) and not snd.checkAff("lemniscate") then
				  string = impressstring.."incite lemniscate " ..snd.target..snd.sep..biostring
        elseif snd.checksomeAffs({"dizziness", "faintness", "epilepsy", "shyness"}, 4) and not snd.checkAff("sealing_square") then
				  string = impressstring.."geo sealing square " ..snd.target..snd.sep
			  elseif snd.checksomeAffs({"laxity", "lovers_effect", "peace", "magnanimity"}, 4) and not snd.checkAff("sealing_triangle") then
				  string = impressstring.."geo sealing triangle " ..snd.target..snd.sep..biostring 
			  elseif snd.checksomeAffs({"merciful", "masochism", "berserking", "recklessness"}, 4) and not snd.checkAff("sealing_circle") then
				  string = impressstring.."geo sealing circle " ..snd.target..snd.sep
        else
				  if not snd.conjoin then
            if not snd.checkAff("merciful") then
              string = impressstring.."geo conjoin"..snd.sep.."incite circle "..snd.target..snd.sep..biostring
            else
					    string = impressstring.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring 
              call = "wt Afflicting "..snd.target..": "..touse[1]
            end
				  else
					  string = impressstring.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep 
            call = "wt Afflicting "..snd.target..": "..touse[1]
				  end
        end
			else
        if snd.my_incite ~= "Crescent" and snd.crescentable and not snd.checkAff("blackout") then
          string = impressstring.."incite crescent " ..snd.target..snd.sep..biostring
        elseif snd.hexcount == 0 and not snd.my_incite == "Hex"  then
				  string = impressstring.."incite hex " ..snd.target..snd.sep 			
        else
          string = impressstring.."incite crux " ..snd.target..snd.sep
        end
      end
      
      if string:find("jab") then
        if not string.find(gmcp.Char.Vitals.wield_left, "dirk") then
          string = "quickwield left dirk"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
  end
  
snd.attack_function()

end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Carnifex</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Hounds</name>
								<script>if string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
  snd.send("qeb hound dismiss warhound"..snd.sep.."hound dismiss warhound"..snd.sep.."hound dismiss warhound"..snd.sep.."hound recall 261730"..snd.sep.."hound recall 345574"..snd.sep.."hound recall 378270")
else
  snd.send("qeb hound dismiss warhound"..snd.sep.."hound dismiss warhound"..snd.sep.."hound dismiss warhound"..snd.sep.."hound recall 386712"..snd.sep.."hound recall 371262"..snd.sep.."hound recall 378270")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hounds$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Savagery</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>impale</name>
								<script>if snd.class == "Carnifex" then
  if matches[2] == "" then
    snd.attack("pole skewer "..snd.target)
  else
    snd.attack("pole skewer "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^impale (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>disembowel</name>
								<script>if snd.class == "Carnifex" then
 snd.attack("pole wrench")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^db$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Hammer Throw</name>
								<script>if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
  snd.set_queue("quickwield both warhammer")
else
  if matches[2] == nil then
    snd.set_queue("hammer throw "..snd.target)
  else
    snd.set_queue("hammer throw "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ht(?: (.*))?$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Deathlore</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>rez</name>
								<script>if snd.class == "Carnifex" then
  snd.toggles.attacking = false
  snd.send("qeb soul call "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rez (\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>venoms only</name>
								<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"clumsiness",
"asthma",
"slickness",
"stupidity",
"anorexia",
"allergies",
--"weariness",
--"haemophilia",
--"sensitivity",
--"vomiting",
--"recklessness",
--"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  local left = "none"
  local right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epteth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "pole raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
   string = "pole spinslash "..snd.target.." "..left.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^vn$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>affs</name>
								<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"asthma",
"clumsiness",
"slickness",
"stupidity",
"anorexia",
"dizziness",
--"weariness",
--"sensitivity",
--"haemophilia",
--"vomiting",
--"allergies",
--"recklessness",
--"voyria",
}
snd.hound_queue = {
"mark",
"dizziness",
"berserking",
"weariness",
"impairment",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  local string = ""
  local left = "none"
  local right = "none"

  for i in pairs(snd.giving) do
   if not snd.checkAff(snd.giving[i]) and snd.giving[i] ~= snd.implant then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "pole raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
	 if snd.checkAff("fallen") and snd.target_locked() then
	  if table.contains(snd.target_has, "crushed_chest") then
		 string = "hammer pulverize "..snd.target
		else
	   string = "hammer crush "..snd.target.." chest"
		end
	 else
    string = "pole spinslash "..snd.target.." "..left.." "..right
	  if snd.toggles.affcalling and not snd.target_gone then
	   x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	  end
	 end
	end
	if snd.soul &lt;= 80 and not table.contains(snd.target_has, "soul_disease") then
	 string = string..snd.sep.."soul disease "..snd.target
	elseif snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif #snd.target_has &gt;= 12 and snd.balance.soulpoison then
	 string = string..snd.sep.."soul poison "..snd.target
	elseif snd.soul &lt;= 75 and snd.balance.implant and not table.contains(snd.target_has, "soul_implant") then
	 if snd.target_locked() then
	  string = string..snd.sep.."soul implant "..snd.target.." aconite slike"
	 end
	end
	string = x..string..snd.sep.."hammer throw "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>magic</name>
								<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"asthma",
"weariness",
"slickness",
"stupidity",
"anorexia",
"dizziness",
--"clumsiness",
--"sensitivity",
--"haemophilia",
--"vomiting",
--"allergies",
--"recklessness",
--"voyria",
}
snd.hound_queue = {
"stupidity",
"weariness",
"confusion",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  left = "none"
  right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) and snd.giving[i] ~= snd.implant then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "pole raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
	 if snd.proned() then
	  if table.contains(snd.target_has, "crushed_chest") then
		 string = "hammer pulverize "..snd.target
		else
	   string = "hammer crush "..snd.target.." chest"
		end
	 else
    string = "pole spinslash "..snd.target.." "..left.." "..right
	  if snd.toggles.affcalling and not snd.target_gone then
	   x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	  end
	 end
	end
	if snd.soul &lt;= 80 and not table.contains(snd.target_has, "soul_disease") then
	 string = string..snd.sep.."soul disease "..snd.target
	elseif snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif #snd.target_has &gt;= 12 and snd.balance.soulpoison then
	 string = string..snd.sep.."soul poison "..snd.target
	elseif snd.soul &lt;= 75 and snd.balance.implant and not table.contains(snd.target_has, "soul_implant") then
	 if snd.target_locked() and table.contains(snd.target_has, "stupidity") then
	  string = string..snd.sep.."soul implant "..snd.target.." kalmia gecko"
	 end
	elseif snd.soul &lt;= 20 then
	 string = string..snd.sep.."soul sacrifice "..snd.target
	end
	string = x..string
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^mg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>stuff</name>
								<script>if snd.class == "Warden" then
  snd.giving = {
  --push recklnessness/focus balance to try and make locks easier for others
  "recklessness",
  "slickness",
  "stupidity",
  "anorexia",
  "dizziness",
  "weariness",
  "sensitivity",
  "haemophilia",
  "vomiting",
  "allergies",
  --"voyria",
  }
  snd.hound_queue = {
  "dizziness",
  "berserking",
  "weariness",
  "impairment",
  }
  snd.starting_attack()
  function snd.attack_function()
   snd.handle_hounds()
   if not snd.waiting.queue then
    local string = ""
    local left = "none"
    local right = "none"
  
    for i in pairs(snd.giving) do
     if not snd.checkAff(snd.giving[i]) and snd.giving[i] ~= snd.implant then
      if right == "none" then
       right = snd.effects[snd.giving[i]]
      elseif left == "none" then
       left = snd.effects[snd.giving[i]]
      end
     end
    end
    
    if left == "none" then left = "epseth" end
    if right == "none" then right = "epseth" end
  	x = ""
    
    if snd.used.rebounding and snd.used.shield then
     string = "warden raze "..snd.target
    elseif snd.used.rebounding or snd.used.shield then
     string = "warden bypass "..snd.target.." "..right
  	 if snd.toggles.affcalling and not snd.target_gone then
  	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
  	 end
    else
  	 if snd.checkAff("fallen") then
  	  if table.contains(snd.target_has, "crushed_chest") then
  		 string = "warden decimate "..snd.target
  		else
  	   string = "warden pummel "..snd.target.." chest"
  		end
  	 else
      
      string = "warden lacerate "..snd.target.." "..left.." "..right
  	  if snd.toggles.affcalling and not snd.target_gone then
        x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
  	  end
  	 end
  	end
    
  	string = "wipe left"..snd.sep..x..string..snd.sep.."warden release "..snd.target
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^support$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>damage</name>
								<script>if snd.class == "Carnifex" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.used.shield then
		string = "soul erode "..snd.target
  else
   	string = "hammer doublebash "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>limbs</name>
								<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can pulverize now!
  if table.contains(snd.target_has, "crushed_chest") and snd.proned() then
   string = "hammer pulverize "..snd.target
	-- or if we should set up pulverize...
	elseif snd.proned() and snd.resto_limb ~= "none" then
	 string = "hammer crush "..snd.target.." chest"
  else -- can't pulverize, needs logic
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 -- are the legs prepped?
	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 7.41 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 7.41 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
		 string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- don't do anything!
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	  if left == "nothing" then -- we only found one limb to hit
	   left = right -- double up!
	  end
	  -- end limb picking logic
	  -- on to attacking logic!
	  if snd.used.shield or snd.used.rebounding then -- baddie is turtling
     string = "hammer raze "..snd.target -- raze has static balance cost
	  else
	   string = "hammer doublebash "..snd.target.." "..left.." "..right
		 if snd.soul &lt;= 80 and not table.contains(snd.target_has, "glasslimb") then
		  string = string..snd.sep.."soul frailty "..snd.target
		 end
    end
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>legs</name>
								<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  if snd.used.rebounding or snd.used.shield then
   string = "hammer raze "..snd.target
  elseif snd.proned() then
   if table.contains(snd.target_has, "crushed_chest") then
	  string = "hammer pulverize "..snd.target
	 else
	  string = "hammer crush "..snd.target.." chest"
	 end
  else
   string = "pole spinslash "..snd.target.." epseth epseth"
  end
	if snd.soul &lt;= 90 then
	 string = string..snd.sep.."soul distort "..snd.target
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^elgs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>legs</name>
								<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can pulverize now!
  if table.contains(snd.target_has, "crushed_chest") and snd.proned() then
   string = "hammer pulverize "..snd.target
	-- or if they're prone and staying that way
	elseif snd.proned() and ((snd.limb_dmg["left leg"] &gt;= 33.33 and snd.limb_dmg["right leg"] &gt;= 33.33) or snd.limb_dmg["left leg"] &gt;= 66.66 or snd.limb_dmg["right leg"] &gt;= 66.66) then
	 -- are they distorted?
	 if table.contains(snd.target_has, "distortion") and snd.soul &lt;= 70 then
	  string = "hammer crush "..snd.target.." chest"
	 -- do we need to raze?
	 elseif snd.used.shield or snd.used.rebounding then
	  string = "hammer raze "..snd.target
	 -- can they parry?
	 else
	  string = "hammer crush "..snd.target.." chest"
	 end
	elseif snd.proned() then -- at least they're prone
	 if (snd.used.shield or snd.used.rebounding) and not table.contains(snd.target_has, "distortion") then -- bleh!
	  string = "hammer raze "..snd.target
	 else -- make sure they stay down
	  if table.contains(snd.target_has, "frozen") or table.contains(snd.target_has, "distortion") then
		 string = "hammer doublebash "..snd.target.." left leg right leg"
	  elseif snd.parried_limb == "left leg" then
		 string = "hammer doublebash "..snd.target.."right leg right leg"
		elseif snd.parried_limb == "right leg" then
		 string = "hammer doublebash "..snd.target.."left leg left leg"
		else
	   string = "hammer doublebash "..snd.target.." left leg right leg"
		end
	 end
	-- did they apply resto?
	--elseif not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
	-- string = "target nothing with left"..snd.sep.."target nothing with right"..snd.sep.."pole spinslash "..snd.target.." epseth epseth"
  else -- can't pulverize, needs logic
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 -- are the legs prepped?
	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 7.41 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 7.41 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
    string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  if right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	  if left == "nothing" then -- we only found one limb to hit
	   left = right -- double up!
	  end
	  -- end limb picking logic
	  -- on to attacking logic!
	  if snd.used.shield or snd.used.rebounding then -- baddie is turtling
     string = "hammer raze "..snd.target -- raze has static balance cost
	  else
	   string = "hammer doublebash "..snd.target.." "..left.." "..right
    end
	 end
	end
	if snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif snd.soul &lt;= 90 then
	 string = string..snd.sep.."soul distort "..snd.target
  elseif snd.soul &lt;= 80 and not table.contains(snd.target_has, "glasslimb") then
   string = string..snd.sep.."soul frailty "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^legs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Carnifex Limb Aff Support (need Tundralhowl dog)</name>
								<script>if snd.class == "Carnifex" then
snd.giving = {
"left_leg_crippled",
"right_leg_crippled",
"left_arm_crippled",
"right_arm_crippled",
"paresis",
"asthma",
"slickness",
"stupidity",
"anorexia",
"dizziness",
"clumsiness",
--"weariness",
--"sensitivity",
--"haemophilia",
--"vomiting",
--"allergies",
--"recklessness",
--"voyria",
}

  snd.hound_queue = {
  "frozen",
  }
  
snd.starting_attack()
function snd.attack_function()
   snd.handle_hounds()
if not snd.waiting.queue then
  local string = ""
  local left = "none"
  local right = "none"
  local hound_aff = "frozen"  
  local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)  
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) and snd.giving[i] ~= snd.implant then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  
  if snd.used.rebounding and snd.used.shield then
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
	 if snd.checkAff("fallen") then
	  if table.contains(snd.target_has, "crushed_chest") then
		 string = "hammer pulverize "..snd.target
		else
	   string = "hammer crush "..snd.target.." chest"
		end
	 else
    string = "pole spinslash "..snd.target.." "..left.." "..right
	  if snd.toggles.affcalling and not snd.target_gone then
	   x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	  end
	 end
	end

	string = x..string
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Physical Route (No Wraith)</name>
								<script>if snd.class == "Carnifex" then

--maybe soul sacrifice?
--damage route could use torture
  
  if snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"left_arm_crippled",
		"right_arm_crippled",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"left_leg_crippled",
		"right_leg_crippled",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down.")
  elseif snd.timer_check("focus", .2, "more than") then
		  snd.giving = {
      "anorexia",
      "stupidity", 
      "dizziness",
      "weariness",
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "sensitivity",
      "haemophilia",
		  }
      cecho("\n&lt;red&gt;Focus is down, switch up affs a bit.")
  else
    snd.giving = {
      "paresis",
      "clumsiness",
      "asthma",
      "vomiting",
      "allergies",
      "sensitivity",
      "haemophilia",
      "slickness",
      "left_leg_crippled",
      "right_leg_crippled",
      "anorexia",
      "recklessness",
      "weariness",
      "voyria",
      "left_arm_crippled",
      "right_arm_crippled",
      "deadening",
      "disfigurement",
      }
    end
  
  snd.starting_attack()
  
  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      local string = ""
      local left = "none"
      local right = "none"
      local call = ""
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end

      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and snd.giving[i] ~= snd.implant then
          if right == "none" then
            right = snd.effects[snd.giving[i]]
          elseif left == "none" then
            left = snd.effects[snd.giving[i]]
          end
        end
      end
      if left == "none" then
        left = "epseth"
      end
      if right == "none" then
        right = "epseth"
      end
      
      if snd.balance.furor and snd.soul &gt;= 25 and physcount &gt;= 6 then
        string = "furor"..snd.sep
      end  
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.instakilltarget == snd.target then
        string = "pole hook "..snd.target..snd.sep
      elseif snd.target_impaled then
        string = "pole wrench"..snd.sep
      elseif (snd.checkAff("paralysis") and physcount &gt; 5 and not snd.checkAff("writhe_impaled")) or snd.theytumbling then
        string = "pole skewer "..snd.target..snd.sep
      elseif snd.used.rebounding and snd.used.shield then
        string = string.."pole raze "..snd.target..snd.sep
      elseif snd.used.rebounding or snd.used.shield then
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole razehack "..snd.target.." "..right..snd.sep
	      call = call.."wt Afflicting "..snd.target..": "..right..snd.sep
      else
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." "..left.." "..right..snd.sep
        call = call.."wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
      end
      
      if snd.soul &lt;= 80 and not snd.checkAff("soul_disease") then
        string = string.."soul disease "..snd.target..snd.sep
      elseif physcount &gt;= 8 and snd.balance.soulpoison then
        string = string.."soul poison "..snd.target..snd.sep
      elseif snd.soul &lt;= 70 and snd.balance.implant and not snd.checkAff("soul_implant") then
        if (snd.cureset == "sentinel" or snd.cureset == "indorani") then
          string = string.."soul implant "..snd.target.." curare monkshood"..snd.sep
        else
          string = string.."soul implant "..snd.target.." euphorbia eurypteria"..snd.sep
        end
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if physcount &gt; 8 then
          string = string.."hound bite "..snd.target..snd.sep
        --elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse and snd.cureset == "carnifex" then
          --string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("blisters") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("limp_veins") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse then
          string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        --elseif not snd.checkAff("ablaze") then
         -- string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          string = string.."hound switch 371262"..snd.sep.."hound contagion "..snd.target..snd.sep
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if snd.toggles.affcalling and not snd.target_gone and call ~= "" then
          string = call..snd.sep..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
      
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Physical Route (With Wraith)</name>
								<script>if snd.class == "Carnifex" then
  
  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "vomiting",
    "allergies",
    "sensitivity",
    "slickness",
    --"left_leg_crippled",
    --"right_leg_crippled",
    "left_arm_crippled",
    "right_arm_crippled",
    "slickness",
    "anorexia",
    "haemophilia",
    "recklessness",
    "weariness",
    "voyria",
    --"left_arm_crippled",
    --"right_arm_crippled",
    "left_leg_crippled",
    "right_leg_crippled",
    "deadning",
    "disfigurement",
    }
  
  snd.starting_attack()
  
  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      local string = ""
      local left = "none"
      local right = "none"
      local call = ""
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end

      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and snd.giving[i] ~= snd.implant then
          if right == "none" then
            right = snd.effects[snd.giving[i]]
          elseif left == "none" then
            left = snd.effects[snd.giving[i]]
          end
        end
      end
      if left == "none" then
        left = "epseth"
      end
      if right == "none" then
        right = "epseth"
      end
            
      if snd.balance.furor and snd.soul &gt;= 25 and physcount &gt;= 6 then
        string = "furor"..snd.sep
      end  
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.theytumbling then
        string = "prepare to charge "..snd.target
	    elseif snd.instakilltarget == snd.target then
        string = "pole hook "..snd.target
      elseif snd.target_impaled then
        string = "pole wrench"..snd.sep
      elseif snd.checkAff("paralysis") and physcount &gt; 5 and not snd.checkAff("writhe_impaled") then
        string = "pole skewer "..snd.target..snd.sep
      elseif snd.used.rebounding and snd.used.shield then
        string = string.."pole raze "..snd.target..snd.sep
      elseif snd.used.rebounding or snd.used.shield then
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole razehack "..snd.target.." "..right..snd.sep
	      call = call.."wt Afflicting "..snd.target..": "..right..snd.sep
      else
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." "..left.." "..right..snd.sep
        call = call.."wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
      end
      
      if snd.soul &lt;= 80 and not snd.checkAff("soul_disease") then
        string = string.."soul disease "..snd.target..snd.sep
      elseif snd.soul &lt;= 90 and not snd.checkAff("soul_wraith") then
        string = string.."soul wraith "..snd.target..snd.sep
      elseif physcount &gt;= 8 and snd.balance.soulpoison then
        string = string.."soul poison "..snd.target..snd.sep
      elseif snd.soul &lt;= 70 and snd.balance.implant and not snd.checkAff("soul_implant") then
        if (snd.cureset == "sentinel" or snd.cureset == "indorani") then
          string = string.."soul implant "..snd.target.." curare monkshood"..snd.sep
        else
          string = string.."soul implant "..snd.target.." euphorbia eurypteria"..snd.sep
        end
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if physcount &gt; 8 then
          string = string.."hound bite "..snd.target..snd.sep
        elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse and snd.cureset == "carnifex" then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("blisters") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("limp_veins") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          string = string.."hound switch 371262"..snd.sep.."hound contagion "..snd.target..snd.sep
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if snd.toggles.affcalling and not snd.target_gone and call ~= "" then
          string = call..snd.sep..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
      
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Limbs Route (No Torso Broken)</name>
								<script>if snd.class == "Carnifex" then
  
  snd.starting_attack()

  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      
      local string = ""
      local left = "nothing"
      local right = "nothing"
      local call = ""
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.checkAff("crushed_chest") and snd.checksomeAffs({"fallen", "frozen"}, 1) then
        string = "hammer pulverize "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
        string = "pole skewer "..snd.target..snd.sep
      elseif not (snd.used.shield or snd.used.rebounding) then
        if snd.instakilltarget == snd.target then
          string = "pole hook "..snd.target..snd.sep
        elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and snd.checkAff("cracked_ribs") then
          string = "hammer crush "..snd.target.." chest"..snd.sep
	      elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and not snd.checkAff("cracked_ribs") then --and snd.checkAff("torso_broken") 
          string = "hammer crush "..snd.target.." chest"..snd.sep
        elseif snd.target_impaled then
          string = "pole wrench"..snd.sep
        elseif snd.timer_check("poutlice", .5, "more than") and snd.cureset == "templar" then
          string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." epteth epteth"..snd.sep
        elseif snd.checkAff("torso_mangled") then
          string = "quickwield both bardiche"..snd.sep.."soul puncture "..snd.target..snd.sep
        elseif snd.proned() and not snd.checkAff("writhe_impaled") then
          string = "pole skewer "..snd.target..snd.sep      
        elseif snd.checkAff("left_leg_mangled") and not snd.checkAff("left_leg_amputated") then
          string = "pole dismember "..snd.target.." left leg"..snd.sep
        elseif snd.checkAff("right_leg_mangled") and not snd.checkAff("right_leg_amputated") then
	        string = "pole dismember "..snd.target.." right leg"..snd.sep    
        else      
          left = "nothing"
          right = "nothing"
	       
          if snd.proned() then -- focus legs hard on prone
            if snd.parried_limb == "right leg" then
              right = "left leg"
            elseif snd.parried_limb == "left leg" then
              right = "right leg"
            else
              right = "right leg"
              left = "left leg"
            end
	          -- are the legs prepped?
          elseif (snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 8.3475 &gt;= 33.33)) and (snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 8.3475 &gt;= 33.33)) then
            string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
          else -- target not prone, legs not prepped
          
            for limb in pairs(limbs) do
		          if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		            if right == "nothing" then
		              right = limbs[limb]
	              elseif left == "nothing" and limbs[limb] ~= right then
	                 left = limbs[limb]
		            end
	             end
	           end
	           if left == "nothing" then -- we only found one limb to hit
	             left = right -- double up!
	           end
            
            for limb in pairs(limbs) do
		        --  ignore last parried, last hit, and any limbs being resto'd
              if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and limbs[limb] ~= snd.last_struck_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
                -- if it's a leg that's about to break
                if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+8.3475 &gt;= 33.33) then
		            -- don't do anything!
			          -- if it's not a leg about to break, go for it
                elseif snd.parried_limb ~= "none" and snd.resto_limb ~= snd.parried_limb and snd.axeflying and (snd.limb_dmg[snd.parried_limb] + 8.3475 &gt;= 33.33) then
                  right = snd.parried_limb
                elseif right == "nothing" then
                  right = limbs[limb]
                elseif left == "nothing" and limbs[limb] ~= right then
                  left = limbs[limb]
                end
              end
            end
            if left == "nothing" and right ~= "nothing" then -- we only found one limb to hit
              left = right -- double up!
            elseif left ~= "nothing" and right == "nothing" then
              right = left
            else     
              if snd.parried_limb ~= "none" and (snd.limb_dmg["right arm"] + 8.3475 &gt;= 33.33) and not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and (left == "nothing" and right == "nothing") and snd.cureset == "templar" then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked.")  
              elseif snd.axeflying and (left == "nothing" and right == "nothing") and not snd.checkAff("right_arm_broken") then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked cause axes are flying.")   
              elseif snd.parried_limb ~= "head" and (left == "nothing" and right == "nothing") and not snd.checkAff("head_mangled") then
                left = "head"
                right = "head"
                cecho("\n&lt;red&gt;Target's getting their head smacked.")
              elseif snd.parried_limb ~= "torso" and (left == "nothing" and right == "nothing") and not snd.checkAff("torso_mangled") then
                left = "torso"
                right = "torso"
                cecho("\n&lt;red&gt;Target's getting their torso smacked.")
              end
            end
          end
          string = "hammer doublebash "..snd.target.." "..left.." "..right..snd.sep
        end
      else
        string = "pole razehack "..snd.target.." epteth"..snd.sep
      end
      
      if not snd.enfrost then
        string = "soul enfrost warhammer"..snd.sep..string
      elseif snd.soul &lt;= 80 and not snd.checkAff("glasslimb") then
        string = string..snd.sep.."soul frailty "..snd.target..snd.sep
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if not snd.checkAff("blurry_vision") and not snd.ulrelapse and (snd.cureset == "carnifex" or snd.cureset == "templar") then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("frozen") then
          string = string.."hound switch 378270"..snd.sep.."hound tundralhowl "..snd.target..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          if right ~= "nothing" and snd.houndtarget ~= right then
            string = string.."hound target "..right..snd.sep.."hound bite "..snd.target..snd.sep
          else
            string = string.."hound bite "..snd.target..snd.sep
          end
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Limbs Route (Torso Broken)</name>
								<script>if snd.class == "Carnifex" then
  
  snd.starting_attack()

  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      limbs = {"left leg", "right leg", "torso", "left arm", "right arm", "head"}
      
      local string = ""
      local left = "nothing"
      local right = "nothing"
      local call = ""
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.checkAff("crushed_chest") and snd.checksomeAffs({"fallen", "frozen"}, 1) then
        string = "hammer pulverize "..snd.target..snd.sep
      elseif snd.theytumbling then
        string = "prepare to charge "..snd.target..snd.sep
      elseif not (snd.used.shield or snd.used.rebounding) then
        if snd.instakilltarget == snd.target then
          string = "pole hook "..snd.target..snd.sep
        elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and snd.checkAff("cracked_ribs") then
          string = "hammer crush "..snd.target.." chest"..snd.sep
	      elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and not snd.checkAff("cracked_ribs") and snd.checkAff("torso_broken") then 
          string = "hammer crush "..snd.target.." chest"..snd.sep
        elseif snd.target_impaled then
          string = "pole wrench"..snd.sep
        elseif snd.timer_check("poutlice", .5, "more than") and snd.cureset == "templar" then
          string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." epteth epteth"..snd.sep
        elseif snd.proned() and not snd.checkAff("writhe_impaled") then
          string = "pole skewer "..snd.target..snd.sep      
        elseif snd.checkAff("left_leg_mangled") and not snd.checkAff("left_leg_amputated") then
          string = "pole dismember "..snd.target.." left leg"..snd.sep
        elseif snd.checkAff("right_leg_mangled") and not snd.checkAff("right_leg_amputated") then
	        string = "pole dismember "..snd.target.." right leg"..snd.sep    
        else      
                
          left = "nothing"
          right = "nothing"
	       
          if snd.proned() then -- focus legs hard on prone
            if snd.parried_limb == "right leg" then
              right = "left leg"
            elseif snd.parried_limb == "left leg" then
              right = "right leg"
            else
              right = "right leg"
              left = "left leg"
            end
	          -- are the legs prepped?
          elseif (snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 8.3475 &gt;= 33.33)) and (snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 8.3475 &gt;= 33.33)) then
            string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
          else -- target not prone, legs not prepped
          
            for limb in pairs(limbs) do
		          if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		            if right == "nothing" then
		              right = limbs[limb]
	              elseif left == "nothing" and limbs[limb] ~= right then
	                 left = limbs[limb]
		            end
	             end
	           end
	           if left == "nothing" then -- we only found one limb to hit
	             left = right -- double up!
	           end
            
            for limb in pairs(limbs) do
		        --  ignore last parried, last hit, and any limbs being resto'd
              if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and limbs[limb] ~= snd.last_struck_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
                -- if it's a leg that's about to break
                if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+8.3475 &gt;= 33.33) then
		            -- don't do anything!
			          -- if it's not a leg about to break, go for it
                elseif snd.parried_limb ~= "none" and snd.resto_limb ~= snd.parried_limb and snd.axeflying and (snd.limb_dmg[snd.parried_limb] + 8.3475 &gt;= 33.33) then
                  right = snd.parried_limb
                elseif right == "nothing" then
                  right = limbs[limb]
                elseif left == "nothing" and limbs[limb] ~= right then
                  left = limbs[limb]
                end
              end
            end
            if left == "nothing" and right ~= "nothing" then -- we only found one limb to hit
              left = right -- double up!
            elseif left ~= "nothing" and right == "nothing" then
              right = left
            else     
              if snd.parried_limb ~= "none" and (snd.limb_dmg["right arm"] + 8.3475 &gt;= 33.33) and not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and (left == "nothing" and right == "nothing") and snd.cureset == "templar" then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked.")  
              elseif snd.axeflying and (left == "nothing" and right == "nothing") and not snd.checkAff("right_arm_broken") then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked cause axes are flying.")   
              elseif snd.parried_limb ~= "head" and (left == "nothing" and right == "nothing") and not snd.checkAff("head_mangled") then
                left = "head"
                right = "head"
                cecho("\n&lt;red&gt;Target's getting their head smacked.")
              elseif snd.parried_limb ~= "torso" and (left == "nothing" and right == "nothing") and not snd.checkAff("torso_mangled") then
                left = "torso"
                right = "torso"
                cecho("\n&lt;red&gt;Target's getting their torso smacked.")
              end
            end
          end
          string = "hammer doublebash "..snd.target.." "..left.." "..right..snd.sep
        end
      else
        string = "pole razehack "..snd.target.." epteth"..snd.sep
      end
      
      if not snd.enfrost then
        string = "soul enfrost warhammer"..snd.sep..string
      --elseif not (snd.used.shield or snd.used.rebounding) and (left == "nothing" and right ~= "nothing") and snd.soul &lt;= 90 and not snd.checkAff("distortion") and snd.souldistortready and not snd.checkAff("glasslimb") and ((snd.limb_dmg[left] + 8.3475 &gt;= 33.33) or (snd.limb_dmg[right] + 8.3475 &gt;= 33.33)) and (left ~= "torso" or right ~= "torso") and (left ~= "head" or right ~= "head") then 
      --  string = string..snd.sep.."soul distort "..snd.target..snd.sep
      elseif snd.soul &lt;= 80 and not snd.checkAff("glasslimb") and not snd.checkAff("distortion")  then
        string = string..snd.sep.."soul frailty "..snd.target..snd.sep
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if not snd.checkAff("blurry_vision") and not snd.ulrelapse and (snd.cureset == "carnifex" or snd.cureset == "templar") then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("frozen") then
          string = string.."hound switch 378270"..snd.sep.."hound tundralhowl "..snd.target..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          if right ~= "nothing" and snd.houndtarget ~= right then
            string = string.."hound target "..right..snd.sep.."hound bite "..snd.target..snd.sep
          else
            string = string.."hound bite "..snd.target..snd.sep
          end
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll4$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Limbs Route (No Torso Broken &amp; Batter)</name>
								<script>if snd.class == "Carnifex" then
  
  snd.starting_attack()

  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      
      local string = ""
      local left = "nothing"
      local right = "nothing"
      local call = ""
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.checkAff("crushed_chest") and snd.checksomeAffs({"fallen", "frozen"}, 1) then
        string = "hammer pulverize "..snd.target..snd.sep
      elseif snd.theytumbling then
        string = "prepare to charge "..snd.target..snd.sep
      elseif not (snd.used.shield or snd.used.rebounding) then
        -- check if we can pulverize now!
        if snd.instakilltarget == snd.target then
          string = "pole hook "..snd.target..snd.sep
        elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and snd.checkAff("cracked_ribs") then
          string = "hammer crush "..snd.target.." chest"..snd.sep
	      elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and not snd.checkAff("cracked_ribs") then --and snd.checkAff("torso_broken") 
          string = "hammer crush "..snd.target.." chest"..snd.sep
        elseif gmcp.Char.Vitals.ability_bal == "0" and not snd.checkAff("blurry_vision") and not snd.ulrelapse then
          string = "hammer batter "..snd.target..snd.sep
        elseif snd.target_impaled then
          string = "pole wrench"..snd.sep
        elseif snd.timer_check("poutlice", .5, "more than") and snd.cureset == "templar" then
          string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." epteth epteth"..snd.sep
        elseif snd.proned() and not snd.checkAff("writhe_impaled") then
          string = "pole skewer "..snd.target..snd.sep      
        elseif snd.checkAff("left_leg_mangled") and not snd.checkAff("left_leg_amputated") then
          string = "pole dismember "..snd.target.." left leg"..snd.sep
        elseif snd.checkAff("right_leg_mangled") and not snd.checkAff("right_leg_amputated") then
	        string = "pole dismember "..snd.target.." right leg"..snd.sep    
        else      
                
          left = "nothing"
          right = "nothing"
	       
          if snd.proned() then -- focus legs hard on prone
            if snd.parried_limb == "right leg" then
              right = "left leg"
            elseif snd.parried_limb == "left leg" then
              right = "right leg"
            else
              right = "right leg"
              left = "left leg"
            end
	          -- are the legs prepped?
          elseif (snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 8.3475 &gt;= 33.33)) and (snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 8.3475 &gt;= 33.33)) then
            string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
          else -- target not prone, legs not prepped
          
            for limb in pairs(limbs) do
		          if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		            if right == "nothing" then
		              right = limbs[limb]
	              elseif left == "nothing" and limbs[limb] ~= right then
	                 left = limbs[limb]
		            end
	             end
	           end
	           if left == "nothing" then -- we only found one limb to hit
	             left = right -- double up!
	           end
            
            for limb in pairs(limbs) do
		        --  ignore last parried, last hit, and any limbs being resto'd
              if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and limbs[limb] ~= snd.last_struck_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
                -- if it's a leg that's about to break
                if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+8.3475 &gt;= 33.33) then
		            -- don't do anything!
			          -- if it's not a leg about to break, go for it
                elseif snd.parried_limb ~= "none" and snd.resto_limb ~= snd.parried_limb and snd.axeflying and (snd.limb_dmg[snd.parried_limb] + 8.3475 &gt;= 33.33) then
                  right = snd.parried_limb
                elseif right == "nothing" then
                  right = limbs[limb]
                elseif left == "nothing" and limbs[limb] ~= right then
                  left = limbs[limb]
                end
              end
            end
            if left == "nothing" and right ~= "nothing" then -- we only found one limb to hit
              left = right -- double up!
            elseif left ~= "nothing" and right == "nothing" then
              right = left
            else     
              if snd.parried_limb ~= "none" and (snd.limb_dmg["right arm"] + 8.3475 &gt;= 33.33) and not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and (left == "nothing" and right == "nothing") and snd.cureset == "templar" then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked.")  
              elseif snd.axeflying and (left == "nothing" and right == "nothing") and not snd.checkAff("right_arm_broken") then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked cause axes are flying.")   
              elseif snd.parried_limb ~= "head" and (left == "nothing" and right == "nothing") and not snd.checkAff("head_mangled") then
                left = "head"
                right = "head"
                cecho("\n&lt;red&gt;Target's getting their head smacked.")
              elseif snd.parried_limb ~= "torso" and (left == "nothing" and right == "nothing") and not snd.checkAff("torso_mangled") then
                left = "torso"
                right = "torso"
                cecho("\n&lt;red&gt;Target's getting their torso smacked.")
              end
            end
          end
          string = "hammer doublebash "..snd.target.." "..left.." "..right..snd.sep
        end
      else
        string = "pole razehack "..snd.target.." epteth"..snd.sep
      end
      
      echo("\n"..left.." "..right)
      
      if not snd.enfrost then
        string = "soul enfrost warhammer"..snd.sep..string
      --elseif snd.soul &lt;= 90 and not snd.checkAff("distortion") and snd.souldistortready and not snd.checkAff("glasslimb") and ((snd.limb_dmg[left] + 8.3475 &gt;= 33.33) or (snd.limb_dmg[right] + 8.3475 &gt;= 33.33)) then 
      --  string = string..snd.sep.."soul distort "..snd.target..snd.sep
      elseif snd.soul &lt;= 80 and not snd.checkAff("glasslimb") and not snd.checkAff("distortion")  then
        string = string..snd.sep.."soul frailty "..snd.target..snd.sep
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if not snd.checkAff("blurry_vision") and not snd.ulrelapse and (snd.cureset == "carnifex" or snd.cureset == "templar") then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("frozen") then
          string = string.."hound switch 378270"..snd.sep.."hound tundralhowl "..snd.target..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          if right ~= "nothing" and snd.houndtarget ~= right then
            string = string.."hound target "..right..snd.sep.."hound bite "..snd.target..snd.sep
          else
            string = string.."hound bite "..snd.target..snd.sep
          end
        end
      end
            
		  if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll5$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Limbs Route (Impale)</name>
								<script>if snd.class == "Carnifex" then
  
  snd.starting_attack()

  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
      
      local string = ""
      local left = "nothing"
      local right = "nothing"
      local call = ""
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.checkAff("crushed_chest") and snd.checksomeAffs({"fallen", "frozen"}, 1) then
        string = "hammer pulverize "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
        string = "pole skewer "..snd.target..snd.sep
      elseif snd.checkAff("writhe_impaled") then --snd.target_impaled
        string = "pole wrench"..snd.sep
      elseif not (snd.used.shield or snd.used.rebounding) and not snd.checkAff("writhe_impaled") then
        if snd.instakilltarget == snd.target and not snd.proned() then
          string = "pole hook "..snd.target..snd.sep
        elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and snd.checkAff("cracked_ribs") then
          string = "hammer crush "..snd.target.." chest"..snd.sep
	      elseif snd.checksomeAffs({"fallen", "frozen"}, 1) and not snd.checkAff("cracked_ribs") and snd.checkAff("torso_broken") then 
          string = "hammer crush "..snd.target.." chest"..snd.sep
        elseif snd.checkAff("torso_mangled") and not snd.checkAff("writhe_impaled") then
          string = "quickwield both bardiche"..snd.sep.."soul puncture "..snd.target..snd.sep
        elseif snd.proned() and not snd.checkAff("writhe_impaled") then
          string = "pole skewer "..snd.target..snd.sep      
        elseif snd.timer_check("poutlice", .5, "more than") and snd.cureset == "templar" then
          string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." epteth epteth"..snd.sep
        elseif snd.checkAff("left_leg_mangled") and not snd.checkAff("left_leg_amputated") then
          string = "pole dismember "..snd.target.." left leg"..snd.sep
        elseif snd.checkAff("right_leg_mangled") and not snd.checkAff("right_leg_amputated") then
	        string = "pole dismember "..snd.target.." right leg"..snd.sep    
        else      
                
          left = "nothing"
          right = "nothing"
	       
          if snd.proned() then -- focus legs hard on prone
            if snd.parried_limb == "right leg" then
              right = "left leg"
            elseif snd.parried_limb == "left leg" then
              right = "right leg"
            else
              right = "right leg"
              left = "left leg"
            end
	          -- are the legs prepped?
          elseif (snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 8.3475 &gt;= 33.33)) and (snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 8.3475 &gt;= 33.33)) then
            string = "hammer doublebash "..snd.target.." left leg right leg"..snd.sep
          else -- target not prone, legs not prepped
          
            for limb in pairs(limbs) do
		          if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		            if right == "nothing" then
		              right = limbs[limb]
	              elseif left == "nothing" and limbs[limb] ~= right then
	                 left = limbs[limb]
		            end
	             end
	           end
	           if left == "nothing" then -- we only found one limb to hit
	             left = right -- double up!
	           end
            
            for limb in pairs(limbs) do
		        --  ignore last parried, last hit, and any limbs being resto'd
              if (limbs[limb] ~= snd.parried_limb or snd.no_parry()) and limbs[limb] ~= snd.last_struck_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
                -- if it's a leg that's about to break
                if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+8.3475 &gt;= 33.33) then
		            -- don't do anything!
			          -- if it's not a leg about to break, go for it
                elseif snd.parried_limb ~= "none" and snd.resto_limb ~= snd.parried_limb and snd.axeflying and (snd.limb_dmg[snd.parried_limb] + 8.3475 &gt;= 33.33) then
                  right = snd.parried_limb
                elseif right == "nothing" then
                  right = limbs[limb]
                elseif left == "nothing" and limbs[limb] ~= right then
                  left = limbs[limb]
                end
              end
            end
            if left == "nothing" and right ~= "nothing" then -- we only found one limb to hit
              left = right -- double up!
            elseif left ~= "nothing" and right == "nothing" then
              right = left
            else     
              if snd.parried_limb ~= "none" and (snd.limb_dmg["right arm"] + 8.3475 &gt;= 33.33) and not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and (left == "nothing" and right == "nothing") and snd.cureset == "templar" then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked.")  
              elseif snd.axeflying and (left == "nothing" and right == "nothing") and not snd.checkAff("right_arm_broken") then
                left = "right arm"
                right = "right arm"
                cecho("\n&lt;red&gt;Target's getting their right arm smacked cause axes are flying.")   
              elseif snd.parried_limb ~= "head" and (left == "nothing" and right == "nothing") and not snd.checkAff("head_mangled") then
                left = "head"
                right = "head"
                cecho("\n&lt;red&gt;Target's getting their head smacked.")
              elseif snd.parried_limb ~= "torso" and (left == "nothing" and right == "nothing") and not snd.checkAff("torso_mangled") then
                left = "torso"
                right = "torso"
                cecho("\n&lt;red&gt;Target's getting their torso smacked.")
              end
            end
          end
          string = "hammer doublebash "..snd.target.." "..left.." "..right..snd.sep
        end
      else
        string = "pole razehack "..snd.target.." epteth"..snd.sep
      end
      
      if not snd.enfrost then
        string = "soul enfrost warhammer"..snd.sep..string
      elseif snd.soul &lt;= 80 and not snd.checkAff("glasslimb") and not snd.checkAff("writhe_impaled") then
        string = string..snd.sep.."soul frailty "..snd.target..snd.sep
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" and not snd.checkAff("writhe_impaled") then
        if not snd.checkAff("blurry_vision") and not snd.ulrelapse and (snd.cureset == "carnifex" or snd.cureset == "templar") then
          string = string.."hound switch 345574"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("frozen") then
          string = string.."hound switch 378270"..snd.sep.."hound tundralhowl "..snd.target..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          if right ~= "nothing" and snd.houndtarget ~= right then
            string = string.."hound target "..right..snd.sep.."hound bite "..snd.target..snd.sep
          else
            string = string.."hound bite "..snd.target..snd.sep
          end
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll6$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Lock Route</name>
								<script>if snd.class == "Carnifex" then

  if snd.target_locked() then
		snd.giving = {
    "paresis",
    "clumsiness",
    "anorexia",
		"slickness",
    "asthma",
    "vomiting",
    "allergies",
    "sensitivity",
    "haemophilia",
    "slickness",
    "left_leg_crippled",
    "right_leg_crippled",
    "anorexia",
    "recklessness",
    "weariness",
    "left_arm_crippled",
    "right_arm_crippled",
    "deadening",
    "disfigurement",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif snd.timer_check("fitness", .2, "more than") then
		snd.giving = {
		"paresis",
		"asthma",
		"slickness",
		"anorexia",
		"stupidity",
		"left_arm_crippled",
		"right_arm_crippled",
		"weariness",
		"dizziness",
		"stupidity",
		"recklessness",
		"peace",
		"haemophilia",
		"left_leg_crippled",
		"right_leg_crippled",
		"sensitivity",
		}
    cecho("\n&lt;red&gt;Fitness is down.")
  elseif snd.timer_check("focus", .2, "more than") then
		  snd.giving = {
      "stupidity", 
      "anorexia",
      "dizziness",
      "weariness",
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "sensitivity",
      "haemophilia",
		  }
      cecho("\n&lt;red&gt;Focus is down, switch up affs a bit.")
  elseif snd.checkAff("stupidity") then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "dizziness",
        "weariness",
        "sensitivity",
        "haemophilia",
		  }
    else
      snd.giving = {
        "asthma",
		    "slickness",
        "vomiting",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "dizziness",
        "weariness",
        "sensitivity",
        "haemophilia",
		  }
    end
    cecho("\n&lt;red&gt;Finishing full lock with stupidity in place.")
	else
		snd.giving = {
    "clumsiness",
    "paresis",
    "asthma",
    "sensitivity",
    "slickness",
    "anorexia",
    "stupidity",
    "vomiting",
    "haemophilia",
    "allergies",
    "voyria",
    "left_leg_crippled",
    "right_leg_crippled",
    "left_arm_crippled",
    "right_arm_crippled",
    "recklessness",
    "weariness",
    "disfigurement",
    "deadening",
    }
    cecho("\n&lt;red&gt;Starting the lock.")
	end
  
  snd.starting_attack()
  
  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      local string = ""
      local left = "none"
      local right = "none"
      local call = ""
      local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness/delphinium", "/")
      local extraaff = "delphinium" -- what to use if we used everything else
      local touse = {} -- this will store the affs we still want to hit with
	    local tohit = {} -- this will store the effects from touse
       
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) then
          if not table.contains(touse, snd.giving[i]) then
            table.insert(touse, snd.giving[i])
          end
        end
        if #missing == 2 then
          table.insert(tohit, snd.effects[missing[1]])
          table.insert(tohit, snd.effects[missing[2]])
        elseif #missing == 1 then
          table.insert(tohit, snd.effects[missing[1]])
          table.insert(tohit, snd.effects[snd.giving[i]])
        end          
      end
      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end
      if tohit[1] ~= "" then
        left = tohit[1]
      end
      if tohit[2] ~= "" then
        right = tohit[2]
      end      
      if left == "none" then
        left = "epseth"
      end
      if right == "none" then
        right = "epseth"
      end
      
      if snd.balance.furor and snd.soul &gt;= 25 and #snd.target_has &gt;= 6 then
        string = "furor"..snd.sep
      end  
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
        string = "pole skewer "..snd.target..snd.sep
	    elseif snd.instakilltarget == snd.target then
        string = "pole hook "..snd.target..snd.sep
      elseif snd.target_impaled then
        string = "pole wrench"..snd.sep
      elseif snd.used.rebounding and snd.used.shield then
        string = string.."pole raze "..snd.target..snd.sep
      elseif snd.used.rebounding or snd.used.shield then
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole razehack "..snd.target.." "..right..snd.sep
	      call = call.."wt Afflicting "..snd.target..": "..right..snd.sep
      else
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." "..left.." "..right..snd.sep
        call = call.."wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
      end
      
      if snd.soul &lt;= 80 and not snd.checkAff("soul_disease") then
        string = string.."soul disease "..snd.target..snd.sep
      elseif #snd.target_has &gt;= 8 and snd.balance.soulpoison then
        string = string.."soul poison "..snd.target..snd.sep
      elseif snd.soul &lt;= 70 and snd.balance.implant and not snd.checkAff("soul_implant") then
        if (snd.cureset == "sentinel" or snd.cureset == "indorani") then
          string = string.."soul implant "..snd.target.." curare monkshood"..snd.sep
        else
          string = string.."soul implant "..snd.target.." larkspur aconite"..snd.sep
        end
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        --elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse and snd.cureset == "carnifex" then
          --string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        if snd.checkAff("soul_disease") and not snd.target_locked() and #snd.target_has &gt;= 6 then
          string = string.."hound switch 371262"..snd.sep.."hound contagion "..snd.target..snd.sep
        elseif not snd.checkAff("blisters") and not snd.checkAff("paresis") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("limp_veins") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("berserking") then
          string = string.."hound switch 386712"..snd.sep.."hound stare "..snd.target..snd.sep
        elseif not snd.checkAff("dizziness") and (left ~= "dizziness" or right ~= "dizziness") then
          string = string.."hound switch 386712"..snd.sep.."hound growl "..snd.target..snd.sep
        elseif not snd.checkAff("weariness") and (left ~= "weariness" or right ~= "weariness") then
          string = string.."hound switch 378270"..snd.sep.."hound acidspit "..snd.target..snd.sep
        elseif snd.checkAff("weariness") and not snd.checkAff("crippled") then
          string = string.."hound switch 378270"..snd.sep.."hound acidspit "..snd.target..snd.sep
        elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse then
          string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          string = string.."hound switch 371262"..snd.sep.."hound contagion "..snd.target..snd.sep
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if snd.toggles.affcalling and not snd.target_gone and call ~= "" then
          string = call..snd.sep..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
      
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lock$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sweep</name>
								<script>snd.send("qeb pole sweep all")</script>
								<command></command>
								<packageName></packageName>
								<regex>^swp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Whirlwind</name>
								<script>snd.send("qeb pole whirlwind")</script>
								<command></command>
								<packageName></packageName>
								<regex>^ww$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>EC Route?</name>
								<script>if snd.class == "Carnifex" then

  if snd.target_locked()then
		snd.giving = {
    "paresis",
    "clumsiness",
    "anorexia",
		"slickness",
    "asthma",
    "vomiting",
    "allergies",
    "sensitivity",
    "haemophilia",
    "slickness",
    "left_leg_crippled",
    "right_leg_crippled",
    "anorexia",
    "recklessness",
    "weariness",
    "left_arm_crippled",
    "right_arm_crippled",
    "deadening",
    "disfigurement",
		}
    cecho("\n&lt;red&gt;Target is locked. Piling on affs.")
  elseif #snd.target_has &gt; 8 then
    if snd.checkAff("asthma") then
      snd.giving = {
		    "slickness",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "dizziness",
        "weariness",
        "sensitivity",
        "haemophilia",
		  }
    elseif snd.timer_check("fitness", .2, "more than") then
      snd.giving = {
        "asthma",
		    "slickness",
        "vomiting",
        "anorexia",
        "paresis",
        "clumsiness",
        "asthma",
        "stupidity",
        "dizziness",
        "weariness",
        "sensitivity",
        "haemophilia",
		  }
    else
      snd.giving = {
        "paresis",
        "clumsiness",
        "anorexia",
		    "slickness",
        "asthma",
        "vomiting",
        "allergies",
        "sensitivity",
        "haemophilia",
        "slickness",
        "left_leg_crippled",
        "right_leg_crippled",
        "anorexia",
        "recklessness",
        "weariness",
        "left_arm_crippled",
        "right_arm_crippled",
        "deadening",
        "disfigurement",
		  }
    end
	else
		snd.giving = {
    "clumsiness",
    "disfigurement",
    "paresis",
    "vomiting",
    "slickness",
    "deadening",
    "sensitivity",
    "haemophilia",
    "allergies",
    "right_leg_crippled",
    "left_leg_crippled",
    "left_arm_crippled",
    "right_arm_crippled",
    }
    cecho("\n&lt;red&gt;Piling on affs to build to lock.")
	end
  
  snd.starting_attack()
  
  function snd.attack_function()
    
    if not snd.waiting.queue then
      
      local string = ""
      local left = "none"
      local right = "none"
      local call = ""
      local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness/delphinium", "/")
      local extraaff = "delphinium" -- what to use if we used everything else
      local touse = {} -- this will store the affs we still want to hit with
	    local tohit = {} -- this will store the effects from touse
       
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) then
          if not table.contains(touse, snd.giving[i]) then
            table.insert(touse, snd.giving[i])
          end
        end
        if #missing == 2 then
          table.insert(tohit, snd.effects[missing[1]])
          table.insert(tohit, snd.effects[missing[2]])
        elseif #missing == 1 then
          table.insert(tohit, snd.effects[missing[1]])
          table.insert(tohit, snd.effects[snd.giving[i]])
        end          
      end
      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end
      if tohit[1] ~= "" then
        left = tohit[1]
      end
      if tohit[2] ~= "" then
        right = tohit[2]
      end      
      if left == "none" then
        left = "epseth"
      end
      if right == "none" then
        right = "epseth"
      end
      
      if snd.balance.furor and snd.soul &gt;= 25 and #snd.target_has &gt;= 6 then
        string = "furor"..snd.sep
      end  
      
      if snd.checkAff("barrier") then
        string = string.."soul erode "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
        string = "pole skewer "..snd.target..snd.sep
	    elseif snd.instakilltarget == snd.target then
        string = "pole hook "..snd.target..snd.sep
      elseif snd.target_impaled then
        string = "pole wrench"..snd.sep
      elseif snd.used.rebounding and snd.used.shield then
        string = string.."pole raze "..snd.target..snd.sep
      elseif snd.used.rebounding or snd.used.shield then
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole razehack "..snd.target.." "..right..snd.sep
	      call = call.."wt Afflicting "..snd.target..": "..right..snd.sep
      else
        string = string.."wipe left"..snd.sep.."wipe right"..snd.sep.."pole spinslash "..snd.target.." "..left.." "..right..snd.sep
        call = call.."wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
      end
      
      if snd.soul &lt;= 80 and not snd.checkAff("soul_disease") then
        string = string.."soul disease "..snd.target..snd.sep
      elseif #snd.target_has &gt;= 8 and snd.balance.soulpoison then
        string = string.."soul poison "..snd.target..snd.sep
      elseif snd.soul &lt;= 70 and snd.balance.implant and not snd.checkAff("soul_implant") then
        if (snd.cureset == "sentinel" or snd.cureset == "indorani") then
          string = string.."soul implant "..snd.target.." curare monkshood"..snd.sep
        else
          string = string.."soul implant "..snd.target.." larkspur aconite"..snd.sep
        end
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        --if not snd.checkAff("blurry_vision") and not snd.ulrelapse and snd.cureset == "carnifex" then
          --string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        if not snd.checkAff("blisters") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("limp_veins") then
          string = string.."hound switch 371262"..snd.sep.."hound poisonclaw "..snd.target..snd.sep
        elseif not snd.checkAff("berserking") then
          string = string.."hound switch 386712"..snd.sep.."hound stare "..snd.target..snd.sep
        elseif not snd.checkAff("blurry_vision") and not snd.ulrelapse then
          string = string.."hound switch 386712"..snd.sep.."HOUND ULULATE"..snd.sep
        elseif not snd.checkAff("ablaze") then
          string = string.."hound switch 345574"..snd.sep.."hound firebreath "..snd.target..snd.sep
        else
          string = string.."hound switch 371262"..snd.sep.."hound contagion "..snd.target..snd.sep
        end
      end
            
      if string:find("hammer") then
        if not string.find(gmcp.Char.Vitals.wield_left, "warhammer") then
          string = "quickwield both warhammer"..snd.sep..string
        end
      elseif string:find("pole") then
        if not string.find(gmcp.Char.Vitals.wield_left, "bardiche") then
          string = "quickwield both bardiche"..snd.sep..string
        end
      end
      
      if snd.nopets then
        string = "hound whistle all"..snd.sep..string
			end
      
      if snd.toggles.affcalling and not snd.target_gone and call ~= "" then
          string = call..snd.sep..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
      
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ec$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Indorani</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="no" isFolder="no">
								<name>Damage</name>
								<script>if snd.class == "Indorani" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.used.shield then
		string = "touch hammer "..snd.target
  else
   	string = "flick bonedagger at "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Deform Damage</name>
								<script>if snd.class == "Indorani" then

  snd.giving = {
		"aeon",
		"asthma",
		"weariness",
		"anorexia",
		"slickness",
		"impatience",
		"paresis",
		"clumsiness",
		"perplexed",
		"stupidity",
		"epilepsy",
		"sensitivity",
		"vomiting",
		"lethargy",
		"confusion",
		"recklessness",	
		"superstition",
		"berserking",
		"hypersomnia",
  }
  
  snd.giving_limbs = {"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled",}
  
  snd.starting_attack()
  
  function snd.attack_function() 
   local string = ""
   local raw_affs_to_fling = {}
   local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
   if not snd.waiting.queue then
   
   
    
        if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "mirroring", "dementia", "crippled", "hypochondria", "confusion", "clumsiness", "merciful", "asthma", "impatience", "exhausted", "justice", "blisters", "lethargy", "slickness", "anorexia", "dizziness", "stupidity", "epilepsy", "hellsight",}, 3) and snd.balance.fool then
          string = "fling fool at me"
        end
   
    if snd.used.shield then
      if snd.balance.chimera then
        string = "taint "..snd.target..snd.sep
      else
  		  string = "touch hammer "..snd.target..snd.sep
      end
    elseif snd.theytumbling then
      if snd.balance.soulmaster then
        string = "flick bonedagger at "..snd.target.." prefarar"..snd.sep.."order "..snd.target.." stop"..snd.sep
      else
        string = "flick bonedagger at "..snd.target.." prefarar"..snd.sep
      end
    elseif snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "leeched_aura"}, 5) then
      string = "vivisect "..snd.target
    elseif snd.checksomeAffs({"anorexia", "asthma"}, 1) and not snd.checkAff("slickness") then
      string = "flick bonedagger at "..snd.target.." gecko"..snd.sep
    elseif snd.checksomeAffs({"anorexia", "asthma","slickness","impatience","confusion"}, 5) and snd.checksomeAffs({"paresis", "paralysis"}, 1) and not snd.checkAff("shivering") then
      string = "chill "..snd.target..snd.sep
  	elseif snd.aff_count_all() &gt; 6 then
      string = "fling wheel at at "..snd.target..snd.sep
    elseif snd.checkAff("asthma") and snd.checksomeAffs({"paresis","paralysis","slickness","slough"}, 1)and snd.checksomeAffs({"anorexia","destroyed_throat"}, 1) then
      if not snd.checksomeAffs(snd.giving_limbs, 4) then
        for v in pairs(snd.giving_limbs) do
          if not snd.checkAff(snd.giving_limbs[v])  then
            string = "shrivel "..snd.target.." "..snd.giving_limbs[v]:gsub("_", " "):gsub("crippled", "")
            break
          end
        end
      end
    else -- No special attacks, time to run through our aff list defined above and see what we want to give most.
  		for i in pairs(snd.giving) do
  			if not snd.checkAff(snd.giving[i]) then
          if snd.giving[i] == "aeon" then
            if snd.balance.aeon then
              if snd.checkAff("clumsiness") or snd.checkAff("weariness") then
                table.insert(raw_affs_to_fling, snd.giving[i])
              end
            end
  				elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
  					table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				end
  			end
  		end
      
      for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
        if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      
      if snd.need_leech_aura then
  	    string = "leech "..snd.target..snd.sep
      end
      
      if snd.balance.soulmaster and not snd.checkAff("slickness") then
        string = "order "..snd.target.." apply epidermal to head"..snd.sep
      end
      
      if snd.balance.envelop then
        if snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "anorexia", "shivering", "frozen"}, 1) then
          string = "order slime envelop"..snd.sep
        end
      end
      
      if snd.balance.chimera then
        if not snd.need_deform then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        elseif not snd.checkAff("hearing") or not snd.checkAff("sight") then
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.need_deform and snd.aff_count_all() &gt; 11 then
        string = "deform "..snd.target..snd.sep
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target..snd.sep
      end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
      
      string = string..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
  
    	if snd.toggles.affcalling and not snd.target_gone then
    	  call = "wt Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
        string = call..snd.sep..string
    	end
  	end
  
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Afflictions</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Group Affliction</name>
								<script>if snd.class == "Indorani" then

  snd.giving = {
	"sensitivity",
  "asthma",
  "aeon",
  "paresis",
  "impatience",
  "clumsiness",
  "weariness",
  "stupidity",
  "anorexia",
  "epilepsy",
  "sensitivity",
  "vomiting",
  "lethargy",
  "confusion",
  "recklessness",	
  "superstition",
  "hypersomnia",
}
  
  snd.starting_attack()
  
  function snd.attack_function() 
   local string = ""
   local raw_affs_to_fling = {}
   local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
   if not snd.waiting.queue then -- all instakill conditions(deform/vivi) or other add ons should go here as elseif.
   
    if snd.used.shield then
  		string = "touch hammer "..snd.target
    -- vivi/deform checks would prolly go here
    
    elseif snd.aff_count_all() &gt; 10 then
      string = "deform "..snd.target
      
    else -- No special attacks, time to run through our aff list defined above and see what we want to give most.
  		for i in pairs(snd.giving) do
  			if not snd.checkAff(snd.giving[i]) then
          if snd.giving[i] == "aeon" then
            if snd.balance.aeon then
              table.insert(raw_affs_to_fling, snd.giving[i])
            end
  				elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
  					table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				end
  			end
  		end
     
      for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
        if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
  	    string = "leech "..snd.target
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target
      end
      
      -- Syntax should be the same unless you have arti deck/regular deck, change next line as necessary
  		string = string..snd.sep.."draw "..cards.one.card.." from sheaf"..snd.sep.."draw "..cards.two.card.." from sheaf"..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
  
  	end
    
    	if snd.toggles.affcalling and not snd.target_gone then
    	 call = "wt [Indorani] Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
       string = call..string
    	end
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Indorani Group Affs</name>
								<script>if snd.class == "Indorani" then

  snd.giving = {
  "asthma",
  "aeon",
  "paresis",
  "impatience",
  "clumsiness",
  "weariness",
  "stupidity",
  "anorexia",
  "epilepsy",
  "sensitivity",
  "vomiting",
  "lethargy",
  "confusion",
  "recklessness",	
  "superstition",
  "hypersomnia",
}
  
  snd.starting_attack()
  
  function snd.attack_function() 
   local string = ""
   local raw_affs_to_fling = {}
   local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
   if not snd.waiting.queue then -- all instakill conditions(deform/vivi) or other add ons should go here as elseif.
   
    if snd.used.shield then
  		string = "touch hammer "..snd.target
    -- vivi/deform checks would prolly go here
    
    elseif snd.aff_count_all() &gt; 10 then
      string = "deform "..snd.target
      
    else -- No special attacks, time to run through our aff list defined above and see what we want to give most.
  		for i in pairs(snd.giving) do
  			if not snd.checkAff(snd.giving[i]) then
          if snd.giving[i] == "aeon" then
            if snd.balance.aeon then
              table.insert(raw_affs_to_fling, snd.giving[i])
            end
  				elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
  					table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				end
  			end
  		end
     
      for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
        if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
  	    string = "leech "..snd.target
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target
      end
      
      -- Syntax should be the same unless you have arti deck/regular deck, change next line as necessary
  		string = string..snd.sep.."draw "..cards.one.card.." from sheaf"..snd.sep.."draw "..cards.two.card.." from sheaf"..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
  
  	end
    
    	if snd.toggles.affcalling and not snd.target_gone then
    	 call = "wt [Indorani] Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
       string = call..string
    	end
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs/Vivi</name>
								<script>if snd.class == "Indorani" then
  snd.starting_attack()
  function snd.attack_function()
    local string = ""

    if not snd.waiting.queue then
      
      if snd.used.shield then
        string = "touch hammer "..snd.target
      elseif snd.theytumbling then
        string = "flick bonedagger at "..snd.target.." prefarar"..snd.sep
      elseif snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "leeched_aura"}, 5) then
        string = "vivisect "..snd.target
      elseif not snd.checkAff("left_leg_crippled") or not snd.checkAff("right_leg_crippled") then
        string = "shrivel "..snd.target.." legs"
      elseif not snd.checkAff("left_arm_crippled") or not snd.checkAff("right_arm_crippled") then
        string = "shrivel "..snd.target.." arms"
      else
        string = "decay "..snd.target
      end
      
      if snd.need_leech_aura then
        string = "leech "..snd.target..snd.sep..string
      end
      
      if snd.balance.envelop then
        if snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "anorexia", "shivering", "frozen"}, 1) then
          string = "order slime envelop"..snd.sep
        end
      end
      
      if snd.balance.chimera then
        if snd.deformed then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        else
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.nopets then
        string = "call entities"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking or snd.have_aff("disfigurement") then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
      if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "hypochondria", "confusion", "clumsiness", "asthma", "impatience", "lethargy", "slickness", "anorexia", "stupidity",}, 3) and snd.balance.fool then
        string = "fling fool at me"
      end
      
      
      
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Deform - Bal</name>
								<script>if snd.class == "Indorani" then

  if snd.target_locked() then
    snd.giving = {
      "aeon", -- Aeon
      "asthma", -- S
		  "impatience", -- M
		  "clumsiness", -- S
		  "weariness", -- M
		  "superstition", -- S
		  "epilepsy", -- M
		  "lethargy", -- S
		  "stupidity", -- M 
		  "perplexed", -- S
		  "confusion", -- M
		  "sensitivity", -- S
		  "berserking", -- M
      "paresis", -- A
		  "slickness", -- A
      "anorexia", -- M	
		  "vomiting", -- S
		  "recklessness", -- M
		  "hypersomnia", -- S 
    }
  
  else
  
    snd.giving = {
		  "clumsiness", -- S
		  "impatience", -- M
		  "lethargy", -- S
		  "epilepsy", -- M
		  "perplexed", -- S
		  "stupidity", -- M
		  "superstition", -- S
      "weariness", -- M
		  "asthma", -- S
		  "confusion", -- M
		  "sensitivity", -- S
		  "berserking", -- M
      "paresis", -- A
		  "slickness", -- A
		  "aeon", -- Aeon
      "anorexia", -- M	
		  "vomiting", -- S
		  "recklessness", -- M
		  "hypersomnia", -- S
    }
    
  end
  
  snd.starting_attack()
  
  function snd.attack_function() 
    local string = ""
    local raw_affs_to_fling = {}
    local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
    if not snd.waiting.queue then
      snd.deformchecker()
    
      cecho("\n&lt;red&gt;Affliction Count: "..snd.deformcount)
      cecho("\n&lt;red&gt;Card Count: "..snd.cardcount)
   
      if snd.leechrelease then
        string = "leech release"..snd.sep..string
      end
   
      if snd.used.shield then
        if snd.balance.chimera then
          string = "taint "..snd.target..snd.sep
        else
  		    string = "touch hammer "..snd.target..snd.sep
        end
      elseif snd.checkAff("barrier") and snd.balance.chimera then
        string = "taint "..snd.target..snd.sep
      elseif snd.theytumbling then
        if not snd.adder_attached then
          string = "fling adder prefarar at "..snd.target..snd.sep
        else
          string = "flick bonedager at "..snd.target.." prefarar"..snd.sep
        end
        if snd.balance.soulmaster then
          string = string.."order "..snd.target.." stop"..snd.sep          
        end
      elseif snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt; 3 then
        string = "fling devil at ground"..snd.sep
      elseif (not snd.checksomeAffs({"haemophilia", "paresis"}, 1) and not snd.checkAff("paralysis") and snd.checkAff("perplexed")) and not snd.adder_attached then
        string = "fling adder curare at "..snd.target..snd.sep
      elseif (snd.checksomeAffs({"clumsiness", "asthma", "perplexed"}, 3) and not snd.checkAff("slickness")) and not snd.adder_attached then
        string = "fling adder gecko at "..snd.target..snd.sep
      elseif snd.checksomeAffs({"anorexia", "asthma","slickness","impatience","confusion"}, 5) and snd.checksomeAffs({"paresis", "paralysis"}, 1) and not snd.checkAff("shivering") then
        string = "chill "..snd.target..snd.sep
  	  else 
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.giving[i] == "aeon" then
              if snd.target_locked() then
                table.insert(raw_affs_to_fling, snd.giving[i])
              end
  				  elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
              table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				  end
          end
        end
        for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
          if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
            if snd.cardshapes.indorani[v].card == "adder" then
              if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
                cards.one.affliction = v
                cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
        if snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt; 3 then
           string = "leech "..snd.target..snd.sep.."fling devil at ground"..snd.sep
        else
  	       string = "leech "..snd.target..snd.sep
        end
      end
      
      if snd.balance.envelop then
        if snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "anorexia", "shivering", "frozen"}, 1) then
          string = "order slime envelop"..snd.sep
        end
      end
      
      if snd.balance.chimera then
        if snd.deformed then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        else
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target..snd.sep
      end
      
      string = string..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
      
      if snd.nopets then
        string = "call entities"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking or snd.have_aff("disfigurement") then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
      if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "hypochondria", "confusion", "clumsiness", "asthma", "impatience", "lethargy", "slickness", "anorexia", "stupidity",}, 3) and snd.balance.fool then
        string = "fling fool at me"
      end
      
      if snd.need_deform and snd.deformcount &gt;= 7 then
        string = "deform "..snd.target..snd.sep
      elseif snd.deformed then
        string = "decay "..snd.target..snd.sep
      end
      
    	if snd.toggles.affcalling and not snd.target_gone then
    	  call = "wt Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
        string = call..snd.sep..string
    	end
  	end
  
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Deform - EQ</name>
								<script>if snd.class == "Indorani" then

  if snd.target_locked() then
    snd.giving = {
      "aeon",
      "asthma",
		  "impatience",
		  "clumsiness",
		  "weariness",
		  "lethargy",
		  "epilepsy",
		  "perplexed",
		  "stupidity", 
		  "confusion",
		  "sensitivity",
		  "berserking",
      "paresis",
		  "slickness",
		  "anorexia",
		  "recklessness",	
		  "vomiting",
		  "hypersomnia",  
    }
  
  else
  
    snd.giving = {
		  "perplexed",
		  "stupidity",
		  "impatience",
		  "epilepsy",
		  "paresis",
		  "superstition",
      "weariness",
		  "asthma",
		  "confusion",
		  "sensitivity",
		  "berserking",
      "slickness",
		  "clumsiness",
      "lethargy",
      "aeon",
      "anorexia",
		  "recklessness",	
		  "vomiting",
		  "hypersomnia",
    }
    
  end
  
  snd.starting_attack()
  
  function snd.attack_function() 
    local string = ""
    local raw_affs_to_fling = {}
    local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
    if not snd.waiting.queue then
      snd.deformchecker()
    
      cecho("\n&lt;red&gt;Affliction Count: "..snd.deformcount)
      cecho("\n&lt;red&gt;Card Count: "..snd.cardcount)
   
      if snd.leechrelease then
        string = "leech release"..snd.sep..string
      end
   
      if snd.used.shield then
        if snd.balance.chimera then
          string = "taint "..snd.target..snd.sep
        else
  		    string = "touch hammer "..snd.target..snd.sep
        end
      elseif snd.checkAff("barrier") and snd.balance.chimera then
        string = "taint "..snd.target..snd.sep
      elseif snd.theytumbling then
        if not snd.adder_attached then
          string = "fling adder prefarar at "..snd.target..snd.sep
        else
          string = "flick bonedager at "..snd.target.." prefarar"..snd.sep
        end
        if snd.balance.soulmaster then
          string = string.."order "..snd.target.." stop"..snd.sep          
        end
      elseif snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt; 3 then
        string = "fling devil at ground"..snd.sep
      elseif (not snd.checksomeAffs({"haemophilia", "paresis"}, 1) and not snd.checkAff("paralysis") and snd.checkAff("perplexed")) and not snd.adder_attached then
        string = "fling adder curare at "..snd.target..snd.sep
      elseif (snd.checksomeAffs({"clumsiness", "asthma", "perplexed"}, 3) and not snd.checkAff("slickness")) and not snd.adder_attached then
        string = "fling adder gecko at "..snd.target..snd.sep
      elseif snd.checksomeAffs({"anorexia", "asthma","slickness","impatience","confusion"}, 5) and snd.checksomeAffs({"paresis", "paralysis"}, 1) and not snd.checkAff("shivering") then
        string = "chill "..snd.target..snd.sep
  	  else 
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.giving[i] == "aeon" then
              if snd.checkAff("exhausted") or snd.target_locked() then
                table.insert(raw_affs_to_fling, snd.giving[i])
              end
  				  elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
              table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				  end
          end
        end
      
        for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
          if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
            if snd.cardshapes.indorani[v].card == "adder" then
              if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
                cards.one.affliction = v
                cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
  	    string = "leech "..snd.target..snd.sep
      end
      
      if snd.balance.envelop then
        if snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "anorexia", "shivering", "frozen"}, 1) then
          string = "order slime envelop"..snd.sep
        end
      end
      
      if snd.balance.chimera then
        if snd.deformed then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        else
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target..snd.sep
      end
      
      string = string..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
      
      if snd.nopets then
        string = "call entities"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking or snd.have_aff("disfigurement") then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
      if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "hypochondria", "confusion", "clumsiness", "asthma", "impatience", "lethargy", "slickness", "anorexia", "stupidity",}, 3) and snd.balance.fool then
        string = "fling fool at me"
      end
      
      if snd.need_deform and snd.real_aff_count_all() &gt; 10 then
        string = "deform "..snd.target..snd.sep
      elseif snd.deformed then
        string = "decay "..snd.target..snd.sep
      end
      
    	if snd.toggles.affcalling and not snd.target_gone then
    	  call = "wt Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
        string = call..snd.sep..string
    	end
  	end
  
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alternate Route</name>
								<script>if snd.class == "Indorani" then

  if snd.target_locked() then
    snd.giving = {
      "aeon", -- Aeon
      "asthma", -- S
		  "impatience", -- M
		  "clumsiness", -- S
		  "weariness", -- M
		  "superstition", -- S
		  "epilepsy", -- M
		  "lethargy", -- S
		  "stupidity", -- M 
		  "perplexed", -- S
		  "confusion", -- M
		  "sensitivity", -- S
		  "berserking", -- M
      "paresis", -- A
		  "slickness", -- A
      "anorexia", -- M	
		  "vomiting", -- S
		  "recklessness", -- M
		  "hypersomnia", -- S 
    }
  
  else
  
    snd.giving = {    
		  "sensitivity", -- S
		  "impatience", -- M
		  "asthma", -- S
		  "epilepsy", -- M
		  "superstition", -- S
      "weariness", -- M
		  "lethargy", -- S
		  "confusion", -- M
		  "vomiting", -- S
      "anorexia", -- M
		  "hypersomnia", -- S
		  "berserking", -- M
		  "perplexed", -- S
		  "recklessness", -- M
      "clumsiness", -- S
		  "stupidity", -- M
		  "slickness", -- A
      "paresis", -- A
		  "allergies", -- A
		  "aeon", -- Aeon
    }
    
  end
  
  snd.starting_attack()
  
  function snd.attack_function() 
    local string = ""
    local raw_affs_to_fling = {}
    local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
    if not snd.waiting.queue then
      snd.deformchecker()
    
      cecho("\n&lt;red&gt;Affliction Count: "..snd.deformcount)
      cecho("\n&lt;red&gt;Card Count: "..snd.cardcount)
   
      if snd.leechrelease then
        string = "leech release"..snd.sep..string
      end
   
      if snd.used.shield then
        if snd.balance.chimera then
          string = "taint "..snd.target..snd.sep
        else
  		    string = "touch hammer "..snd.target..snd.sep
        end
      elseif snd.checkAff("barrier") and snd.balance.chimera then
        string = "taint "..snd.target..snd.sep
      elseif snd.theytumbling then
        if snd.balance.soulmaster then
          string = "fling adder prefarar at "..snd.target..snd.sep.."order "..snd.target.." stop"..snd.sep
        else
          string = "fling adder prefarar at "..snd.target..snd.sep
        end
      elseif snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt; 3 then
        string = "fling devil at ground"..snd.sep
      elseif snd.checksomeAffs({"sensitivity", "impatience", "asthma", "epilepsy", "superstition"}, 5) and not snd.checkAff("justice") then
        string = "fling justice at "..snd.target..snd.sep
      elseif not snd.checksomeAffs({"haemophilia", "paresis"}, 1) and not snd.checkAff("paralysis") and snd.checkAff("perplexed") then
        string = "fling adder curare at "..snd.target..snd.sep
      elseif snd.checksomeAffs({"clumsiness", "asthma", "perplexed"}, 3) and not snd.checkAff("slickness") then
        string = "fling adder gecko at "..snd.target..snd.sep
      elseif snd.checksomeAffs({"anorexia", "asthma","slickness","impatience","confusion"}, 5) and snd.checksomeAffs({"paresis", "paralysis"}, 1) and not snd.checkAff("shivering") then
        string = "chill "..snd.target..snd.sep
  	  else 
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.giving[i] == "aeon" then
              if snd.checkAff("exhausted") or snd.target_locked() then
                table.insert(raw_affs_to_fling, snd.giving[i])
              end
  				  elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
              table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				  end
          end
        end
        
        for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
          if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
            if snd.cardshapes.indorani[v].card == "adder" then
              if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
                cards.one.affliction = v
                cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
        if snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt; 3 then
           string = "leech "..snd.target..snd.sep.."fling devil at ground"..snd.sep
        else
  	       string = "leech "..snd.target..snd.sep
        end
      end
      
      if snd.balance.envelop then
        if snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled", "anorexia", "shivering", "frozen"}, 1) then
          string = "order slime envelop"..snd.sep
        end
      end
      
      if snd.balance.chimera then
        if snd.deformed then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        else
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target..snd.sep
      end
      
      string = string..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
      
      if snd.nopets then
        string = "call entities"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking or snd.have_aff("disfigurement") then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
      if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "hypochondria", "confusion", "clumsiness", "asthma", "impatience", "lethargy", "slickness", "anorexia", "stupidity",}, 3) and snd.balance.fool then
        string = "fling fool at me"
      end
      
      if snd.need_deform and snd.deformcount &gt; 10 then
        string = "deform "..snd.target..snd.sep
      elseif snd.deformed then
        string = "decay "..snd.target..snd.sep
      end
      
    	if snd.toggles.affcalling and not snd.target_gone then
    	  call = "wt Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
        string = call..snd.sep..string
    	end
  	end
  
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alt Route Version 2</name>
								<script>if snd.class == "Indorani" then

    snd.giving = {
		  "impatience", -- M		  
      "clumsiness", -- S
		  "weariness", -- M
		  "lethargy", -- S
		  "epilepsy", -- M
		  "vomiting", -- S
		  "confusion", -- M
		  "asthma", -- S
		  "berserking", -- M
      "perplexed", -- S
		  "stupidity", -- M
		  "superstition", -- S
      "anorexia", -- M	
		  "sensitivity", -- S
		  "recklessness", -- M
		  "hypersomnia", -- S
      "paresis", -- A
		  "slickness", -- A
    }
  
  snd.starting_attack()
  
  function snd.attack_function() 
    local string = ""
    local raw_affs_to_fling = {}
    local cards = {one = {affliction = "", card = ""}, two = {affliction = "", card = ""}}
   
    if not snd.waiting.queue then
      snd.deformchecker()
    
      cecho("\n&lt;red&gt;Affliction Count: "..snd.deformcount)
      cecho("\n&lt;red&gt;Card Count: "..snd.cardcount)
   
      if snd.leechrelease then
        string = "leech release"..snd.sep..string
      end
   
      if snd.used.shield then
        if snd.balance.chimera then
          string = "taint "..snd.target..snd.sep
        else
  		    string = "touch hammer "..snd.target..snd.sep
        end
      elseif snd.checkAff("barrier") and snd.balance.chimera then
        string = "taint "..snd.target..snd.sep
      elseif snd.theytumbling then
        if not snd.adder_attached then
          string = "fling adder prefarar at "..snd.target..snd.sep
        else
          string = "flick bonedager at "..snd.target.." prefarar"..snd.sep
        end
        if snd.balance.soulmaster then
          string = string.."order "..snd.target.." stop"..snd.sep          
        end
      else 
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if snd.giving[i] == "aeon" then
              if snd.checkAff("exhausted") or snd.target_locked() then
                table.insert(raw_affs_to_fling, snd.giving[i])
              end
  				  elseif not table.contains(raw_affs_to_fling, snd.giving[i]) then
              table.insert(raw_affs_to_fling, snd.giving[i]) -- insert into a raw aff list that they don't have, based on priority chosen above
  				  end
          end
        end
        for k, v in ipairs(raw_affs_to_fling) do -- run through the raw affs
          if cards.one.affliction == "" then -- fill in card one, could start with card two if you want to work around dodge CD
            if snd.cardshapes.indorani[v].card == "adder" then
              if not snd.adder_attached then-- Make sure that if we're picking an adder venom, we haven't already thrown adder
                cards.one.affliction = v
                cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.one.affliction = v
            cards.one.card = snd.cardshapes.indorani[v].card
          end
        elseif cards.one.card ~= snd.cardshapes.indorani[v].card and cards.two.affliction == "" then -- if card types are different and haven't already set card two
          if snd.cardshapes.indorani[v].card == "adder" then
            if not snd.adder_attached then -- Make sure that if we're picking an adder venom, we haven't already thrown adder
              cards.one.affliction = v
              cards.one.card = snd.cardshapes.indorani[v].card
            end
          else
            cards.two.affliction = v
            cards.two.card = snd.cardshapes.indorani[v].card
          end
        end
      end

      -- If the card is an adder venom affliction, convert the affliction to the venom.
      if cards.one.card == "adder" then cards.one.affliction = snd.effects[cards.one.affliction] end
      if cards.two.card == "adder" then cards.two.affliction = snd.effects[cards.two.affliction] end
      
      if snd.need_leech_aura then
        string = "leech "..snd.target..snd.sep.."fling sun clumsiness and moon impatience at "..snd.target..snd.sep
      end
      
      if snd.balance.chimera then
        if snd.deformed then
          string = string..snd.sep.."order chimera headbutt "..snd.target..snd.sep  
        else
          string = string..snd.sep.."order chimera roar "..snd.target..snd.sep
        end
      end
      
      if snd.adder_ready then
        string = string..snd.sep.."activate adder "..snd.target..snd.sep
      end
      
      string = string..snd.sep.."fling "..cards.one.card.." "..cards.one.affliction.." and "..cards.two.card.." "..cards.two.affliction.." at "..snd.target
      
      if not snd.wheelused and snd.deformcount &gt;= 3 then
        string = "fling justice and wheel at "..snd.target..snd.sep
      end
      
      if snd.defenses.def_devilpact.state ~= "deffed" and snd.deformcount &lt;= 1 and not snd.need_leech_aura then
        string = "fling devil at ground"..snd.sep
      end
      
      if snd.nopets then
        string = "call entities"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking or snd.have_aff("disfigurement") then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
      if snd.not_aff("faintness") and snd.checksomeSelfAffs({"aeon", "paresis", "left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken", "addiction", "impairment", "hypochondria", "confusion", "clumsiness", "asthma", "impatience", "lethargy", "slickness", "anorexia", "stupidity",}, 3) and snd.balance.fool then
        string = "fling fool at me"
      end
      
      if snd.need_deform and snd.deformcount &gt;= 10 then
        string = "deform "..snd.target..snd.sep
      elseif snd.deformed then
        string = "decay "..snd.target..snd.sep
      end
      
    	if snd.toggles.affcalling and not snd.target_gone then
    	  call = "wt Afflicting "..snd.target..": "..cards.one.affliction..", "..cards.two.affliction..snd.sep
        string = call..snd.sep..string
    	end
  	end
  
  
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll4$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Telescope</name>
								<script>if snd.class == "Indorani" then
  snd.place = matches[2]
  snd.send("fling universe at ground")
  tempTimer(5,[[send("touch map "..snd.place)]])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^tele (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Flower Me</name>
								<script>if snd.class == "Indorani" then
  snd.send("fling priestess at me")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^fl$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Confetti</name>
								<script>if snd.class == "Indorani" then
  snd.send("qeb fling tower at ground")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^conf$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Wield PVP</name>
								<script>if snd.class == "Indorani" then
  snd.send("quickwield left bonedagger"..snd.sep.."quickwield right buckler")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wpvp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Lust</name>
								<script>if matches[2] == nil then
  snd.send("order doppleganger return"..snd.sep.."draw lust from deck"..snd.sep.."give lust to doppleganger"..snd.sep.."order doppleganger seek " ..snd.target..snd.sep.."order doppleganger channel fling lust at " ..snd.target..snd.sep.."order doppleganger return")
else
  snd.send("order doppleganger return"..snd.sep.."draw lust from deck"..snd.sep.."give lust to doppleganger"..snd.sep.."order doppleganger seek " ..matches[2]..snd.sep.."order doppleganger channel fling lust at " ..matches[2]..snd.sep.."order doppleganger return")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lust(?: (.*))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Empress</name>
								<script>if matches[2] == nil then
  snd.send("order doppleganger return"..snd.sep.."fling empress at " ..snd.target)
else
  snd.send("order doppleganger return"..snd.sep.."fling empress at " ..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^emp(?: (.*))?$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Teradrim</name>
						<script>--If checking for sand in room use the following 

-- table.contains(gmcp.Room.Info.details, "sand")</script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Damage</name>
								<script>if snd.class == "Teradrim" then
  snd.starting_attack()
  
  function snd.attack_function()
    local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
    local string = ""
    
    if not snd.waiting.queue then
      -- if they are impaled, let's do some damage
      if snd.target_impaled and hasSkill("Stonevice") then
        string = "earth stonevice"
      -- If there is no fog, let's get it going.
      elseif not table.contains(gmcp.Room.Info.details, "sandy") then
        string = "sand flood"
      -- If you don't have sandstorm up, let's do it.
      elseif sandstorm == 0 and hasSkill("Sandstorm") then
        string = "sand storm"
      -- Are they tumbling? Let's impale them if they haven't been yet.
      elseif not snd.target_impaled and snd.theytumbling then
         string = string.."earth impale "..snd.target
      -- If shielded or rebounding, strip it.
      elseif (snd.used.shield or snd.used.rebounding) and hasSkill("Slice") then
        if sandstorm &gt;= 3 and hasSkill("Sandstorm") then
          if snd.used.shield and snd.used.rebounding then
            string = "sand slice "..snd.target.." storm"..snd.sep.."sand slice "..snd.target
          elseif snd.used.shield or snd.used.rebounding then
            string = "sand slice "..snd.target.." storm"..snd.sep.."earth overhand " .. snd.target            
          end
        else
          string = "sand slice " .. snd.target
        end
      -- Did you happen to strip their lev and they are not proned? Let's prone them!
      elseif not snd.proned() and snd.lev_gone and hasSkill("Shockwave") then
         string = string.."earth shockwave "..snd.target      
    	-- If you can impale them, let's do it, so long as no one else has.
      elseif not snd.target_impaled and snd.proned() and hasSkill("Impale") then
        if sandstorm &gt;= 5 then
          string = "sand scourge "..snd.target.." storm"..snd.sep.."earth impale"
        else
          string = "earth impale"
        end
      -- They prone and have two limbs broken? Cool, let's try to damage some limbs more and generally damage them cause of it.
      elseif snd.proned() and snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},2) and hasSkill("Quake") then
        if sandstorm &gt;= 5 and hasSkill("Sandstorm") then
          string = "sand scourge "..snd.target.." storm"..snd.sep.."earth quake"
        else
          string = "earth quake"
        end
      -- Let's go ahead and start damaging their head if they aren't parrying it.
      elseif snd.parried_limb ~= "head" and hasSkill("Shred") then
        if sandstorm &gt;= 5 and hasSkill("Sandstorm") then
          string = "sand shred "..snd.target.." head storm"..snd.sep.."earth batter "..snd.target
        else
          string = "sand shred "..snd.target.." head"
        end
      -- Otherwise, let's just batter them.
      else
        string = "earth batter "..snd.target
      end
  
    -- If your golem isn't attacking, get it attacking.
    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep..string
    end
    
    if snd.balance.earthenwill and hasSkill("Earthenwill") then
      string = "prepare earthenwill"..snd.sep..string
    end
  
    if snd.balance.momentum and hasSkill("Momentum") then
      string = "earth momentum"..snd.sep..string
    end
  
  
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Afflictions</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Affs</name>
								<script>if snd.class == "Teradrim" then
  snd.starting_attack()

  function snd.attack_function()
    local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
    local string = ""
    
    if not snd.waiting.queue then
      if not table.contains(gmcp.Room.Info.details, "sandy") then
        string = "sand flood"
      -- If you don't have sandstorm up, let's do it.
      elseif sandstorm == 0 and hasSkill("Sandstorm") then
        string = "sand storm"
      -- Are they tumbling? Let's impale them if they haven't been yet.
      elseif not snd.target_impaled and snd.theytumbling then
         string = string.."earth impale "..snd.target
      -- If shielded or rebounding, strip it.
      elseif (snd.used.shield or snd.used.rebounding) and hasSkill("Slice") then
        if sandstorm &gt;= 3 and hasSkill("Sandstorm") then
          if snd.used.shield and snd.used.rebounding then
            string = "sand slice "..snd.target.." storm"..snd.sep.."sand slice "..snd.target
          else
            string = "sand slice "..snd.target.." storm"..snd.sep.."earth batter " .. snd.target
          end
        else
          string = "sand slice " .. snd.target
        end
      -- Let's get slough going to limit usage of poultices.
      elseif not snd.checkAff("slough") and not snd.checkAff("slickness") and hasSkill("Curse") then -- slough prevents poultices from being applied, like slickness
        -- Let's try to give heartflutter and stun if we can. 
        -- If we have sandstorm, let's give some affs and damage torso.
        -- If all else fails, let's just give those affs.
        if (snd.balance.earthenwill and hasSkill("Engulf")) and (sandstorm &gt;= 5 and hasSkill("Sandstorm")) and hasSkill("Gutsmash") then
          string = "prepare earthenwill heartpunch"..snd.sep.."sand curse "..snd.target.." storm"..snd.sep.."earth gutsmash "..snd.target
        elseif (sandstorm &gt;= 5 and hasSkill("Sandstorm")) and hasSkill("Gutsmash") then
          string = "sand curse "..snd.target.." storm"..snd.sep.."earth gutsmash "..snd.target
        else
          string = "sand curse "..snd.target
        end
      -- if they are proned, let's go ahead and try to give collapsed lung to punish for smoking
      elseif (snd.proned() and hasSkill("Pulp")) and not snd.checkAff("collapsed_lung") then
         string = string.."earth pulp "..snd.target
      -- If we get slough up, let's throw out some useful group affs going.
      elseif snd.checksomeAffs({"recklessness", "dizziness", "sensitivity", "epilepsy", "stupidity"},4) and hasSkill("Whip") then
        string = "sand whip "..snd.target
      -- If we have gotten slough on the target, let's break some limbs. Those are affs too.
      elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},4) and hasSkill("Scourge") then
        string = "sand scourge " .. snd.target
      -- All else, let's just smack
      else
        string = "earth  batter " .. snd.target
      end
    
      -- If your golem isn't attacking, get it attacking.
      if not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs Mode (Old)</name>
								<script>if snd.class == "Teradrim" then -- Note that this is intended for groups, not 1v1
  snd.starting_attack()
  function snd.attack_function()
    local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm) -- not used but useful for building
    local string = ""
    if not snd.waiting.queue then
 		   if snd.used.shield or snd.used.rebounding and sandstorm &gt;= 5 then
         string = "sand slice "..snd.target.." storm"
       elseif snd.used.shield or snd.used.rebounding then
         string = "earth stoneblast "..snd.target
       elseif snd.theytumbling then
         string = "earth impale "..snd.target
       elseif snd.proned() then
         string = "earth pulp "..snd.target
       elseif not snd.lev_gone then
         string = "earth overhand "..snd.target
       elseif not snd.proned() and snd.lev_gone then
         string = "earth shockwave "..snd.target      
    	 elseif not snd.checkAff("slough") and sandstorm &gt;=5 then
         string = "sand curse "..snd.target.. " storm"
       elseif not snd.checkAff("slough") then
         string = "sand curse "..snd.target
       elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},4) then
         string = "sand scourge "..snd.target
       elseif snd.balance.momentum then
         string = "prepare earthenwill"..snd.sep.."earth momentum"..snd.sep.."earth batter "..snd.target
       else 
         string = "prepare earthenwill"..snd.sep.."earth batter "..snd.target
  	   end
		
       if string ~= snd.last_attack and not snd.waiting.queue then
         snd.last_attack = string
         snd.attack(snd.last_attack)
         snd.waiting.queue = true
         tempTimer(snd.delay(), [[snd.waiting.queue = false]])
       end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs</name>
								<script>local attack_map = {
  ["left arm"] = "slam",
	["left leg"] = "slam",
	head = "facesmash",
	torso = "gutsmash",
	["right arm"] = "slam",
	["right leg"] = "slam",
}

if snd.class == "Teradrim" then -- Note that this is intended for groups, not 1v1
  snd.starting_attack()
  
  function snd.attack_function()
    local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
    local string = ""
    
    if not snd.waiting.queue then
      local hammercount = 0
      for limb, bruising in pairs(snd.limb_bruising) do
        if bruising&gt;1 then 
          hammercount = hammercount+1
        end
      end
      -- If target is impaled, let's do some damage.
 		  if snd.target_impaled and hasSkill("Stonevice") then
        string = "earth stonevice"
      -- If there is no fog, let's get it going.
      elseif not snd.used.shield and hammercount&gt;2 then
        string = "earth hammer "..snd.target
      elseif not table.contains(gmcp.Room.Info.details, "sandy") then
        string = "sand flood"
      -- If you don't have sandstorm up, let's do it.
      elseif sandstorm == 0 and hasSkill("Sandstorm") then
        string = "sand storm"
      -- Are they tumbling? Let's impale them if they haven't been yet.
      elseif not snd.target_impaled and snd.theytumbling then
         string = string.."earth impale "..snd.target
      -- They shielded and rebounded? Try to remove both. But if they only have one, strip it and then strip levitation. 
      else
        local shield = snd.used.shield
        local rebounding = snd.used.rebounding      
        local sand = ""
        local quicksand = snd.checkAff("quicksand")
        local attack = ""
      
      --Sand decisions
      if shield and rebounding then
        if sandstorm&gt;4 then
          shield = false
          rebounding = false
          sand = "sand slice "..snd.target.." storm"..snd.sep.."sand slice "..snd.target.." storm"..snd.sep
        elseif sandstorm&gt;2 then
          rebounding = false
          sand = "sand slice "..snd.target.." storm"..snd.sep
        end
      elseif shield or rebounding then
        if sandstorm&gt;2 then
          shield = false
          rebounding = false
          sand = "sand slice "..snd.target.." storm"..snd.sep
        end
      elseif sandstorm&gt;4 then
        if snd.proned() and not quicksand then
          sand = "sand quicksand "..snd.target.." storm"..snd.sep
          quicksand = true
        elseif not snd.checksomeAffs({"left_leg_crippled","right_leg_crippled","left_arm_crippled","right_arm_crippled"},4) then
          sand = "sand scourge "..snd.target.." storm"..snd.sep
        end
      end
      --end sand decisions
      local shockwaveLimbs = 0
      for _, limb in pairs({"left leg", "right leg", "left arm", "right arm"}) do
        if (snd.limb_bruising[limb]&gt;0 or quicksand or snd.lev_gone) and not snd.checkAff(limb:gsub(" ","_").."_crippled") then
          shockwaveLimbs = shockwaveLimbs+1
        end
      end
      
      local fractureBreakable = {}
      local bruiseBreakable = {}
      local furorBreakable = {}
      local bruiseLimb = "none"
      
      local function canBreak(limb, ability)
        local dmg = snd.calcTeradrimLimbDamage(ability, true, limb)
        return snd.limb_dmg[limb]&lt;33.33 and snd.limb_dmg[limb] + dmg &gt;33.33
      end
      local limbLimbs = {["left leg"] = true, ["right leg"] = true, ["left arm"] = true, ["right arm"] = true}
      for _, limb in ipairs({"left leg", "right leg", "left arm", "right arm", "torso", "head"}) do
        if limb~= snd.resto_limb and (snd.no_parry() or (snd.parried_limb~=limb and snd.last_struck_limb~=limb)) then
           if limbLimbs[limb] and canBreak(limb, "fracture") then
              table.insert(fractureBreakable, limb)
           end
           if limbLimbs[limb] and canBreak(limb, "furor") then
              table.insert(furorBreakable, limb)
           end
           if canBreak(limb, attack_map[limb]) then
            table.insert(bruiseBreakable, limb)
           end
           if bruiseLimb == "none" and snd.limb_bruising[limb]&lt;2 then
              bruiseLimb = limb
           end
        end
      end
        if shield then
          attack = "earth stoneblast "..snd.target
        elseif hammercount&gt;2 then
          attack = "earth hammer "..snd.target
        elseif (shockwaveLimbs&gt;1 and not snd.checkAff("fallen")) or shockwaveLimbs&gt;2 then
          attack = "earth shockwave "..snd.target
        elseif snd.checksomeAffs({"left_leg_broken","right_leg_broken"},1) and not snd.checkAff("fallen") then
          attack = "earth overhand "..snd.target
        elseif rebounding then
          attack = "earth stoneblast "..snd.target
        elseif #furorBreakable&gt;1 then
          attack = "earth furor "..snd.target.." "..furorBreakable[1].." "..furorBreakable[2]
        elseif #bruiseBreakable&gt;0 then
          attack = "earth "..attack_map[bruiseBreakable[1]].." "..snd.target.." "..bruiseBreakable[1]
        elseif #fractureBreakable&gt;0 then
          attack = "earth fracture "..snd.target.." "..fractureBreakable[1]
        else
          attack = "earth "..attack_map[bruiseLimb].." "..snd.target.." "..bruiseLimb
        end
        string = sand..attack
  	  end
  
      -- If your synth isn't attacking, get it attacking.
      if not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
    
      if snd.balance.earthenwill and hasSkill("Earthenwill") then
        string = "prepare earthenwill"..snd.sep..string
      end
  
      if snd.balance.momentum and hasSkill("Momentum") then
        string = "earth momentum"..snd.sep..string
      end
		
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Old Tests</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>New aliasaff+hammer</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm) -- not used but useful for building
 local string = ""
 if not snd.waiting.queue then
   local hammer = "none"
	 for limb in ipairs(limbs) do
   if snd.limb_bruising[limbs[limb]] &gt;= 3 then
    hammer = limbs[limb]
   end
  end
  if hammer ~= "none" and not snd.used.shield then -- if hammer is go
   string = "earth hammer "..snd.target
  	elseif snd.target_impaled then
        string = "earth stonevice"
		 elseif snd.used.shield or snd.used.rebounding and sandstorm &gt;=5 then
        string = "prepare earthenwill"..snd.sep.."sand slice "..snd.target.." storm"
    elseif snd.used.shield or snd.used.rebounding then
        string = "earth stoneblast "..snd.target
     elseif snd.theytumbling then
        string = "earth impale "..snd.target
    elseif not snd.checkAff("slough") and sandstorm &gt;=5 then
        string = "prepare earthenwill"..snd.sep.."sand curse "..snd.target.. " storm"
		elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},4) then
        string = "prepare earthenwill"..snd.sep.."sand scourge "..snd.target
    elseif snd.balance.momentum then
       string ="prepare earthenwill"..snd.sep.."earth momentum"..snd.sep.."earth batter "..snd.target
		else 
       string = "prepare earthenwill"..snd.sep.."earth batter "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hammeraff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>New affing</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm) -- not used but useful for building
 local string = ""
 if not snd.waiting.queue then
      if snd.target_impaled then
        string = "earth stonevice"
		 elseif snd.used.shield or snd.used.rebounding and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."sand curse "..snd.target
    elseif snd.used.shield or snd.used.rebounding then
        string = "earth stoneblast "..snd.target
     elseif snd.theytumbling then
        string = "earth impale "..snd.target
    elseif not snd.checkAff("slough") and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."sand curse "..snd.target.. " storm"..snd.sep.."sand scourge "..snd.target
		elseif not snd.checkAff("slough") then
					 string = "order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."sand curse "..snd.target
		elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},1) and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."sand scourge "..snd.target.." storm"..snd.sep.."sand scourge "..snd.target
		elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},1) then
        string = "order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."sand scourge "..snd.target
    elseif snd.balance.momentum then
       string ="order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."earth momentum"..snd.sep.."earth gutsmash "..snd.target
		else 
       string = "order golem kill "..snd.target.."prepare earthenwill"..snd.sep.."earth gutsmash "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>GroupTera</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm) -- not used but useful for building
 local string = ""
 if not snd.waiting.queue then
      if snd.target_impaled then
        string = "earth stonevice"
		 elseif snd.used.shield or snd.used.rebounding and not snd.checkAff("sandrot") and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target..snd.sep.." prepare earthenwill"..snd.sep.." sand slice "..snd.target.." storm"..snd.sep.."sand curse "..snd.target
						 elseif snd.used.shield or snd.used.rebounding and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."sand scourge "..snd.target
    elseif snd.used.shield or snd.used.rebounding then
        string = "earth stoneblast "..snd.target
     elseif snd.theytumbling then
        string = "earth impale "..snd.target
    elseif not snd.checkAff("slough") and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."sand curse "..snd.target.. " storm"..snd.sep.."sand scourge "..snd.target
		elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},1) and sandstorm &gt;=5 then
        string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."sand scourge "..snd.target.." storm"..snd.sep.."sand scourge "..snd.target
		elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},1) then
        string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."sand scourge "..snd.target
    elseif snd.balance.momentum then
       string ="order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."earth momentum"..snd.sep.."earth batter "..snd.target
		else 
       string = "order golem kill "..snd.target..snd.sep.."prepare earthenwill"..snd.sep.."earth batter "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^grpaff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs Tera</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
 if not snd.waiting.queue then
  local string = ""
  -- list what limbs to hit
 local	limbs = {"left leg", "right leg","torso", "left arm","head", "right arm"}
  local	bruised = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	-- check if we can hammer now!
  local hammer = "none"
	local call = ""
	local how_many_moderate = 0
  for k,v in pairs(snd.limb_bruising) do
    if v &gt;= 2 then
        how_many_moderate = how_many_moderate + 1
    end
  end
  if how_many_moderate &gt;= 3 and not snd.used.shield then -- if hammer is go
   string = "earth hammer "..snd.target
  else -- can't hammer, needs logic
	 left = "nothing"
	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   left = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   left = "right leg"
	  else
	   left = "right leg"
	  end

	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 11.06 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 11.06 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
		 string = "earth furor "..snd.target.." left leg right leg"
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
            -- ignore last parried, last hit, and any limbs being resto'd
            if
              limbs[limb] ~= snd.parried_limb and
              limbs[limb] ~= snd.last_hit_limb and
			  			snd.limb_bruising[limbs[limb]] &lt;= 1  and
              (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33)
            then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- don't do anything!
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
			 -- if it's not a leg about to break, go for it
			  end
	  end
	 end
	  if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 -- end limb picking logic
	 -- on to attacking logic!
	  if snd.target_impaled then
        string = "earth stonevice"
   elseif snd.used.shield and snd.used.rebounding and sandstorm &gt;=4 then -- baddie is turtling
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth stoneblast "..snd.target
    elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 and left=="torso" then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth gutsmash "..snd.target
				    elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 and left=="head" then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth facesmash "..snd.target
				    elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth slam "..snd.target.." "..left
		elseif snd.used.shield or snd.used.rebounding and sandstorm&lt; 4 then  -- not enough storm
        string = "prepare earthenwill"..snd.sep.."earth stoneblast "..snd.target
				elseif snd.theytumbling then
        string = "earth impale "..snd.target
		elseif sandstorm &gt;=5 then --2 mending breaks bruising logic with storm power
			if snd.proned() and not snd.checksomeAffs("collapsed_lung") then
					string ="sand scourge "..snd.target.." "..left.." storm"..snd.sep.."earth pulp "..snd.target
			elseif left=="torso" then
				 string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."sand shred "..snd.target.." "..left.." storm"..snd.sep.."earth gutsmash "..snd.target			 
			elseif left=="head" then
				string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."sand shred "..snd.target.." "..left.." storm"..snd.sep.."earth facesmash "..snd.target
			elseif not snd.checksomeAffs({"left_arm_bruised_moderate", "right_arm_bruised_moderate", "left_leg_bruised_moderate", "right_leg_bruised_moderate"},1) then   
					string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." sand shred "..snd.target.." "..left.." storm"..snd.sep.."earth slam "..snd.target.." "..left
			
	end
elseif sandstorm &lt;5 then 
 	--if snd.proned() and not snd.checksomeAffs("collapsed_lung") then
			--string = "earth pulp "..snd.target
	if left=="torso" then			
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." earth gutsmash "..snd.target
	elseif left=="head" then		
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." earth facesmash "..snd.target
	elseif not snd.checksomeAffs({"left_arm_bruised_moderate", "right_arm_bruised_moderate", "left_leg_bruised_moderate", "right_leg_bruised_moderate"},1) then
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."earth slam "..snd.target.." "..left
	end		
		else
	   		string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."earth fracture "..snd.target.." "..left
		end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbstest$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>NewDamage</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
 local string = ""
 if not snd.waiting.queue then
 if snd.target_impaled then
        string = "earth stonevice"
     elseif snd.used.shield or snd.used.rebounding and sandstorm &gt;= 5 then
        string = "sand slice "..snd.target.." storm"
    elseif snd.used.shield or snd.used.rebounding then
        string = "earth stoneblast "..snd.target
     elseif snd.theytumbling then
        string = "earth impale "..snd.target
    elseif snd.balance.momentum then
       string ="prepare earthenwill "..snd.sep.."order golem kill "..snd.target..snd.sep.."earth skullbash "..snd.target
		else 
       string ="prepare earthenwill "..snd.sep.."order golem kill "..snd.target..snd.sep.."earth skullbash "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^damage2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>TeraFractureLimbs</name>
								<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = tonumber(gmcp.Char.Vitals.sandstorm)
 if not snd.waiting.queue then
  local string = ""
  -- list what limbs to hit
 local	limbs = {"left leg", "right leg","left arm","head","torso", "right arm"}
  local	bruised = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	-- check if we can hammer now!
  local hammer = "none"
	local call = ""
	local how_many_moderate = 0
  for k,v in pairs(snd.limb_bruising) do
    if v &gt;= 2 then
        how_many_moderate = how_many_moderate + 1
    end
  end
  if how_many_moderate &gt;= 3 and not snd.used.shield then -- if hammer is go
   string = "earth hammer "..snd.target
  else -- can't hammer, needs logic
	 left = "nothing"
	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   left = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   left = "right leg"
	  else
	   left = "right leg"
	  end

	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 11.06 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 11.06 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
		 string = "earth furor "..snd.target.." left leg right leg"
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
            -- ignore last parried, last hit, and any limbs being resto'd
            if
              limbs[limb] ~= snd.parried_limb and
              limbs[limb] ~= snd.last_hit_limb and
			  			snd.limb_bruising[limbs[limb]] &lt;= 1  and
              (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33)
            then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- don't do anything!
			 -- if it's not a leg about to break, go for it
		 elseif left == "nothing"then
	     left = limbs[limb]
		  end
			 -- if it's not a leg about to break, go for it
			  end
	  end
	 end
	
	 -- end limb picking logic
	 -- on to attacking logic!
	  if snd.target_impaled then
        string = "earth stonevice"
		elseif snd.theytumbling then
        string = "earth impale "..snd.target
   elseif not table.contains(gmcp.Room.Info.details, "sandy") then
        string = "sand flood"
      -- If you don't have sandstorm up, let's do it.
      elseif sandstorm == 0 and hasSkill("Sandstorm") then
        string = "sand storm"
      -- Are they tumbling? Let's impale them if they haven't been yet.
      elseif snd.used.shield and snd.used.rebounding and sandstorm &gt;=4 then -- baddie is turtling
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth stoneblast "..snd.target
    elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 and left=="torso" then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth gutsmash "..snd.target
		elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 and left=="head" then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth facesmash "..snd.target
		elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 and not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},1) then  -- not double shielded but storm powered
        string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth fracture "..snd.target.." "..left
		elseif snd.used.shield or snd.used.rebounding and sandstorm&gt;= 4 then
				string = "prepare earthenwill "..snd.sep.."sand slice "..snd.target.." storm"..snd.sep.."earth slam "..snd.target.." "..left
		elseif snd.used.shield or snd.used.rebounding and sandstorm&lt; 4 then  -- not enough storm
        string = "prepare earthenwill"..snd.sep.."earth stoneblast "..snd.target
		elseif sandstorm &gt;=5 then --2 mending breaks bruising logic with storm power
			if snd.proned() and not snd.checksomeAffs("collapsed_lung") then
					 string ="sand scourge "..snd.target.." storm"..snd.sep.."earth pulp "..snd.target
			elseif left=="torso" then
					 string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."sand scourge "..snd.target.." "..left.." storm"..snd.sep.."earth gutsmash "..snd.target			 
			elseif left=="head" then
					string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."sand scourge "..snd.target.." "..left.." storm"..snd.sep.."earth facesmash "..snd.target
			elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},3) then
					string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." sand scourge "..snd.target.." storm"..snd.sep.."earth fracture "..snd.target.." "..left
			else
					string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." sand scourge "..snd.target.." storm"..snd.sep.."earth slam "..snd.target.." "..left
			
	end
elseif sandstorm &lt;5 then 
 	--if snd.proned() and not snd.checksomeAffs("collapsed_lung") then
			--string = "earth pulp "..snd.target
	if left=="torso" then			
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." earth gutsmash "..snd.target
	elseif left=="head" then		
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.." earth facesmash "..snd.target
	elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled", "left_leg_crippled", "right_leg_crippled"},3) then
			string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."earth fracture "..snd.target.." "..left
	end		
		else
	   		string = "prepare earthenwill "..snd.sep.."order golem kill "..snd.target.." "..snd.sep.."earth slam "..snd.target.." "..left
		end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^fraclimbs$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Sciomancer</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Afflictions</name>
								<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
	if snd.used.shield then
   	string = string.."cast hew "..snd.target
  elseif not snd.checkAff("gloom") then
		if hasSkill("Fever") then
			if gmcp.Char.Vitals.shadowprice &lt; "2" then
				string = string.."shadowprice gloom "..snd.target..snd.sep.."cast fever "..snd.target
			else
				string = string.."cast gloom "..snd.target
			end
		else
			if gmcp.Char.Vitals.shadowprice &lt; "2" then
				string = string.."shadowprice gloom "..snd.target
			else
				string = string.."cast gloom "..snd.target
			end
		end
	elseif not snd.checksomeAffs({"clumsiness", "weariness", "lethargy", "paresis"}, 1) then
		if gmcp.Char.Vitals.shadowprice &lt; "2" then
			string = string.."shadowprice ruin "..snd.target
		else
			string = string.."cast ruin "..snd.target
		end
  elseif snd.checkAff("sight") and not snd.checkAff("voidtrapped") then
		string = string.."cast voidgaze " ..snd.target..snd.sep
	elseif not snd.checksomeAffs({"vomiting", "haemophilia"}, 1) and hasSkill("Fever") then
		string = string.."cast fever "..snd.target
  else
   	string = string.."cast scourge "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Group Aff</name>
								<script>if snd.class == "Sciomancer" then
  snd.starting_attack()
    function snd.attack_function()
     if not snd.waiting.queue then
      local string = ""
      local gstring = ""
      local call = ""
      local astring = ""
      local paystring = ""
    	local health = 100*(gmcp.Char.Vitals.maxhp)
      
      cecho("&lt;red&gt;\n"..snd.gravity.." " ..tonumber(gmcp.Char.Vitals.shadowprice))
    		
    	if not snd.checksomeAffs({"impede","imbued"}, 2) and not snd.used.shield then 
        gstring = "gravity imbue " ..snd.target..snd.sep.."gravity impede " ..snd.target..snd.sep 
      else 
        gstring = "" 
      end
      if snd.repay  &lt; 2 and tonumber(gmcp.Char.Vitals.shadowprice) &gt;= 3 and not snd.checkAff("gloom") then 
        paystring = "cast repay"..snd.sep 
      elseif not snd.spay and tonumber(gmcp.Char.Vitals.shadowprice) == 4 then
        paystring = "cast repay"..snd.sep
      else 
        paystring = "" 
      end
    
    	if snd.used.shield then
        if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
          astring = astring.."shadowprice hew "..snd.target..snd.sep
          else
       	astring = astring.."cast hew "..snd.target..snd.sep
        end
    	elseif not snd.checkAff("voidgaze") and tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
          astring = astring.."shadowprice voidgaze "..snd.target..snd.sep
      elseif not snd.checksomeAffs({"nyctophobia","haemophilia"},2) then
          astring = astring.."cast falter " ..snd.target..snd.sep     
      elseif not snd.checksomeAffs({"vomiting","haemophilia"},1) then
        if not snd.checkAff("gloom") and tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
          astring = astring.."shadowprice gloom " ..snd.target..snd.sep.."cast fever " ..snd.target..snd.sep
        else
          astring = astring.."cast fever " ..snd.target..snd.sep
        end
      elseif not snd.checksomeAffs({"clumsiness","weariness","lethargy","paresis"},2) then
        if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 3 and not snd.checkAff("gloom") then
          astring = astring.."shadowprice gloom " ..snd.target..snd.sep.."shadowprice ruin " ..snd.target..snd.sep
        elseif tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
          astring = astring.."shadowprice ruin " ..snd.target..snd.sep
        else
          astring = astring.."cast ruin " ..snd.target..snd.sep
        end
       else
        if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
          astring = astring.."shadowprice falter " ..snd.target..snd.sep
          else
          string = astring.."cast falter " ..snd.target..snd.sep
        end
      end
      if string ~= snd.last_attack and not snd.waiting.queue then
      string = paystring..gstring..astring
       snd.last_attack = string
       snd.attack(snd.last_attack)
       snd.waiting.queue = true
       tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
     end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Oma kill</name>
								<script>if snd.class == "Sciomancer" then
  snd.starting_attack()
  function snd.attack_function()
    local string = ""
    if not snd.waiting.queue then
 
      local shadestring = "order shadeling kill "..snd.target..snd.sep
 
      local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
 
      if not snd.loyalsattacking then
        string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
      end

	    if tonumber(snd.repay) &lt; 2 and hp &gt; 55 and shadowprice &gt; 0 then
		    string = string.."cast repay"..snd.sep
	    end
      
      if not snd.checkAff("gloom") then
        if snd.defenses.def_hex_preservation.state == "deffed" and shadowprice &lt; 4 then
			     string = string.."shadowprice gloom "..snd.target..snd.sep
		    elseif shadowprice &lt; 3 then
			     string = string.."shadowprice gloom "..snd.target..snd.sep
        end
      end
      
	    if snd.used.shield then
		    if shadowprice &lt; 2 then
   		     string = string.."shadowprice hew "..snd.target..snd.sep
		    else
			     string = string.."cast hew "..snd.target
		    end
      elseif not snd.singhere then
        string = "gravity recall"
      elseif gmcp.Char.Vitals.singularity == "none" or gmcp.Char.Vitals.singularity == "" then
        string = "gravity genesis weight absorb attunement horizon pulsar stability"
      elseif snd.theytumbling or (snd.theyran and snd.gravity &gt;= 1) then
        string = string.."gravity grip "..snd.target..snd.sep
      elseif snd.gravity == 0 and gmcp.Char.Vitals.singularity ~= "" and not snd.checkAff("impede") then
		    string = string..shadestring.."gravity grip "..snd.target..snd.sep
	    elseif not snd.gravitycollapse and snd.checkAff("voidtrapped") then
        string = string.."gravity collapse initiate"..snd.sep
      elseif snd.gravitycollapse then
        string = string.."gravity collapse complete"..snd.sep
      elseif snd.checksomeAffs({"clumsiness","weariness","vomiting","dementia"},4) then
        if not snd.checkAff("voidgaze") and not snd.checkAff("voidtrapped") then
          if snd.checkAff("sight") then
            string = string.."cast voidgaze " ..snd.target..snd.sep
		      elseif snd.defenses.def_hex_preservation.state == "deffed" and shadowprice &lt; 4 and snd.not_aff("weariness") then
			       string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		      elseif shadowprice &lt; 4 and snd.not_aff("weariness") then
			       string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		      end
        end
      elseif snd.checkAff("dizziness") and not snd.checkAff("dementia") then
        string = string.."cast falter "..snd.target
      elseif not snd.checksomeAffs({"dizziness", "nyctophobia", "confusion", "dementia"}, 1) then
        string = string.."cast scourge " ..snd.target..snd.sep
      elseif not snd.checkAff("vomiting") then
		    string = string.."cast fever "..snd.target
	    else
		    string = string.."cast ruin " ..snd.target..snd.sep
	    end
	
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^duir1$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Basic Damage</name>
								<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
	if snd.used.shield then
   	string = string.."cast hew "..snd.target
  elseif snd.checkAff("writhe_transfix") then
		if not snd.checkAff("gloom") then
			if hasSkill("Fever") then
				if gmcp.Char.Vitals.shadowprice &lt; "2" then
					string = string.."shadowprice gloom "..snd.target..snd.sep.."cast fever "..snd.target
				else
					string = string.."cast gloom "..snd.target
				end
			else
				if gmcp.Char.Vitals.shadowprice &lt; "2" then
					string = string.."shadowprice gloom "..snd.target
				else
					string = string.."cast gloom "..snd.target
				end
			end
		end
  else
   		if hasSkill("Transfix") then
				string = string.."cast transfix "..snd.target
			else
				string = string.."cast rot "..snd.target
			end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sciomancer Group Dmg</name>
								<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  local gstring = ""
  local call = ""
  local astring = ""
  local paystring = ""
	local health = 100*(gmcp.Char.Vitals.maxhp)
  
  	cecho("&lt;red&gt;\n"..snd.gravity.." " ..tonumber(gmcp.Char.Vitals.shadowprice))
		
--			if not snd.checksomeAffs({"impede","imbued"}, 2) and not snd.used.shield then gstring = "gravity imbue " ..snd.target..snd.sep.."gravity impede " ..snd.target..snd.sep else gstring = "" end
      if snd.repay  &lt; 2 and tonumber(gmcp.Char.Vitals.shadowprice) &gt;= 3 and not snd.checkAff("gloom") then paystring = "cast repay"..snd.sep elseif not snd.spay and tonumber(gmcp.Char.Vitals.shadowprice) == 4 then paystring = "cast repay"..snd.sep else paystring = "" end

	if snd.used.shield then
    if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
      astring = astring.."shadowprice hew "..snd.target..snd.sep
      else
   	astring = astring.."cast hew "..snd.target..snd.sep
    end
	elseif not snd.checkAff("voidgaze") and tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
      astring = astring.."shadowprice voidgaze "..snd.target..snd.sep
  elseif not snd.checksomeAffs({"nyctophobia","haemophilia"},2) then
      astring = astring.."cast falter " ..snd.target..snd.sep     
  elseif not snd.checksomeAffs({"vomiting","haemophilia"},1) then
    if not snd.checkAff("gloom") and tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
      astring = astring.."shadowprice gloom " ..snd.target..snd.sep.."cast fever " ..snd.target..snd.sep
    else
      astring = astring.."cast fever " ..snd.target..snd.sep
    end
  elseif not snd.checksomeAffs({"clumsiness","weariness","lethargy","paresis"},2) then
    if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 3 and not snd.checkAff("gloom") then
      astring = astring.."shadowprice gloom " ..snd.target..snd.sep.."shadowprice ruin " ..snd.target..snd.sep
    elseif tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
      astring = astring.."shadowprice ruin " ..snd.target..snd.sep
    else
      astring = astring.."cast ruin " ..snd.target..snd.sep
    end
   else
    if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 4 then
      astring = astring.."shadowprice falter " ..snd.target..snd.sep
      else
      string = astring.."cast falter " ..snd.target..snd.sep
  end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
  string = paystring..astring
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gdmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs</name>
								<script>if snd.class == "Sciomancer" then
  snd.starting_attack()
  function snd.attack_function()
    local string = ""
    if not snd.waiting.queue then
      limbs = {"left leg", "right leg", "left arm", "right arm"}
      for limb in pairs(limbs) do
      -- ignore last hit and any limbs being resto'd
        if
          limbs[limb] ~= snd.last_hit_limb and
          limbs[limb] ~= snd.resto_limb
        then
          if targ == "nothing" then
            targ = limbs[limb]
          end
        end
      end

	if snd.used.shield then
   string = string.."cast hew "..snd.target
	elseif not snd.singhere then
    string = "gravity recall"
      
  elseif gmcp.Char.Vitals.singularity == "none" then
		string = string.."gravity genesis weight absorb attunement horizon pulsar stability"
  elseif snd.gravity &lt; 5 then
		string = string.."gravity grip "..snd.target
  else
		if not snd.checkAff(targ:gsub(" ", "_").."_crippled") then
			string = string.."gravity erupt "..snd.target..targ
		else
			if hasSkill("Transfix") then
				string = string.."cast transfix "..snd.target
			else
				string = string.."cast chill "..snd.target
			end
		end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Group Limbs</name>
								<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 limbs = {"left leg", "right leg", "left arm", "right arm"}
	if snd.used.shield then
   string = string.."cast hew "..snd.target
	elseif not snd.singhere then
    string = "gravity recall"
  elseif gmcp.Char.Vitals.singularity == "none" then
		string = string.."gravity genesis weight absorb attunement horizon pulsar stability"
  elseif snd.gravity &lt; 5 then
		string = string.."gravity grip "..snd.target
  else
		if not snd.checkAff("left_leg_crippled") then
			string = string.."gravity erupt "..snd.target.." left leg"
		elseif not snd.checkAff("right_leg_crippled") then
			string = string.."gravity erupt "..snd.target.." right leg"
		elseif not snd.checkAff("left_arm_crippled") then
			string = string.."gravity erupt "..snd.target.." left arm"
		elseif not snd.checkAff("right_arm_crippled") then
			string = string.."gravity erupt "..snd.target.." right arm"
		else
			string = string.."cast transfix "..snd.target
		end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^glimbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Utility</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Sing Summon</name>
								<script>
if snd.class == "Sciomancer" then
  snd.send("qeb gravity genesis weight absorb attunement horizon pulsar stability")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sing1$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Gravity Cannon</name>
								<script>
if snd.class == "Sciomancer" then
snd.send("qeb gravity cannon "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gc$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Omo Collapse</name>
								<script>if not snd.singhere then
   string = "gravity recall"
elseif not snd.gravitycollapse then -- if they are mystified and you can collapse, start it
  snd.send("qeb gravity collapse initiate"..snd.sep)
elseif snd.gravitycollapse then -- don't want to lose your morass, so collapse if you started
  snd.send("qeb gravity collapse complete"..snd.sep)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^omo$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Gravity call</name>
								<script>
if snd.class == "Sciomancer" then
snd.send("qeb gravity recall")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gr$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Mazz Conversions</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Scio Limbs</name>
								<script>if snd.class == "Sciomancer" then
snd.current_offense = "ScioSalve"

snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 
 local shadestring = "order shadeling kill "..snd.target..snd.sep
 
 local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
 
 local scourgecount = 0 
   for aff in pairs(snd.scourge_affs) do
     if table.contains(snd.target_has, snd.scourge_affs[aff]) then
       scourgecount = scourgecount + 1
     end
   end
   
   
  if not snd.singhere then
    string = "gravity recall"
  else
    snd.autoSciomancer()
  end
  
  if snd.praeattack ~=  "none" then
    string = shadestring..snd.sep..snd.praeattack
  end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Scio Damage</name>
								<script>if snd.class == "Sciomancer" then
snd.current_offense = "ScioDMG"

snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 
 local shadestring = "order shadeling kill "..snd.target..snd.sep
 
 local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
 
 local scourgecount = 0 
   for aff in pairs(snd.scourge_affs) do
     if table.contains(snd.target_has, snd.scourge_affs[aff]) then
       scourgecount = scourgecount + 1
     end
   end
   
   
  if not snd.singhere then
    string = "gravity recall"
  else
    snd.autoSciomancer()
  end
  
  if snd.praeattack ~=  "none" then
    string = shadestring..snd.sep..snd.praeattack
  end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Scio Hybrid</name>
								<script>if snd.class == "Sciomancer" then
snd.current_offense = "ScioHybrid"

snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 
 local shadestring = "order shadeling kill "..snd.target..snd.sep
 
 local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
 
 local scourgecount = 0 
   for aff in pairs(snd.scourge_affs) do
     if table.contains(snd.target_has, snd.scourge_affs[aff]) then
       scourgecount = scourgecount + 1
     end
   end
   
   
  if not snd.singhere then
    string = "gravity recall"
  else
    snd.autoSciomancer()
  end
  
  if snd.praeattack ~=  "none" then
    string = shadestring..snd.sep..snd.praeattack
  end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff2$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Hybrid Kill</name>
								<script>if snd.class == "Sciomancer" then
  snd.starting_attack()
  function snd.attack_function()
    local string = ""
    if not snd.waiting.queue then
 
      local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
       
      local scourgecount = 0 
      for aff in pairs(snd.scourge_affs) do
        if table.contains(snd.target_has, snd.scourge_affs[aff]) then
          scourgecount = scourgecount + 1
        end
      end -- this will see how many, out of 5 total affs for jinx, that you have
      
      if not snd.loyalsattacking then
        string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
      end -- get your myconid attacking
      
	    if tonumber(snd.repay) &lt; 2 and hp &gt; 55 and shadowprice &gt; 0 and snd.not_aff("recklessness") then
		    string = string.."cast repay"..snd.sep
	    end -- let's try to get pacts back up to 2 times without getting too hurt
      
      if not snd.checkAff("imbued") and gmcp.Char.Vitals.singularity ~= "none" then
		    string = string.."gravity imbue "..snd.target..snd.sep -- try to inoculate if you can for aff-mode, start building spore stacks
      end
      
      if snd.checkAff("rot_spirit") and snd.gravity &gt; 1 and gmcp.Char.Vitals.singularity ~= "none" and not snd.checkAff("impede") then
        string = string.."gravity impede "..snd.target..snd.sep
      end -- if they have rot_spirit, let's infect them for damage mode. Slows down pill recovery.
      
      if not snd.checkAff("gloom") then -- always gloom if you can spiritpact it as it costs no eq/bal
        if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			     string = string.."shadowprice gloom "..snd.target..snd.sep
		    elseif shadowprice &lt; 3 then
			     string = string.."shadowprice gloom "..snd.target..snd.sep
        end
      end
      
	    if snd.used.shield then -- they shielded? Not any more!
		    if shadowprice &lt; 2 and not string:find("shadowprice") then
   		     string = string.."shadowprice hew "..snd.target..snd.sep
		    else
			     string = string.."cast hew "..snd.target
		    end
      elseif gmcp.Char.Vitals.singularity == "none" or gmcp.Char.Vitals.singularity == "" then
        string = "gravity genesis weight absorb attunement horizon pulsar stability"
      elseif not snd.singhere then
        string = "gravity recall"
      elseif snd.theytumbling or (snd.theyran and snd.gravity &gt;= 1) then -- yoink
        string = string.."gravity grip "..snd.target..snd.sep
      elseif not snd.gravitycollapse and snd.checkAff("voidtrapped") then -- if they are mystified and you can collapse, start it
        string = string.."gravity collapse initiate"..snd.sep
      elseif snd.gravitycollapse then -- don't want to lose your morass, so collapse if you started
        string = string.."gravity collapse complete"..snd.sep
      elseif snd.proned() and snd.checkAff("nyctophobia") and shadowprice &lt; 4 then -- if they have prone and nycto
        if snd.canforgive and shadowprice &gt; 2 and not string:find("shadowprice") then
          string = string.."cast forgive"..snd.sep.."shadowprice consume " ..snd.target..snd.sep -- if your shadowprice is high, nourish and mortis kill
        else
          string = string.."cast consume " ..snd.target..snd.sep -- if you can't forgive, just mortis anyways
        end
      elseif snd.proned() and not snd.checkAff("nyctophobia") then -- if they are prone but no nycto, jinx them to give it for mortis kill
        if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
          string = string.."shadowprice scourge " ..snd.target..snd.sep
        elseif shadowprice &lt; 3 and not string:find("shadowprice") then
          string = string.."shadowprice scourge " ..snd.target..snd.sep
        else
          string = string.."cast scourge " ..snd.target..snd.sep
        end
      elseif snd.checkAff("rot_spirit") then 
      -- Once you have rot_spirit, move to damage mode from aff mode
        if not snd.checkAff("voidgaze") and not snd.checkAff("voidtrapped") then
        -- time to try to get them mystified if we can, needed for omo consume kill
          if snd.checkAff("sight") then
             string = string.."cast voidgaze " ..snd.target..snd.sep
		      elseif snd.defenses.def_hex_preservation.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			       string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		      elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			       string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		      end
        elseif not snd.haunted and shadowprice &lt; 2 and not string:find("shadowprice") then
        -- let's put vilipend on them for increased damage
          string = string.."shadowprice haunt "..snd.target..snd.sep
        elseif snd.checksomeAffs({"haemophilia", "nyctophobia"}, 2) then
        -- let's anathemise for damage primarily, not the affs
		      if not snd.checksomeAffs({"dementia", "exhausted"}, 1) then
			       if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
				        string = string.."shadowprice falter " ..snd.target..snd.sep
			       elseif shadowprice &lt; 3 and not string:find("shadowprice") then
				        string = string.."shadowprice falter " ..snd.target..snd.sep
			       end
          else
             string = string.."cast falter " ..snd.target..snd.sep
          end
        elseif not snd.checkAff("shadowbrand") and shadowprice &lt; 2 and not string:find("shadowprice") then
        -- if they aren't preymarked, do it. This'll make healing lower
          string = string.."shadowprice brand "..snd.target..snd.sep
        elseif not snd.checksomeAffs({"vomiting", "haemophilia"}, 2) then
        -- let's give them affs that'll cause them damage
		      if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			       string = string.."shadowprice fever " ..snd.target..snd.sep
		      elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			       string = string.."shadowprice fever " ..snd.target..snd.sep
          else
             string = string.."cast fever " ..snd.target..snd.sep
		      end
        elseif snd.checksomeAffs({"dizziness", "nyctophobia", "confusion", "dementia"}, 4) and not snd.checkAff("faintness") then
        -- if they are missing faintness, give it. Helps knock them out.
          string = string.."cast scourge " ..snd.target..snd.sep
        elseif scourgecount &lt; 4 then
        -- if we're just missing one of the 4 affs, let's try to get it to all 5
		      if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			       string = string.."shadowprice scourge " ..snd.target..snd.sep
		      elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			       string = string.."shadowprice scourge " ..snd.target..snd.sep
		      else
			       string = string.."cast scourge " ..snd.target..snd.sep
		      end        
	      else
        -- else, enervate - good for sticking a bunch of useful affs
		      string = string.."cast ruin " ..snd.target..snd.sep
		    end
      --If not rot_spirit, do affliction mode to try to stick it or get them to a mystify/omo kill
	    elseif snd.balance.shadowsphere and not snd.checkAff("shadowsphere") and snd.real_aff_count_all() &gt; 4 then 
      -- if you can woe and they have 4 affs, do it
        if not snd.checkAff("nyctophobia") then -- if they don't have nycto, try to spiritpact to give it
		      if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			       string = string.."shadowprice sphere " ..snd.target..snd.sep
		      elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			       string = string.."shadowprice sphere " ..snd.target..snd.sep
          end
		    else -- if they have it, just hex to give shadowsphere
			     string = string.."cast sphere " ..snd.target..snd.sep
		    end -- this is to make jinx affs masked and make rot not curable, pressuring salves
	    elseif not snd.checkAff("rot_benign") and snd.checkAff("shadowsphere") then 
      -- if they have woe but not rot, go ahead and get rot going. Spiritpact best to get to second level faster while woe is up
		    if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			     string = string.."shadowprice shaderot " ..snd.target..snd.sep
		    elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			     string = string.."shadowprice shaderot " ..snd.target..snd.sep
		    else
			     string = string.."cast shaderot " ..snd.target..snd.sep
		    end
	    elseif not snd.checkAff("voidgaze") and not snd.checkAff("voidtrapped") then
      -- time to try to get them mystified if we can, needed for omo consume kill
        if snd.checkAff("sight") then -- if blindness is already stripped, just hex
           string = string.."cast voidgaze " ..snd.target..snd.sep
		    elseif snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
        -- otherwise spiritpact to get rid of blindness and aff
			     string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		    elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			     string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		    end
      elseif snd.checksomeAffs({"dizziness", "nyctophobia", "confusion", "dementia"}, 4) and not snd.checkAff("faintness") then
      -- if target has the jinx affs, let's try to get faintness. This can make them pass out
        string = string.."cast scourge " ..snd.target..snd.sep
	    elseif scourgecount &lt; 4 and snd.checkAff("shadowsphere") then
      -- if they have 4 of the jinx affs, and woe, let's try to get that 5th aff in - even if it's not faintness
		    if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			     string = string.."shadowprice scourge " ..snd.target..snd.sep
		    elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			     string = string.."shadowprice scourge " ..snd.target..snd.sep
		    else
			     string = string.."cast scourge " ..snd.target..snd.sep
		    end
	    elseif snd.checkAff("dizziness") and not snd.checkAff("dementia") then
      -- if they have dizziness, this is another way to give them dementia for omo kill via mystify
		    if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
				  string = string.."shadowprice falter " ..snd.target..snd.sep
			  elseif shadowprice &lt; 3 and not string:find("shadowprice") then
				  string = string.."shadowprice falter " ..snd.target..snd.sep
			  else
				  string = string.."cast falter " ..snd.target..snd.sep
			  end
	    elseif not snd.checkAff("vomiting") then
      -- try to get vomiting on them if we don't
		    string = string.."cast fever "..snd.target
	    elseif not snd.checksomeAffs({"clumsiness", "weariness"}, 2) then
      -- try to get clumsy on them if we don't, try to spiritpact for weariness if we don't have it
        if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
				  string = string.."shadowprice ruin " ..snd.target..snd.sep
			  elseif shadowprice &lt; 3 and not string:find("shadowprice") then
				  string = string.."shadowprice ruin " ..snd.target..snd.sep
			  else
				  string = string.."cast ruin " ..snd.target..snd.sep
			  end
	    elseif scourgecount &lt; 3 then
      -- if we have 3 of our jinx affs, let's try to get a 4th
      	if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 and not string:find("shadowprice") then
			     string = string.."shadowprice scourge " ..snd.target..snd.sep
		    elseif shadowprice &lt; 3 and not string:find("shadowprice") then
			     string = string.."shadowprice scourge " ..snd.target..snd.sep
		    else
			     string = string.."cast scourge " ..snd.target..snd.sep
		    end
	    else
      -- Otherwise, enervate as it might give weariness and vomiting, plus lethargy and paresis.
		    string = string.."cast ruin " ..snd.target..snd.sep
	    end
	
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sorta 1v1 Build</name>
								<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 
 local shadestring = "order shadeling kill "..snd.target..snd.sep
 
 local shadowprice = tonumber(gmcp.Char.Vitals.shadowprice)
 
 local scourgecount = 0 
   for aff in pairs(snd.scourge_affs) do
     if table.contains(snd.target_has, snd.scourge_affs[aff]) then
       scourgecount = scourgecount + 1
     end
   end

	if tonumber(snd.repay) &lt; 2 and hp &gt; 60 and shadowprice &gt; 2 then
		string = string.."cast repay" ..snd.sep
	end 

 
	if snd.used.shield then
		if shadowprice &lt; "2" then
   		string = string.."shadowprice hew "..snd.target..snd.sep
		elseif snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string.."shadowprice hew "..snd.target..snd.sep
		else
			string = string.."cast hew "..snd.target
		end
	
	elseif gmcp.Char.Vitals.singularity == "none" or gmcp.Char.Vitals.singularity == "" then
        string = "gravity genesis weight absorb attunement horizon pulsar stability"
  elseif not snd.singhere then
        string = "gravity recall"
  elseif not snd.checkAff("imbued") and gmcp.Char.Vitals.singularity ~= "none" then
		string = string..shadestring.."gravity imbue "..snd.target..snd.sep
	elseif snd.gravity == 0 and gmcp.Char.Vitals.singularity ~= "" and not snd.checkAff("impede") then
		string = string..shadestring.."gravity grip "..snd.target..snd.sep
	elseif snd.gravity &gt;= 0 and gmcp.Char.Vitals.singularity ~= "" and not snd.checkAff("impede") then
		string = string..shadestring.."gravity impede "..snd.target..snd.sep
	elseif not snd.checkAff("rot_benign") then
		if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string.."shadowprice rot " ..snd.target..snd.sep
		elseif shadowprice &lt; 3 then
			string = string.."shadowprice rot " ..snd.target..snd.sep
		else
			string = string.."cast rot " ..snd.target..snd.sep
		end
	elseif not snd.checkAff("sight") and not snd.checkAff("voidgaze") then
		if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		elseif shadowprice &lt; 3 then
			string = string.."shadowprice voidgaze " ..snd.target..snd.sep
		end
	elseif snd.balance.shadowsphere and not snd.checkAff("shadowsphere") and snd.real_aff_count_all() &gt; 4 then
		if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string.."shadowprice sphere " ..snd.target..snd.sep
		elseif shadowprice &lt; 3 then
			string = string.."shadowprice sphere " ..snd.target..snd.sep
		else
			string = string.."cast sphere " ..snd.target..snd.sep
		end
	elseif not snd.checkAff("gloom") then
		if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string..shadestring.."shadowprice gloom "..snd.target
		elseif shadowprice &lt; 3 then
			string = string..shadestring.."shadowprice gloom "..snd.target	
		else
			string = string..shadestring.."cast gloom "..snd.target
		end
	elseif scourgecount &lt; 5 and snd.checkAff("shadowsphere") then
		if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
			string = string.."shadowprice scourge " ..snd.target..snd.sep
		elseif shadowprice &lt; 3 then
			string = string.."shadowprice scourge " ..snd.target..snd.sep
		else
			string = string.."cast scourge " ..snd.target..snd.sep
		end
	elseif snd.checksomeAffs({"haemophilia", "nyctophobia"}, 2) then
		if not snd.checksomeAffs({"dementia", "exhausted"}, 1) then
			if snd.defenses.def_shadow_mantle.state == "deffed" and shadowprice &lt; 4 then
				string = string.."shadowprice falter " ..snd.target..snd.sep
			elseif shadowprice &lt; 3 then
				string = string.."shadowprice falter " ..snd.target..snd.sep
			else
				string = string.."cast falter " ..snd.target..snd.sep
			end
		else
			string = string.."cast falter " ..snd.target..snd.sep
		end
	elseif not snd.checksomeAffs({"vomiting", "haemophilia"}, 1) then
		string = string.."cast fever "..snd.target
	elseif not snd.checksomeAffs({"clumsiness", "paresis"}, 1) then
		string = string.."cast ruin "..snd.target
	elseif snd.checkAff("sight") and not snd.checkAff("voidtrapped") then
		string = string.."cast voidgaze " ..snd.target..snd.sep
	else
		string = string.."cast ruin " ..snd.target..snd.sep
	end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Earthcaller</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>beckon</name>
								<script>if snd.class == "Earthcaller" then
if matches[2] == "" then
 snd.send("qeb osso lurch "..snd.target)
elseif matches[2] == "all" then
 snd.send("qeb osso lurch")
else
 snd.send("qeb osso lurch "..matches[2])
end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bk(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>force stop</name>
								<script>if snd.class == "Earthcaller" then
 if snd.toggles.attacking then snd.toggle("attacking") end
 if matches[2] == "" then
  snd.send("qeb dirge ordain "..snd.target.." stop")
 else
  snd.send("qeb dirge ordain "..matches[2].." stop")
 end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^fs(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>resurrection</name>
								<script>if snd.class == "Earthcaller" then
if snd.toggles.attacking then snd.toggle("attacking") end
snd.send("qeb dirge imperishable "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rez (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Demons Rite</name>
								<script>snd.send("qeb DIRGE VERSE OF ENERVATION")</script>
								<command></command>
								<packageName></packageName>
								<regex>^demons$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Healing Rite</name>
								<script>snd.send("qeb DIRGE VERSE OF EMPOWERMENT")</script>
								<command></command>
								<packageName></packageName>
								<regex>^healing$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Rites</name>
								<script>snd.send("qeb verses")</script>
								<command></command>
								<packageName></packageName>
								<regex>^rites$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Wellbeing</name>
								<script>snd.send("qeb DIRGE VERSE OF RESOLUTE")</script>
								<command></command>
								<packageName></packageName>
								<regex>^wellb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Piety</name>
								<script>snd.send("qeb DIRGE VERSE OF IMPRISONMENT")</script>
								<command></command>
								<packageName></packageName>
								<regex>^piety$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>mouse mode</name>
								<script>if snd.class == "Earthcaller" then
snd.giving_shield = {
"sight",
"paresis",
"weariness",
"asthma",
}
snd.giving_spur = {
"impatience",
"sensitivity",
"stupidity",
"vertigo",
"self_pity",
"migraine",
}
snd.giving_subdue = {
"loneliness",
"hypochondria",
"stupidity",
"lethargy",
"dementia",
"recklessness",
"masochism",
"paranoia"
}
snd.starting_attack()
function snd.attack_function()
 local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string.."quickwield right crozier"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end
 local shield = "none"
 local spur = "none"
 local subdue = "none"
 if snd.mana_percent &lt; 40 and not snd.used.shield then
  string = "osso fragment "..snd.target
 elseif snd.proned() then
  string = "shield deface "..snd.target
 elseif table.contains(snd.target_has, "sight") then
  string = "tectonic transfixion "..snd.target
 else
  if snd.balance.battle then
   for i in pairs(snd.giving_spur) do
	  if not snd.checkAff(snd.giving_spur[i]) and battle == "none" then
	   spur = snd.giving_spur[i]
	  end
	 end
  end
  if snd.used.shield then
   shield = "shield raze"
  else
   for i in pairs(snd.giving_shield) do
    if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
	   shield = snd.subjugation_attacks[snd.giving_shield[i]]
	  end
   end
  end
  if shield == "none" then
   shield = "shield strike"
  end
  if snd.used.rebounding and shield ~= "facesmash" then
   shield = "shield raze"
  end
  for i in pairs(snd.giving_subdue) do
   if not snd.checkAff(snd.giving_subdue[i]) and subdue == "none" and snd.giving_subdue[i] ~= battle then
	  subdue = snd.giving_subdue[i]
	 end
  end
  if spur ~= "none" then
   if snd.toggles.affcalling and not snd.target_gone then
	  string = "wt Spur "..snd.target..": "..battle..snd.sep
	 end
   string = string.."osso spur "..spur.." "..snd.target..snd.sep
  end
  string = string..shield.." "..snd.target..snd.sep
  if shield ~= "slam" and shield ~= "overwhelm" then
   if subdue == "none" then
    string = string.."subdue "..snd.target
   else
	  if snd.toggles.affcalling and not snd.target_gone then
	   string = string.."wt Subdue "..snd.target..": "..subdue..snd.sep
	  end
    string = string.."subdue "..snd.target.." "..subdue
	 end
  end
 end
 
 if string.find(string, "deface") and not string.find(gmcp.Char.Vitals.wield_left, "tower") then 
 	string = string..snd.sep.."quickwield left tower"
 end

 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^ms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Earthcaller Group Manadrain Affs (use this for 1v1)</name>
								<script>local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)

if snd.class == "Earthcaller" then

snd.starting_attack()
function snd.attack_function()

if not snd.waiting.queue then
 local string = ""
 local astring = "" 
 local shield = "none"
 local battle = "none"
 local chasten = "none"
 local tohit = {}
 local string = "contemplate " .. snd.target .. snd.sep 
 local missing = snd.missingAff("stupidity/paresis/anorexia/asthma", "/")
 local total_aff_count = 0
 local mental_aff_count = 0 
 
    for aff in pairs(snd.all_affs) do
      if table.contains(snd.target_has, snd.all_affs[aff]) then total_aff_count = total_aff_count + 1 end
    end
    
    for aff in pairs(snd.mental_affs) do
	   if table.contains(snd.target_has, snd.mental_affs[aff]) then mental_aff_count = mental_aff_count + 1 end
    end
    
    if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string .. "quickwield right crozier"..snd.sep end
    if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string .. "quickwield left buckler" .. snd.sep end	
    --if not string.find(gmcp.Char.Vitals.wield_left, "tower") then string = string .. "quickwield left tower".. snd.sep end	
	
  snd.giving_shield = {
  "paresis",
  "asthma",    
  "weariness", 
  "berserking",
  "allergies",
  "confusion",   
  "disrupted",   
  "sight",  
  "writhe_transfix",  

   }
   
  snd.giving_battle = {
  "stupidity",
  "anorexia",   
  "vertigo",  
  "self_pity",  
  "berserking",
  "impatience",    
  "migraine",    
  "sensitivity",
  }
  
  if snd.checkAff("impatience") and not snd.checkAff("agony") then

  snd.giving_chasten = {
  "agony", 
  "hypochondria",
  "stupidity",
  "lethargy",    
  "recklessness",
  "anorexia",  
  "masochism",
  "dementia",
  "paranoia",
   
  }
  else
    
  snd.giving_chasten = {
  "hypochondria",
  "stupidity",
  "lethargy",    
  "recklessness",
  "anorexia",  
  "masochism",
  "dementia",
  "paranoia",
  "agony",      

  }

end
	snd.giving = {
		--"sight",
    "asthma",
		"paresis",
		"clumsiness",
		"squelched",
		"shyness",
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		"haemophilia",
		"recklessness",
		"weariness",
		"voyria",
		"dizziness",

		}

    cecho("&lt;yellow&gt; Affs: "..#snd.target_has)

    --Absolve check
    if snd.mana_percent &lt;= 43 and not snd.used.shield then
      string = "osso fragment " .. snd.target..snd.sep
    end
	
      --Chasten aff pick
      for i in pairs(snd.giving_chasten) do
        if not snd.checkAff(snd.giving_chasten[i]) and chasten == "none" and snd.giving_chasten[i] ~= battle then
          chasten = snd.giving_chasten[i]
        end
      end

      --Battle aff pick
      if snd.balance.battle then
        for i in pairs(snd.giving_battle) do
          if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
            battle = snd.giving_battle[i]
          end
        end
      end	  
	  
      --Shield aff pick
      if snd.used.shield then
        shield = "shield raze"
        -- If they are prone/psuedo prone and have 5 affs, smack them
      elseif #snd.target_has &gt;= 5 and snd.proned() then
        shield = "shield deface " .. snd.target
        --"quickwield left tower"..snd.sep..
        -- We need to build up disrupt/affs.
      else
        for i in pairs(snd.giving_shield) do
      --    if not snd.checksomeAffs({"hypochondria","stupidity","agony"}, 1) and #snd.target_has &gt; 3 then   -- added this to test
      --      shield = ""
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.subjugation_attacks[snd.giving_shield[i]]
          end
        end
      end
	  
      if snd.used.rebounding then
        if snd.checkAff("confusion") or #snd.target_has &lt; 3 then
          shield = "shield raze"
        else
          shield = "dirge hysteria"
        end
      end
 
    if not snd.infiltrate or snd.infiltrate == "nil" then		
        string = "osso infiltrate "..snd.target..snd.sep  
      
--    elseif #snd.target_has &gt;= 7 then
--      string = "osso bleach " ..snd.target..snd.sep

     elseif snd.checkAff("accursed") and not snd.checkAff("hellsight") then
       string = "dirge reckoning "..snd.target..snd.sep     
 
     elseif snd.checksomeAffs({"stupidity", "paresis", "anorexia", "asthma"}, 3) and not snd.checkAff("slickness") then
       string = "dirge reckoning "..snd.target..snd.sep
                  
    end
 
      if battle ~= "none" then
        string = string .. "osso spur " .. battle .. " " .. snd.target .. snd.sep
      end
      --Add shield/tectonics/dirge attacks
         string = string .. shield .. " " .. snd.target .. snd.sep
	  
      --Add chasten choice
      if not shield:find("slam") or shield:find("transfix") or shield:find("hysteria") or shield:find("crash") then
        if chasten == "none" then
          string = string .. "subdue " .. snd.target
        else
          if snd.toggles.affcalling and not snd.target_gone then
            string = string .. "wt Subdue " .. snd.target .. ": " .. chasten .. snd.sep
          end
          string = string .."contemplate "..snd.target..snd.sep.."subdue " .. snd.target .. " " .. chasten..snd.sep
        end
      end
      
      if snd.theyran then
        string = "osso lurch "..snd.target
      end
    

    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end
end
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>mana drain</name>
								<script>if snd.class == "Earthcaller" then
  snd.giving_spur = {"stupidity", "vertigo", "self_pity", "migraine", "sensitivity", "impatience"}
  snd.giving_subdue =
    {
      "lethargy",
      "loneliness",
      "stupidity",
      "hypochondria",
      "dementia",
      "recklessness",
      "masochism",
      "paranoia",
    }
  snd.starting_attack()

  function snd.attack_function()
 local string = "contemplate "..snd.target..snd.sep
    if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string .. "quickwield right crozier"..snd.sep end
    if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string .. "quickwield left buckler" .. snd.sep end	
    --if not string.find(gmcp.Char.Vitals.wield_left, "tower") then string = string .. "quickwield left tower".. snd.sep end	

    local spur = "none"
    local subdue = "none"
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "osso fragment " .. snd.target
    elseif snd.mana_percent &lt; 40 and snd.used.shield then
      for i in pairs(snd.giving_subdue) do
        if
          not snd.checkAff(snd.giving_subdue[i]) and
          subdue == "none" and
          snd.giving_subdue[i] ~= battle
        then
          subdue = snd.giving_subdue[i]
        end
      end
      string = "shield raze " .. snd.target .. snd.sep
      if snd.toggles.affcalling and not snd.target_gone then
        string = string .. "wt subdue " .. snd.target .. ": " .. subdue .. snd.sep
      end
      string = string .. "subdue " .. snd.target .. " " .. subdue
    else
      string = string.."osso bleach " .. snd.target
    end
		
    if snd.balance.battle then
      for i in pairs(snd.giving_spur) do
        if not snd.checkAff(snd.giving_spur[i]) and spur == "none" then
          spur = snd.giving_spur[i]
        end
      end
    end
    string = "osso spur " .. spur .. " " .. snd.target .. snd.sep .. string
    if snd.toggles.affcalling and not snd.target_gone then
      string = "wt spur " .. snd.target .. ": " .. spur .. snd.sep .. string
    end

    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^mana$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Group Impale/Tfix</name>
								<script>if snd.class == "Earthcaller" then
  snd.giving_shield = {"paresis", "weariness", "sight", "asthma"}
  snd.giving_spur = {"impatience", "sensitivity", "self_pity", "stupidity", "vertigo"}
  snd.giving_subdue =
    {
      "hypochondria",
      "loneliness",
      "recklessness",
      "stupidity",
      "lethargy",
      "masochism",
      "dementia",
      "paranoia",
      "anorexia",
    }
  snd.starting_attack()

  function snd.attack_function()
  local total_aff_count = snd.aff_count_all()
  local mental_aff_count = snd.aff_count_mental()
  
  local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string.."quickwield right crozier"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end

    local shield = "none"
    local spur = "none"
    local subdue = "none"
    --Absolve check
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "osso fragment " .. snd.target
      --They've hit our aff count limit, let's lock them down/kill them.
    elseif total_aff_count &gt;= 4 and snd.checkAff("sight") and not snd.used.shield then
      if not snd.checkAff("writhe_transfix") then
        string = "tectonic transfixion " .. snd.target
      else
        string = "shield deface " .. snd.target
        if snd.checkAff("hearing") and not snd.checkAff("sensitivity") then
          string = "osso spur " .. snd.target .. " sensitivity" .. snd.sep .. string
        end
      end
    else
      if snd.balance.battle then
        for i in pairs(snd.giving_spur) do
          if not snd.checkAff(snd.giving_spur[i]) and spur == "none" then
            spur = snd.giving_spur[i]
          end
        end
      end
      if snd.used.shield then
        shield = "shield raze"
      else
        for i in pairs(snd.giving_shield) do
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.subjugation_attacks[snd.giving_shield[i]]
          end
        end
      end
      if shield == "none" then
        shield = "shield strike"
      end
      if snd.used.rebounding and shield ~= "facesmash" then
        shield = "shield raze"
      end

      for i in pairs(snd.giving_subdue) do
        if
          not snd.checkAff(snd.giving_subdue[i]) and
          subdue == "none" and
          snd.giving_subdue[i] ~= battle
        then
          subdue = snd.giving_subdue[i]
        end
      end

      if spur ~= "none" then
        if snd.toggles.affcalling and not snd.target_gone then
          string = "wt spur " .. snd.target .. ": " .. spur .. snd.sep
        end
        string = string .. "osso spur " .. spur .. " " .. snd.target .. snd.sep
      end

      string = string .. shield .. " " .. snd.target .. snd.sep

      if not shield:find("slam") then
        if subdue == "none" then
          string = string .. "subdue " .. snd.target
        else
          if snd.toggles.affcalling and not snd.target_gone then
            string = string .. "wt Subdue " .. snd.target .. ": " .. subdue .. snd.sep
          end
          string = string .. "subdue " .. snd.target .. " " .. subdue
        end
      end
    end

    if string.find(string, "deface") and not string.find(gmcp.Char.Vitals.wield_left, "tower") then
      string = "quickwield left tower"..string..snd.sep
    end


    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^git$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Smite - Straight damage</name>
								<script>if snd.class == "Earthcaller" then
  snd.giving_spur = {"sensitivity", "stupidity", "vertigo", "self_pity", "migraine", "impatience"}
  snd.giving_subdue =
    {
      "dementia",
      "loneliness",
      "stupidity",
      "hypochondria",
      "recklessness",
      "masochism",
      "paranoia",
      "lethargy",
    }
  snd.starting_attack()

  function snd.attack_function()
  local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string.."quickwield right crozier"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end
  
  local spur = "none"
  local subdue = "none"
  local overwhelm = false
    
  if snd.balance.battle then
    for i in pairs(snd.giving_spur) do
      if not snd.checkAff(snd.giving_spur[i]) and spur == "none" then
        spur = snd.giving_spur[i]
      end
    end
  end
  
  for i in pairs(snd.giving_subdue) do
    if not snd.checkAff(snd.giving_subdue[i]) and subdue == "none" and
      snd.giving_subdue[i] ~= battle
    then
      subdue = snd.giving_subdue[i]
    end
  end  
  
  if snd.checksomeAffs(snd.entangleaffs, 1) then
      overwhelm = true
  end
  
  if snd.balance.battle then
    string = string..snd.sep.."osso spur "..spur.." "..snd.target..snd.sep
    if snd.toggles.affcalling and not snd.target_gone then
      string = "wt spur " .. snd.target .. ": " .. spur .. snd.sep .. string
    end
  end

  if snd.mana_percent &lt; 40 and not snd.used.shield then
    string = "osso fragment " .. snd.target
  elseif snd.mana_percent &lt; 40 and snd.used.shield then
    string = "shield raze " .. snd.target .. snd.sep
  elseif overwhelm then
    string = "deface "..snd.target..snd.sep
  else
    string = string.."quash " .. snd.target ..snd.sep
  end
  
  if snd.toggles.affcalling and not snd.target_gone then
    string = string .. "wt subdue " .. snd.target .. ": " .. subdue .. snd.sep
  end
  string = string .. " subdue " .. snd.target .. " " .. subdue
		
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Earthcaller Group Dmg</name>
								<script>local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)

if snd.class == "Earthcaller" then

snd.starting_attack()
function snd.attack_function()

if not snd.waiting.queue then
 local string = ""
 local astring = "" 
 local shield = "none"
 local battle = "none"
 local chasten = "none"
 local tohit = {}
 local string = "contemplate " .. snd.target .. snd.sep 
 local missing = snd.missingAff("stupidity/paresis/anorexia/asthma", "/")
 local total_aff_count = 0
 local mental_aff_count = 0 
 
    for aff in pairs(snd.all_affs) do
      if table.contains(snd.target_has, snd.all_affs[aff]) then total_aff_count = total_aff_count + 1 end
    end
    
    for aff in pairs(snd.mental_affs) do
	   if table.contains(snd.target_has, snd.mental_affs[aff]) then mental_aff_count = mental_aff_count + 1 end
    end
    
    if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then string = string .. "quickwield right crozier"..snd.sep end
    if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string .. "quickwield left buckler" .. snd.sep end	
    --if not string.find(gmcp.Char.Vitals.wield_left, "tower") then string = string .. "quickwield left tower".. snd.sep end	
	
  snd.giving_shield = {
  "paresis",
  "asthma",  
  "weariness",
  "confusion",
  "berserking",
  "sight",  
  "writhe_transfix",  
   }
   
  snd.giving_battle = {
   "sensitivity",
   "vertigo",
   "impatience",
   "berserking",   
   "stupidity",
   "self_pity",
   "migraine",
   "anorexia",
  }
  
  snd.giving_chasten = {
   "loneliness",   
   "lethargy",
   "dementia",
   "stupidity",   
   "recklessness",
   "hypochondria",   
   "paranoia",
   "masochism",
   "agony",   
   "anorexia",
  }

	snd.giving = {
		--"sight",
        "asthma",
		"paresis",
		"clumsiness",
		"squelched",
		"shyness",
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		"haemophilia",
		"recklessness",
		"weariness",
		"voyria",
		"dizziness"

		}

    --Absolve check
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "osso fragment " .. snd.target
    end

      --Battle aff pick
      if snd.balance.battle then
        for i in pairs(snd.giving_battle) do
          if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
            battle = snd.giving_battle[i]
          end
        end
      end	  
      	
      --Chasten aff pick
      for i in pairs(snd.giving_chasten) do
        if not snd.checkAff(snd.giving_chasten[i]) and chasten == "none" and snd.giving_chasten[i] ~= battle then
          chasten = snd.giving_chasten[i]
        end
      end
	  
      --Shield aff pick
      if snd.used.shield then
        shield = "shield raze"
        -- If they are prone/psuedo prone and have 5 affs, smack them
      elseif #snd.target_has &gt;= 5 and snd.proned() then
        if not string.find(gmcp.Char.Vitals.wield_left, "tower") then
           shield = "quickwield left tower"..snd.sep.."shield deface " .. snd.target
        else
           shield = "quickwield left buckler"..snd.sep.."shield deface " .. snd.target
        end
        -- We need to build up disrupt/affs.
      else
        for i in pairs(snd.giving_shield) do
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.subjugation_attacks[snd.giving_shield[i]]
          end
        end
      end
    	  
      if snd.used.rebounding then
        if snd.checkAff("confusion") or #snd.target_has &lt; 3 then
          shield = "shield raze"
        else
          shield = "dirge hysteria"
        end
      end

    if not snd.infiltrate or snd.infiltrate == "nil" then		
       string = "osso infiltrate "..snd.target..snd.sep

    elseif snd.checksomeAffs({"agony", "accursed"}, 1) and not snd.checkAff("faulted") then
       string = "tectonic fault "..snd.target..snd.sep  
       
--    elseif snd.checkAff("accursed") and not snd.checkAff("hellsight") then
--       string = "dirge reckoning "..snd.target..snd.sep     
    end
 
      if battle ~= "none" then
        string = string .. "osso spur " .. battle .. " " .. snd.target .. snd.sep
      end
      --Add shield/tectonics/dirge attacks
      string = string .. shield .. " " .. snd.target .. snd.sep
	  
      --Add chasten choice
      if not shield:find("slam") or shield:find("transfix") or shield:find("hysteria") or shield:find("crash") then
        if chasten == "none" then
          string = string .. "subdue " .. snd.target
        else
          if snd.toggles.affcalling and not snd.target_gone then
            string = string .. "wt Subdue " .. snd.target .. ": " .. chasten .. snd.sep
          end
          string = string .. "subdue " .. snd.target .. " " .. chasten..snd.sep.."contemplate "..snd.target
        end
      end

    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end
end
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^gdmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Manadrain Affs (1v1)</name>
								<script>if snd.class == "Earthcaller" then

  snd.starting_attack()
  
  function snd.attack_function()

    if not snd.waiting.queue then
      
      local shield = "none"
      local battle = "none"
      local chasten = "none"
      local string = "contemplate " .. snd.target .. snd.sep 
      local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
      local mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
    
      snd.giving_shield = {
        "weariness",
        "paresis",
        "disrupted",
       }
       
      if snd.checksomeAffs({"asthma", "slickness"}, 2) and not snd.checkAff("anorexia") then -- spur
   
        snd.giving_battle = {
          "anorexia",  
          "impatience", 
          "stupidity", 
          "self-pity",  
          "berserking",
          "vertigo",   
          "migraine",      
          "sensitivity",
        }
      
      elseif not snd.checkAff("migraine") and snd.checkAff("hellsight") then
   
        snd.giving_battle = {
          "migraine",   
          "stupidity", 
          "self-pity",  
          "berserking",
          "vertigo",  
          "anorexia", 
          "sensitivity",         
        } 
      
      else
   
        snd.giving_battle = {
          "impatience",    
          "stupidity", 
          "self-pity",
          "berserking",
          "vertigo",
          "anorexia",
          "migraine",   
          "sensitivity",         
        }     
      
      end
  
      if not snd.checkAff("accursed") and not snd.checkAff("agony") then --subdue

        snd.giving_chasten = {
          "agony", 
          "hypochondria",
          "self_loathing",
          "stupidity",
          "lethargy",    
          "recklessness",
          "dementia",
          "paranoia",
          "anorexia",
        }
      
      elseif snd.checksomeAffs({"asthma", "slickness"}, 2) and not snd.checkAff("anorexia") then
    
        snd.giving_chasten = {
          "anorexia", 
          "hypochondria",
          "self_loathing",
          "lethargy",   
          "stupidity",
          "agony",
          "justice",  
          "recklessness",
          "dementia",
          "paranoia",   

        }
      
      else
    
        snd.giving_chasten = {
          "hypochondria",
          "lethargy",   
          "stupidity",
          "self_loathing",
          "justice",  
          "recklessness",
          "dementia",
          "paranoia",   
          "anorexia",

        }

      end

      cecho("\n&lt;yellow&gt; Affs: "..#snd.target_has)

      if snd.mana_percent &lt;= 43 and not snd.used.shield then
        string = "osso fragment "..snd.target..snd.sep
      end
      
      --Shield aff pick
      if snd.used.shield then
        shield = "shield raze"
      elseif snd.used.rebounding then
        if snd.checkAff("confusion") or #snd.target_has &lt; 3 then
          shield = "shield raze"
        else
          shield = "dirge hysteria"
        end
      elseif #snd.target_has &gt;= 12 and snd.proned() then
        shield = "shield deface " .. snd.target
        -- We need to build up disrupt/affs.
      else
        for i in pairs(snd.giving_shield) do
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.subjugation_attacks[snd.giving_shield[i]]
          end
        end
      end
      
      --Battle/Spur aff pick
      if snd.balance.battle then
        for i in pairs(snd.giving_battle) do
          if not snd.checkAff("hypochondria") and snd.focuscheck(1) and snd.treecheck_enemy(1) and snd.reconcheck(1) then
            battle = "hypchondia" 
          elseif not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
            battle = snd.giving_battle[i]
          end
        end
      end	 
	
      --Chasten/Subdue aff pick
      for i in pairs(snd.giving_chasten) do
        if shield == "none" then
          if not snd.checkAff(snd.giving_chasten[i]) and chasten == "none" and snd.giving_chasten[i] ~= battle then
            chasten = snd.giving_chasten[i]
          end
        end
      end
 
      if battle ~= "none" then
        string = string.."osso spur "..battle.." "..snd.target..snd.sep
      end
      --Add shield/tectonics/dirge attacks
      string = string..shield.." "..snd.target..snd.sep
	  
      --Add chasten/subdue choice
      if not shield:find("slam") or shield:find("transfix") or shield:find("hysteria") or shield:find("crash") then
        if chasten == "none" then
          string = string.."subdue "..snd.target
        else
          string = string.."subdue "..snd.target.." "..chasten..snd.sep
        end
      end
      
      if snd.theyran then
        string = "osso lurch "..snd.target..snd.sep
      end
      
      if not snd.infiltrate then		
        string = "osso infiltrate "..snd.target..snd.sep
      elseif snd.checksomeAffs({"asthma", "accursed"}, 2) and not snd.checkAff("hellsight") then
        string = "dirge reckoning "..snd.target..snd.sep 
      elseif snd.checksomeAffs({"stupidity", "paresis", "anorexia", "asthma"}, 3) and not snd.checkAff("slickness") then
        string = "dirge reckoning "..snd.target..snd.sep   
      elseif not snd.checkAff("asthma") and snd.checkAff("hellsight") and not snd.used.rebounding then
        string = "beset "..snd.target..snd.sep   
      elseif not snd.checkAff("peace") and snd.checksomeAffs({"hellsight", "accursed"}, 2) then
        string = "dirge lull "..snd.target..snd.sep 
      elseif snd.checkAff("asthma") and snd.fitnesscheck(3) and snd.checksomeAffs({"weariness","hypochondria","clumsiness","baldness"}, 1) and not snd.checkAff("hellsight") then  
        string = "dirge reckoning "..snd.target..snd.sep
      elseif snd.checkAff("agony") and #snd.target_has &gt;= 4 and not snd.checkAff("faulted") then
        string = "tectonic fault "..snd.target..snd.sep
      elseif snd.checkAff("asthma") and snd.checksomeAffs({"hypochondria", "weariness", "clumsiness"}, 1) and not snd.checkAff("hellsight") then
        string = "dirge reckoning "..snd.target..snd.sep 
      elseif snd.checkAff("asthma") and not snd.checkAff("hellsight") then
        string = "dirge reckoning "..snd.target..snd.sep
      --else
      --  string = "tectonic ashfall "..snd.target..snd.sep
      end
      
      if snd.defenses.def_seismicity.state ~= "deffed" then
        string = "TECTONIC SEISMICITY"..snd.sep..string
      end
      
      if string:find("deface") then
        if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then
          string = "quickwield right crozier"..snd.sep..string
        end
        if not string.find(gmcp.Char.Vitals.wield_left, "tower") then
          string = "quickwield left tower"..snd.sep..string
        end
      else
        if not string.find(gmcp.Char.Vitals.wield_right, "crozier") then
          string = "quickwield right crozier"..snd.sep..string
        end
        if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
          string = "quickwield left buckler"..snd.sep..string
        end
      end
    

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Alchemist</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Surge</name>
								<script>if snd.class == "Alchemist" then
	if matches[2] == "" then
		snd.attack("botany propagate "..snd.target)
	else
 		snd.attack("botany propagate "..matches[2])
	end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^nsu(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Pull</name>
								<script>if snd.class == "Alchemist" then
  if matches[2] == "" then
    snd.attack("botany allure "..snd.target)
  else
    snd.attack("botany allure "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^np(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Displacement</name>
								<script>if snd.class == "Alchemist" then
  if matches[2] == "" then
    snd.attack("BOTANY PERSPECTIVE "..snd.target)
  else
    snd.attack("BOTANY PERSPECTIVE "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dp(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Canopy</name>
								<script>if snd.class == "Alchemist" then
  snd.attack("BOTANY CONTAINMENT")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^can$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Curtail</name>
								<script>if snd.class == "Alchemist" then
  snd.attack("botany curtail")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hin$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Screen</name>
								<script>if snd.class == "Alchemist" then
  snd.attack("BOTANY FREQUENCIES")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^scr$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Flow</name>
								<script>if snd.class == "Alchemist" then
  if matches[2] == "" then
    snd.attack("BOTANY WANDER "..snd.target)
  else
    snd.attack("BOTANY WANDER "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^flo(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Thorncoat</name>
								<script>if snd.class == "Alchemist" then
  if matches[2] == "" then
    snd.attack("BOTANY QUILLS me")
  else
    snd.attack("BOTANY QUILLS "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^tco(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Emerge</name>
								<script>if snd.class == "Alchemist" then
  snd.attack("botany diffuse")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^eme$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Blender</name>
								<script>if snd.class == "Alchemist" then
  
  snd.starting_attack()
  function snd.attack_function()

  call = ""
  string = ""
  local energy = tonumber(gmcp.Char.Vitals.volatility)

  if not snd.waiting.queue then
  
    if snd.shamanpet ~= "immolative" and snd.balance.morph then
      string = "experiment reconfigure IMMOLATIVE"..snd.sep.."order experiment follow me"..snd.sep
    end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."compound expose "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
      elseif energy &gt;= 4 then
        string = string.."ALCHEMY CATALYSE"..snd.sep.."ALCHEMY OVERCHARGE "..snd.target
      elseif energy &gt;= 3 then
        string = string.."ALCHEMY OVERCHARGE "..snd.target
      else
        string = string.."ALCHEMY VIRULENT "..snd.target.." epteth"
      end
  
  end  
		

	if snd.toggles.affcalling and not snd.target_gone then
	  string = call..string
	end

  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^blender$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Damage</name>
								<script>if snd.class == "Alchemist" then

  snd.giving = {
    "paresis",
    "clumsiness",
    "weariness",
    "asthma",
    "sensitivity",
    "recklessness",
    "allergies",
    "vomiting",
    "haemophilia",
    "slickness",
    "anorexia",
    "stupidity",
    "dizziness",
    "voyria",
		"left_leg_crippled",
		"right_leg_crippled",
    }
    
  snd.starting_attack()
  function snd.attack_function()

    string = ""
    call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
 
    if not snd.waiting.queue then
      venom = "none"
      for i in pairs(snd.giving) do
        if not table.contains(snd.target_has, snd.giving[i]) then
          if venom == "none" then
            venom = snd.effects[snd.giving[i]]
          end
        end
      end
      if venom == "none" then
        venom = "loki"
      end
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = string..snd.sep.."compound expose "..snd.target..snd.sep 
      end
    
      if not snd.loyalsattacking then
        string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
      end

      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
      elseif not snd.checkAff("lifebane") and energy &gt;= 2 then
        if energy &gt;= 3 then
          string = string.."ALCHEMY CATALYSE"..snd.sep
        end
        string = string.."ALCHEMY INTRUSIVE "..snd.target
      elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
        if energy &gt;= 2 then
          string = string.."ALCHEMY CATALYSE"..snd.sep
        end
        string = string.."ALCHEMY ROUSING "..snd.target..snd.sep
      elseif snd.checkAff("sensitivity") and snd.checkAff("stormtouched") then
        if energy &gt;= 2 then
          string = string.."ALCHEMY CATALYSE"..snd.sep
        end
        string = string.."ALCHEMY STATIC "..snd.target   
      else
        if energy &gt;= 3 then
          string = string.."ALCHEMY CATALYSE"..snd.sep
        end
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end		

		  if snd.toggles.affcalling and not snd.target_gone then
			  string = call..string
		  end
	
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Thorns</name>
								<script>if snd.class == "Alchemist" then

snd.starting_attack()
function snd.attack_function()

  if snd.timer_check("fitness", .2, "more than") then
    snd.giving = {
		  "paresis",
      "asthma",
	    "slickness",
	    "anorexia",
	    "stupidity",
	    "left_arm_crippled",
	    "right_arm_crippled",
	    "weariness",
	    "dizziness",
	    "stupidity",
	    "recklessness",
	    "haemophilia",
	    "left_leg_crippled",
	    "right_leg_crippled",
	    "sensitivity",
	    }
      cecho("\n&lt;red&gt;Fitness is down.")        
  elseif snd.timer_check("focus", .2, "more than") then
    snd.giving = {
      "anorexia",
      "stupidity", 
      "paresis",
      "weariness",
      "clumsiness",
			"recklessness",
      "sensitivity",
			"dizziness",
      "peace",
		  }
      cecho("\n&lt;red&gt;Focus is down.")  
  else	
    snd.giving = {
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia",
      "shyness",
      "sensitivity",
      "vomiting",
      "stupidity",
      "weariness",
      "allergies",
      "haemophilia",
      "recklessness",
      "dizziness",
      "voyria", 
		  "left_leg_crippled",
  		"right_leg_crippled",
    }
  end

  call = ""
  string = ""
  local energy = tonumber(gmcp.Char.Vitals.volatility)
  
  if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
    if (snd.fetish1 or snd.fetish2 or snd.fetish3 or snd.fetish4) == "" then
      string = "compound augment galvanic invigorant anticoagulant intoxicant"..snd.sep
    elseif snd.flying then
      string = "touch tentacle "..snd.target..snd.sep
    elseif snd.used.shield or snd.checkAff("barrier") then
      string = "ALCHEMY CORROSIVE "..snd.target..snd.sep
    elseif snd.theyran then
      string = "BOTANY ALLURE "..snd.target
    elseif snd.instakilltarget == snd.target then
      string = "ALCHEMY VIRULENT "..snd.target.." curare"
      call = "wt Afflicting "..snd.target..": curare"..snd.sep
    elseif snd.diffuseneeded then
      string = "botany diffuse"
    elseif snd.blightneeded then
      string = "botany blight"
    elseif not snd.quills and not snd.quillsused then
      string = "BOTANY QUILLS me"..snd.sep
    elseif not snd.quills and hp &lt; 40 and snd.cureset == "carnifex" then
      string = "BOTANY QUILLS me"..snd.sep
    elseif snd.proned() then
      string = "ALCHEMY ASPHYXIANT "..snd.target
    elseif not snd.checkAff("fallen") and energy &gt;= 3 and snd.thorncount == 3 then
      string = "ALCHEMY UPSET "..snd.target
    elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."alchemy catalyse"..snd.sep.."ALCHEMY currents "..snd.target..snd.sep
        comingattack = "currents"
    else
      if energy &gt;= 5 and not snd.checkAff("blackout") then
        string = "alchemy catalyse"..snd.sep.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep
        comingattack = "electroshock"
      else
        if energy &gt;= 4 then
          string = "ALCHEMY CATALYSE"..snd.sep
        end
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep 
        comingattack = "virulent"          
      end
    end    
      
      if snd.alchemystored ~= "" and snd.thorncount == 3 then
        string = string..snd.sep.."alchemy educe "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" then
          string = "alchemy prepare electroshock"..snd.sep
        else
          string = "alchemy prepare virulent"..snd.sep
        end
      end    
      
      if snd.shamanpet == "" then
        string = "experiment request lacerating"..snd.sep.."order experiment follow me"..snd.sep..string
      end
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure lacerating"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = "compound expose "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
  
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^thorns$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Aff Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Aff support</name>
								<script>if snd.class == "Alchemist" then
  snd.giving = {
  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
  "stupidity",
  "weariness",
  "allergies",
  "vomiting",
  "haemophilia",
  "sensitivity",
  "recklessness",
  "dizziness",
  }
  

snd.starting_attack()
function snd.attack_function()

      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end

  call = ""
  string =""

  if not snd.waiting.queue then
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
  
    for i in pairs(snd.giving) do
      if not snd.checkAff(snd.giving[i]) and venom == "none" then
        venom = snd.effects[snd.giving[i]]
      end
    end
    if venom == "none" then
      venom = "epseth"
    end 
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."compound expose "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."alchemy catalyse"..snd.sep.."ALCHEMY currents "..snd.target..snd.sep
    elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
      if energy &gt;= 4 and not snd.checkAff("hallucinations") then
        string = string.."alchemy catalyse"..snd.sep
      end
      string = string.."ALCHEMY NEUROTIC "..snd.target..snd.sep
    elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
      if energy &gt;= 4 and not snd.checkAff("blackout") then
        string = string.."alchemy catalyse"..snd.sep
      end
      string = string.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep      
    else
      string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
      call = "wt Afflicting "..snd.target..": "..venom..snd.sep
    end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Aff Reclamation</name>
								<script>if snd.class == "Alchemist" then  

  snd.giving = {

  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
  "stupidity",
  "weariness",
  "allergies",
  "vomiting",
  "haemophilia",
  "sensitivity",
  "recklessness",
  "dizziness",
  }
 
  snd.giving_prem = {

  "agoraphobia",
  "claustrophobia",
  "vertigo",
  "loneliness",
  "shyness",
  "paranoia",
  "superstition",
  "fear",
  
  }
  

snd.starting_attack()
function snd.attack_function()

      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end

  call = ""
  string =""

  if not snd.waiting.queue then
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
  
    for i in pairs(snd.giving) do
      if not snd.checkAff(snd.giving[i]) and venom == "none" then
        venom = snd.effects[snd.giving[i]]
      end
    end
    if venom == "none" then
      venom = "epseth"
    end 
  
    for i in pairs(snd.giving_prem) do
      if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
        prem = snd.giving_prem[i]
      end
    end
    if prem == "none" then
      prem = "loneliness"
    end
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."compound expose "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
    
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
      elseif energy &lt; 3 then
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom..snd.sep
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      else
        if mentcount &gt; 3 then
          string = string.."DERIVE HALLUCINOGEN "..snd.target.." "..prem..snd.sep
          call = "wt Afflicting "..snd.target..": "..prem..snd.sep
        else
          if energy &gt; 2 then
            if not (snd.checkAff("impatience") or snd.checkAff("confusion")) then
              string = string.."ALCHEMY NEUROTIC "..snd.target..snd.sep
            elseif not snd.checkAff("stupidity") then
              string = string.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep
            else
              string = string.."ALCHEMY CURRENT "..snd.target..snd.sep
            end
          end
        end
      end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rec$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs</name>
								<script>if snd.class == "Alchemist" then

snd.starting_attack()
function snd.attack_function()

  call = ""
  string = ""
  local energy = tonumber(gmcp.Char.Vitals.volatility)
	
  if not snd.waiting.queue then
 
    if snd.shamanpet ~= "tumefactive" and snd.balance.morph then
      string = "experiment reconfigure tumefactive"..snd.sep.."order experiment follow me"..snd.sep
    end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."compound expose "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
    if snd.flying then
      string = string.."touch tentacle "..snd.target..snd.sep
    elseif snd.used.shield or snd.checkAff("barrier") then
      string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
    elseif snd.theyran then
      string = string.."BOTANY ALLURE "..snd.target
    elseif snd.instakilltarget == snd.target then
      string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
      call = "wt Afflicting "..snd.target..": curare"..snd.sep
    elseif snd.diffuseneeded then
      string = string.."botany diffuse"
    elseif snd.blightneeded then
      string = string.."botany blight"
    elseif not snd.checkAff("fallen") then
      string = string.."ALCHEMY ASPHYXIANT "..snd.target
    elseif not snd.checkAff("fallen") and energy &gt;= 3 then
      string = string.."ALCHEMY CATALYSE"..snd.sep.."ALCHEMY UPSET "..snd.target
    elseif not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"},2) then
      string = string.."ALCHEMY VIRULENT "..snd.target.." epseth"
      call = "wt Afflicting "..snd.target..": epseth"..snd.sep 
    elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled"},2) then
      string = string.."ALCHEMY VIRULENT "..snd.target.." epteth"
      call = "wt Afflicting "..snd.target..": epteth"..snd.sep
    elseif not snd.checkAff("slickness") then
      string = string.."ALCHEMY VIRULENT "..snd.target.." gecko"
      call = "wt Afflicting "..snd.target..": gecko"..snd.sep
    elseif not snd.checkAff("anorexia") then
      string = string.."ALCHEMY VIRULENT "..snd.target.." slike"
      call = "wt Afflicting "..snd.target..": gecko"..snd.sep
    else
      string = string.."ALCHEMY VIRULENT "..snd.target.." ouabain"
      call = "wt Afflicting "..snd.target..": ouabain"..snd.sep 
    end		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Normal)</name>
								<script>if snd.class == "Alchemist" then
  
  if snd.timer_check("fitness", .2, "more than") then
    snd.giving = {
		  "paresis",
      "asthma",
	    "slickness",
	    "anorexia",
	    "stupidity",
	    "weariness",
	    "dizziness",
	    "stupidity",
	    "recklessness",
	    "haemophilia",
	    "sensitivity",
	    }
      cecho("\n&lt;red&gt;Fitness is down.")        
  elseif snd.timer_check("focus", .2, "more than") then
    snd.giving = {
      "anorexia",
      "stupidity", 
      "paresis",
      "weariness",
      "clumsiness",
			"recklessness",
      "sensitivity",
			"dizziness",
      "peace",
		  }
      cecho("\n&lt;red&gt;Focus is down.")  
  else	
    snd.giving = {
      "paresis",
      "clumsiness",
      "asthma",
      "slickness",
      "anorexia",
      "shyness",
      "sensitivity",
      "vomiting",
      "stupidity",
      "weariness",
      "allergies",
      "haemophilia",
      "recklessness",
      "dizziness",
      "voyria", 
    }
  end
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if (snd.fetish1 or snd.fetish2 or snd.fetish3 or snd.fetish4) == "" then
        string = "compound augment galvanic invigorant inhibiting intoxicant"..snd.sep
      elseif snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."alchemy catalyse"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."ALCHEMY currents "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."ALCHEMY ROUSING "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."ALCHEMY STATIC "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and snd.cureset == "carnifex" then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."DERIVE CAUSALITY "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."ALCHEMY ASPHYXIANT "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."ALCHEMY CATALYSE"..snd.sep.."ALCHEMY UPSET "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."ALCHEMY MALIGNANT "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."ALCHEMY INFILTRATIVE "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."ALCHEMY PATHOGEN "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."alchemy catalyse"..snd.sep.."ALCHEMY currents "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY NEUROTIC "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."DERIVE HALLUCINOGEN "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      else
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."alchemy educe "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "alchemy prepare electroshock"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "alchemy prepare infiltrative"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "alchemy prepare pathogen"..snd.sep
        end
      end      
      
      if snd.shamanpet == "" then
        string = "experiment request toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = "compound expose "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Arm)</name>
								<script>if snd.class == "Alchemist" then

if not snd.checkAff("stormtouched") then

  snd.giving = {
    "left_arm_crippled",
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }

else

  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }
  
end
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."alchemy catalyse"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."ALCHEMY currents "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."ALCHEMY ROUSING "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."ALCHEMY STATIC "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and (snd.cureset == "carnifex" or snd.cureset == "templar") then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."DERIVE CAUSALITY "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."ALCHEMY ASPHYXIANT "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."ALCHEMY CATALYSE"..snd.sep.."ALCHEMY UPSET "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."ALCHEMY MALIGNANT "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."ALCHEMY INFILTRATIVE "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."ALCHEMY PATHOGEN "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."alchemy catalyse"..snd.sep.."ALCHEMY currents "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY NEUROTIC "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."DERIVE HALLUCINOGEN "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      elseif not snd.checkAff("left_arm_crippled") or not snd.checkAff("right_arm_crippled") then
        string = string.."ALCHEMY VIRULENT "..snd.target.." epteth"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": epteth"..snd.sep
      else
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
        comingattack = "virulent"
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."alchemy educe "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "alchemy prepare electroshock"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "alchemy prepare infiltrative"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "alchemy prepare pathogen"..snd.sep
        end
      end      
      
      if snd.shamanpet == "" then
        string = "experiment request toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
  
      if snd.shamanpet ~= "toxic" and snd.balance.morph then
        string = "experiment reconfigure toxic"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = "compound expose "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Lacerating)</name>
								<script>if snd.class == "Alchemist" then

  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."ALCHEMY CORROSIVE "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."BOTANY ALLURE "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."ALCHEMY VIRULENT "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."botany diffuse"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."botany blight"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."DERIVE PROGNOSIS "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."ALCHEMY DISCORPORATE " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."alchemy catalyse"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."ALCHEMY currents "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."ALCHEMY ROUSING "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."ALCHEMY STATIC "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and snd.cureset == "carnifex" then
        string = "BOTANY QUILLS me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."DERIVE CAUSALITY "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."ALCHEMY ASPHYXIANT "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."ALCHEMY CATALYSE"..snd.sep.."ALCHEMY UPSET "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."ALCHEMY MALIGNANT "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."ALCHEMY INFILTRATIVE "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."ALCHEMY PATHOGEN "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."alchemy catalyse"..snd.sep.."ALCHEMY currents "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY NEUROTIC "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."alchemy catalyse"..snd.sep
        end
        string = string.."ALCHEMY ELECTROSHOCK "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."DERIVE HALLUCINOGEN "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      else
        string = string.."ALCHEMY VIRULENT "..snd.target.." "..venom
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."alchemy educe "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "alchemy prepare electroshock"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "alchemy prepare infiltrative"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "alchemy prepare pathogen"..snd.sep
        end
      end      
      
      if snd.shamanpet == "" then
        string = "experiment request lacerating"..snd.sep.."order experiment follow me"..snd.sep..string
      end
  
      if snd.shamanpet ~= "lacerating" and snd.balance.morph then
        string = "experiment reconfigure lacerating"..snd.sep.."order experiment follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = "compound expose "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
						</AliasGroup>
						<Alias isActive="yes" isFolder="no">
							<name>Takk</name>
							<script>if snd.class == "Shaman" then
snd.giving = {
"shyness",
"paresis",
"stupidity",
"clumsiness",
"weariness",
"asthma",
"sensitivity",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"anorexia",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()

    local command = ""
    local call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.energy)
--local boosting = false -- this is like templar vorpal
-- if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true -- yesss
-- end
    
    
          local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
    if venom == "none" then
     venom = "epseth"
    end
      Divulge = {"superstition", "loneliness", "shyness", "agoraphobia", "claustrophobia", "vertigo", "paranoia",}
local phobia = ""
for _, aff in ipairs(Divulge) do
  if not snd.checkAff(aff) then
    phobia = aff
    break
  end
end
  if snd.used.shield then
   command = "commune leafstorm "..snd.target
        elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.checkAff("dread") then
        command = "commune reclamation "..snd.target
      elseif not NaturalTide and not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune naturaltide overload"
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 and not snd.checkAff("stupidity") then
        command = "wt Afflicting "..snd.target..": hallucinations"..snd.sep.. "Commune boost"..snd.sep.."commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 then
        command = "wt Afflicting "..snd.target..": hallucinations"..snd.sep.. "Commune boost"..snd.sep.."commune sporulation "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") then
        command = "commune sporulation "..snd.target
      --elseif not snd.checkAff("lifebane") then
        --command = "shaman vitiate "..snd.target    -- Probably need to move this up, only apply it once they'll be hit by an Omen?
                                                     -- You know, when they'l actually start taking some chunkier nukes
      elseif not snd.checkAff("dread") and snd.checkAff("impatience") then
        command = "shaman premonition "..snd.target
      elseif mentcount == 3 and snd.checkAff("impatience")  then 
        command = "wt Afflicting "..snd.target..": "..phobia..snd.sep.. "Shaman Divulgence "..snd.target.. " " .. phobia
        else
            command = "commune vinelash "..snd.target.." "..venom
             --call = "wt Vinelash "..snd.target..": "..venom..snd.sep
  end
    
    command = "fetish attune "..snd.target..snd.sep.."order familiar kill "..snd.target..snd.sep.."fetish attune "..snd.target..snd.sep..call..snd.sep..command
    
  if command ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = command
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^takk$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Takk2</name>
							<script>if snd.class == "Shaman" then
snd.giving = {
"shyness",
"paresis",
"stupidity",
"clumsiness",
"weariness",
"asthma",
"sensitivity",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"anorexia",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",


}
snd.starting_attack()
function snd.attack_function()

          local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
    local command = ""
    local call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.energy)
local boosting = false 
 if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true
 end
    
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
    if venom == "none" then
     venom = "epseth"
    end
      Divulge = {"paranoia"}
      -- "vertigo", "claustrophobia", "shyness", "superstition", "agoraphobia", "loneliness", 
       -- leaving those here, disabled, since I probably just want paranoia for Omen
local phobia = ""
for _, aff in ipairs(Divulge) do
  if not snd.checkAff(aff) then
    phobia = aff
    break
  end
end
   if snd.used.shield then
   command = "commune leafstorm "..snd.target
  elseif not snd.incomingomen and snd.checksomeAffs({"spines", "blighted", "infested", "stormtouched"}, 3) then
        command = "shaman omen "..snd.target
          elseif snd.checkAff("stormtouched") and snd.incomingomen and energy &gt;= 4 then
          command = "commune boost"..snd.sep.."commune staticburst "..snd.target
          -- Yeah, okay, no. This didn't work, Takk. Ya newb. Might be fun to include.
          -- Might add a 'If Omen is inbound, and they have Stormtouched, go spam DMG with boosted Lightning, though that might give them time to
          -- clean up the other affs and just kill any momentum of mine, future testing needed
          
          --command = "shaman vitiate "..snd.target    -- Moved this up, not sure I like it here, and want it to only apply it once they'll be hit by an Omen?
                                                       -- You know, when they'l actually start taking some chunkier nukes
                                                       -- Just worried it's a bit too slow for what it really does, prolly better in groups
          
       elseif not snd.checkAff("vitalbane") then 
        command = "commune scourge "..snd.target  -- highly essential
      elseif not NaturalTide and not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune naturaltide overload"
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 and not snd.checkAff("stupidity") then
        command = "commune boost"..snd.sep.."commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 then
        command = "commune boost"..snd.sep.."commune sporulation "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") then
        command = "commune sporulation "..snd.target
      elseif not snd.checkAff("dread") and snd.checkAff("impatience") then  -- Moved Up
        command = "shaman premonition "..snd.target  -- Think this really needs to be higher up, I want it to lock Blighted/Infested, right?
      elseif not snd.checkAff("blighted") then
        command = "commune spines "..snd.target
      elseif not snd.checkAff("infested") then
        command = "commune infest "..snd.target
        --Prem Was Here Before
      elseif mental_count(3) and snd.checkAff("impatience") and not snd.checkAff("paranoia") then 
        command = "shaman divulgence "..snd.target.. " paranoia" 
        -- is 'and not snd.checkAff("paranoia") overkill given that I only have it in my table? 
      elseif energy &gt;= 2 then
            command = "commune boost"..snd.sep.."commune vinelash "..snd.target.." "..venom
        else
            command = "commune vinelash "..snd.target.." "..venom
  end
    
      command = "fetish attune "..snd.target..snd.sep.."order familiar kill "..snd.target..snd.sep.."fetish attune "..snd.target..snd.sep..command
    
  if command ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = command
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^takk2$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Ravager</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Affs</name>
								<script>if snd.class == "Ravager" then
  snd.starting_attack()

  function snd.attack_function()
  
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
        
    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep 
    end
    
    if not snd.waiting.queue then
      if snd.theytumbling then
        string = "order loyals kill "..snd.target..snd.sep .. "ego kneel "..snd.target
      elseif snd.theyran then
        string = "order loyals kill "..snd.target..snd.sep .. "ego haul "..snd.target
      elseif snd.used.shield then
        string = "touch hammer " .. snd.target..snd.sep
      elseif not snd.checkAff("indifference") then
        string = "ego inadequacy "..snd.target..snd.sep
      elseif not snd.checksomeAffs({"dementia", "paranoia", "merciful"}, 1) then
        string = "ego boast "..snd.target..snd.sep
      elseif not snd.checkAff("fear") then
        string = "ego menace"..snd.sep
      else
        string = "ego trip "..snd.target..snd.sep
      end
    
    end
    
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Bleed/Damage (me)</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
  
    local string = ""
    local hackleAttack = ""
    local zenithAbility = ""
    local firstFlow = ""
    local secondFlow = ""
    hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    mymental_aff_count = 0
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.have_aff, snd.mental_affs[aff]) then
        mymental_aff_count = mymental_aff_count + 1
      end
    end
    
    if not snd.waiting.queue then
      
		if snd.flamestack &gt;= 12 and not snd.used.shield then
			string = "invoke extinguish "..snd.target..snd.sep
		elseif (snd.flamestack == 11 and snd.hackles) and not snd.used.shield then
			string = "assail "..snd.target.." tenderise"..snd.sep.."invoke extinguish "..snd.target..snd.sep
		
		elseif snd.theytumbling then
			string = "ego kneel "..snd.target.. snd.sep
		elseif snd.theyran then
			string = "ego haul "..snd.target.. snd.sep 
		elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and ((snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience"))) or (mymental_aff_count &gt;= 4)) then 
			string = "ego boost"..snd.sep
		--elseif not snd.checkAff("indifference") and not snd.used.shield and tonumber(gmcp.Char.Vitals.ego) &gt; 50 then
		--	string = "EGO INADEQUACY "..snd.target.. snd.sep
		elseif snd.parried_limb ~= "torso" then
			string = "onslaught " .. snd.target .. " plexus plexus".. snd.sep
		elseif snd.parried_limb ~= "head" then
			if not snd.checkAff("crippled_throat") then
				string = "onslaught " .. snd.target .. " windpipe overpower head".. snd.sep
			else
				string = "onslaught " .. snd.target .. " concussion overpower head".. snd.sep
			end
		elseif snd.parried_limb ~= "left leg" or snd.parried_limb ~= "right leg" then
			string = "onslaught " .. snd.target .. " kneecap left kneecap right".. snd.sep
		elseif snd.parried_limb ~= "left leg" and snd.parried_limb == "right leg" then
			string = "onslaught " .. snd.target .. " kneecap left kneecap left".. snd.sep
		elseif snd.parried_limb ~= "right leg" and snd.parried_limb == "left leg" then
			string = "onslaught " .. snd.target .. " kneecap right kneecap right".. snd.sep
		else
			if snd.parried_limb ~= "left arm" then
				string = "onslaught " .. snd.target .. " bully left bully left".. snd.sep
			elseif snd.parried_limb ~= "right arm" then
				string = "onslaught " .. snd.target .. " bully right bully right".. snd.sep
			else
				string = "butcher " .. snd.target .. snd.sep
			end
		end
      
		if gmcp.Char.Vitals.ability_bal == "1" then
			if snd.parried_limb ~= "head" and not snd.checkAff("blurry_vision") then
				string = string.."assail "..snd.target.." slug ".. snd.sep
			else
				string = string.."assail "..snd.target.." butcher ".. snd.sep
			end
		end
      
		if snd.zenith then
			if not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				string = string .. snd.sep .. "invoke lance " .. snd.target.. snd.sep
			elseif snd.checkAff("ablaze") then
				string = string .. snd.sep .. "invoke intensify " .. snd.target.. snd.sep
			else
				string = string .. snd.sep .. "invoke torment " .. snd.target.. snd.sep
			end
		end
      
		if not snd.zenith then
			if not snd.zenith_coming then
				string = "invoke delirium".. snd.sep
			end
		end
      
		if not snd.firefist then
			if snd.checksomeAffs({"ablaze", "heatspear"}, 2) then
				if snd.firefist_cooldown then
					if snd.zenith or snd.zenith_coming then
						string = "invoke ravage".. snd.sep
					else
						string = "invoke delirium" .. snd.sep..string
					end
				end
			end
		end
    
		if snd.used.shield then
			if not snd.checkAff("ablaze") then
				string = "touch hammer "..snd.target..snd.sep..string
			else
				string = "enact scorch "..snd.target..snd.sep..string
			end
		end
			
		if not snd.loyalsattacking then
			string = "order loyals kill "..snd.target..snd.sep..string
		end      
      
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
    end
end

snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Fire Damage</name>
								<script>if snd.class == "Ravager" then
  snd.starting_attack()

  function snd.attack_function()
    -- This checks for a present Firefist defense. This is used later during a Firefist check.
    local firefist = false
    if snd.defenses.def_ravage.state == "deffed" then
      firefist = true
    end
    -- This checks for a present Zenith defense. It is used later in Zenith/Flow Handling.
    local zenith = false
    if snd.defenses.def_delirium.state == "deffed" then
      zenith = true
    end
    -- In this mode, we're going to only rely on Purification. It's built to support a quick Immolate.
    if not snd.waiting.queue then
      if snd.used.shield then
        string = "touch hammer " .. snd.target
        -- OK, so if immolation is ready... we should cast it!	
      elseif snd.flamestack &gt;= 12 then
        string = "invoke extinguish " .. snd.target
        -- OK, so if immolation isn't ready, what next? Heatspear!
      elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
        string = "invoke lance " .. snd.target
      else
        string = "invoke torment " .. snd.target
      end

      if zenith then
        if snd.used.shield then
          string = "touch hammer " .. snd.target
        elseif snd.parried_limb ~= "torso" then
          string = "onslaught " .. snd.target .. " plexus plexus" .. snd.sep .. string
        elseif snd.parried_limb ~= "left arm" then
          string = "onslaught " .. snd.target .. " bully left bully left" .. snd.sep .. string
        else
          string = "onslaught " .. snd.target .. " bully right bully right" .. snd.sep .. string
        end
      end
	
      if gmcp.Char.Vitals.ability_bal == "1" then
        string = "assail " .. snd.target .. " tenderise " .. snd.sep .. string
      end
    end

    if not firefist then
      if snd.checksomeAffs({"ablaze", "heatspear"}, 2) then
        if zenith then
          string = "invoke ravage"
        else
          string = "invoke delirium" .. snd.sep .. string
        end
      end
    end

    if snd.flamestack &gt;= 12 then
      string = "invoke extinguish " .. snd.target
    end
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^fire$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>New Damage/Bleed</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
  
    local string = ""
    local hackleAttack = ""
    local zenithAbility = ""
    local firstFlow = ""
    local secondFlow = ""
	  local zenithdoing = ""
    hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    mymental_aff_count = 0
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.have_aff, snd.mental_affs[aff]) then
        mymental_aff_count = mymental_aff_count + 1
      end
    end      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    if not snd.waiting.queue then
	
		if snd.zenith then 
			if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
				zenithdoing = "intensify"
			elseif not snd.pyromania then
				zenithAbility = "invoke hellfire"..snd.sep
				zenithdoing = "hellfire"
			elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke lance "..snd.target..snd.sep
				zenithdoing = "lance"
			else
				zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
				zenithdoing = "torment"
			end
		end
    
		if snd.flamestack &gt;= 11 or snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		else
			hackleAttack = "butcher"
		end
		
		if snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso" 
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or snd.cureset == "praenomen") and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "windpipe"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and snd.not_aff("left_leg_broken") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and snd.can_legs() then
			firstFlow = "concuss"
		elseif not snd.checkAff("fallen") then
			firstFlow = "clobber"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		else
			firstFlow = "bully"
		end	
		
		if snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) then
			secondFlow = "pressure"
		elseif ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") and firstFlow ~= "clobber" then
			secondFlow = "clobber"
		elseif snd.limb_dmg["torso"] &gt;= 24 and firstFlow == "plexus" and (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			secondFlow = "plexus"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" and not snd.hackles) then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" and not snd.hackles) then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "concuss" 
		elseif firstFlow == "clobber" then
			secondFlow = "plexus"
		elseif not snd.checkAff("fallen") and firstFlow ~= "clobber" then
			secondFlow = "clobber"
		elseif not snd.checkAff("right_leg_broken") and snd.limb_dmg["right leg"] &gt;= 24 and firstFlow ~= "kneecap right" and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.limb_dmg["left leg"] &gt;= 24 and firstFlow ~= "kneecap left" and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		else
			secondFlow = "bully"
		end	
      
		if snd.theytumbling then
			string = "ego kneel "..snd.target
		elseif snd.theyran then
			string = "ego haul "..snd.target 
		elseif snd.flamestack &gt;= 12 and not snd.used.shield then
			string = "invoke extinguish "..snd.target..snd.sep
		elseif (snd.flamestack == 11 and snd.hackles) and not snd.used.shield then
			string = "assail "..snd.target.." tenderise"..snd.sep.."invoke extinguish "..snd.target..snd.sep
		elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.ego) &gt;= 100 and snd.recover and ((snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience"))) or (mymental_aff_count &gt;= 4)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming and snd.flamestack &lt; 10 then
			string = "invoke delirium"..snd.sep
		else
			if not snd.firefist and snd.firefist_cooldown and snd.flamestack &lt; 10 then
				string = string.."invoke ravage"..snd.sep
			end
			if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
				string = string..hackleAttack.." "..snd.target..snd.sep
			elseif gmcp.Char.Vitals.ability_bal == "1" then
				if snd.zenith then
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
				else
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
				end
			else
				if snd.zenith then
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
				else
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
				end
			end
      
      if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
        string = string..snd.sep.."ego trauma "..snd.target..snd.sep
      end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
			if snd.nopets then
				string = "call impressment"..snd.sep.."order loyals kill "..snd.target
			elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end 
       
    end  
      
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
    end
end

snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bleed$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Main 1v1 - Less Overpower (Fire)</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
    local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    if snd.zenith then 
		  if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
       zenithdoing = "intensify"
      elseif not snd.pyromania then
			 zenithAbility = "invoke hellfire"..snd.sep
       zenithdoing = "hellfire"
		  elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke lance "..snd.target..snd.sep
       zenithdoing = "lance"
		  elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
			 zenithAbility = "INVOKE BRANDING "..snd.target..snd.sep
       zenithdoing = "branding"
		  else
			 zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
       zenithdoing = "torment"
		  end
    end
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "tenderise"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "maim"
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "hobble"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "whiplash"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "flog"
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "slug"      
		else
			hackleAttack = "butcher"
		end
    
		if not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and not snd.checkAff("left_arm_dislocated") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and not snd.checkAff("right_arm_dislocated") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or snd.cureset == "praenomen") and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "windpipe"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and snd.not_aff("left_leg_broken") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and snd.can_legs() then
			firstFlow = "concuss"
		elseif not snd.checkAff("fallen") then
			firstFlow = "clobber"
    else
      firstFlow = "bully"
		end
 
		if not snd.checkAff("right_leg_broken") and snd.limb_dmg["right leg"] &gt;= 24 and firstFlow ~= "kneecap right" and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and not snd.checkAff("right_arm_dislocated") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() and firstFlow ~= "bustup right arm" then
			secondFlow = "bully right"
		elseif not snd.checkAff("left_arm_broken") and not snd.checkAff("left_arm_dislocated") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() and firstFlow ~= "bustup left arm" then
			secondFlow = "bully left"
		elseif not snd.checkAff("left_leg_broken") and snd.limb_dmg["left leg"] &gt;= 24 and firstFlow ~= "kneecap left" and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) then
			secondFlow = "pressure"
		elseif ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") and firstFlow ~= "clobber" then
			secondFlow = "clobber"
		elseif snd.limb_dmg["torso"] &gt;= 24 and firstFlow == "plexus" and (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			secondFlow = "plexus"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" and not snd.hackles) then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" and not snd.hackles) then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "concuss" 
		elseif firstFlow == "clobber" then
      secondFlow = "plexus"
    elseif not snd.checkAff("fallen") and firstFlow ~= "clobber" then
      secondFlow = "clobber"
    else
      secondFlow = "bully"
		end
		
		if snd.zenith then
      if (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt; 24 and not snd.checkAff("infernal_seal") then 
			  zenithAbility = "invoke branding "..snd.target..snd.sep
      elseif hackleAttack == "tenderise" and not snd.checkAff("heatspear") then
        zenithAbility = "invoke lance "..snd.target..snd.sep
      end
		end

		if (snd.checkAff("left_arm_broken") or (snd.limb_dmg["left arm"] &gt;= 24 and secondFlow == "bully left" and not snd.checkAff("left_arm_broken"))) and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and secondFlow ~= "bustup left arm" and snd.resto_limb ~= "left arm" then
			firstFlow = "bustup left arm"
		elseif (snd.checkAff("right_arm_broken") or (snd.limb_dmg["right arm"] &gt;= 24 and secondFlow == "bully right" and not snd.checkAff("right_arm_broken"))) and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and secondFlow ~= "bustup right arm" and snd.resto_limb ~= "right arm" then
			firstFlow = "bustup right arm"
		end
    
		if secondFlow == "pressure" and snd.hackles then
			hackleAttack = "flog"
		end
		
		if snd.theytumbling then
      string = "ego kneel "..snd.target
    elseif snd.theyran then
			string = "ego haul "..snd.target 
    elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
      string = "remove ironcollar"
    elseif snd.flamestack &gt;= 12 and not snd.used.shield then
      string = "invoke extinguish "..snd.target..snd.sep
		elseif (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "flog") and not snd.used.shield then
			string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
    elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and ((snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience"))) or (mymental_aff_count &gt;= 4)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming and snd.flamestack &lt; 10 then
			string = "invoke delirium"..snd.sep
    elseif not snd.checkAff("ablaze") and snd.checkAff("torso_broken") and not snd.zenith then
      string = "INVOKE TORMENT "..snd.target..snd.sep
		elseif snd.checkAff("ablaze") and not snd.checkAff("heatspear") and snd.checkAff("torso_broken") and not snd.zenith then
			string = "invoke lance "..snd.target..snd.sep
		elseif snd.flamestack &gt;= 2 and not snd.zenith then
			string = "invoke intensify "..snd.target..snd.sep
		else
			  if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2 then
          string = "predation extend"..snd.sep
        elseif snd.wrath and snd.swagger &lt;= 2 then
          string = "predation"..snd.sep
        end
        if not snd.firefist and snd.firefist_cooldown and snd.flamestack &lt; 10 then
				  string = string.."invoke ravage"..snd.sep
        end
        if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
          string = string..hackleAttack.." "..snd.target..snd.sep
        elseif gmcp.Char.Vitals.ability_bal == "1" then
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
          end
        else
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
          end
        end
        if snd.balance.pendulum and (not snd.checkAff("left_leg_broken") and snd.resto_limb == "left leg" and snd.checkAff("left_arm_broken")) then
          string = "invoke bedevil "..snd.target.." reverse"..snd.sep
        elseif snd.balance.pendulum and ((snd.last_healed == "left_leg_crippled" or snd.last_healed == "right_leg_crippled") or (not snd.checkAff("right_leg_broken") and snd.resto_limb == "right leg" and snd.checkAff("right_arm_broken"))) then
          string = "invoke bedevil "..snd.target..snd.sep
        end
      
      if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
        string = string..snd.sep.."ego trauma "..snd.target..snd.sep
      end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
      if snd.nopets then
        string = "call impressment"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alt 1v1 - More Overpower (Damage)</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
    local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    if snd.zenith then 
		  if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
       zenithdoing = "intensify"
      elseif not snd.pyromania then
			 zenithAbility = "invoke hellfire"..snd.sep
       zenithdoing = "hellfire"
		  elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke lance "..snd.target..snd.sep
       zenithdoing = "lance"
		  elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
			 zenithAbility = "INVOKE BRANDING "..snd.target..snd.sep
       zenithdoing = "branding"
		  else
			 zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
       zenithdoing = "torment"
		  end
    end
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "tenderise"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "maim"
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "hobble"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "whiplash"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "flog"
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "slug"      
		else
			hackleAttack = "butcher"
		end
    
		if (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"   
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or snd.cureset == "praenomen") and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "windpipe"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and snd.not_aff("left_leg_broken") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and snd.can_legs() then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			firstFlow = "clobber"
		end
 
		if ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") then
			secondFlow = "clobber"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") then
			secondFlow = "plexus"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" or not snd.hackles) then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" or not snd.hackles) then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "concuss" 
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			secondFlow = "bully right"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			secondFlow = "bully left"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
    else
      secondFlow = "clobber"
		end
		
		if snd.zenith and (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "invoke branding "..snd.target..snd.sep
		end

		if secondFlow == "pressure" and snd.hackles then
			hackleAttack = "flog"
		end
		
		if snd.theytumbling then
      string = "ego kneel "..snd.target
    elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
      string = "remove ironcollar"
    elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "flog")) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
      else
        string = "invoke extinguish "..snd.target..snd.sep
			end
    elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming then
			string = "invoke delirium"..snd.sep
		elseif snd.checkAff("ablaze") and snd.resto_limb ~= "none" and not snd.checkAff("heatspear") and not snd.zenith then
			string = "invoke lance "..snd.target..snd.sep
		elseif (snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2)) or snd.flamestack &gt;= 8 then
			string = "invoke intensify "..snd.target..snd.sep
		else
			  if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
          string = "predation extend"..snd.sep
        elseif snd.wrath and snd.swagger &lt;= 2 then
          string = "predation"..snd.sep
        end
        if not snd.firefist and snd.firefist_cooldown then
				  string = string.."invoke ravage"..snd.sep
        end
        if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
          string = string..hackleAttack.." "..snd.target..snd.sep
        elseif gmcp.Char.Vitals.ability_bal == "1" then
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
          end
        else
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
          end
        end
      
      if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
        string = string..snd.sep.."ego trauma "..snd.target..snd.sep
      end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
      if snd.nopets then
        string = "call impressment"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Enebish Test</name>
								<script>if snd.class == "Ravager" then  
  snd.starting_attack()
  
  function snd.attack_function()

    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep 
    end
   
    -- Zeal Attacks Table
    local zeal_attacks = {
    ["left arm"] = "bully left",
    ["right arm"] = "bully right",
    ["left leg"] = "kneecap left",
    ["right leg"] = "kneecap right",
    torso = "plexus",
    head = "concuss" }
 
    local limbs = {"torso", "left leg", "right leg", "left arm", "right arm"}
    local left = "nothing"
    local right = "nothing"
    local string = ""
    if snd.proned() then -- Go for legs on a prone.
      if snd.parried_limb == "right leg" then
        right = "left leg"
      elseif snd.parried_limb == "left leg" then
        right = "right leg"
      else
        right = "right leg"
        left = "left leg"
      end
    else -- Target isn't prone...
      for limb in pairs(limbs) do
        if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
          if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
            if snd.zenith and not snd.used.shield and snd.resto_limb ~= "none" then
              if right == "nothing" then
                right = limbs[limb]
              elseif left == "nothing" then
                left = limbs[limb]
              end
            end
          elseif right == "nothing" then
            right = limbs[limb]
          elseif left == "nothing" and limbs[limb] ~= right then
            left = limbs[limb]
          end
        end
      end
    end
    
    if left == "nothing" then -- We only found one limb to hit!
      left = right -- double up!
    end
    
    if not snd.waiting.queue then
      if snd.used.shield then
        string = string.."touch hammer " ..snd.target
      elseif snd.flamestack &gt;= 12 then
        string = string.."invoke extinguish " ..snd.target
      elseif snd.checksomeAffs({"torso_mangled","heatspear"}, 2) and not snd.zenith and not snd.zenith_coming then
        string = string.."invoke dilirium"
      elseif snd.checksomeAffs({"torso_mangled","heatspear","ablaze"}, 3) then
        string = string.."invoke intensify " ..snd.target      
      elseif snd.checkAff("torso_mangled") and not snd.checkAff("heatspear") then
        string = string.."invoke lance " ..snd.target  
      elseif snd.checksomeAffs({"muscle_spasm","ablaze"}, 2) and not snd.checksomeAffs({"left_arm_dislocated","left_arm_mangled","right_arm_dislocated","right_arm_mangled"}, 4) then
        string = string.."onslaught " ..snd.target.. " bustup right arm bustup left arm" 
      elseif not snd.checksomeAffs({"sore_wrist","muscle_spasm"}, 2) and (snd.checksomeAffs({"right_leg_broken","left_leg_broken"}, 1) or snd.checksomeAffs({"right_arm_broken","left_leg_broken"}, 1)) then
        string = string.."onslaught " ..snd.target.. " maim pressure"
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken","ablaze"}, 3) and not snd.checkAff("muscle_spasm") then
        string = string.."onslaught " ..snd.target.. " pressure haymaker"
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken","head_mangled"}, 3) then
        string = string.."onslaught " ..snd.target.. " overpower head concuss"..snd.sep.."psi shock " ..snd.target
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken"}, 2) and not snd.checksomeAffs({"torso_broken","head_mangled"}, 1) then
        string = string.."onslaught " ..snd.target.. " haymaker overpower head"    
      elseif not snd.checksomeAffs({"whiplash","muscle_spasm"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then
        string = string.."onslaught " ..snd.target.. " whiplash pressure"    
      elseif not snd.checksomeAffs({"sore_wrist","muscle_spasm"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then
        string = string.."onslaught " ..snd.target.. " maim pressure"    
      elseif not snd.checksomeAffs({"whiplash","sore_wrist"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then 
        string = string.."onslaught " ..snd.target.. " whiplash maim"
      elseif snd.checkAff("backstrain") and not snd.checksomeAffs({"torso_broken","fallen"}, 2) and snd.checksomeAffs({"left_leg_broken","right_leg_broken"}, 1) then
        string = string.."onslaught " ..snd.target.. "plexus clobber"
      else
        string = string.."onslaught "..snd.target.." "..zeal_attacks[left].." "..zeal_attacks[right]..snd.sep
      end
  
      if gmcp.Char.Vitals.ability_bal == "1" and not snd.used.shield then
        if snd.zenith and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_wrist") then
          string = string.."assail "..snd.target.." maim "
        elseif snd.zenith and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_ankle") then    
          string = string.."assail "..snd.target.." hobble"
        elseif not snd.checkAff("stuttering") then
          string = string.."assail "..snd.target.." slug"
        elseif snd.checkAff("heatspear") then
          string = string.."assail "..snd.target.." tenderise"
        elseif not snd.checkAff("sore_ankle") then
          string = string.."assail "..snd.target.." hobble"
        elseif not snd.checkAff("sore_wrist") then
          string = string.."assail "..snd.target.." maim"
        else
          string = string.."assail "..snd.target.." tenderise"
        end
      end
    
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alt 1v1 - Overpower Arms</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
    local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    if snd.zenith then 
		  if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
       zenithdoing = "intensify"
      elseif not snd.pyromania then
			 zenithAbility = "invoke hellfire"..snd.sep
       zenithdoing = "hellfire"
		  elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke lance "..snd.target..snd.sep
       zenithdoing = "lance"
		  elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
			 zenithAbility = "INVOKE BRANDING "..snd.target..snd.sep
       zenithdoing = "branding"
		  else
			 zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
       zenithdoing = "torment"
		  end
    end
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "hobble"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "whiplash"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "flog"
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "slug"      
		else
			hackleAttack = "butcher"
		end
    
		if (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"   
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or snd.cureset == "praenomen") and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "windpipe"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and snd.not_aff("left_leg_broken") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and snd.can_legs() then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			firstFlow = "clobber"
		end
 
		if ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") then
			secondFlow = "clobber"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") then
			secondFlow = "plexus"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" or not snd.hackles) then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" or not snd.hackles) then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "concuss" 
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			secondFlow = "bully right"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
    else
      secondFlow = "clobber"
		end
		
		if snd.zenith and (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "invoke branding "..snd.target..snd.sep
		end

		if secondFlow == "pressure" and snd.hackles then
			hackleAttack = "flog"
		end
		
		if snd.theytumbling then
      string = "ego kneel "..snd.target
    elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
      string = "remove ironcollar"
    elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "flog")) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
      else
        string = "invoke extinguish "..snd.target..snd.sep
			end
    elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming then
			string = "invoke delirium"..snd.sep
		elseif snd.checkAff("ablaze") and snd.resto_limb ~= "none" and not snd.checkAff("heatspear") and not snd.zenith then
			string = "invoke lance "..snd.target..snd.sep
		elseif (snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2)) or snd.flamestack &gt;= 8 then
			string = "invoke intensify "..snd.target..snd.sep
		else
			  if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
          string = "predation extend"..snd.sep
        elseif snd.wrath and snd.swagger &lt;= 2 then
          string = "predation"..snd.sep
        end
        if not snd.firefist and snd.firefist_cooldown then
				  string = string.."invoke ravage"..snd.sep
        end
        if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
          string = string..hackleAttack.." "..snd.target..snd.sep
        elseif gmcp.Char.Vitals.ability_bal == "1" then
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
          end
        else
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
          end
        end
      
      if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
        string = string..snd.sep.."ego trauma "..snd.target..snd.sep
      end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
      if snd.nopets then
        string = "call impressment"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^arms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alt 1v1 - Overpower Arms</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
    local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    if snd.zenith then 
		  if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
       zenithdoing = "intensify"
      elseif not snd.pyromania then
			 zenithAbility = "invoke hellfire"..snd.sep
       zenithdoing = "hellfire"
		  elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
			 zenithAbility = "invoke lance "..snd.target..snd.sep
       zenithdoing = "lance"
		  elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
			 zenithAbility = "INVOKE BRANDING "..snd.target..snd.sep
       zenithdoing = "branding"
		  else
			 zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
       zenithdoing = "torment"
		  end
    end
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "hobble"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "whiplash"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "flog"
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "slug"      
		else
			hackleAttack = "butcher"
		end
    
		if (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"   
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or snd.cureset == "praenomen") and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "windpipe"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and snd.not_aff("left_leg_broken") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and snd.can_legs() then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			firstFlow = "clobber"
		end
 
		if ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") then
			secondFlow = "clobber"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") then
			secondFlow = "plexus"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" or not snd.hackles) then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" or not snd.hackles) then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "concuss" 
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			secondFlow = "bully right"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
    else
      secondFlow = "clobber"
		end
		
		if snd.zenith and (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "invoke branding "..snd.target..snd.sep
		end

		if secondFlow == "pressure" and snd.hackles then
			hackleAttack = "flog"
		end
		
		if snd.theytumbling then
      string = "ego kneel "..snd.target
    elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
      string = "remove ironcollar"
    elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "flog")) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
      else
        string = "invoke extinguish "..snd.target..snd.sep
			end
    elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming then
			string = "invoke delirium"..snd.sep
		elseif snd.checkAff("ablaze") and snd.resto_limb ~= "none" and not snd.checkAff("heatspear") and not snd.zenith then
			string = "invoke lance "..snd.target..snd.sep
		elseif (snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2)) or snd.flamestack &gt;= 8 then
			string = "invoke intensify "..snd.target..snd.sep
		else
			  if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
          string = "predation extend"..snd.sep
        elseif snd.wrath and snd.swagger &lt;= 2 then
          string = "predation"..snd.sep
        end
        if not snd.firefist and snd.firefist_cooldown then
				  string = string.."invoke ravage"..snd.sep
        end
        if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
          string = string..hackleAttack.." "..snd.target..snd.sep
        elseif gmcp.Char.Vitals.ability_bal == "1" then
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
          end
        else
          if snd.zenith then
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
          else
            string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
          end
        end
      
      if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
        string = string..snd.sep.."ego trauma "..snd.target..snd.sep
      end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
      if snd.nopets then
        string = "call impressment"..snd.sep.."order loyals kill "..snd.target
      elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^arms2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Testing Windpipe</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
		local mentcount = 0 
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.target_has, snd.mental_affs[aff]) then
				mentcount = mentcount + 1
			end
		end
    
		if snd.zenith then 
			if snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke INTENSIFY "..snd.target..snd.sep
				zenithdoing = "intensify"
			elseif not snd.pyromania then
				zenithAbility = "invoke hellfire"..snd.sep
				zenithdoing = "hellfire"
			elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke lance "..snd.target..snd.sep
				zenithdoing = "lance"
			elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
				zenithAbility = "INVOKE BRANDING "..snd.target..snd.sep
				zenithdoing = "branding"
			else
				zenithAbility = "INVOKE TORMENT "..snd.target..snd.sep
				zenithdoing = "torment"
			end
		end
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "maim"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "hobble"
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "flog"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "whiplash"
		elseif snd.checkAff("heatspear") then
			hackleAttack = "tenderise"
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "hobble"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "whiplash"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "flog"
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "slug"      
		else
			hackleAttack = "butcher"
		end
    
		if snd.checkAff("torso_broken") and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) then
      firstFlow = "windpipe"
    elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") and snd.can_arms() then
			firstFlow = "plexus"   
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") and snd.can_arms() then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and not snd.checkAff("head_broken") and snd.can_legs() then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			firstFlow = "clobber"
		end
 
		if snd.checkAff("torso_broken") and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) and firstFlow ~= "windpipe" then
			secondFlow = "windpipe"
		elseif ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") and snd.can_arms() then
			secondFlow = "clobber"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) and snd.can_arms() then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") and snd.can_arms() then
			secondFlow = "plexus"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_arms() then
			secondFlow = "plexus"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" and snd.can_arms() then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" or not snd.hackles) and snd.can_arms() then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" or not snd.hackles) and snd.can_arms() then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" and snd.can_arms() then
			secondFlow = "whiplash"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" and snd.can_arms() then
			secondFlow = "haymaker"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and snd.can_legs() then
			secondFlow = "concuss" 
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			secondFlow = "bully right"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_arms() then
			secondFlow = "plexus"
		else
			secondFlow = "clobber"
		end
		
		if snd.zenith and (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "invoke branding "..snd.target..snd.sep
		end

		if secondFlow == "pressure" and snd.hackles then
			hackleAttack = "flog"
		end
		
		if snd.theytumbling then
			string = "ego kneel "..snd.target
		elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "heartcage" then
      string = "onslaught heartcage bully bully"
    elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
      string = "remove ironcollar"
    elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "flog")) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
			else
				string = "invoke extinguish "..snd.target..snd.sep
			end
		elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "seethe"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "ego boost"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming then
			string = "invoke delirium"..snd.sep
		elseif snd.checkAff("ablaze") and snd.resto_limb ~= "none" and not snd.checkAff("heatspear") and not snd.zenith then
			string = "invoke lance "..snd.target..snd.sep
		elseif (snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2)) and snd.flamestack &lt;= 9 then
			string = "invoke intensify "..snd.target..snd.sep
		else
			if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
				string = "predation extend"..snd.sep
			elseif snd.wrath and snd.swagger &lt;= 2 then
				string = "predation"..snd.sep
			end
			if not snd.firefist and snd.firefist_cooldown then
				string = string.."invoke ravage"..snd.sep
			end
			if not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2) then
				string = string..hackleAttack.." "..snd.target..snd.sep
			elseif gmcp.Char.Vitals.ability_bal == "1" then
				if snd.zenith then
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep
				else
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep.."assail "..snd.target.." "..hackleAttack..snd.sep
				end
			else
				if snd.zenith then
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..zenithAbility..snd.sep..string..snd.sep
				else
					string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
				end
			end
      
			if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
				string = string..snd.sep.."ego trauma "..snd.target..snd.sep
			end
      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end
      
			if snd.nopets then
				string = "call impressment"..snd.sep.."order loyals kill "..snd.target
			elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^test2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Test Updates</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
		local mentcount = 0 
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.target_has, snd.mental_affs[aff]) then
				mentcount = mentcount + 1
			end
		end
    
		if snd.checkAff("torso_broken") and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "overpower right arm"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "overpower left arm"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "overpower left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "overpower right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "overpower torso"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "overpower head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") and snd.can_arms() then
			firstFlow = "plexus"   
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "haymaker"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") and snd.can_arms() then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "kneecap right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "bully right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and not snd.checkAff("head_broken") and snd.can_legs() then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			firstFlow = "clobber"
		end
 
		if snd.checkAff("torso_broken") and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) and firstFlow ~= "windpipe" then
			secondFlow = "windpipe"
		elseif ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") and snd.can_arms() then
			secondFlow = "clobber"
		elseif (snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) and snd.can_arms() then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") and snd.can_arms() then
			secondFlow = "plexus"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_arms() then
			secondFlow = "plexus"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "flog" or not snd.hackles) and snd.resto_limb ~= "torso" and snd.can_arms() then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "hobble" or not snd.hackles) and snd.can_arms() then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "maim" or not snd.hackles) and snd.can_arms() then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "whiplash" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" and snd.can_arms() then
			secondFlow = "whiplash"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and firstFlow ~= "overpower left leg" and firstFlow ~= "overpower torso" and firstFlow ~= "overpower right leg" and firstFlow ~= "overpower right arm" and firstFlow ~= "overpower left arm" and firstFlow ~= "overpower head" and (snd.checkAff("crippled_throat") or firstFlow == "windpipe") and firstFlow ~= "haymaker" and snd.can_arms() then
			secondFlow = "haymaker"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and snd.can_legs() then
			secondFlow = "concuss" 
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() then
			secondFlow = "bully right"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_arms() then
			secondFlow = "plexus"
		else
			secondFlow = "clobber"
		end
		
		if snd.zenith then 
			if (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then
				zenithAbility = "invoke branding "..snd.target
				zenithdoing = "branding"
			elseif snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke INTENSIFY "..snd.target
				zenithdoing = "intensify"
			elseif not snd.pyromania then
				zenithAbility = "invoke hellfire"
				zenithdoing = "hellfire"
			elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke lance "..snd.target
				zenithdoing = "lance"
			elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
				zenithAbility = "INVOKE BRANDING "..snd.target
				zenithdoing = "branding"
			else
				zenithAbility = "INVOKE TORMENT "..snd.target
				zenithdoing = "torment"
			end
		end		
		
		if gmcp.Char.Vitals.ability_bal == "1" then
			hackleAttack = "assail "..snd.target.." "
			if snd.flamestack &gt;= 11 then
				hackleAttack = hackleAttack.."tenderise"
			elseif secondFlow == "pressure" then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("sore_wrist") then
				hackleAttack = hackleAttack.."maim"
			elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
				hackleAttack = hackleAttack.."maim"
			elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
				hackleAttack = hackleAttack.."hobble"
			elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
				hackleAttack = hackleAttack.."flog"
			elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
				hackleAttack = hackleAttack.."whiplash"
			elseif snd.checkAff("heatspear") then
				hackleAttack = hackleAttack.."tenderise"
			elseif not snd.checkAff("sore_ankle") then
				hackleAttack = hackleAttack.."hobble"
			elseif not snd.checkAff("whiplash") then
				hackleAttack = hackleAttack.."whiplash"
			elseif not snd.checkAff("backstrain") then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("stuttering") then
				hackleAttack = hackleAttack.."slug"      
			else
				hackleAttack = hackleAttack.."butcher"
			end
		end
		
		if snd.theytumbling then
			string = "ego kneel "..snd.target
		elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "heartcage" then
			string = "onslaught heartcage bully bully"
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
			string = "remove ironcollar"
		elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack == "tenderise")) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." "..hackleAttack..snd.sep.."invoke extinguish "..snd.target..snd.sep
			else
				string = "invoke extinguish "..snd.target..snd.sep
			end
		elseif hp &lt;= 40 and snd.flamestack &lt; 10 then
			string = "seethe"..snd.sep
		else
			if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
				string = "predation extend"..snd.sep
			elseif snd.wrath and snd.swagger &lt;= 2 then
				string = "predation"..snd.sep
			end
			if not snd.firefist and snd.firefist_cooldown then
				string = string.."invoke ravage"..snd.sep
			end
			if not snd.zenith then
				if tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 then
					string = "invoke prolong"..snd.sep
				elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
					string = "ego boost"..snd.sep
				elseif not snd.zenith_coming then
					string = "invoke delirium"..snd.sep
				else
					if snd.flamestack &lt;= 9 then
						if ((snd.checksomeAffs({"torso_broken","heatspear"},2) and snd.resto_limb ~= torso) or snd.checkAff("torso_mangled")) and snd.checkAff("ablaze") then
							string = "invoke intensify "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) then
							string = "invoke lance "..snd.target..snd.sep
						else
							string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack
						end
					else
						if snd.checkAff("torso_broken") and snd.checkAff("heatspear") then
							string = "INVOKE TORMENT "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) then
							string = "invoke lance "..snd.target..snd.sep
						else
							string = "invoke intensify "..snd.target..snd.sep
						end
					end
				end
			else
				string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack..snd.sep..zenithAbility..snd.sep..string
			end
			if (not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2)) and gmcp.Char.Vitals.ability_bal == "1" then
				string = hackleAttack.." "..snd.target..snd.sep
			end
			if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
				string = string..snd.sep.."ego trauma "..snd.target..snd.sep
			end      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end      
			if snd.nopets then
				string = "call impressment"..snd.sep.."order loyals kill "..snd.target
			elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^test$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Idk</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
		local mentcount = 0 
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.target_has, snd.mental_affs[aff]) then
				mentcount = mentcount + 1
			end
		end
    
		if snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and (snd.limb_dmg["left leg"] &gt;= 24 or (snd.limb_dmg["left leg"] &gt;= 16 and snd.limb_dmg["left leg"] &gt;= 33)) then 
			firstFlow = "kneecap left"
		elseif snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and snd.limb_dmg["left arm"] &gt;= 24 then 
			firstFlow = "bully left"			
		elseif not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "torso" or snd.no_parry()) then
			firstFlow = "plexus"
		elseif not snd.checkAff("ablaze") and snd.firefist and snd.parried_limb ~= "left arm" then 
			firstFlow = "bully left"	
		elseif (not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and snd.resto_limb ~= "left arm" and snd.limb_dmg["left arm"] &gt;= 24) or ((not snd.checkAff("left_arm_broken") or not snd.checkAff("right_arm_broken")) and snd.parried_limb ~= "left arm") and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and (snd.checkAff("heatspear") and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken")) then
			firstFlow = "bustup left"
		elseif (not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and snd.resto_limb ~= "right arm" and snd.limb_dmg["right arm"] &gt;= 24) or ((not snd.checkAff("left_arm_broken") or not snd.checkAff("right_arm_broken")) and snd.parried_limb ~= "right arm") and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and (snd.checkAff("heatspear") and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken")) then
			firstFlow = "bustup right"
		elseif snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and (snd.limb_dmg["right leg"] &gt;= 16 and snd.limb_dmg["right leg"] &gt;= 33) then 
			firstFlow = "kneecap right"		
		elseif not snd.checkAff("fallen") or not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},2) and (not snd.checkAff("left_leg_broken") and snd.timer_check("poultice", 2, "more than")) then
			firstFlow = "clobber"	
		elseif not snd.checkAff("muscle_spasms") then
			firstFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			firstFlow = "kneecap left"
		elseif (not snd.zenith and not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and not snd.checkAff("torso_mangled")) and ((((snd.checkAff("sore_wrist") and snd.limb_dmg["right arm"] &gt;= 29) and snd.limb_dmg["left arm"] &gt;= 29)) or snd.no_parry()) then
			firstFlow = "overpower torso"
		elseif not snd.checksomeAffs({"right_leg_mangled","left_leg_mangled"},1) and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			firstFlow = "kneecap right"
		elseif (not snd.zenith and not snd.checkAff("right_leg_broken")) and ((not (snd.checkAff("left_leg_broken") and (not snd.resto_limb ~= "left leg" or snd.balance.pendulum))) or snd.checkAff("sore_wrist") or snd.no_parry()) then
			firstFlow = "overpower right leg"  
		elseif (not snd.zenith and not snd.checkAff("left_leg_broken")) and ((not (snd.checkAff("right_leg_broken") and (not snd.resto_limb ~= "right leg" or snd.balance.pendulum))) or snd.checkAff("sore_wrist") or snd.no_parry()) then
			firstFlow = "overpower left leg"    
		elseif not snd.zenith and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and not snd.checkAff("lightwound") then
			firstFlow = "haymaker"
		elseif (snd.checkAff("torso_broken") or snd.checkAff("head_broken")) and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" then
			firstFlow = "bully right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			firstFlow = "kneecap right"
		elseif (snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken")) and not snd.zenith then
			firstFlow = "overpower head" 
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and not snd.checkAff("head_broken") then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			if not snd.checkAff("fallen") then
        secondFlow = "clobber"
      else
        secondFlow = "concuss"
      end
		end
 
		if (not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &gt;= 24) and firstFlow == "kneecap left" then
			secondFlow = "kneecap right"
		elseif (not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.limb_dmg["right arm"] &gt;= 24) and firstFlow == "bully left" then
			secondFlow = "bully right"
		elseif (not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "right arm" or snd.no_parry())) and (firstFlow == "plexus" or firstFlow == "bustup right") then	
			secondFlow = "bully right"
		elseif (not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "left arm" or snd.no_parry())) and (firstFlow == "plexus" or firstFlow == "bustup left") then	
			secondFlow = "bully left"
		elseif (not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "right arm" or snd.no_parry())) and firstFlow == "bully left" then	
			secondFlow = "bully right"
		elseif (snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and (snd.limb_dmg["left leg"] &gt;= 16 and snd.limb_dmg["left leg"] &gt;= 33)) and firstFlow == "kneecap left" then 
			secondFlow = "kneecap left"
		elseif (snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and (snd.limb_dmg["right leg"] &gt;= 16 and snd.limb_dmg["right leg"] &gt;= 33)) and firstFlow == "kneecap right" then 
			secondFlow = "kneecap right"		
		elseif (not snd.checkAff("fallen") or not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},2) and (not snd.checkAff("left_leg_broken") and snd.timer_check("poultice", 2, "more than"))) and firstFlow ~= "clobber" then
			secondFlow = "clobber"
		elseif ((snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2)) and firstFlow ~= "pressure" then
			secondFlow = "pressure"
		elseif (not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg") and firstFlow ~= "kneecap left" then
			secondFlow = "kneecap left"
		elseif ((not snd.zenith and not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and not snd.checkAff("torso_mangled")) and ((snd.checkAff("sore_wrist") and snd.limb_dmg["right arm"] &gt;= 29) and (snd.limb_dmg["left arm"] &gt;= 29 or snd.no_parry()))) and firstFlow ~= "overpower torso" then
			secondFlow = "overpower torso"
		elseif (not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg") and firstFlow ~= "kneecap right" then
			secondFlow = "kneecap right"
		elseif (snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken")) and firstFlow == "plexus" then	
			secondFlow = "plexus"
		elseif (not snd.zenith and not snd.checkAff("right_leg_broken")) and ((not (snd.checkAff("left_leg_broken") and (not snd.resto_limb ~= "left leg" or snd.balance.pendulum))) or snd.checkAff("sore_wrist") or snd.no_parry()) and firstFlow ~= "overpower right leg" then
			secondFlow = "overpower right leg"  
		elseif (not snd.zenith and not snd.checkAff("left_leg_broken")) and ((not (snd.checkAff("right_leg_broken") and (not snd.resto_limb ~= "right leg" or snd.balance.pendulum))) or snd.checkAff("sore_wrist") or snd.no_parry()) and firstFlow ~= "overpower left leg" then
			secondFlow = "overpower left leg"    
		elseif (not snd.zenith and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and not snd.checkAff("lightwound")) and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif (snd.checkAff("torso_broken") or snd.checkAff("head_broken")) and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) and firstFlow ~= "windpipe" then
			secondFlow = "windpipe"
		elseif snd.welt_ready == "torso" and not snd.hackles and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and not snd.hackles then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and not snd.hackles then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and not snd.hackles and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") then
			secondFlow = "concuss" 
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" then
			secondFlow = "bully right"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
		else
      if firstFlow ~= "clobber" then
        secondFlow = "clobber"
      else
        secondFlow = "concuss"
      end
		end
		
		if snd.zenith then 
			if (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then
				zenithAbility = "invoke branding "..snd.target
				zenithdoing = "branding"
			elseif snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke INTENSIFY "..snd.target
				zenithdoing = "intensify"
			elseif not snd.pyromania then
				zenithAbility = "invoke hellfire"..snd.sep
				zenithdoing = "hellfire"
			elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke lance "..snd.target
				zenithdoing = "lance"
			elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
				zenithAbility = "INVOKE BRANDING "..snd.target
				zenithdoing = "branding"
			else
				zenithAbility = "INVOKE TORMENT "..snd.target
				zenithdoing = "torment"
			end
		end		
		
		if gmcp.Char.Vitals.ability_bal == "1" then
			hackleAttack = "assail "..snd.target.." "
			if snd.flamestack &gt;= 11 or snd.checkAff("heatspear") then
				hackleAttack = hackleAttack.."tenderise"
			elseif secondFlow == "pressure" then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("sore_wrist") then
				hackleAttack = hackleAttack.."maim"
			elseif secondFlow ~= "maim" and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_wrist") and not string.find(snd.resto_limb, "arm") then
				hackleAttack = hackleAttack.."maim"
			elseif secondFlow ~= "hobble" and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_ankle") and not string.find(snd.resto_limb, "leg") then
				hackleAttack = hackleAttack.."hobble"
			elseif secondFlow ~= "flog" and snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
				hackleAttack = hackleAttack.."flog"
			elseif secondFlow ~= "whiplash" and snd.welt_ready == "head" and snd.resto_limb ~= "head" then
				hackleAttack = hackleAttack.."whiplash"
			elseif not snd.checkAff("whiplash") then
				hackleAttack = hackleAttack.."whiplash"
			elseif not snd.checkAff("backstrain") then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("sore_ankle") then
				hackleAttack = hackleAttack.."hobble"
			elseif not snd.checkAff("stuttering") then
				hackleAttack = hackleAttack.."slug"      
			else
				hackleAttack = hackleAttack.."butcher"
			end
		end
		
		if snd.theytumbling then
			string = "ego kneel "..snd.target
		elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "heartcage" then
			string = "onslaught heartcage bully bully"
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
			string = "remove ironcollar"
		elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles)) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." tenderise"..snd.sep.."invoke extinguish "..snd.target..snd.sep
			else
				string = "invoke extinguish "..snd.target..snd.sep
			end
		elseif (snd.resto_limb ~= "right leg" and snd.checkAff("right_leg_broken") and not snd.checkAff("left_leg_broken")) or (snd.resto_limb ~= "right arm" and snd.checkAff("right_arm_broken") and not snd.checkAff("right_leg_broken")) or (snd.checkAff("right_arm_mangled") and not snd.checkAff("right_leg_broken")) then
			string = "invoke bedevil "..snd.target..snd.sep
		elseif (snd.resto_limb ~= "left leg" and snd.checkAff("left_leg_broken") and not snd.checkAff("right_leg_broken")) or (snd.resto_limb ~= "left arm" and snd.checkAff("left_arm_broken") and not snd.checkAff("left_leg_broken")) or (snd.checkAff("left_arm_mangled") and not snd.checkAff("leftleg_broken")) then
			string = "invoke bedevil "..snd.target.." reverse"..snd.sep
		elseif hp &lt;= 40 and snd.flamestack &lt; 10 then
			string = "seethe"..snd.sep
		else
			if not snd.firefist and snd.firefist_cooldown then
				string = string.."invoke ravage"..snd.sep
			end
			if not snd.zenith then
        if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
				  string = "predation extend"..snd.sep
			  elseif snd.wrath and snd.swagger &lt;= 2 then
				  string = "predation"..snd.sep
			  end
        --if not snd.rebuke and gmcp.Char.Vitals.ability_bal == "0" then
        --  local baitlimb
         -- local rightleft = { "right", "left" }
         -- if snd.parrying == "left arm" then
         --   baitlimb = "right arm"
         -- elseif snd.parrying == "right arm" then
          --  baitlimb = "left arm"
          --else
          --  baitlimb = rightleft[math.random(2)] .. " arm"
          --end
          --string = string.."bait "..baitlimb..snd.sep
        --end
				if tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 then
					string = "invoke prolong"..snd.sep
				elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
					string = "ego boost"..snd.sep
				elseif not snd.zenith_coming then
					string = "invoke delirium"..snd.sep
				else
					if snd.flamestack &lt;= 9 then
						if ((snd.checksomeAffs({"torso_broken","heatspear"},2) and snd.resto_limb ~= torso) or snd.checkAff("torso_mangled")) and snd.checkAff("ablaze") then
							string = "invoke intensify "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) and snd.timer_check("poultice", .5, "more than") then
							string = "invoke lance "..snd.target..snd.sep
						elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and snd.limb_dmg["left leg"] &gt;= 24 and not snd.checkAff("fallen") then 
							string = string.."onslaught "..snd.target.." ".."kneecap left clobber punish"
						elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and snd.limb_dmg["right leg"] &gt;= 24 and not snd.checkAff("fallen") then 
							string = string.."onslaught "..snd.target.." ".."kneecap right clobber punish"
						else
							string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack..snd.sep
						end
					else
						if snd.checkAff("torso_broken") or (snd.checkAff("left_leg_broken") and not snd.resto_limb ~= "left leg" and snd.checkAff("fallen")) or (snd.checkAff("right_leg_broken") and not snd.resto_limb ~= "right leg"and snd.checkAff("fallen")) then
							string = "INVOKE TORMENT "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) then
							string = "invoke lance "..snd.target..snd.sep
						else
							string = "invoke intensify "..snd.target..snd.sep
						end
					end
				end
			else
				string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep	
			end
			if (not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2)) then
				string = hackleAttack.." "..snd.target..snd.sep
			end
			if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
				string = string..snd.sep.."ego trauma "..snd.target..snd.sep
			end      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end      
			if snd.nopets then
				string = "call impressment"..snd.sep.."order loyals kill "..snd.target
			elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^test3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Test4</name>
								<script>if snd.class == "Ravager" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		local zenithdoing = ""
		local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end
		local mentcount = 0 
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.target_has, snd.mental_affs[aff]) then
				mentcount = mentcount + 1
			end
		end
    
		if snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and (snd.limb_dmg["left leg"] &gt;= 24 or (snd.limb_dmg["left leg"] &gt;= 16 and snd.limb_dmg["left leg"] &lt; 33)) then 
			firstFlow = "kneecap left"
		elseif snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_broken") and snd.limb_dmg["left arm"] &gt;= 24 then 
			firstFlow = "bully left"			
		elseif not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "torso" or snd.no_parry()) then
			firstFlow = "plexus"
		elseif not snd.checkAff("ablaze") and snd.firefist and snd.parried_limb ~= "left arm" then 
			firstFlow = "bully left"	
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and snd.resto_limb ~= "left arm" and ((snd.limb_dmg["left arm"] &gt;= 24 and snd.limb_dmg["left arm"] &lt; 33) or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken"))) then
			firstFlow = "bustup left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and snd.resto_limb ~= "right arm" and ((snd.limb_dmg["right arm"] &gt;= 24 and snd.limb_dmg["right arm"] &lt; 33) or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken"))) then
			firstFlow = "bustup right"
		elseif snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and (snd.limb_dmg["right leg"] &gt;= 16 and snd.limb_dmg["right leg"] &lt; 33) then 
			firstFlow = "kneecap right"		
		elseif not snd.checkAff("fallen") and not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},2) and (snd.checkAff("backstrain") and snd.timer_check("poultice", 2, "more than")) then
			firstFlow = "clobber"	
		elseif not snd.checkAff("muscle_spasms") then
			firstFlow = "pressure"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken") then
			firstFlow = "plexus"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			firstFlow = "kneecap left"
		elseif (not snd.zenith and not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and not snd.checkAff("torso_mangled")) and ((snd.checkAff("sore_wrist") and snd.limb_dmg["right arm"] &gt;= 29 and snd.limb_dmg["left arm"] &gt;= 29) or snd.no_parry()) then
			firstFlow = "overpower torso"
		elseif not snd.checksomeAffs({"right_leg_mangled","left_leg_mangled"},1) and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			firstFlow = "kneecap right"
		elseif not snd.zenith and not snd.checkAff("right_leg_broken") and ((not snd.checkAff("left_leg_broken") and (not snd.resto_limb ~= "left leg" or snd.balance.pendulum)) or snd.checkAff("sore_wrist") or snd.no_parry()) then
			firstFlow = "overpower right leg"  
		elseif not snd.zenith and not snd.checkAff("left_leg_broken") and ((not snd.checkAff("right_leg_broken") and (not snd.resto_limb ~= "right leg" or snd.balance.pendulum)) or snd.checkAff("sore_wrist") or snd.no_parry()) then
			firstFlow = "overpower left leg"    
		elseif not snd.zenith and (snd.parried_limb ~= "torso" or snd.no_parry()) and not snd.checkAff("lightwound") then
			firstFlow = "haymaker"
		elseif (snd.checkAff("torso_broken") or snd.checkAff("head_broken")) and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "windpipe"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" then
			firstFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" then
			firstFlow = "bully right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			firstFlow = "kneecap left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			firstFlow = "kneecap right"
		elseif not snd.zenith and (snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken")) then
			firstFlow = "overpower head" 
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and not snd.checkAff("head_broken") then
			firstFlow = "concuss"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "plexus"
		else
			if not snd.checkAff("fallen") then
				firstFlow = "clobber"
			else
				firstFlow = "concuss"
			end
		end
 
		if (not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.limb_dmg["right leg"] &gt;= 24) and firstFlow == "kneecap left" then
			secondFlow = "kneecap right"
		elseif (not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.limb_dmg["right arm"] &gt;= 24) and firstFlow == "bully left" then
			secondFlow = "bully right"
		elseif (not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "right arm" or snd.no_parry())) and (firstFlow == "plexus" or firstFlow == "bustup right" or firstFlow == "bully left") then	
			secondFlow = "bully right"
		elseif (not snd.checkAff("ablaze") and snd.firefist and (snd.parried_limb ~= "left arm" or snd.no_parry())) and (firstFlow == "plexus" or firstFlow == "bustup left") then	
			secondFlow = "bully left"
		elseif (snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and (snd.limb_dmg["left leg"] &gt;= 16 and snd.limb_dmg["left leg"] &lt; 33)) and firstFlow == "kneecap left" then 
			secondFlow = "kneecap left"
		elseif (snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and (snd.limb_dmg["right leg"] &gt;= 16 and snd.limb_dmg["right leg"] &lt; 33)) and firstFlow == "kneecap right" then 
			secondFlow = "kneecap right"		
		elseif (not snd.checkAff("fallen") or not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},2) and (not snd.checkAff("left_leg_broken") and snd.timer_check("poultice", 2, "more than"))) and firstFlow ~= "clobber" then
			secondFlow = "clobber"
		elseif ((snd.zenith and zenithdoing == "lance") or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2)) and firstFlow ~= "pressure" then
			secondFlow = "pressure"
		elseif snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and firstFlow ~= "kneecap left" then
			secondFlow = "kneecap left"
		elseif (not snd.zenith and not snd.checksomeAffs({"right_leg_broken","left_leg_broken"},1) and not snd.checkAff("torso_mangled")) and ((snd.checkAff("sore_wrist") and snd.limb_dmg["right arm"] &gt;= 29 and snd.limb_dmg["left arm"] &gt;= 29) or snd.no_parry()) and firstFlow ~= "overpower torso" then
			secondFlow = "overpower torso"
		elseif snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and firstFlow ~= "kneecap right" then
			secondFlow = "kneecap right"
		elseif (snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checkAff("torso_broken")) and firstFlow == "plexus" then	
			secondFlow = "plexus"
		elseif (not snd.zenith and not snd.checkAff("right_leg_broken") and ((not snd.checkAff("left_leg_broken") and (not snd.resto_limb ~= "left leg" or snd.balance.pendulum)) or snd.checkAff("sore_wrist") or snd.no_parry())) and firstFlow ~= "overpower right leg" then
			secondFlow = "overpower right leg"  
		elseif (not snd.zenith and not snd.checkAff("left_leg_broken") and ((not snd.checkAff("right_leg_broken") and (not snd.resto_limb ~= "right leg" or snd.balance.pendulum)) or snd.checkAff("sore_wrist") or snd.no_parry()))  and firstFlow ~= "overpower left leg" then
			secondFlow = "overpower left leg"    
		elseif (not snd.zenith and (snd.parried_limb ~= "torso" or snd.no_parry()) and not snd.checkAff("lightwound")) and firstFlow ~= "haymaker" then
			secondFlow = "haymaker"
		elseif (snd.checkAff("torso_broken") or snd.checkAff("head_broken")) and not snd.checkAff("crippled_throat") and (snd.parried_limb ~= "head" or snd.no_parry()) and firstFlow ~= "windpipe" then
			secondFlow = "windpipe"
		elseif snd.welt_ready == "torso" and not snd.hackles and snd.resto_limb ~= "torso" then
			secondFlow = "flog"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and not snd.hackles then
			secondFlow = "hobble" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and not snd.hackles then
			secondFlow = "maim"
		elseif snd.welt_ready == "head" and not snd.hackles and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "whiplash"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") then
			secondFlow = "concuss" 
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" then
			secondFlow = "bully left"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" then
			secondFlow = "bully right"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" then
			secondFlow = "kneecap right"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" then
			secondFlow = "kneecap left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "plexus"
		else
      if firstFlow ~= "clobber" and not snd.checkAff("fallen") then
        secondFlow = "clobber"
      else
        secondFlow = "concuss"
      end
		end
		
		if snd.zenith then 
			if (firstFlow == "plexus" or secondFlow == "plexus") and snd.limb_dmg["torso"] &gt;= 24 and not snd.checkAff("infernal_seal") then
				zenithAbility = "invoke branding "..snd.target
				zenithdoing = "branding"
			elseif snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke INTENSIFY "..snd.target
				zenithdoing = "intensify"
			elseif not snd.pyromania then
				zenithAbility = "invoke hellfire"..snd.sep
				zenithdoing = "hellfire"
			elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
				zenithAbility = "invoke lance "..snd.target
				zenithdoing = "lance"
			elseif snd.checkAff("torso_broken") and not snd.checkAff("infernal_seal") then
				zenithAbility = "INVOKE BRANDING "..snd.target
				zenithdoing = "branding"
			else
				zenithAbility = "INVOKE TORMENT "..snd.target
				zenithdoing = "torment"
			end
		end		
		
		if gmcp.Char.Vitals.ability_bal == "1" then
			hackleAttack = "assail "..snd.target.." "
			if snd.flamestack &gt;= 11 or snd.checkAff("heatspear") then
				hackleAttack = hackleAttack.."tenderise"
			elseif secondFlow == "pressure" then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("sore_wrist") then
				hackleAttack = hackleAttack.."maim"
			elseif secondFlow ~= "maim" and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_wrist") and not string.find(snd.resto_limb, "arm") then
				hackleAttack = hackleAttack.."maim"
			elseif secondFlow ~= "hobble" and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore_ankle") and not string.find(snd.resto_limb, "leg") then
				hackleAttack = hackleAttack.."hobble"
			elseif secondFlow ~= "flog" and snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
				hackleAttack = hackleAttack.."flog"
			elseif secondFlow ~= "whiplash" and snd.welt_ready == "head" and snd.resto_limb ~= "head" then
				hackleAttack = hackleAttack.."whiplash"
			elseif not snd.checkAff("whiplash") then
				hackleAttack = hackleAttack.."whiplash"
			elseif not snd.checkAff("backstrain") then
				hackleAttack = hackleAttack.."flog"
			elseif not snd.checkAff("sore_ankle") then
				hackleAttack = hackleAttack.."hobble"
			elseif not snd.checkAff("stuttering") then
				hackleAttack = hackleAttack.."slug"      
			else
				hackleAttack = hackleAttack.."butcher"
			end
		end
		
		if snd.theytumbling then
			string = "ego kneel "..snd.target
		elseif snd.theyran then
			string = "ego haul "..snd.target      
		elseif snd.cureset == "bard" and snd.bashing.target == "heartcage" then
			string = "onslaught heartcage bully bully"
		elseif snd.cureset == "bard" and snd.bashing.target == "ironcollar" then
			string = "remove ironcollar"
		elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles)) and not snd.used.shield then
			if snd.hackles then
				string = "assail "..snd.target.." tenderise"..snd.sep.."invoke extinguish "..snd.target..snd.sep
			else
				string = "invoke extinguish "..snd.target..snd.sep
			end
		elseif (snd.resto_limb ~= "right leg" and snd.checkAff("right_leg_broken") and not snd.checkAff("left_leg_broken")) or (snd.resto_limb ~= "right arm" and snd.checkAff("right_arm_broken") and not snd.checkAff("right_leg_broken")) or (snd.checkAff("right_arm_mangled") and not snd.checkAff("right_leg_broken")) then
			string = "invoke bedevil "..snd.target..snd.sep
		elseif (snd.resto_limb ~= "left leg" and snd.checkAff("left_leg_broken") and not snd.checkAff("right_leg_broken")) or (snd.resto_limb ~= "left arm" and snd.checkAff("left_arm_broken") and not snd.checkAff("left_leg_broken")) or (snd.checkAff("left_arm_mangled") and not snd.checkAff("leftleg_broken")) then
			string = "invoke bedevil "..snd.target.." reverse"..snd.sep
		elseif hp &lt;= 40 and snd.flamestack &lt; 10 then
			string = "seethe"..snd.sep
		else
			if not snd.firefist and snd.firefist_cooldown then
				string = string.."invoke ravage"..snd.sep
			end
			if not snd.zenith then
        if snd.wrath and snd.not_aff("sapped_strength") and snd.swagger &lt;= 2  then
				  string = "predation extend"..snd.sep
			  elseif snd.wrath and snd.swagger &lt;= 2 then
				  string = "predation"..snd.sep
			  end
        --if not snd.rebuke and gmcp.Char.Vitals.ability_bal == "0" then
        --  local baitlimb
         -- local rightleft = { "right", "left" }
         -- if snd.parrying == "left arm" then
         --   baitlimb = "right arm"
         -- elseif snd.parrying == "right arm" then
          --  baitlimb = "left arm"
          --else
          --  baitlimb = rightleft[math.random(2)] .. " arm"
          --end
          --string = string.."bait "..baitlimb..snd.sep
        --end
				if tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 then
					string = "invoke prolong"..snd.sep
				elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
					string = "ego boost"..snd.sep
				elseif not snd.zenith_coming then
					string = "invoke delirium"..snd.sep
				else
					if snd.flamestack &lt;= 9 then
						if ((snd.checksomeAffs({"torso_broken","heatspear"},2) and snd.resto_limb ~= torso) or snd.checkAff("torso_mangled")) and snd.checkAff("ablaze") then
							string = "invoke intensify "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) and snd.timer_check("poultice", .5, "more than") then
							string = "invoke lance "..snd.target..snd.sep
						elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_broken") and snd.limb_dmg["left leg"] &gt;= 24 and not snd.checkAff("fallen") then 
							string = string.."onslaught "..snd.target.." ".."kneecap left clobber punish"
						elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_broken") and snd.limb_dmg["right leg"] &gt;= 24 and not snd.checkAff("fallen") then 
							string = string.."onslaught "..snd.target.." ".."kneecap right clobber punish"
						else
							string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack..snd.sep
						end
					else
						if snd.checkAff("torso_broken") or (snd.checkAff("left_leg_broken") and not snd.resto_limb ~= "left leg" and snd.checkAff("fallen")) or (snd.checkAff("right_leg_broken") and not snd.resto_limb ~= "right leg"and snd.checkAff("fallen")) then
							string = "INVOKE TORMENT "..snd.target..snd.sep
						elseif not snd.checkAff("heatspear") and snd.checksomeAffs({"torso_broken","ablaze"},2) then
							string = "invoke lance "..snd.target..snd.sep
						else
							string = "invoke intensify "..snd.target..snd.sep
						end
					end
				end
			else
				string = string.."onslaught "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep..hackleAttack..snd.sep..zenithAbility..snd.sep..string..snd.sep	
			end
			if (not snd.can_legs() and snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},1) and not snd.checksomeSelfAffs({"left_arm_broken","right_arm_broken"},2)) then
				string = hackleAttack.." "..snd.target..snd.sep
			end
			if tonumber(gmcp.Char.Vitals.ego) &gt;= 500 and mentcount &gt;= 3 then
				string = string..snd.sep.."ego trauma "..snd.target..snd.sep
			end      
			if snd.used.shield then
				if not snd.checkAff("ablaze") then
					string = "touch hammer "..snd.target..snd.sep..string
				else
					string = string..snd.sep.."invoke torment "..snd.target..snd.sep
				end
			end      
			if snd.nopets then
				string = "call impressment"..snd.sep.."order loyals kill "..snd.target
			elseif not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^test4$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs</name>
								<script>if snd.class == "Ravager" then
snd.starting_attack()
function snd.attack_function()
 -- This is a list of limbs we'll be hitting.
 
-- This checks for a present Firefist defense. This is used later during a Firefist check.
 
-- This checks for a present snd.zenith defense. It is used later in snd.zenith Handling.
   
-- Zeal Attacks Table
local zeal_attacks = {
["left arm"] = "bully left ",
["right arm"] = "bully right ",
["left leg"] = "kneecap left ",
["right leg"] = "kneecap right ",
torso = "plexus",
head = "concuss" }
		local mymental_aff_count = 0
		for aff in pairs(snd.mental_affs) do
			if table.contains(snd.have_aff, snd.mental_affs[aff]) then
				mymental_aff_count = mymental_aff_count + 1
			end
		end


 -- This is a list of limbs we'll be hitting.
    local limbs = {"torso", "left leg", "right leg", "left arm", "right arm"}
 -- This will pick two limbs to hit - they will be used to write a flow attack with left being ATK1 and right being ATK2.
    local left = "nothing"
    local right = "nothing"
    local string = ""
    if snd.proned() then -- Go for legs on a prone.
        if snd.parried_limb == "right leg" then
            right = "left leg"
        elseif snd.parried_limb == "left leg" then
            right = "right leg"
        else
            right = "right leg"
            left = "left leg"
        end
    else -- Target isn't prone...
      for limb in pairs(limbs) do
         -- Ignore last parried, last hit, and any limbs being resto'd
       if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
          -- If it's a leg that's about to break
        if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
           -- If we have snd.zenith up, lets get in there.
             if snd.zenith and not snd.used.shield and snd.resto_limb ~= "none" then
              if right == "nothing" then
               right = limbs[limb]
              elseif left == "nothing" then
               left = limbs[limb]
              end
                -- Otherwise, no snd.zenith? Leave the prepped leg alone!
           end
             -- But, if it's not a leg about to break, go for it!
          elseif right == "nothing" then
           right = limbs[limb]
        elseif left == "nothing" and limbs[limb] ~= right then
         left = limbs[limb]
          end
       end
      end
     end
     if left == "nothing" then -- We only found one limb to hit!
      left = right -- double up!
     end
     -- This is the end of the limb picking logic.

-- Flow Handling - I will need to update this to use the ATK1/ATK2 lineup.
-- Consider writing a check for different combos on firefist?
 
if not snd.waiting.queue then
-- Alright, first we need to be sure we can hit them. Is shield up?
  if snd.theytumbling then
      string = "ego kneel "..snd.target
  elseif snd.theyran then
			string = "ego haul "..snd.target  
  elseif snd.used.shield then
    string = "touch hammer " .. snd.target
  elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "invoke prolong"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "ego boost"..snd.sep
		elseif ((snd.have_aff("asthma") and snd.have_aff("impatience")) or (snd.have_aff("asthma") and snd.have_aff("slickness")) or (snd.have_aff("impatience") and snd.have_aff("anorexia")) or (snd.have_aff("anorexia") and snd.have_aff("slickness"))) and snd.can_arms() and not snd.cureset ~= "indorani" and snd.not_aff("berserking") then
			string = "invoke denial"..snd.sep
		elseif snd.zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt;= 33.33 and string.find(left, "torso") and snd.resto_limb ~= "left leg" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt;= 33.33 and string.find(left, "leg") then
    string = "onslaught "..snd.target.." kneecap left haymaker"
-- No? How about all of that, but a right leg?!
  elseif snd.zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt; 33.33 and string.find(left, "torso") and snd.resto_limb ~= "right leg" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
    string = "onslaught "..snd.target.." kneecap right haymaker"
-- We need snd.zenith up, a leg about to break, and resto poultice off balance
  elseif snd.zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
    string = "onslaught "..snd.target.." kneecap left twinpress"
-- Could we also meet the same conditions, but on the pressurelimb we picked?
  elseif snd.zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
    string = "onslaught "..snd.target.." kneecap right pressure"
  elseif snd.zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
    string = "onslaught "..snd.target.." kneecap left kneecap left"
-- Could we also meet the same conditions, but on the other limb we picked?
  elseif snd.zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
    string = "onslaught "..snd.target.." kneecap right kneecap right"
  else
    string = "onslaught "..snd.target.." "..zeal_attacks[left].." "..zeal_attacks[right]
  end
 
    if gmcp.Char.Vitals.ability_bal == "1" and not snd.used.shield then
        if snd.zenith and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore wrist") then
            string = string..snd.sep.."assail "..snd.target.." maim "..snd.sep
        elseif snd.zenith and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore ankle") then    
            string = string..snd.sep.."assail "..snd.target.." hobble "..snd.sep
        elseif not snd.checkAff("stuttering") then
            string = string..snd.sep.."assail "..snd.target.." slug "..snd.sep
        elseif snd.checkAff("heatspear") then
            string = string..snd.sep.."assail "..snd.target.." tenderise "..snd.sep
        elseif not snd.checkAff("sore_ankle") then
            string = string..snd.sep.."assail "..snd.target.." hobble "..snd.sep
        elseif not snd.checkAff("sore_wrist") then
            string = string..snd.sep.."assail "..snd.target.." maim "..snd.sep
        else
            string = string..snd.sep.."assail "..snd.target.." tenderise "..snd.sep
        end
    end
 
   
-- Firefist handling
   if not snd.firefist then
      if snd.firefist_cooldown then
        if snd.zenith then
          string = "invoke ravage"..snd.sep..string
        end
      end
    end
   
 
if snd.zenith then
    if snd.checkAff("heatspear") then
      string = string..snd.sep.."INVOKE INTENSIFY "..snd.target
    elseif not snd.checkAff("heatspear") and not snd.checkAff("ablaze") and snd.firefist then
        string = string..snd.sep.."invoke lance "..snd.target
    elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
        string = string..snd.sep.."invoke lance "..snd.target
    elseif snd.limb_status["torso"] ~= "healed" and snd.checkAff("ablaze") then
        string = string..snd.sep.."INVOKE INTENSIFY "..snd.target
    else
        string = string..snd.sep.."invoke torment "..snd.target
    end
end
 
--if not snd.checkAff("indifference") and not snd.zenith and not snd.checkAff("heatspear") and not snd.used.shield then
--    string = "psi dull "..snd.target
--end
 
if not snd.zenith then
  if not snd.zenith_coming then
    string = "invoke delirium"
  end
end
 
if snd.flamestack &gt;= 12 then
    string = "invoke extinguish "..snd.target
end
 
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end


 
</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Immure</name>
								<script>snd.send("qeb INVOKE IMMUREMENT")</script>
								<command></command>
								<packageName></packageName>
								<regex>^immu$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Executor</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="no" isFolder="no">
								<name>Transfix + Sensitivity</name>
								<script>if snd.class == "Executor" then
snd.current_offense = "SentLumiSupport"


snd.starting_attack()
function snd.attack_function()
  local second_attack = ""
  if snd.target_locked() then
			snd.giving = {
			"sensitivity",
			"left_leg_crippled",
			"right_leg_crippled",
      "confusion",
      "impairment",
			"weariness",
			"dizziness",}
		else
      snd.giving = {
      "sensitivity",
      "clumsiness",
      "hearing",
      "sight",
      "asthma",
      "slickness",
      "anorexia",
			"left_leg_crippled",
			"right_leg_crippled",
      "confusion",
      "weariness",
      "vomiting",
      "shyness",
      "dizziness",
      }
		end
		if not snd.waiting.queue then

	call = ""
	left = "none"
	right = "none"

	 left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "ringblade stifle "..snd.target
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lumi$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Mentals</name>
								<script>if snd.class == "Executor" then
snd.current_offense = "SentMental"

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then
  local second_attack = ""
  
  snd.giving = {
  
  "impatience",
  "stupidity",
  "agoraphobia",
  "claustrophobia",
  "weariness",
  "clumsiness",
  "asthma",
  "slickness",
  "confusion",
  "left_leg_crippled",
  "right_leg_crippled",
  "anorexia",
  "heartflutter",
  "sight",
  "hearing",
  "sensitivity",
  }
  
  call = ""
	left = "none"
	right = "none"

	 left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "ringblade stifle "..snd.target
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ment$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Bleeding</name>
								<script>if snd.class == "Executor" then
snd.current_offense = "bleed"

snd.starting_attack()
function snd.attack_function()

		if not snd.waiting.queue then
		if snd.target_locked() then
			snd.giving = {
			"impairment",
			"confusion",
			"left_leg_crippled",
			"right_leg_crippled",
			"weariness",
			"dizziness",
      }
		else
			snd.giving = {
			"paresis",
		  "clumsiness",
			"haemophilia",
			"hearing",
			"sensitivity",
      "asthma",
      "weariness",
      "slickness",

      }
		end
    local second_attack = "wile"

  call = ""
	left = "none"
	right = "none"

	 left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "ringblade stifle "..snd.target
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bleed$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Fast Lock (Group)</name>
								<script>if snd.class == "Executor" then  -- Lightdrinker, Monstrosity, Brutaliser, Wardpeeler
snd.current_offense = "SentLock"

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

	string = ""
	call = ""
  snd.praeattack = "none"
  local time = 1
  time = tonumber(snd.recoverytime + 2.5)
  
  snd.softlocked = false
  if snd.checkAff("asthma") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and (snd.checkAff("slickness") or snd.checkAff("slough")) and (snd.checkAff("anorexia") or snd.checkAff("destroyed_throat")) then
    snd.softlocked = true
  end
    
    if snd.balance.exploit then
      string = "exploit"..snd.sep
    end
    
    if snd.nopets then
      string = string..snd.sep.."call accomplices"..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
    
    if snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
      snd.praeattack = "grit"
    
    elseif snd.flying then
      snd.praeattack = "tentacle"
		
    --elseif not snd.efficiency then
    --  snd.praeattack = "efficiency"
    --
   -- elseif snd.smokescreen then
    --  snd.praeattack = "smokescreen"
		
    elseif snd.used.rebounding and snd.used.shield then
			snd.praeattack = "twinraze"
      
    elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "heartflutter"}, 4) and not snd.checkAff("fallen") then
			snd.praeattack = "gambol"
    
    elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			snd.praeattack = "terminate"
    
    elseif snd.used.rebounding or snd.used.shield then
      snd.praeattack = "shave"
      snd.executorslashergeneral()
      
    elseif snd.my_raloth ~= "" and snd.proned() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
      string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
      snd.praeattack = "rampage"
			
		elseif (snd.checkAff("asthma") and snd.checkAff("slickness") and not snd.checkAff("destroyed_throat") and not snd.checkAff("anorexia") and snd.no_parry()) or snd.axeflying then
      snd.praeattack = "stifle" 
    
    elseif not (snd.softlocked or snd.target_locked()) and (snd.splattertwo == "none" or snd.splatterone == "none" or not snd.kindleused) then
      snd.toxinmodeexecutor()
      
    elseif snd.praeattack ==  "none" then
      snd.executorfastlock()
      
    else
      snd.executorslashergeneral()
    end
    
    if snd.praeattack == "grit" and snd.balance.might then
      string = "grit"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "tentacle" then
      string = string.. "touch tentacle " ..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "efficiency" then
      string = "efficiency"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "smokescreen" then
      string = "lay smokescreen here"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "twinraze" then     
		  string = string.."ringblade twinraze " ..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "gambol" then 
      string = string.."ringblade gambol "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack == "terminate" then     
		  string = string.."ringblade terminate "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack == "stifle" then
		  string = string.."ringblade stifle "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif string.find(snd.praeattack, "accost") then
      string = string.."wipe ringblade"..snd.sep..snd.praeattack.." "..snd.target..snd.sep.."ringblade brandish "..snd.target.. " " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif string.find(snd.praeattack, "splatter") then
      string = string..snd.praeattack..snd.sep
    elseif string.find(snd.praeattack, "kindle") then
      string = string..snd.praeattack..snd.sep.."ringblade brandish " ..snd.target.." "..snd.scythevenomapp..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack ~= "none" and snd.praeattack2 ~= "none" and snd.praeattack ~= "grit" then -- initial special non venom and follow up special non venom
		  string = string.."ringblade dance " ..snd.target.." "..snd.praeattack.." "..snd.praeattack2..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack ~= "none" and snd.praeattack ~= "grit" then  -- initial attacks special non venom, follow up is venom attack
		  if snd.checkAff("heartflutter") then
        string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." "..snd.praeattack.." inveigle " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  else
        string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.. " " ..snd.praeattack.." beguile " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  end
		elseif snd.praeattack2 ~= "none"  then  -- follow up attacks special non venom
		  string = string.. "wipe ringblade"..snd.sep.."ringblade dance " ..snd.target.. " contrive " ..snd.praeattack2.. " " ..snd.scythevenomapp..snd.sep.."ringblade contravene "..snd.target..snd.sep
		else  -- no special initial or follow up, just envenom attacks initial and followup
		  if snd.checkAff("heartflutter") then 
        string = string.. "wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive inveigle "..snd.scythevenomapp.." "..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  else
			  string = string.. "wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive beguile "..snd.scythevenomapp.." "..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  end
	  end
    
		if snd.praeattack == "tentacle" or snd.praeattack == "efficiency" or snd.praeattack == "smokescreen" or snd.praeattack == "grit" then 
    elseif snd.scythevenomapp ~= "none" and snd.scythevenomapp2 ~= "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp.. ", " ..snd.scythevenomapp2
		elseif snd.scythevenomapp ~= "none" and snd.scythevenomapp2 == "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp
		elseif snd.scythevenomapp == "none" and snd.scythevenomapp2 ~= "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp2
		end
    
    if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end		

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Aff</name>
								<script>if snd.class == "Executor" then
	snd.current_offense = "SentVLock"
	
	snd.starting_attack()
	function snd.attack_function()
	
		local second_attack = ""

		if not snd.waiting.queue then
		
			if snd.target_locked() then				
				snd.giving = {
				"heartflutter",
				"confusion",
				"left_leg_crippled",
				"fallen",
				"right_leg_crippled",
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			elseif snd.no_parry() or snd.axeflying then
				snd.giving = {
				"laxity",
				"impatience",
				"paresis",
				"asthma",
				"weariness",
				"heartflutter",
				"slickness",
				"anorexia",
				"impairment",
				"clumsiness",
				"confusion",
				"stupidity",
				"allergies",
				}
      elseif snd.parried_limb ~= "torso" then
				snd.giving = {
				"paresis",
				"heartflutter",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			else
				snd.giving = {
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"heartflutter",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			end
			
			string = ""
			call = ""
			left = "none"
			right = "none"

			left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

			if left  == "none" then left  = "epseth" end
			if right == "none" then right = "epseth" end
      
			if snd.no_parry() then 
				second_attack = "inveigle"
			else
				second_attack = "beguile"
			end
				
			if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
			elseif snd.instakilltarget == snd.target then
				string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
			elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
        string = "ringblade terminate "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
				string = "ringblade brutalise "..snd.target..snd.sep
			elseif snd.target_impaled then
				string = "ringblade saw"..snd.sep
			elseif snd.used.rebounding and snd.used.shield then
				string = string.. "ringblade twinraze " ..snd.target..snd.sep
			elseif snd.my_raloth ~= "" and snd.proned() and snd.target_locked() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
				string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
			elseif (snd.checkAff("asthma") and snd.checkAff("slickness")) and snd.no_parry() and not snd.checkAff("destroyed_throat") then
				string = "ringblade stifle "..snd.target..snd.sep			
			else
				if table.contains(snd.ringblade_affs, left) then
					if not table.contains(snd.effects, right) then
						string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					else
						string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					end
				elseif table.contains(snd.ringblade_affs, right) then
					string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				else
					string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				end
			end
			
			if snd.toggles.affcalling and not snd.target_gone then
				if table.contains(snd.effects, left) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[left]
					if table.contains(snd.effects, right) then 
						call = call..", "..snd.effects[right]
					end
					call = call..snd.sep
				elseif table.contains(snd.effects, right) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
				end
			end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
			
			string = string.."ringblade contravene "..snd.target..snd.sep

			if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") or string:find("tentacle") or string:find("efficiency") or string:find("grit") then
				call = ""
			end

			string = "wipe ringblade"..snd.sep..call..string
    
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limbs / Salves</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Group Impale/Frozen</name>
								<script>if snd.class == "Executor" then -- Brutaliser, Monstrosity, Rimestalker, Murder
snd.current_offense = "SentImpale"


snd.starting_attack()
function snd.attack_function()
  local second_attack = ""
  snd.giving = {
    "frozen",
    "left_leg_crippled",
    "right_leg_crippled",
    "left_arm_crippled",
    "right_arm_crippled",
    "asthma",
    "slickness",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
  }
	if not snd.waiting.queue then

	string = ""
	call = ""
	left = "none"
	right = "none"

	left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end

		if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
			elseif snd.instakilltarget == snd.target then
				string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
		elseif snd.used.rebounding and snd.used.shield and not snd.checkAff("writhe_impaled") then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" and not snd.checkAff("writhe_impaled") then
			string = "ringblade stifle "..snd.target
			
		elseif snd.target_impaled then
			string = "ringblade saw "..snd.target
			
		elseif not snd.efficiency and (snd.splattertwo == "none" or snd.splatterone == "none") then
				string = "efficiency"..snd.sep
		elseif snd.efficiency and not snd.target_locked() and (snd.splattertwo == "none" or snd.splatterone == "none") then
				local splatterone = "flammable"
				local splattertwo = "septic"
				if snd.splatterone == "none" then
					string = "toxin splatter " ..splatterone.. " at " ..snd.target..snd.sep  
				elseif snd.splattertwo == "none" then 
					string = "toxin splatter " ..splattertwo.. " at " ..snd.target..snd.sep  
				end
			elseif not snd.kindleused and (snd.splattertwo ~= "none" and snd.splatterone ~= "none") then
				string = "toxin kindle " ..snd.target..snd.sep.."ringblade brandish "..snd.target..snd.sep
		elseif snd.checkAff("left_leg_crippled") and snd.limb_status["left leg"] == "healed" and (snd.parried_limb ~= "left leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." left"
		
		elseif snd.checkAff("right_leg_crippled") and snd.limb_status["right leg"] == "healed" and (snd.parried_limb ~= "right leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." right"

  	elseif snd.proned() then         
      if not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then
        string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target
      elseif not snd.checkAff("writhe_impaled") then
      	string = "ringblade brutalise "..snd.target
      else
        string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target
      end	
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gimp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Arms</name>
								<script>if snd.class == "Executor" then -- Requires Raloth and Icewyrm
snd.current_offense = "SentSalve"

local second_attack = ""

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

    if snd.checkAff("destroyed_throat") then
    snd.giving = {
    "left_arm_crippled",
    "right_arm_crippled",
    "left_leg_crippled",
    "right_leg_crippled",
    "slickness",
    "asthma",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    else
    snd.giving = {
    
    "frozen",
    "left_arm_crippled",
    "right_arm_crippled",
    "left_leg_crippled",
    "right_leg_crippled",
    "anorexia",
    "stupidity",
    "asthma",
    "slickness",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    end	

	string = ""
	call = ""
	left = "none"
	right = "none"

	 left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end
		
    if snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
      string = "grit"
    
    elseif snd.used.rebounding and snd.used.shield then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "ringblade stifle "..snd.target
			
		elseif snd.target_impaled then
			string = "ringblade saw "..snd.target
			
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("left_leg_crippled") and snd.limb_status["left leg"] == "healed" and (snd.parried_limb ~= "left leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." left"
		
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("right_leg_crippled") and snd.limb_status["right leg"] == "healed" and (snd.parried_limb ~= "right leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." right"

  	elseif snd.proned() then         
      string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^arms$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Legs</name>
								<script>if snd.class == "Executor" then -- Requires Raloth and Icewyrm
snd.current_offense = "SentSalve"

local second_attack = ""

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

    if snd.checkAff("destroyed_throat") then
    snd.giving = {
    "slickness",
    "asthma",
    "left_leg_crippled",
    "right_leg_crippled",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    else
    snd.giving = {
    
    "frozen",
    "left_leg_crippled",
    "right_leg_crippled",
    "left_arm_crippled",
    "right_arm_crippled",
    "anorexia",
    "stupidity",
    "asthma",
    "slickness",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    end	

	string = ""
	call = ""
	left = "none"
	right = "none"

	 left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "inveigle"
		else
			second_attack = "beguile"
		end
		
    if snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
      string = "grit"
    
    elseif snd.used.rebounding and snd.used.shield then
			string = "ringblade twinraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "ringblade stifle "..snd.target
			
		elseif snd.target_impaled then
			string = "ringblade saw "..snd.target
			
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("left_leg_crippled") and snd.limb_status["left leg"] == "healed" and (snd.parried_limb ~= "left leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." left"
		
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("right_leg_crippled") and snd.limb_status["right leg"] == "healed" and (snd.parried_limb ~= "right leg" or snd.no_parry()) then
			string = "ringblade incise "..snd.target.." right"

  	elseif snd.proned() then         
      string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target
			
		elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
			left = snd.accost_accomplices[left]
			string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.ringblade_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
				else
					string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.ringblade_affs, right) then
				string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
			else
				string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "ringblade dance "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			string = "ringblade terminate "..snd.target
		end
		
		if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end

		string = "wipe ringblade"..snd.sep..call..string
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^legs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Terminate Route</name>
								<script>if snd.class == "Executor" then
	snd.current_offense = "SentVLock"
	
	snd.starting_attack()
	function snd.attack_function()
	
		local second_attack = ""
    local extraaff = "delphinium" -- what to use if we used everything else

		if not snd.waiting.queue then
				
			if snd.target_locked() then				
				snd.giving = {
				"heartflutter",
				"confusion",
				"left_leg_crippled",
				"fallen",
				"right_leg_crippled",
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			elseif snd.no_parry() or snd.axeflying then
				snd.giving = {
				"laxity",
				"impatience",
				"paresis",
				"asthma",
				"weariness",
				"heartflutter",
				"slickness",
				"anorexia",
				"impairment",
				"clumsiness",
				"confusion",
				"stupidity",
				"allergies",
				}
      elseif snd.parried_limb ~= "torso" then
				snd.giving = {
				"paresis",
				"heartflutter",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			else
				snd.giving = {
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"heartflutter",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			end
			
			string = ""
			call = ""
			left = "none"
			right = "none"

			left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

			if left  == "none" then left  = "epseth" end
			if right == "none" then right = "epseth" end
      
			if snd.no_parry() then 
				second_attack = "inveigle"
			else
				second_attack = "beguile"
			end
				
			if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
			elseif snd.instakilltarget == snd.target then
				string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
			elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
        string = "ringblade terminate "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
				string = "ringblade brutalise "..snd.target..snd.sep
			elseif snd.target_impaled then
				string = "ringblade saw"..snd.sep
			elseif snd.used.rebounding and snd.used.shield then
				string = string.. "ringblade twinraze " ..snd.target..snd.sep
			elseif not snd.efficiency and not (snd.smokescreen or snd.target_locked()) and (snd.splattertwo == "none" or snd.splatterone == "none") then
				string = "efficiency"..snd.sep
			elseif snd.smokescreen then
				string = "lay smokescreen here"..snd.sep
			elseif snd.my_raloth ~= "" and snd.proned() and snd.target_locked() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
				string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
			elseif (snd.checkAff("asthma") and snd.checkAff("slickness")) and snd.no_parry() and not snd.checkAff("destroyed_throat") then
				string = "ringblade stifle "..snd.target..snd.sep			
			elseif snd.efficiency and not snd.target_locked() and (snd.splattertwo == "none" or snd.splatterone == "none") then
				local splatterone = "paralytic"
				local splattertwo = "adhesive"
				if snd.splatterone == "none" then
					string = "toxin splatter " ..splatterone.. " at " ..snd.target..snd.sep  
				elseif snd.splattertwo == "none" then 
					string = "toxin splatter " ..splattertwo.. " at " ..snd.target..snd.sep  
				end
			elseif not snd.kindleused and (snd.splattertwo ~= "none" and snd.splatterone ~= "none") then
				string = "toxin kindle " ..snd.target..snd.sep.."ringblade brandish "..snd.target..snd.sep
			else
				if table.contains(snd.ringblade_affs, left) then
					if not table.contains(snd.effects, right) then
						string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					else
						string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					end
				elseif table.contains(snd.ringblade_affs, right) then
					string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				else
					string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				end
			end
			
			if snd.toggles.affcalling and not snd.target_gone then
				if table.contains(snd.effects, left) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[left]
					if table.contains(snd.effects, right) then 
						call = call..", "..snd.effects[right]
					end
					call = call..snd.sep
				elseif table.contains(snd.effects, right) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
				end
			end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
			
			string = string.."ringblade contravene "..snd.target..snd.sep

			if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") or string:find("tentacle") or string:find("efficiency") or string:find("grit") then
				call = ""
			end

			string = "wipe ringblade"..snd.sep..call..string
    
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Testing Limbs?</name>
								<script>if snd.class == "Executor" then
	snd.current_offense = "SentVLock"
	
	snd.starting_attack()
	function snd.attack_function()
	
		local second_attack = ""

		if not snd.waiting.queue then
		
			snd.softlocked = false
			if snd.checkAff("asthma") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and (snd.checkAff("slickness") or snd.checkAff("slough")) and (snd.checkAff("anorexia") or snd.checkAff("destroyed_throat")) then
				snd.softlocked = true
			end
		
			if snd.target_locked() then				
				snd.giving = {
			  "confusion",
				"left_leg_crippled",
        "fallen",
				"right_leg_crippled",		
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"weariness",
				"allergies",
				}
			elseif snd.no_parry() then
				snd.giving = {
				"laxity",
				"impatience",
				"paresis",
				"asthma",
        --"weariness",
				"slickness",
				"anorexia",
				"impairment",
				"clumsiness",
				"confusion",
				"stupidity",
				"weariness",
				"allergies",
				}
			else
				snd.giving = {
        "paresis",
        "heartflutter",
			  "asthma",
			  "slickness",
        "anorexia",
		    "clumsiness",
				"stupidity",
			  "confusion",
				"impairment",
				"heartflutter",
				"weariness",
				"allergies",
				}
			end
			
      string = ""
			call = ""
			left = "none"
			right = "none"

			left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

			if left  == "none" then left  = "epseth" end
			if right == "none" then right = "epseth" end
      
			if snd.no_parry() then 
				second_attack = "inveigle"
			else
				second_attack = "beguile"
			end
				
			if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
      elseif snd.instakilltarget == snd.target then
        string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
			elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
        string = "ringblade brutalise "..snd.target..snd.sep
      elseif snd.target_impaled then
        string = "ringblade saw"..snd.sep
      elseif snd.used.rebounding and snd.used.shield then
				string = string.. "ringblade twinraze " ..snd.target..snd.sep
			elseif not snd.efficiency and not (snd.smokescreen or snd.target_locked()) and (snd.splattertwo == "none" or snd.splatterone == "none") then
				string = "efficiency"..snd.sep
			elseif snd.smokescreen then
				string = "lay smokescreen here"..snd.sep
			elseif snd.my_raloth ~= "" and snd.proned() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
				string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
			elseif (snd.checkAff("asthma") and snd.checkAff("slickness")) and snd.no_parry() and not snd.checkAff("destroyed_throat") then
				string = "ringblade stifle "..snd.target..snd.sep			
			elseif snd.efficiency and not (snd.softlocked or snd.target_locked()) and (snd.splattertwo == "none" and snd.splatterone == "none") then
				local splatterone = "paralytic"
				local splattertwo = "adhesive"
				if snd.splatterone == "none" then
					string = "toxin splatter " ..splatterone.. " at " ..snd.target..snd.sep  
				elseif snd.splattertwo == "none" then 
					string = "toxin splatter " ..splattertwo.. " at " ..snd.target..snd.sep  
				end
			elseif snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" or not snd.kindleused then
				if snd.ringblade_attacks[left] == "accost" or snd.ringblade_attacks[left] == "rimestalker" then
					left = snd.accost_accomplices[left]
          string = left..snd.target..snd.sep.."ringblade brandish "..snd.target.." "..snd.effects[right]..snd.sep
				else
					left = "toxin kindle " ..snd.target..snd.sep
          string = left.."ringblade brandish "..snd.target..snd.sep
				end	
			else
        if table.contains(snd.ringblade_affs, left) then
          if not table.contains(snd.effects, right) then
            string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
            string = "ringblade dance "..snd.target.." "..string..snd.sep
				  else
            string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
            string = "ringblade dance "..snd.target.." "..string..snd.sep
          end
        elseif table.contains(snd.ringblade_affs, right) then
          string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
          string = "ringblade dance "..snd.target.." "..string..snd.sep
			  else
				  string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
          string = "ringblade dance "..snd.target.." "..string..snd.sep
			  end
			end
			
			if snd.toggles.affcalling and not snd.target_gone then
				if table.contains(snd.effects, left) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[left]
					if table.contains(snd.effects, right) then 
						call = call..", "..snd.effects[right]
					end
					call = call..snd.sep
				elseif table.contains(snd.effects, right) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
				end
			end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
			
			string = string.."ringblade contravene "..snd.target..snd.sep

			if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
				string = "ringblade terminate "..snd.target
			end
		
			if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") or string:find("tentacle") or string:find("efficiency") or string:find("grit") then
				call = ""
			end

			string = "wipe ringblade"..snd.sep..call..string
    
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end

	--snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^test2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Mentals</name>
								<script>if snd.class == "Executor" then 
snd.current_offense = "SentMent"

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

	string = ""
	call = ""
  snd.praeattack = "none"
  local time = 1
  time = tonumber(snd.recoverytime + 2.5)
  
  snd.softlocked = false
  if snd.checkAff("asthma") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and (snd.checkAff("slickness") or snd.checkAff("slough")) and (snd.checkAff("anorexia") or snd.checkAff("destroyed_throat")) then
    snd.softlocked = true
  end
    
    if snd.balance.exploit then
      string = "exploit"..snd.sep
    end
    
    if snd.nopets then
      string = string..snd.sep.."call accomplices"..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end

		if snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
      snd.praeattack = "grit"
    
    elseif snd.flying then
      snd.praeattack = "tentacle"
		
    elseif not snd.efficiency and snd.smokescreen then
      snd.praeattack = "efficiency"
    
    elseif snd.smokescreen then
      snd.praeattack = "smokescreen"
		
    elseif snd.used.rebounding and snd.used.shield then
			snd.praeattack = "twinraze"
      
    elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "heartflutter"}, 4) and not snd.checkAff("fallen") then
			snd.praeattack = "gambol"
    
    elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
			snd.praeattack = "terminate"
    
    elseif snd.used.rebounding or snd.used.shield then
      snd.praeattack = "shave"
      snd.executorslashergeneral()
      
    elseif snd.my_raloth ~= "" and snd.proned() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
      string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
      snd.praeattack = "rampage"
    
    elseif (snd.checkAff("asthma") and (snd.checkAff("paresis") or snd.checkAff("paralysis") and snd.no_parry()) and not snd.checkAff("destroyed_throat") and snd.checkAff("slickness") and snd.checkAff("impatience")) or snd.axeflying then
      snd.praeattack = "stifle"
      
    elseif snd.praeattack ==  "none" then
      snd.executormentalmode()
      
    else
      snd.executorslashergeneral()
      
    end
    
    if snd.praeattack == "grit" and snd.balance.might then
      string = "grit"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "tentacle" then
      string = string.. "touch tentacle " ..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "efficiency" then
      string = "efficiency"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "smokescreen" then
      string = "lay smokescreen here"..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "twinraze" then     
		  string = string.."ringblade twinraze " ..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack == "gambol" then 
      string = string.."ringblade gambol "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack == "terminate" then     
		  string = string.."ringblade terminate "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack == "stifle" then
		  string = string.."ringblade stifle "..snd.target..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif string.find(snd.praeattack, "accost") then
      string = string.."wipe ringblade"..snd.sep..snd.praeattack.." "..snd.target..snd.sep.."ringblade brandish "..snd.target.. " " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif string.find(snd.praeattack, "splatter") then
      string = string..snd.praeattack..snd.sep
    elseif string.find(snd.praeattack, "kindle") then
      string = string..snd.praeattack..snd.sep.."ringblade brandish " ..snd.target.." "..snd.scythevenomapp..snd.sep.."ringblade contravene "..snd.target..snd.sep
    elseif snd.praeattack ~= "none" and snd.praeattack2 ~= "none" and snd.praeattack ~= "grit" then -- initial special non venom and follow up special non venom
		  string = string.."ringblade dance " ..snd.target.." "..snd.praeattack.." "..snd.praeattack2..snd.sep.."ringblade contravene "..snd.target..snd.sep
	  elseif snd.praeattack ~= "none" and snd.praeattack ~= "grit" then  -- initial attacks special non venom, follow up is venom attack
		  if snd.checkAff("heartflutter") then
        string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." "..snd.praeattack.." inveigle " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  else
        string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.. " " ..snd.praeattack.." beguile " ..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  end
		elseif snd.praeattack2 ~= "none"  then  -- follow up attacks special non venom
		  string = string.. "wipe ringblade"..snd.sep.."ringblade dance " ..snd.target.. " contrive " ..snd.praeattack2.. " " ..snd.scythevenomapp..snd.sep.."ringblade contravene "..snd.target..snd.sep
		else  -- no special initial or follow up, just envenom attacks initial and followup
		  if snd.checkAff("heartflutter") then 
        string = string.. "wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive inveigle "..snd.scythevenomapp.." "..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  else
			  string = string.. "wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive beguile "..snd.scythevenomapp.." "..snd.scythevenomapp2..snd.sep.."ringblade contravene "..snd.target..snd.sep
		  end
	  end
    
		if snd.praeattack == "tentacle" or snd.praeattack == "efficiency" or snd.praeattack == "smokescreen" or snd.praeattack == "grit" then 
    elseif snd.scythevenomapp ~= "none" and snd.scythevenomapp2 ~= "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp.. ", " ..snd.scythevenomapp2
		elseif snd.scythevenomapp ~= "none" and snd.scythevenomapp2 == "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp
		elseif snd.scythevenomapp == "none" and snd.scythevenomapp2 ~= "none" then
		  call = call.. "wt Afflicting "..snd.target..": " ..snd.scythevenomapp2
		end
    
    if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") then
			call = ""
		end		

      if snd.toggles.affcalling and not snd.target_gone and call~= "" then
          string = call..snd.sep..string
      end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ment$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Full Damage</name>
								<script>if snd.class == "Executor" then
	snd.current_offense = "SentDMG"
	
	snd.starting_attack()
	function snd.attack_function()
	
		local second_attack = ""

		if not snd.waiting.queue then
		
			if snd.target_locked() then				
				snd.giving = {
				"heartflutter",
				"confusion",
				"left_leg_crippled",
				"fallen",
				"right_leg_crippled",
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			elseif snd.no_parry() or snd.axeflying then
				snd.giving = {
				"laxity",
				"impatience",
				"paresis",
				"haemophilia",
				"allergies",
				"vomiting",
				"asthma",
				"slickness",
				"weariness",
				"anorexia",
				"impairment",
				"clumsiness",
				"confusion",
				"stupidity",
				"allergies",
				}
      elseif snd.parried_limb ~= "torso" then
				snd.giving = {
				"paresis",
				"heartflutter",
				"haemophilia",
				"allergies",
				"vomiting",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				}
			else
				snd.giving = {
				"paresis",
				"haemophilia",
				"allergies",
				"heartflutter",
				"vomiting",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				}
			end
			
			string = ""
			call = ""
			left = "none"
			right = "none"

			left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

			if left  == "none" then left  = "epseth" end
			if right == "none" then right = "epseth" end
      
			if snd.no_parry() then 
				second_attack = "inveigle"
			else
				second_attack = "beguile"
			end
				
			if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
			elseif snd.instakilltarget == snd.target then
				string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
			elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
        string = "ringblade terminate "..snd.target
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
				string = "ringblade brutalise "..snd.target..snd.sep
			elseif snd.target_impaled then
				string = "ringblade saw"..snd.sep
			elseif snd.used.rebounding and snd.used.shield then
				string = string.. "ringblade twinraze " ..snd.target..snd.sep
			elseif not snd.efficiency and not (snd.smokescreen or snd.target_locked()) and (snd.splattertwo == "none" or snd.splatterone == "none") then
				string = "efficiency"..snd.sep
			elseif snd.smokescreen then
				string = "lay smokescreen here"..snd.sep
			elseif snd.my_raloth ~= "" and snd.proned() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
				string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
			elseif (snd.checkAff("asthma") and snd.checkAff("slickness")) and snd.no_parry() and not snd.checkAff("destroyed_throat") then
				string = "ringblade stifle "..snd.target..snd.sep			
			elseif snd.efficiency and not snd.target_locked() and (snd.splattertwo == "none" or snd.splatterone == "none") then
				local splatterone = "flammable"
				local splattertwo = "septic"
				if snd.splatterone == "none" then
					string = "toxin splatter " ..splatterone.. " at " ..snd.target..snd.sep  
				elseif snd.splattertwo == "none" then 
					string = "toxin splatter " ..splattertwo.. " at " ..snd.target..snd.sep  
				end
			elseif not snd.kindleused and (snd.splattertwo ~= "none" and snd.splatterone ~= "none") then
				string = "toxin kindle " ..snd.target..snd.sep.."ringblade brandish "..snd.target..snd.sep
			else
				if table.contains(snd.ringblade_affs, left) then
					if not table.contains(snd.effects, right) then
						string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					else
						string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					end
				elseif table.contains(snd.ringblade_affs, right) then
					string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				else
					string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				end
			end
			
			if snd.toggles.affcalling and not snd.target_gone then
				if table.contains(snd.effects, left) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[left]
					if table.contains(snd.effects, right) then 
						call = call..", "..snd.effects[right]
					end
					call = call..snd.sep
				elseif table.contains(snd.effects, right) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
				end
			end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
			
			string = string.."ringblade contravene "..snd.target..snd.sep

			if snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
				string = "ringblade terminate "..snd.target
			end
		
			if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") or string:find("tentacle") or string:find("efficiency") or string:find("grit") then
				call = ""
			end

			string = "wipe ringblade"..snd.sep..call..string
    
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>1v1 Terminate Route (Testing)</name>
								<script>if snd.class == "Executor" then
	snd.current_offense = "SentVLock"
	
	snd.starting_attack()
	function snd.attack_function()
	
		local second_attack = ""
    local extraaff = "delphinium" -- what to use if we used everything else

		if not snd.waiting.queue then
		
			if snd.target_locked() then				
				snd.giving = {
				"heartflutter",
				"confusion",
				"left_leg_crippled",
				"fallen",
				"right_leg_crippled",
				"paresis",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			elseif snd.no_parry() or snd.axeflying then
				snd.giving = {
				"laxity",
				"impatience",
				"paresis",
				"asthma",
				"weariness",
				"heartflutter",
				"slickness",
				"anorexia",
				"impairment",
				"clumsiness",
				"confusion",
				"stupidity",
				"allergies",
				}
      elseif snd.parried_limb ~= "torso" then
				snd.giving = {
				"paresis",
				"heartflutter",
				"asthma",
				"slickness",
				"anorexia",
				"clumsiness",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
      elseif snd.timer_check("fitness", .2, "more than") then
		    snd.giving = {
		    "impairment",
				"clumsiness",
				"paresis",
		    "asthma",
		    "slickness",
		    "anorexia",
		    "stupidity",
		    "voyria",
		    "left_arm_crippled",
		    "right_arm_crippled",
		    "weariness",
		    "dizziness",
		    "stupidity",
		    "recklessness",
		    "peace",
		    "haemophilia",
		    "left_leg_crippled",
		    "right_leg_crippled",
		    "sensitivity",
		    }
      elseif snd.checkAff("impatience") or snd.checkAff("stupidity") then
        if snd.checkAff("asthma") then
          snd.giving = {
		      "slickness",
          "anorexia",
          "paresis",
          "clumsiness",
          "asthma",
          "stupidity",
		      }
        elseif snd.timer_check("focus", .2, "more than") then
          snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
				  "paresis",
          "clumsiness",
          "asthma",
          "slickness",
          "anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
          "stupidity", 
          "sensitivity",
          "haemophilia",
          "weariness",
          "dizziness",
          "voyria",
		      }
        end
			else
				snd.giving = {
				"paresis",
				"clumsiness",
				"asthma",
				"slickness",
				"anorexia",
				"heartflutter",
				"stupidity",
				"confusion",
				"impairment",
				"weariness",
				"allergies",
				}
			end
			
			string = ""
			call = ""
			left = "none"
			right = "none"

			left, right = Executor_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

			if left  == "none" then left  = "epseth" end
			if right == "none" then right = "epseth" end
      
			if snd.no_parry() then 
				second_attack = "inveigle"
			else
				second_attack = "beguile"
			end
				
			if snd.nopets then
				string = snd.sep.."call accomplices"..snd.sep 			
			elseif snd.balance.might and (snd.have_aff("paralysis") or (snd.have_aff("asthma") and (snd.have_aff("clumsiness") or snd.have_aff("weariness") or snd.have_aff("hypochondria") or snd.have_aff("baldness")))) or snd.aff_tally() &gt; 6 then
				string = "grit"..snd.sep
			elseif snd.flying then
				string = string.. "touch tentacle " ..snd.target..snd.sep
			elseif snd.instakilltarget == snd.target then
				string = string.."wipe ringblade"..snd.sep.."ringblade dance "..snd.target.." contrive curare inveigle xentio"..snd.sep
			elseif snd.checksomeAffs({"confusion", "left_leg_crippled", "right_leg_crippled", "fallen", "heartflutter"}, 5) then
        string = "ringblade terminate "..snd.target..snd.sep
      elseif snd.theytumbling and not snd.checkAff("writhe_impaled") then
				string = "ringblade brutalise "..snd.target..snd.sep
			elseif snd.target_impaled then
				string = "ringblade saw"..snd.sep
			elseif snd.used.rebounding and snd.used.shield then
				string = string.. "ringblade twinraze " ..snd.target..snd.sep
			elseif not snd.efficiency and not (snd.smokescreen or snd.target_locked()) and (snd.splattertwo == "none" or snd.splatterone == "none") then
				string = "efficiency"..snd.sep
			--elseif snd.smokescreen then
				--string = "lay smokescreen here"..snd.sep
			elseif snd.my_raloth ~= "" and snd.proned() and snd.target_locked() and not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"}, 2) then         
				string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." rampage "..snd.target..snd.sep
			elseif (snd.checkAff("asthma") and snd.checkAff("slickness")) and snd.no_parry() and not snd.checkAff("destroyed_throat") then
				string = "ringblade stifle "..snd.target..snd.sep			
			elseif snd.efficiency and not snd.target_locked() and (snd.splattertwo == "none" or snd.splatterone == "none") then
				local splatterone = "paralytic"
				local splattertwo = "adhesive"
				if snd.splatterone == "none" then
					string = "toxin splatter " ..splatterone.. " at " ..snd.target..snd.sep  
				elseif snd.splattertwo == "none" then 
					string = "toxin splatter " ..splattertwo.. " at " ..snd.target..snd.sep  
				end
			elseif not snd.kindleused and (snd.splattertwo ~= "none" and snd.splatterone ~= "none") then
				string = "toxin kindle " ..snd.target..snd.sep.."ringblade brandish "..snd.target..snd.sep
			else
				if table.contains(snd.ringblade_affs, left) then
					if not table.contains(snd.effects, right) then
						string = snd.ringblade_attacks[left].." "..snd.ringblade_attacks[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					else
						string = snd.ringblade_attacks[left].." "..second_attack.." "..snd.effects[right]
						string = "ringblade dance "..snd.target.." "..string..snd.sep
					end
				elseif table.contains(snd.ringblade_affs, right) then
					string = "contrive "..snd.ringblade_attacks[right].." "..snd.effects[left]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				else
					string = "contrive "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
					string = "ringblade dance "..snd.target.." "..string..snd.sep
				end
			end
			
			if snd.toggles.affcalling and not snd.target_gone then
				if table.contains(snd.effects, left) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[left]
					if table.contains(snd.effects, right) then 
						call = call..", "..snd.effects[right]
					end
					call = call..snd.sep
				elseif table.contains(snd.effects, right) then 
					call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
				end
			end
			
			if snd.balance.exploit then
				string = "exploit"..snd.sep..string
			end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
			
			string = string.."ringblade contravene "..snd.target..snd.sep

			if string:find("brutalise") or string:find("saw") or string:find("stifle") or string:find("twinraze") or string:find("terminate") or string:find("tentacle") or string:find("efficiency") or string:find("grit") then
				call = ""
			end

			string = "wipe ringblade"..snd.sep..call..string
    
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		end
	end

	snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="no" isFolder="yes">
						<name>Revenant</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>wield zeal</name>
								<script>if snd.class == "Revenant" then
snd.send("quickwield both warhammer")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wzl$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield limbs</name>
								<script>if snd.class == "Revenant" then
snd.send("quickwield both mace mace.2")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wlb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield longswords</name>
								<script>if snd.class == "Revenant" then
snd.send("quickwield both longsword longsword.2")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wls$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield damage</name>
								<script>if snd.class == "Revenant" then
snd.send("quickwield both bastard")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wdmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Righteousness</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>deliver</name>
								<script>if snd.class == "Revenant" then
snd.send("qeb get monolith"..snd.sep.."phantasm retrieve "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^del (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>resurrection</name>
								<script>if snd.class == "Revenant" then
if snd.toggles.attacking then snd.toggle("attacking") end
snd.send("qeb phantasm reanimate "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rez (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>pilgrimage</name>
								<script>if snd.class == "Revenant" then
  if snd.toggles.attacking then snd.toggle("attacking") end
  if snd.toggles.bashing then snd.toggle("bashing") end
  if snd.toggles.fasthunt then snd.toggle("fasthunt") end
  if snd.have_aff("paresis") and not snd.elevatedaff["paresis"] and #snd.elevatedaff &lt; 1 then
    send("firstaid elevate paresis")
  elseif snd.have_aff("paralysis") and not snd.elevatedaff["paralysis"] and #snd.elevatedaff &lt; 1 then
    send("firstaid elevate paralysis")
  end
  snd.send("undefend")
  snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."phantasm sidestep")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^pilg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>latency</name>
								<script>if snd.class == "Revenant" then
  if snd.toggles.attacking then snd.toggle("attacking") end
  if snd.toggles.bashing then snd.toggle("bashing") end
  if snd.toggles.fasthunt then snd.toggle("fasthunt") end
  if snd.have_aff("paresis") and not snd.elevatedaff["paresis"] and #snd.elevatedaff &lt; 1 then
    send("firstaid elevate paresis")
  elseif snd.have_aff("paralysis") and not snd.elevatedaff["paralysis"] and #snd.elevatedaff &lt; 1 then
    send("firstaid elevate paralysis")
  end
  snd.send("undefend")
  snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."phantasm sidestep")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^pil$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>retribution stack</name>
								<script>if snd.class == "Revenant" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- let's determine how many affs we are away from locking
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- we're going to use a different affliction stack if the target is locked
		if snd.target_locked() then
			snd.giving = {
			"left_leg_crippled",
			"right_leg_crippled",
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			"sensitivity",
			"clumsiness",
			"weariness",
			}
		else
		-- and this one if they're not
			snd.giving = {
			"conviction",
			"asthma",
			"clumsiness",
			"paresis",
			"slickness",
			"stupidity",
			"anorexia",
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			--deathblow!
			"weariness",
			"haemophilia",
			"allergies",
			"sensitivity",
			"vomiting",
			"recklessness",
			"dizziness"
			}
		end
		-- first and foremost, check if we can retri!
		if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
			string = "cull "..snd.target
		else -- if not...
			-- see if we can lock this round, in any of three possible ways
			if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 1 and not snd.used.shield then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "deceive "..snd.target.." wasi"
      elseif snd.used.shield or snd.used.rebounding then
				string = "deceive "..snd.target.." "..snd.rev_empower(tohit[1])
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				string = "blade scribe right atdum "..snd.target.." "..snd.rev_empower(tohit[1])..snd.sep.."dpl "..snd.target.." "..snd.rev_empower(tohit[3]).." "..snd.rev_empower(tohit[2])
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dpl "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ret$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>legs</name>
								<script>if snd.class == "Revenant" then
  snd.starting_attack()
  function snd.attack_function()
  	if not snd.waiting.queue then
  		local string = "" -- we'll load this with our attack string
  		local call = "" -- and this with our affliction call
  		-- next, the afflictions we want to give
  		local touse = {}
  		local tohit = {}
  		-- and in case we don't find enough of them
  		local extraaff = "hemorrhage" 
  		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 100 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 100 then
  			telvi = true
  		end
  		-- set the affs we want to use
  			snd.giving = {
  			"left_arm_crippled",
  			"right_arm_crippled",    
  			"left_leg_crippled",
  			"right_leg_crippled",
        "stupidity",
  			"anorexia",
  			"slickness",
  			"asthma",
  			"paresis",
        "clumsiness",
        "weariness",
  			}
  			
  		-- pick affs from the list above
  		for i in pairs(snd.giving) do
  			-- make sure not to double up paresis and paralysis
  			if not snd.checkAff(snd.giving[i]) then
  				-- and don't add an aff we've already got in the list!
  				if not table.contains(touse, snd.giving[i]) then
  					table.insert(touse, snd.giving[i])
  				end
  			end
  		end
  			
  		-- first and foremost, check if we can retri!
  		if snd.target_impaled then
  			string = "extirpate "..snd.target
  		elseif snd.proned() and not snd.checkAff("writhe_impaled") then 
  			string = "lurk "..snd.target..snd.sep.."transpierce "..snd.target
  		else 
  			-- now let's convert affs to venoms/empowerments
  			for aff in pairs(touse) do
  				table.insert(tohit, snd.effects[touse[aff]])
  			end
  			-- if we didn't find enough stuff to hit with, stick in our filler
  			while #tohit &lt; 3 do
  				table.insert(tohit, extraaff)
  			end
  			-- now to decide what attack to use!
  			if snd.used.shield and snd.used.rebounding then
  				string = "deceive "..snd.target.." wasi"
        elseif snd.used.shield or snd.used.rebounding then
  				string = "deceive "..snd.target.." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
  			elseif telvi then
  				string = "blade scribe right telvi "..snd.target..snd.sep.."blade scribe left telvi "..snd.target..snd.sep.."dpl "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
  			else
  				string = "dpl "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
  			end
  		end
  		-- prepend our affliction call, if we need one
  		if snd.toggles.affcalling and not snd.target_gone then
  			string = call..string
  		end
  		-- handle anti-spam and the actual attacking now
  		if string ~= snd.last_attack and not snd.waiting.queue then
  			snd.last_attack = string
  			snd.attack(snd.last_attack)
  			snd.waiting.queue = true
  			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  		end
  	end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lgs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>impale mode</name>
								<script>
if snd.class == "Revenant" then
  snd.starting_attack()
  function snd.attack_function()
  	if not snd.waiting.queue then
  		local string = "" -- we'll load this with our attack string
  		local call = "" -- and this with our affliction call
  		local physcount = 0
  		for aff in pairs(snd.physical_affs) do
  			if table.contains(snd.target_has, snd.physical_affs[aff]) then
  				physcount = physcount + 1
  			end
  		end
  		-- next, the afflictions we want to give
  		local touse = {}
  		local tohit = {}
  		-- and in case we don't find enough of them
  		local extraaff = "duskosa"
  		local atdum = false -- can we use atdum?
  		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
  			atdum = true -- yesssssss
  		end
  		-- set the affs we want to use
  			snd.giving = {
        "paresis",
        "clumsiness",
        "asthma",
        "sensitivity",
        "vomiting",
        "allergies",
        "haemophilia",
        "slickness",
        "left_leg_crippled",
  			"right_leg_crippled",
        "anorexia",
        "stupidity",
        --"recklessness",
        --"weariness",
        --"dizziness",
        --"voyria",
        }
  		-- first and foremost, check if we can disembowel!
  		if snd.target_impaled then
  			string = "extirpate "..snd.target
  		-- otherwise, see if we can impale
  		elseif not snd.checkAff("writhe_impaled") and snd.proned() and snd.checkAff("sensitivity") and physcount &gt;= 4 and atdum then
  			string = "blade scribe left lawid "..snd.target..snd.sep.."blade scribe right lawid "..snd.target..snd.sep.."lurk "..snd.target..snd.sep.."transpierce "..snd.target
  		else -- if not...
  			-- pick affs from the list above
  			for i in pairs(snd.giving) do
  				-- make sure not to double up paresis and paralysis
  				if not snd.checkAff(snd.giving[i]) then
  					-- and don't add an aff we've already got in the list!
  					if not table.contains(touse, snd.giving[i]) then
  						table.insert(touse, snd.giving[i])
  					end
  				end
  			end
  			-- now let's convert affs to venoms/empowerments
  			for aff in pairs(touse) do
  				table.insert(tohit, snd.effects[touse[aff]])
  			end
  			-- if we didn't find enough stuff to hit with, stick in our filler
  			while #tohit &lt; 3 do
  				table.insert(tohit, extraaff)
  			end
  			-- now to decide what attack to use!
  			if snd.used.shield and snd.used.rebounding then
  				string = "deceive "..snd.target.." wasi"
        elseif snd.used.shield or snd.used.rebounding then
  				string = "deceive "..snd.target.." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
  			elseif atdum then -- vorpal equiv
  				string = "blade scribe right atdum "..snd.target.." "..snd.rev_empower(tohit[1])..snd.sep.."dpl "..snd.target.." "..snd.rev_empower(tohit[3]).." "..snd.rev_empower(tohit[2])
  				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
  			else
  				string = "dpl "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
  			end
  		end
  		-- prepend our affliction call, if we need one
  		if snd.toggles.affcalling and not snd.target_gone then
  			string = call..string
  		end
  		-- handle anti-spam and the actual attacking now
  		if string ~= snd.last_attack and not snd.waiting.queue then
  			snd.last_attack = string
  			snd.attack(snd.last_attack)
  			snd.waiting.queue = true
  			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  		end
  	end
  end
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^im$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>newbie mode</name>
								<script>if snd.class == "Revenant" then
  snd.starting_attack()
  function snd.attack_function()
  	if not snd.waiting.queue then
  		local string = "" -- we'll load this with our attack string
  		local call = "" -- and this with our affliction call
  		-- next, the afflictions we want to give
  		local touse = {}
  		local tohit = {}
  		-- and in case we don't find enough of them
  		local extraaff = "duskosa" -- sacrifice
  		-- set the affs we want to use
  			snd.giving = {
        "oculus",
        "paresis",
        "clumsiness",
        "asthma",
        "sensitivity",
        "vomiting",
        "allergies",
        "haemophilia",
        "slickness",
        "anorexia",
        "stupidity",
        "recklessness",
        "weariness",
        "dizziness",
        "voyria",
        }
  		-- first and foremost, check if we can disembowel!
  		if snd.target_impaled then
  			string = "extirpate "..snd.target
  		-- otherwise, see if we can impale
  		elseif not snd.checkAff("writhe_impaled") and snd.proned() and not snd.checksomeAffs({"writhe_thighlock", "writhe_necklock", "writhe_armpitlock"}, 1) then
  			string = "transpierce "..snd.target
  		else -- if not...
  			-- pick affs from the list above
  			for i in pairs(snd.giving) do
  				-- make sure not to double up paresis and paralysis
  				if not snd.checkAff(snd.giving[i]) then
  					-- and don't add an aff we've already got in the list!
  					if not table.contains(touse, snd.giving[i]) then
  						table.insert(touse, snd.giving[i])
  					end
  				end
  			end
  			-- now let's convert affs to venoms/empowerments
  			for aff in pairs(touse) do
  				table.insert(tohit, snd.effects[touse[aff]])
  			end
  			-- if we didn't find enough stuff to hit with, stick in our filler
  			while #tohit &lt; 3 do
  				table.insert(tohit, extraaff)
  			end
  			-- now to decide what attack to use!
  			if snd.used.shield and snd.used.rebounding then
  				string = "deceive "..snd.target.." wasi"
        elseif snd.used.shield or snd.used.rebounding then
  				string = "deceive "..snd.target.." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
  			else
  				string = "dpl "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
  				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
  			end
  		end
  		-- prepend our affliction call, if we need one
  		if snd.toggles.affcalling and not snd.target_gone then
  			string = call..string
  		end
  		-- handle anti-spam and the actual attacking now
  		if string ~= snd.last_attack and not snd.waiting.queue then
  			snd.last_attack = string
  			snd.attack(snd.last_attack)
  			snd.waiting.queue = true
  			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  		end
  	end
  end
  snd.attack_function()
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^newb$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>damage</name>
								<script>if snd.class == "Revenant" then
  snd.starting_attack()
  function snd.attack_function()
  	if not snd.waiting.queue then
  		local string = ""
  		if snd.used.rebounding or snd.used.shield then
  			string = "raze "..snd.target
  		elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 then
  			string = "blade scribe left lawid "..snd.target
      end
  			string = string..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."harrow "..snd.target
  		if string ~= snd.last_attack and not snd.waiting.queue then
  			snd.last_attack = string
  			snd.attack(snd.last_attack)
  			snd.waiting.queue = true
  			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  		end
  	end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>iceblast</name>
								<script>if snd.class == "Revenant" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  if snd.used.rebounding and snd.used.shield then
--   snd.send("deceive "..snd.target.." wasi")
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "deceive "..snd.target.." duskosa"
  else
   string = "blade scribe left telvi "..snd.target..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."actuate left with duskosa"..snd.sep.."harrow "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
--snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ib$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Bleed/Hemm</name>
								<script>if snd.class == "Revenant" then
  snd.starting_attack()

  function snd.attack_function()
    local string = ""-- we'll load this with our attack string
    local call = ""  -- and this with our affliction call
    
                     -- next, the afflictions we want to give
    local touse = {}
    local tohit = {}
    local extraaff = "wilave" -- and in case we don't find enough of them
    
    local left_crescent = ""
    if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 85 then left_crescent = "blade scribe left lawid "..snd.target end
    
    local right_crescent = "" 
    if tonumber(gmcp.Char.Vitals.charge_right) &gt;= 85 then right_crescent = "blade scribe right lawid "..snd.target end

    
    if not snd.waiting.queue then
      
      snd.giving = {   -- set the affs we want to use
      "hearing", 
      --"haemophilia", 
      "clumsiness",
      "sensitivity"}
       
      -- We really only care about the sensitivity/haemophilia
      -- If they have both, go straight into damage
      if snd.checksomeAffs({"haemophilia", "sensitivity"}, 2) then
        table.insert(touse, "wilave")
        table.insert(touse, "wilave")
        
      else
        -- If that condition isn't met, pick affs from the list above
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            -- Don't add an aff we've already got in the list!
            if not table.contains(touse, snd.giving[i]) then
              table.insert(touse, snd.giving[i])
            end
          end
        end
      end
      
      -- now let's convert affs to venoms/empowerments
      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end
      
      -- if we didn't find enough stuff to hit with, stick in hemorrhage.
      while #tohit &lt; 3 do
        table.insert(tohit, extraaff)
      end

      if (snd.used.shield and snd.used.rebounding) then -- Double barrier, try to break through both with rsk/wasi.
        string = "deceive " .. snd.target .. " wasi"
        
      elseif (snd.used.shield or snd.used.rebounding) then -- One layer of barrier, rsk w/venom.
        string = "deceive " .. snd.target .. " " .. snd.rev_empower(tohit[1])
        call = "wt Afflicting " .. snd.target .. ": " .. tohit[1]
        
      else -- Send 2 hits with venoms/empowerments
        string = "dpl " .. snd.target .. " " .. snd.rev_empower(tohit[2]) .. " " .. snd.rev_empower(tohit[1])
        call = "wt Afflicting " .. snd.target .. ": " .. tohit[2] .. ", " .. tohit[1]
        
        if left_crescent ~= "" and snd.checkAff("sensitivity") then string = left_crescent..snd.sep..string end
        if right_crescent ~= "" and snd.checkAff("sensitivity") then string = right_crescent..snd.sep..string end 
      end
      
    end
    
    -- prepend our affliction call, if we need one
    if snd.toggles.affcalling and not snd.target_gone then
      string = call .. snd.sep .. string
    end
    
    -- handle anti-spam and the actual attacking now
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bleed$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Revenant Group Dmg Stun (Get Vardrax Venom)</name>
								<script>if snd.class == "Revenant" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local physcount = 0
		for aff in pairs(snd.physical_affs) do
			if table.contains(snd.target_has, snd.physical_affs[aff]) then
				physcount = physcount + 1
			end
		end
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "wilave"
		local atdum = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			atdum = true -- yesssssss
		end
		-- set the affs we want to use
			snd.giving = {
      "clumsiness",
      "paresis",     
      "sensitivity",
      "left_leg_crippled",
      "right_leg_crippled",      
      "asthma",      
      "vomiting",
      "allergies",
      "sensitivity",
      "haemophilia",
      "slickness",

      --"anorexia",
      --"stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "extirpate"
		-- otherwise, see if we can impale
		elseif not snd.checkAff("writhe_impaled") and snd.proned() and snd.checkAff("sensitivity") and physcount &gt;= 4 and atdum then
			string = "chirography blade scribe left lawid "..snd.target..snd.sep.."chirography blade scribe right lawid "..snd.target..snd.sep.."chirography lurk "..snd.target..snd.sep.."transpierce "..snd.target
		elseif snd.balance.anguish and not snd.checksomeAffs({"deadening", "hearing"}, 2) then
      string = "DPL "..snd.target.." prefarar vardrax"..snd.sep.."anguish " ..snd.target
        
        else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "deceive "..snd.target.. " "..snd.rev_empower(tohit[1])
			elseif snd.used.rebounding then
				string = "DPL "..snd.target.." wasi "..snd.rev_empower(tohit[1])
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": wasi, "..tohit[1]..snd.sep
			elseif atdum then
				string = "blade scribe right atdum "..snd.target.." "..snd.rev_empower(tohit[1])..snd.sep.."DPL "..snd.target.." "..snd.rev_empower(tohit[3]).." "..snd.rev_empower(tohit[2])
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "DPL "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gdmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Revenant Group Dmg Stun (No Vardrax Venom)</name>
								<script>if snd.class == "Revenant" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local physcount = 0
		for aff in pairs(snd.physical_affs) do
			if table.contains(snd.target_has, snd.physical_affs[aff]) then
				physcount = physcount + 1
			end
		end
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "wilave"
		local atdum = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			atdum = true -- yesssssss
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 90 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 90 then
			iyedlo = true -- yesssssss      
		end
          
		end
		-- set the affs we want to use
			snd.giving = {
      "clumsiness",
      "paresis",     
      "sensitivity",
      "asthma",      
      "vomiting",
      "allergies",
      "sensitivity",
      "haemophilia",
      "slickness",
      "left_leg_crippled",
      "right_leg_crippled",
      --"anorexia",
      --"stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "extirpate"
		-- otherwise, see if we can impale
		elseif not snd.checkAff("writhe_impaled") and snd.proned() and snd.checkAff("sensitivity") and physcount &gt;= 4 and atdum then
			string = "chirography blade scribe left lawid "..snd.target..snd.sep.."chirography blade scribe right lawid "..snd.target..snd.sep.."chirography lurk "..snd.target..snd.sep.."transpierce "..snd.target
		elseif snd.balance.anguish and not snd.checkAff("hearing") then
      string = "DPL "..snd.target.." prefarar prefarar"..snd.sep.."anguish " ..snd.target
        
        else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "deceive "..snd.target.. " "..snd.rev_empower(tohit[1])
			elseif snd.used.rebounding then
				string = "DPL "..snd.target.." wasi "..snd.rev_empower(tohit[1])
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": wasi, "..tohit[1]..snd.sep
			elseif iyedlo then      
				string = "blade scribe iyedlo"..snd.sep.."DPL "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])..snd.sep   
      else
				string = "DPL "..snd.target.." "..snd.rev_empower(tohit[2]).." "..snd.rev_empower(tohit[1])
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
      end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gimp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Blender Alias (Wield a 2-handed)</name>
								<script>if snd.class == "Revenant" then
   snd.send("riving umbrage wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave wilave")
end
   
</script>
								<command></command>
								<packageName></packageName>
								<regex>^arc$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>limbs</name>
								<script>if snd.class == "Revenant" then
  snd.starting_attack()
  function snd.attack_function()
   if not snd.waiting.queue then
    local string = ""
    -- list what limbs to hit
    local limbs = {"left leg", "right leg", "left arm", "right arm"}
  	-- check if we can rupture now!
    local rupture = "none"
  	local atdum = false
  	local call = ""
    local left = "nothing"
  	local right = "nothing"
  
    for limb in ipairs(limbs) do
     if snd.limb_bruising[limbs[limb]] &gt;= 3 then
      rupture = limbs[limb]
     end
    end
    if rupture ~= "none" and not snd.used.shield then -- if rupture is go
     string = "lurk "..snd.target..snd.sep.."hemoclysm "..snd.target.." "..rupture
    else -- can't rupture, needs logic
     -- but can we atdum tho!
     if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
      atdum = true
  	 else
  	  atdum = false
  	 end

  	 if snd.proned() then -- focus legs hard on prone
  	  if snd.parried_limb == "right leg" then
  	   right = "left leg"
  	  elseif snd.parried_limb == "left leg" then
  	   right = "right leg"
  	  else
  	   right = "right leg"
  		 left = "left leg"
  	  end
  	 else -- target not prone
  	  for limb in pairs(limbs) do
  		 -- ignore last parried, last hit, and any limbs being resto'd
  	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
  		  -- if it's a leg that's about to break
  	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
  		   -- if we have atdum and can use it with impunity
  			 if atdum and not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
  			  if right == "nothing" then
  			   right = limbs[limb]
  			  elseif left == "nothing" then
  			   left = limbs[limb]
  			  end
  				-- otherwise leave the prepped leg alone!
  		   end
  			 -- if it's not a leg about to break, go for it
  		  elseif right == "nothing" then
  		   right = limbs[limb]
  	    elseif left == "nothing" and limbs[limb] ~= right then
  	     left = limbs[limb]
  		  end
  	   end
  	  end
  	 end
  	 if left == "nothing" then -- we only found one limb to hit
  	  left = right -- double up!
  	 end
  	 -- end limb picking logic
  	 -- on to attacking logic!
  	 if snd.used.shield and snd.used.rebounding then -- baddie is turtling
      string = "raze "..snd.target -- raze has static balance cost
  	 elseif snd.used.shield or snd.used.rebounding then
      string = "target nothing with left"..snd.sep.."target "..right.." with right"..snd.sep.."deceive "..snd.target.." lura"
  	 -- here's the tricky part, we're checking for optimal conditions
  	 -- we need atdum ready, a leg about to break, and resto poultice off balance
  	 elseif atdum and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
  	  if left == "left leg" then right = "right leg" end
  	  if left == "right leg" then right = "left leg" end
  	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."actuate right with adil"..snd.sep.."blade scribe right atdum "..snd.target..snd.sep.."dpl "..snd.target.." lura baludu"
  	 -- we could also meet the same conditions, but on the other limb we picked
  	 elseif atdum and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
  	  if right == "left leg" then left = "right leg" end
  	  if right == "right leg" then left = "left leg" end
  	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."actuate right with adil"..snd.sep.."blade scribe right atdum "..snd.target..snd.sep.."dpl "..snd.target.." baludu lura"
  	 else -- we can't do a Big Bad Break, run normal logic
  	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dpl "..snd.target.." lura lura"
     end
  	end
    if string ~= snd.last_attack and not snd.waiting.queue then
     snd.last_attack = string
     snd.attack(snd.last_attack)
     snd.waiting.queue = true
     tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
   end
  end
  snd.attack_function()
  snd.send("engage "..snd.target)
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>ice blast limbs</name>
								<script>if snd.class == "Revenant" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  -- list what limbs to hit
  local limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can rupture now!
  local rupture = "none"
	local atdum = false
	local call = ""
  local left = "nothing"
	local right = "nothing"
  
  for limb in ipairs(limbs) do
   if snd.limb_bruising[limbs[limb]] &gt;= 3 then
    rupture = limbs[limb]
   end
  end
  if rupture ~= "none" and not snd.used.shield then -- if rupture is go
   string = "lurk "..snd.target..snd.sep.."hemoclysm "..snd.target.." "..rupture
  else -- can't rupture, needs logic
   -- but can we atdum tho!
   if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
    atdum = true
	 else
	  atdum = false
	 end

	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 else -- target not prone
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- if we have atdum and can use it with impunity
			 if atdum and not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
			  if right == "nothing" then
			   right = limbs[limb]
			  elseif left == "nothing" then
			   left = limbs[limb]
			  end
				-- otherwise leave the prepped leg alone!
		   end
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 -- end limb picking logic
	 -- on to attacking logic!
	 if snd.used.shield and snd.used.rebounding then -- baddie is turtling
    string = "raze "..snd.target -- raze has static balance cost
	 elseif snd.used.shield or snd.used.rebounding then
    string = "target nothing with left"..snd.sep.."target "..right.." with right"..snd.sep.."deceive "..snd.target.." lura"
	 -- here's the tricky part, we're checking for optimal conditions
	 -- we need atdum ready, a leg about to break, and resto poultice off balance
	 elseif atdum and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
	  if left == "left leg" then right = "right leg" end
	  if left == "right leg" then right = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."actuate right with adil"..snd.sep.."blade scribe right atdum "..snd.target..snd.sep.."dpl "..snd.target.." lura baludu"
	 -- we could also meet the same conditions, but on the other limb we picked
	 elseif atdum and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
	  if right == "left leg" then left = "right leg" end
	  if right == "right leg" then left = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."actuate right with adil"..snd.sep.."blade scribe right atdum "..snd.target..snd.sep.."dpl "..snd.target.." baludu lura"
	 else -- we can't do a Big Bad Break, run normal logic
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dpl "..snd.target.." lura lura"
   end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lb$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Spirit Conversions</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Shaman</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Misc Aliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Surge</name>
								<script>if snd.class == "Shaman" then
	if matches[2] == "" then
		snd.attack("nature surge "..snd.target)
	else
 		snd.attack("nature surge "..matches[2])
	end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^nsu(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Pull</name>
								<script>if snd.class == "Shaman" then
  if matches[2] == "" then
    snd.attack("nature pull "..snd.target)
  else
    snd.attack("nature pull "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^np(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Displacement</name>
								<script>if snd.class == "Shaman" then
  if matches[2] == "" then
    snd.attack("nature displacement "..snd.target)
  else
    snd.attack("nature displacement "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dp(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Canopy</name>
								<script>if snd.class == "Shaman" then
  snd.attack("nature canopy")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^can$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Hinder</name>
								<script>if snd.class == "Shaman" then
  snd.attack("nature hinder")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^hin$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Screen</name>
								<script>if snd.class == "Shaman" then
  snd.attack("nature screen")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^scr$</regex>
							</Alias>
							<Alias isActive="no" isFolder="no">
								<name>Flow</name>
								<script>if snd.class == "Alchemist" then
  if matches[2] == "" then
    snd.attack("BOTANY WANDER "..snd.target)
  else
    snd.attack("BOTANY WANDER "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^flo(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Thorncoat</name>
								<script>if snd.class == "Shaman" then
  if matches[2] == "" then
    snd.attack("nature thorncoat me")
  else
    snd.attack("nature thorncoat "..matches[2])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^tco(.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Emerge</name>
								<script>if snd.class == "Shaman" then
  snd.attack("nature emerge")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^eme$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Blender</name>
								<script>if snd.class == "Shaman" then
  
  snd.starting_attack()
  function snd.attack_function()

  call = ""
  string = ""
  local energy = tonumber(gmcp.Char.Vitals.volatility)

  if not snd.waiting.queue then
  
    if snd.shamanpet ~= "wyvern" and snd.balance.morph then
      string = "familiar morph wyvern"..snd.sep.."order familiar follow me"..snd.sep
    end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") or snd.checkAff("dome") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
      elseif energy &gt;= 4 then
        string = string.."commune boost"..snd.sep.."COMMUNE CHAINLIGHTNING "..snd.target
      elseif energy &gt;= 3 then
        string = string.."COMMUNE CHAINLIGHTNING"..snd.target
      else
        string = string.."commune vinelash "..snd.target.." epteth"
      end
  
  end  
		

	if snd.toggles.affcalling and not snd.target_gone then
	  string = call..string
	end

  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^blender$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Damage</name>
								<script>if snd.class == "Shaman" then

  snd.giving = {
    "paresis",
    "clumsiness",
    "weariness",
    "asthma",
    "sensitivity",
    "recklessness",
    "allergies",
    "vomiting",
    "haemophilia",
    "slickness",
    "anorexia",
    "stupidity",
    "dizziness",
    "voyria",
		"left_leg_crippled",
		"right_leg_crippled",
    }
    
  snd.starting_attack()
  function snd.attack_function()

    string = ""
    call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
 
    if not snd.waiting.queue then
      venom = "none"
      for i in pairs(snd.giving) do
        if not table.contains(snd.target_has, snd.giving[i]) then
          if venom == "none" then
            venom = snd.effects[snd.giving[i]]
          end
        end
      end
      if venom == "none" then
        venom = "loki"
      end
    
      if snd.shamanpet ~= "serpent" and snd.balance.morph then
        string = "familiar morph serpent"..snd.sep.."order familiar follow me"..snd.sep
      end
    
      if not snd.fetishattuned then
        string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
      end
    
      if not snd.loyalsattacking then
        string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
      end

      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
      elseif not snd.checkAff("lifebane") and energy &gt;= 2 then
        if energy &gt;= 3 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE VITIATE "..snd.target
      elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
        if energy &gt;= 2 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE EFFUSION "..snd.target..snd.sep
      elseif snd.checkAff("sensitivity") and snd.checkAff("stormtouched") then
        if energy &gt;= 2 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE LIGHTNING "..snd.target   
      else
        if energy &gt;= 3 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."commune vinelash "..snd.target.." "..venom
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end		

		  if snd.toggles.affcalling and not snd.target_gone then
			  string = call..string
		  end
	
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Thorns</name>
								<script>if snd.class == "Shaman" then

snd.starting_attack()
function snd.attack_function()

  call = ""
  string = ""
  local energy = tonumber(gmcp.Char.Vitals.volatility)
  
  if not snd.waiting.queue then
  
    if snd.shamanpet ~= "cougar" and snd.balance.morph then
      string = "familiar morph cougar"..snd.sep.."order familiar follow me"..snd.sep
    end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
      elseif snd.proned() then
        string = string.."COMMUNE STRANGLE "..snd.target
    elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 then
      string = string.."commune boost"..snd.sep.."commune slam "..snd.target
    else
      if not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep
      elseif not snd.checkAff("haemophilia") then
        if energy &gt;= 3 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."commune vinelash "..snd.target.." hepafarin"
        call = "wt Afflicting "..snd.target..": hepafarin"..snd.sep 
      else
        if energy &gt;= 3 then
          string = string.."commune boost"..snd.sep
        end
        string = string.."commune vinelash "..snd.target.." prefarar"
        call = "wt Afflicting "..snd.target..": prefarar"..snd.sep 
      end
    end

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
  
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^thorns$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Aff Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Aff support</name>
								<script>if snd.class == "Shaman" then
  snd.giving = {
  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
  "stupidity",
  "weariness",
  "allergies",
  "vomiting",
  "haemophilia",
  "sensitivity",
  "recklessness",
  "dizziness",
  }
  

snd.starting_attack()
function snd.attack_function()

      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end

  call = ""
  string =""

  if not snd.waiting.queue then
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
  
    for i in pairs(snd.giving) do
      if not snd.checkAff(snd.giving[i]) and venom == "none" then
        venom = snd.effects[snd.giving[i]]
      end
    end
    if venom == "none" then
      venom = "epseth"
    end 
    
      if snd.shamanpet ~= "serpent" and snd.balance.morph then
        string = "familiar morph serpent"..snd.sep.."order familiar follow me"..snd.sep
      end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."commune boost"..snd.sep.."COMMUNE STATICBURST "..snd.target..snd.sep
    elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
      if energy &gt;= 4 and not snd.checkAff("hallucinations") then
        string = string.."commune boost"..snd.sep
      end
      string = string.."COMMUNE SPORULATION "..snd.target..snd.sep
    elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
      if energy &gt;= 4 and not snd.checkAff("blackout") then
        string = string.."commune boost"..snd.sep
      end
      string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep      
    else
      string = string.."commune vinelash "..snd.target.." "..venom
      call = "wt Afflicting "..snd.target..": "..venom..snd.sep
    end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Aff Reclamation</name>
								<script>if snd.class == "Shaman" then  

  snd.giving = {

  "paresis",
  "clumsiness",
  "asthma",
  "slickness",
  "anorexia",
  "stupidity",
  "weariness",
  "allergies",
  "vomiting",
  "haemophilia",
  "sensitivity",
  "recklessness",
  "dizziness",
  }
 
  snd.giving_prem = {

  "agoraphobia",
  "claustrophobia",
  "vertigo",
  "loneliness",
  "shyness",
  "paranoia",
  "superstition",
  "fear",
  
  }
  

snd.starting_attack()
function snd.attack_function()

      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end

  call = ""
  string =""

  if not snd.waiting.queue then
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
  
    for i in pairs(snd.giving) do
      if not snd.checkAff(snd.giving[i]) and venom == "none" then
        venom = snd.effects[snd.giving[i]]
      end
    end
    if venom == "none" then
      venom = "epseth"
    end 
  
    for i in pairs(snd.giving_prem) do
      if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
        prem = snd.giving_prem[i]
      end
    end
    if prem == "none" then
      prem = "loneliness"
    end 
    
      if snd.shamanpet ~= "serpent" and snd.balance.morph then
        string = "familiar morph serpent"..snd.sep.."order familiar follow me"..snd.sep
      end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
    
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
      elseif energy &lt; 3 then
        string = string.."commune vinelash "..snd.target.." "..venom..snd.sep
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      else
        if mentcount &gt; 3 then
          string = string.."shaman divulgence "..snd.target.." "..prem..snd.sep
          call = "wt Afflicting "..snd.target..": "..prem..snd.sep
        else
          if energy &gt; 2 then
            if not (snd.checkAff("impatience") or snd.checkAff("confusion")) then
              string = string.."COMMUNE SPORULATION "..snd.target..snd.sep
            elseif not snd.checkAff("stupidity") then
              string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep
            else
              string = string.."COMMUNE STATICBURST "..snd.target..snd.sep
            end
          end
        end
      end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rec$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Aff support</name>
								<script>if snd.class == "Shaman" then
snd.giving = {

"clumsiness",
"asthma",
"slickness",
"anorexia",
"stupidity",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()

	call = ""
  local boosting = false -- this is like templar vorpal
   if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true -- yesss
  end
	
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
	if venom == "none" then
	 venom = "epseth"
	end
  if snd.used.shield then
   string = "commune leafstorm "..snd.target
	elseif tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then
		if not snd.checkAff("impatience") and not snd.checkAff("confusion") then
			string = "commune sporulation "..snd.target
		elseif not snd.checkAff("paresis") and not snd.checkAff("stupidity") then
			string = "commune overload "..snd.target
		else
			string = "commune vinelash "..snd.target.." "..venom
	 		call = "wt Vinelash "..snd.target..": "..venom..snd.sep
		end	
  else
   string = "commune vinelash "..snd.target.." "..venom
	 call = "wt Vinelash "..snd.target..": "..venom..snd.sep
  end
	
	string = call..string
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^supp$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Limbs</name>
								<script>if snd.class == "Shaman" then

snd.starting_attack()
function snd.attack_function()

  call = ""
  string = ""
    local energy = tonumber(gmcp.Char.Vitals.volatility)
	
 if not snd.waiting.queue then
 
    if snd.shamanpet ~= "bear" and snd.balance.morph then
      string = "familiar morph bear"..snd.sep.."order familiar follow me"..snd.sep
    end
    
    if not snd.fetishattuned then
      string = string..snd.sep.."fetish attune "..snd.target..snd.sep 
    end
    
    if not snd.loyalsattacking then
      string = string..snd.sep.."order loyals kill "..snd.target..snd.sep 
    end
  
    if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."shaman premonition "..snd.target..snd.sep
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."commune reclamation " ..snd.target
      elseif snd.proned() then
        string = string.."commune strangle "..snd.target
    elseif not snd.proned() and energy &gt;= 3 then
      string = string.."commune  boost"..snd.sep.."commune slam "..snd.target
    elseif not snd.checksomeAffs({"left_leg_crippled", "right_leg_crippled"},2) then
      string = string.."commune vinelash "..snd.target.." epseth"
      call = "wt Afflicting "..snd.target..": epseth"..snd.sep 
    elseif not snd.checksomeAffs({"left_arm_crippled", "right_arm_crippled"},2) then
      string = string.."commune vinelash "..snd.target.." epteth"
      call = "wt Afflicting "..snd.target..": epteth"..snd.sep 
    else
      string = string.."commune vinelash "..snd.target.." ouabain"
      call = "wt Afflicting "..snd.target..": ouabain"..snd.sep 
    end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Normal)</name>
								<script>if snd.class == "Shaman" then

  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."commune boost"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."COMMUNE STATICBURST "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."commune efffusion "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."COMMUNE LIGHTNING "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and snd.cureset == "carnifex" then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."shaman omen "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."COMMUNE STRANGLE "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."commune boost"..snd.sep.."commune slam "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."COMMUNE SCOURGE "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."commune infest "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."COMMUNE SPINES "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."commune boost"..snd.sep.."COMMUNE STATICBURST "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE SPORULATION "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."shaman divulgence "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      else
        string = string.."commune vinelash "..snd.target.." "..venom
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."commune release "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "COMMUNE NATURALTIDE overload"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "COMMUNE NATURALTIDE infest"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "COMMUNE NATURALTIDE spines"..snd.sep
        end
      end     
      
      if snd.shamanpet == "" then
        string = "familiar summon serpent"..snd.sep.."order familiar follow me"..snd.sep..string
      end
    
      if snd.shamanpet ~= "serpent" and snd.balance.morph then
        string = "familiar morph serpent"..snd.sep.."order familiar follow me"..snd.sep
      end
    
      if not snd.fetishattuned then
        string = "fetish attune "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "familiar recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Arm)</name>
								<script>if snd.class == "Shaman" then

if not snd.checkAff("stormtouched") then

  snd.giving = {
    "left_arm_crippled",
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }

else

  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }
  
end
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."commune boost"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."COMMUNE STATICBURST "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."comme effusion "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."COMMUNE LIGHTNING "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and (snd.cureset == "carnifex" or snd.cureset == "templar") then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."shaman omen "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."COMMUNE STRANGLE "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."commune boost"..snd.sep.."commune slam "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."COMMUNE SCOURGE "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."commune infest "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."COMMUNE SPINES "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."commune boost"..snd.sep.."COMMUNE STATICBURST "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE SPORULATION "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."shaman divulgence "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      elseif not snd.checkAff("left_arm_crippled") or not snd.checkAff("right_arm_crippled") then
        string = string.."commune vinelash "..snd.target.." epteth"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": epteth"..snd.sep
      else
        string = string.."commune vinelash "..snd.target.." "..venom
        comingattack = "virulent"
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."commune release "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "COMMUNE NATURALTIDE overload"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "COMMUNE NATURALTIDE infest"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "COMMUNE NATURALTIDE spines"..snd.sep
        end
      end      
      
      if snd.shamanpet == "" then
        string = "familiar summon serpent"..snd.sep.."order familiar follow me"..snd.sep..string
      end
    
      if snd.shamanpet ~= "serpent" and snd.balance.morph then
        string = "familiar morph serpent"..snd.sep.."order familiar follow me"..snd.sep
      end
    
      if not snd.fetishattuned then
        string = "fetish attune "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Omen Kill (Cougar)</name>
								<script>if snd.class == "Shaman" then

  snd.giving = {
    "paresis",
    "clumsiness",
    "asthma",
    "slickness",
    "anorexia",
    "shyness",
    "sensitivity",
    "vomiting",
    "stupidity",
    "weariness",
    "allergies",
    "haemophilia",
    "recklessness",
    "dizziness",
    "voyria", 
		"left_leg_crippled",
		"right_leg_crippled",
  }
  
  snd.giving_prem = {
    "agoraphobia",
    "claustrophobia",
    "vertigo",
    "loneliness",
    "shyness",
    "paranoia",
    "superstition",
    "fear",
  }

  snd.starting_attack()
  function snd.attack_function()

    call = ""
    string =""
    local venom = "none"
    local prem = "none"
    local energy = tonumber(gmcp.Char.Vitals.volatility)
    local comingattack = "none"

    local anticount = 0 
    for aff2 in pairs(snd.cures.antipsychotic) do
      if table.contains(snd.target_has, snd.cures.antipsychotic[aff2]) then
        anticount = anticount + 1
      end
    end

    local euphcount = 0 
    for aff3 in pairs(snd.cures.euphoriant) do
      if table.contains(snd.target_has, snd.cures.euphoriant[aff3]) then
        euphcount = euphcount + 1
      end
    end
      
    local mentcount = 0 
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mentcount = mentcount + 1
      end
    end
    
    local hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp) 

    if not snd.waiting.queue then
    
      local venom = "none"
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) and venom == "none" then
          venom = snd.effects[snd.giving[i]]
        end
      end
      if venom == "none" then
        venom = "epseth"
      end
  
      for i in pairs(snd.giving_prem) do
        if not snd.checkAff(snd.giving_prem[i]) and prem == "none" then
          prem = snd.giving_prem[i]
        end
      end
      
      if snd.flying then
        string = string.."touch tentacle "..snd.target..snd.sep
        comingattack = "tentacle"
      elseif snd.used.shield or snd.checkAff("barrier") then
        string = string.."commune leafstorm "..snd.target..snd.sep
        comingattack = "corrosive"
      elseif snd.theyran then
        string = string.."nature pull "..snd.target
        comingattack = "allure"    
      elseif snd.instakilltarget == snd.target then
        string = string.."commune vinelash "..snd.target.." curare"
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": curare"..snd.sep
      elseif snd.diffuseneeded then
        string = string.."NATURE EMERGENCE"
        comingattack = "diffuse"
      elseif snd.blightneeded then
        string = string.."NATURE OVERGROWTH"
        comingattack = "blight"      
      elseif not snd.checkAff("dread") and snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 4) then
        string = string.."SHAMAN PREMONITION "..snd.target..snd.sep
        comingattack = "prognosis"
      elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.my_dread then
        string = string.."COMMUNE RECLAMATION " ..snd.target
        comingattack = "discorporate"
      elseif snd.incomingomen then
        if energy &gt;= 2 then
          string = string.."commune boost"..snd.sep
        end         
        if energy &gt;= 4 and not snd.currentsactive then
          string = string.."COMMUNE STATICBURST "..snd.target..snd.sep
          comingattack = "currents"
        elseif not snd.checksomeAffs({"hearing", "sensitivity"}, 1) then
          string = string.."commune effusion "..snd.target..snd.sep
          comingattack = "rousing"
        else
          string = string.."COMMUNE LIGHTNING "..snd.target..snd.sep
          comingattack = "static"
        end
      elseif not snd.quills and not snd.quillsused then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif not snd.quills and hp &lt; 40 and snd.cureset == "carnifex" then
        string = "nature thorncoat me"..snd.sep
        comingattack = "quills"
      elseif snd.checksomeAffs({"blighted", "infested", "stormtouched", "paranoia"}, 3) and not snd.incomingomen then
        string = string.."shaman omen "..snd.target.." in 8"..snd.sep
        comingattack = "causality"
      elseif snd.proned() and not snd.checkAff("writhe_vines") and snd.thorncount &gt;= 3 then
        string = string.."COMMUNE STRANGLE "..snd.target..snd.sep
        comingattack = "asphyxiant"
      elseif not snd.proned() and energy &gt;= 3 and snd.thorncount &gt;= 3 and not snd.checkAff("writhe_vines") then
        string = string.."commune boost"..snd.sep.."commune slam "..snd.target
        comingattack = "upset"
      elseif not snd.checkAff("vitalbane") and energy &gt;= 2 then
        string = string.."COMMUNE SCOURGE "..snd.target..snd.sep
        comingattack = "malignant"
      elseif euphcount &gt;= 2 and not snd.checkAff("infested") then
        string = string.."commune infest "..snd.target..snd.sep
        comingattack = "infiltrative"
      elseif anticount &gt;= 2 and not snd.checkAff("blighted") then
        string = string.."COMMUNE SPINES "..snd.target..snd.sep
        comingattack = "pathogen"
      elseif energy &gt;= 4 and not snd.currentsactive then
        string = string.."commune boost"..snd.sep.."COMMUNE STATICBURST "..snd.target..snd.sep
        comingattack = "currents"
      elseif not snd.checksomeAffs({"impatience","confusion"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("hallucinations") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE SPORULATION "..snd.target..snd.sep
        comingattack = "neurotic"
      elseif not snd.checksomeAffs({"paresis","stupidity"}, 1) and energy &gt;= 3 then
        if energy &gt;= 4 and not snd.checkAff("blackout") then
          string = string.."commune boost"..snd.sep
        end
        string = string.."COMMUNE OVERLOAD "..snd.target..snd.sep
        comingattack = "electroshock"
      elseif not snd.checkAff("paranoia") and snd.checkAff("hallucinations") and mentcount &gt; 3 then
        string = string.."shaman divulgence "..snd.target.." paranoia"
        comingattack = "hallucinogen"
      else
        string = string.."commune vinelash "..snd.target.." "..venom
        comingattack = "virulent"
        call = "wt Afflicting "..snd.target..": "..venom..snd.sep
      end
      
      if snd.alchemystored ~= "" then
        string = string..snd.sep.."commune release "..snd.target..snd.sep
      end
      
      if snd.alchemystored == "" then
        if not snd.checksomeAffs({"paresis","stupidity"}, 1) and comingattack ~= "electroshock" and comingattack == "neurotic" then
          string = "COMMUNE NATURALTIDE overload"..snd.sep
        elseif not snd.checkAff("infested") and comingattack ~= "infiltrative" and euphcount &gt;= 3 then
          string = "COMMUNE NATURALTIDE infest"..snd.sep
        elseif not snd.checkAff("blighted") and comingattack ~= "pathogen" and anticount &gt;= 3 then
          string = "COMMUNE NATURALTIDE spines"..snd.sep
        end
      end      
      
      if snd.shamanpet == "" then
        string = "familiar summon cougar"..snd.sep.."order familiar follow me"..snd.sep..string
      end
  
      if snd.shamanpet ~= "lacerating" and snd.balance.morph then
        string = "familiar morph cougar"..snd.sep.."order familiar follow me"..snd.sep..string
      end
    
      if not snd.fetishattuned then
        string = "fetish attune "..snd.target..snd.sep..string
      end
          
      if snd.nopets then
        string = "experiment recall".."order loyals kill "..snd.target..snd.sep..string
      elseif not snd.loyalsattacking then
        string = "order loyals kill "..snd.target..snd.sep..string
      end
      

		  if snd.toggles.affcalling and not snd.target_gone then
			   string = call..string
		  end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll3$</regex>
							</Alias>
						</AliasGroup>
						<Alias isActive="yes" isFolder="no">
							<name>Takk</name>
							<script>if snd.class == "Shaman" then
snd.giving = {
"shyness",
"paresis",
"stupidity",
"clumsiness",
"weariness",
"asthma",
"sensitivity",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"anorexia",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()

    local command = ""
    local call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.energy)
--local boosting = false -- this is like templar vorpal
-- if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true -- yesss
-- end
    
    
          local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
      
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
    if venom == "none" then
     venom = "epseth"
    end
      Divulge = {"superstition", "loneliness", "shyness", "agoraphobia", "claustrophobia", "vertigo", "paranoia",}
local phobia = ""
for _, aff in ipairs(Divulge) do
  if not snd.checkAff(aff) then
    phobia = aff
    break
  end
end
  if snd.used.shield then
   command = "commune leafstorm "..snd.target
        elseif snd.checksomeAffs({"fear, agoraphobia, claustrophobia, vertigo, loneliness, shyness, paranoia, superstition"}, 5) and snd.checkAff("dread") then
        command = "commune reclamation "..snd.target
      elseif not NaturalTide and not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune naturaltide overload"
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 and not snd.checkAff("stupidity") then
        command = "wt Afflicting "..snd.target..": hallucinations"..snd.sep.. "Commune boost"..snd.sep.."commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 then
        command = "wt Afflicting "..snd.target..": hallucinations"..snd.sep.. "Commune boost"..snd.sep.."commune sporulation "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") then
        command = "commune sporulation "..snd.target
      --elseif not snd.checkAff("lifebane") then
        --command = "shaman vitiate "..snd.target    -- Probably need to move this up, only apply it once they'll be hit by an Omen?
                                                     -- You know, when they'l actually start taking some chunkier nukes
      elseif not snd.checkAff("dread") and snd.checkAff("impatience") then
        command = "shaman premonition "..snd.target
      elseif mentcount == 3 and snd.checkAff("impatience")  then 
        command = "wt Afflicting "..snd.target..": "..phobia..snd.sep.. "Shaman Divulgence "..snd.target.. " " .. phobia
        else
            command = "commune vinelash "..snd.target.." "..venom
             --call = "wt Vinelash "..snd.target..": "..venom..snd.sep
  end
    
    command = "fetish attune "..snd.target..snd.sep.."order familiar kill "..snd.target..snd.sep.."fetish attune "..snd.target..snd.sep..call..snd.sep..command
    
  if command ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = command
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^takk$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Takk2</name>
							<script>if snd.class == "Shaman" then
snd.giving = {
"shyness",
"paresis",
"stupidity",
"clumsiness",
"weariness",
"asthma",
"sensitivity",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"anorexia",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",


}
snd.starting_attack()
function snd.attack_function()

          local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
    local command = ""
    local call = ""
    local venom = "none"
    local energy = tonumber(gmcp.Char.Vitals.energy)
local boosting = false 
 if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true
 end
    
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
    if venom == "none" then
     venom = "epseth"
    end
      Divulge = {"paranoia"}
      -- "vertigo", "claustrophobia", "shyness", "superstition", "agoraphobia", "loneliness", 
       -- leaving those here, disabled, since I probably just want paranoia for Omen
local phobia = ""
for _, aff in ipairs(Divulge) do
  if not snd.checkAff(aff) then
    phobia = aff
    break
  end
end
   if snd.used.shield then
   command = "commune leafstorm "..snd.target
  elseif not snd.incomingomen and snd.checksomeAffs({"spines", "blighted", "infested", "stormtouched"}, 3) then
        command = "shaman omen "..snd.target
          elseif snd.checkAff("stormtouched") and snd.incomingomen and energy &gt;= 4 then
          command = "commune boost"..snd.sep.."commune staticburst "..snd.target
          -- Yeah, okay, no. This didn't work, Takk. Ya newb. Might be fun to include.
          -- Might add a 'If Omen is inbound, and they have Stormtouched, go spam DMG with boosted Lightning, though that might give them time to
          -- clean up the other affs and just kill any momentum of mine, future testing needed
          
          --command = "shaman vitiate "..snd.target    -- Moved this up, not sure I like it here, and want it to only apply it once they'll be hit by an Omen?
                                                       -- You know, when they'l actually start taking some chunkier nukes
                                                       -- Just worried it's a bit too slow for what it really does, prolly better in groups
          
       elseif not snd.checkAff("vitalbane") then 
        command = "commune scourge "..snd.target  -- highly essential
      elseif not NaturalTide and not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune naturaltide overload"
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 and not snd.checkAff("stupidity") then
        command = "commune boost"..snd.sep.."commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("hallucinations") and energy &gt; 0 then
        command = "commune boost"..snd.sep.."commune sporulation "..snd.target
      elseif not snd.checkAff("impatience") and not snd.checkAff("stupidity") then
        command = "commune sporulation "..snd.target..snd.sep.."commune release "..snd.target
      elseif not snd.checkAff("impatience") then
        command = "commune sporulation "..snd.target
      elseif not snd.checkAff("dread") and snd.checkAff("impatience") then  -- Moved Up
        command = "shaman premonition "..snd.target  -- Think this really needs to be higher up, I want it to lock Blighted/Infested, right?
      elseif not snd.checkAff("blighted") then
        command = "commune spines "..snd.target
      elseif not snd.checkAff("infested") then
        command = "commune infest "..snd.target
        --Prem Was Here Before
      elseif mental_count(3) and snd.checkAff("impatience") and not snd.checkAff("paranoia") then 
        command = "shaman divulgence "..snd.target.. " paranoia" 
        -- is 'and not snd.checkAff("paranoia") overkill given that I only have it in my table? 
      elseif energy &gt;= 2 then
            command = "commune boost"..snd.sep.."commune vinelash "..snd.target.." "..venom
        else
            command = "commune vinelash "..snd.target.." "..venom
  end
    
      command = "fetish attune "..snd.target..snd.sep.."order familiar kill "..snd.target..snd.sep.."fetish attune "..snd.target..snd.sep..command
    
  if command ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = command
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^takk2$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Templar</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Wielding</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>wield zeal</name>
								<script>if snd.class == "Templar" then
snd.send("quickwield both warhammer")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wzl$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield limbs</name>
								<script>if snd.class == "Templar" then
snd.send("quickwield both mace mace.2")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wlb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield longswords</name>
								<script>if snd.class == "Templar" then
snd.send("quickwield both longsword longsword.2")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wls$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>wield damage</name>
								<script>if snd.class == "Templar" then
snd.send("quickwield both bastard")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^wdmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Righteousness</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>deliver</name>
								<script>if snd.class == "Templar" then
snd.send("qeb get monolith"..snd.sep.."aura deliverance "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^del (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>resurrection</name>
								<script>if snd.class == "Templar" then
if snd.toggles.attacking then snd.toggle("attacking") end
snd.send("qeb aura resurrection "..matches[2])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^rez (\w+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>pilgrimage</name>
								<script>if snd.class == "Templar" then
  if snd.toggles.attacking then snd.toggle("attacking") end
  if snd.toggles.bashing then snd.toggle("bashing") end
  if snd.toggles.fasthunt then snd.toggle("fasthunt") end
  if snd.have_aff("paresis") then
   snd.send("firstaid elevate paresis")
  end
  snd.send("undefend")
  snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."aura pilgrimage")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^pilg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>latency</name>
								<script>if snd.class == "Templar" then
  if snd.toggles.attacking then snd.toggle("attacking") end
  if snd.toggles.bashing then snd.toggle("bashing") end
  if snd.toggles.fasthunt then snd.toggle("fasthunt") end
  if snd.have_aff("paresis") then
   snd.send("firstaid elevate paresis")
  end
  snd.send("undefend")
  snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."aura pilgrimage aura")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^pil$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>retribution stack</name>
								<script>--Meat and potatoes for 1v1, this is a classic vlock followed by
--retri finisher. Good for whales.
if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- let's determine how many affs we are away from locking
		
		local vorpal = false -- can we use vorpal?

		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end

		if snd.target_locked() then
			snd.giving = {
			"left_leg_crippled",
			"right_leg_crippled",
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			"clumsiness",
			"weariness",
			}
		else
		-- and this one if they're not
			snd.giving = {
			"conviction",
			"asthma",
			"clumsiness",
			"paresis",
			"slickness",
			"stupidity",
			"anorexia",
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			--deathblow!
			"weariness",
			"haemophilia",
			"allergies",
			"sensitivity",
			"vomiting",
			"recklessness",
			"dizziness"
			}
		end
		-- first and foremost, check if we can retri!
		if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
			string = "retribution "..snd.target
    else -- if not...
			-- see if we can lock this round, in any of three possible ways
      local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
			if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 1 and not snd.used.shield then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ret$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>legs</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "hemorrhage" 
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 100 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 100 then
			iceblast = true
		end
		-- set the affs we want to use
			snd.giving = {
			"left_arm_crippled",
			"right_arm_crippled",    
			"left_leg_crippled",
			"right_leg_crippled",
      "stupidity",
			"anorexia",
			"slickness",
			"asthma",
			"paresis",
      "clumsiness",
      "weariness",
			}
			
		-- pick affs from the list above
		for i in pairs(snd.giving) do
			-- make sure not to double up paresis and paralysis
			if not snd.checkAff(snd.giving[i]) then
				-- and don't add an aff we've already got in the list!
				if not table.contains(touse, snd.giving[i]) then
					table.insert(touse, snd.giving[i])
				end
			end
		end
			
		-- first and foremost, check if we can retri!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		elseif snd.proned() and not snd.checkAff("writhe_impaled") then 
			string = "penance "..snd.target..snd.sep.."impale "..snd.target
		else 
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif iceblast then
				string = "blade release right iceblast "..snd.target..snd.sep.."blade release left iceblast "..snd.target..snd.sep.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lgs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>impale mode</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local physcount = 0
		for aff in pairs(snd.physical_affs) do
			if table.contains(snd.target_has, snd.physical_affs[aff]) then
				physcount = physcount + 1
			end
		end
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- set the affs we want to use
			snd.giving = {
      "paresis",
      "clumsiness",
      "asthma",
      "sensitivity",
      "vomiting",
      "allergies",
      "haemophilia",
      "slickness",
      "left_leg_crippled",
			"right_leg_crippled",
      "anorexia",
      "stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("writhe_impaled") and snd.proned() and snd.checkAff("sensitivity") and physcount &gt;= 4 and vorpal then
			string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep.."penance "..snd.target..snd.sep.."impale "..snd.target
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif vorpal then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^im$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>newbie mode</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- set the affs we want to use
			snd.giving = {
      --"oculus",
      "paresis",
      "clumsiness",
      "asthma",
      "sensitivity",
      "vomiting",
      "allergies",
      "haemophilia",
      "slickness",
      "anorexia",
      "stupidity",
      "recklessness",
      "weariness",
      "dizziness",
      "voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("writhe_impaled") and snd.proned() and not snd.checksomeAffs({"writhe_thighlock", "writhe_necklock", "writhe_armpitlock"}, 1) then
			string = "impale "..snd.target
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>senti mode</name>
								<script>if snd.class == "Templar" then
  snd.starting_attack()

  function snd.attack_function()
    if not snd.waiting.queue then
      local string = ""
      local call = ""
      local touse = {}
      local tohit = {}
      local extraaff = "sacrifice"
      if snd.checksomeAffs({"asthma", "slickness"}, 2) and snd.checksomeAffs({"weariness", "clumsiness", "hypochondria", "baldness"}, 1) then
        snd.giving = {            
            "left_leg_crippled",
			      "right_leg_crippled",
            "asthma",
            "weariness",
            "clumsiness",
            "stupidity",
            "recklessness",
            "vomiting",
            "allergies",
            "haemophilia",
            "dizziness",} 
      else
        snd.giving =
          {
            "asthma",
            "weariness",
            "clumsiness",
            "slickness",
            "left_leg_crippled",
			      "right_leg_crippled",
            "stupidity",
            "recklessness",
            "vomiting",
            "allergies",
          }
      end
      for i in pairs(snd.giving) do
        if not snd.checkAff(snd.giving[i]) then
          if not table.contains(touse, snd.giving[i]) then
            table.insert(touse, snd.giving[i])
          end
        end
      end

      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end

      while #tohit &lt; 3 do
        table.insert(tohit, extraaff)
      end
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
      else
        string = "dsk " .. snd.target .. " " .. tohit[2] .. " " .. tohit[1]
        call = "wt Afflicting " .. snd.target .. ": " .. tohit[2] .. ", " .. tohit[1] .. snd.sep
      end

      if snd.toggles.affcalling and not snd.target_gone then
        string = call .. string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^sent$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>retri but its legit only retri lmao</name>
								<script>--Meat and potatoes for 1v1, this is a classic vlock followed by
--retri finisher. Good for whales.
if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- let's determine how many affs we are away from locking
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- we're going to use a different affliction stack if the target is locked
		if snd.target_locked() then
			snd.giving = {
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			"sensitivity",
			"clumsiness",
			"weariness",
			}
		else
		-- and this one if they're not
			snd.giving = {
			"conviction",
			"crippled",
			"mental_disruption",
			"physical_disruption",
			"crippled_body",
			--deathblow!
			"weariness",
			"haemophilia",
			"allergies",
			"sensitivity",
			"vomiting",
			"recklessness",
			"dizziness"
			}
		end
		-- first and foremost, check if we can retri!
		if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
			string = "retribution "..snd.target
		else -- if not...
			-- see if we can lock this round, in any of three possible ways
			if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 1 and not snd.used.shield then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^cheese$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>damage</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = ""
		if snd.used.rebounding or snd.used.shield then
			string = "razestrike "..snd.target
		elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 then
			string = "blade release left crescent "..snd.target
    end
			string = string..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."dsk "..snd.target
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Group Impale</name>
								<script>-- Hello. This route requires a warhammer, as well as you setting up what type of weapon you're using.
-- There is a variable in the script 'PvP variables', which you need to change to be whatever weapon you use.
-- We need this so we can switch to a warhammer/switch back at will without having to put in lots of
-- weird checks to see what kind of weapon you use. Templar has many!

if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal? set to false until we check
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end

    local wield = ""
		if not string.find(gmcp.Char.Vitals.wield_left, snd.templar_weapon_one) then 
      wield = "quickwield left "..snd.templar_weapon_one
      if not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_two) then 
        wield = wield..snd.sep.."quickwield right "..snd.templar_weapon_two..snd.sep 
      end
    elseif not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_two) then 
      wield = "quickwield right "..snd.templar_weapon_two..snd.sep 
    end

    
		-- set the affs we want to use
     snd.giving = {
      "sight",
		  "paresis",
	    "sensitivity",
			"asthma",
      "vomiting",
      "allergies",
      "slickness",
			"left_leg_crippled",
			"right_leg_crippled",
      "anorexia",
      "stupidity",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("writhe_impaled") and snd.proned() and snd.checkAff("sensitivity") then
				string = "penance "..snd.target..snd.sep.."impale "..snd.target
		elseif snd.checkAff("writhe_impaled") and snd.checkAff("sensitivity") then
				string = "penance "..snd.target..snd.sep.."relax grip"..snd.sep.."quickwield both warhammer"..snd.sep.."grip"..snd.sep.."dsw "..snd.target.." sacrifice sacrifice"		
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			if string.find(string, "impale") or string.find(string, "dsw") and vorpal then -- Do we have vorpal and are we finishing someone off?
					string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep..string
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		
		--check if we need to re-wield our speed weps
		if wield ~= "" then string = wield..snd.sep..string end
		
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gimp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Group Aff - Requires 1 Luminary</name>
								<script>-- Hello. This route requires a warhammer, as well as you setting up what type of weapon you're using.
-- There is a variable in the script 'PvP variables', which you need to change to be whatever weapon you use.
-- We need this so we can switch to a warhammer/switch back at will without having to put in lots of
-- weird checks to see what kind of weapon you use. Templar has many!

if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal? set to false until we check
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
   
    local wield = ""
		if not string.find(gmcp.Char.Vitals.wield_left, snd.templar_weapon_one) then 
      wield = "quickwield left "..snd.templar_weapon_one
      if not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_two) then 
        wield = wield..snd.sep.."quickwield right "..snd.templar_weapon_two..snd.sep 
      end
    elseif not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_two) then 
      wield = "quickwield right "..snd.templar_weapon_two..snd.sep 
    end
    
    -- set the affs we want to use
		snd.giving = {
			"paresis",
			"asthma",
			"weariness",
			"sight",
			"sensitivity",
			"slickness",
			"anorexia",
			"stupidity",
			"left_leg_crippled",
			"right_leg_crippled",
			"clumsiness",
			"haemophilia",
			"allergies",
			"vomiting",
			"recklessness",
			"dizziness"
      }
		-- Since we're with a Luminary, we're banking on them using the Penance proc on overwhelm to instantly kill someone. Deleted!
		if snd.checkAff("writhe_transfix") and snd.checkAff("sensitivity") then
			if  snd.health_percent &lt;= 75 then
				string = "penance "..snd.target
			else -- Okay, their health isn't low enough to kill them straight out. Let's just make sure we hit them some more.
				string = "penance "..snd.target..snd.sep.."relax grip"..snd.sep.."quickwield both warhammer"..snd.sep.."grip"..snd.sep.."dsw "..snd.target.." sacrifice sacrifice"		
				if vorpal then
					string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep..string
				end
			end
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield and snd.used.rebounding then
				string = "razestrike "..snd.target.." blaze"
			elseif snd.used.rebounding or snd.used.shield then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^gaff$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Bleed/Hemm</name>
								<script>if snd.class == "Templar" then
  snd.starting_attack()

  function snd.attack_function()
    local string = ""-- we'll load this with our attack string
    local call = ""  -- and this with our affliction call
    
                     -- next, the afflictions we want to give
    local touse = {}
    local tohit = {}
    local extraaff = "hemorrhage" -- and in case we don't find enough of them
    
    local left_crescent = ""
    if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 85 then left_crescent = "blade release left crescent "..snd.target end
    
    local right_crescent = "" 
    if tonumber(gmcp.Char.Vitals.charge_right) &gt;= 85 then right_crescent = "blade release right crescent "..snd.target end

    
    if not snd.waiting.queue then
      
      snd.giving = {   -- set the affs we want to use
      "hearing", 
      --"haemophilia", 
      "clumsiness",
      "sensitivity"}
       
      -- We really only care about the sensitivity/haemophilia
      -- If they have both, go straight into damage
      if snd.checksomeAffs({"haemophilia", "sensitivity"}, 2) then
        table.insert(touse, "hemorrhage")
        table.insert(touse, "hemorrhage")
        
      else
        -- If that condition isn't met, pick affs from the list above
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            -- Don't add an aff we've already got in the list!
            if not table.contains(touse, snd.giving[i]) then
              table.insert(touse, snd.giving[i])
            end
          end
        end
      end
      
      -- now let's convert affs to venoms/empowerments
      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end
      
      -- if we didn't find enough stuff to hit with, stick in hemorrhage.
      while #tohit &lt; 3 do
        table.insert(tohit, extraaff)
      end

      if (snd.used.shield and snd.used.rebounding) then -- Double barrier, try to break through both with rsk/blaze.
        string = "razestrike " .. snd.target .. " blaze"
        
      elseif (snd.used.shield or snd.used.rebounding) then -- One layer of barrier, rsk w/venom.
        string = "razestrike " .. snd.target .. " " .. tohit[1]
        call = "wt Afflicting " .. snd.target .. ": " .. tohit[1]
        
      else -- Send 2 hits with venoms/empowerments
        string = "dsk " .. snd.target .. " " .. tohit[2] .. " " .. tohit[1]
        call = "wt Afflicting " .. snd.target .. ": " .. tohit[2] .. ", " .. tohit[1]
        
        if left_crescent ~= "" and snd.checkAff("sensitivity") then string = left_crescent..snd.sep..string end
        if right_crescent ~= "" and snd.checkAff("sensitivity") then string = right_crescent..snd.sep..string end 
      end
      
    end
    
    -- prepend our affliction call, if we need one
    if snd.toggles.affcalling and not snd.target_gone then
      string = call .. snd.sep .. string
    end
    
    -- handle anti-spam and the actual attacking now
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bleed$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Limb Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>limbs</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  -- list what limbs to hit
  local limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can rupture now!
  local rupture = "none"
	local vorpal = false
	local call = ""
  
  for limb in ipairs(limbs) do
   if snd.limb_bruising[limbs[limb]] &gt;= 3 then
    rupture = limbs[limb]
   end
  end
  
  if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
    vorpal = true
  else
    vorpal = false
  end
  
  if rupture ~= "none" and not snd.used.shield then -- if rupture is go
   string = "penance "..snd.target..snd.sep.."rupture "..snd.target.." "..rupture
  else -- can't rupture, needs logic
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.proned() then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg" 
		 left = "left leg"
	  end
	 else -- target not prone
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.templar_last_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- if we have vorpal and can use it with impunity
			 if vorpal and not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
			  if right == "nothing" then
			   right = limbs[limb]
			  elseif left == "nothing" then
			   left = limbs[limb]
			  end
				-- otherwise leave the prepped leg alone!
		   end
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" and snd.limb_dmg[limbs[limb]] &lt; 70 then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right and snd.limb_dmg[limbs[limb]] &lt; 70 then
	     left = limbs[limb]
		  end
	   end
	  end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 -- end limb picking logic
	 -- on to attacking logic!
	 if snd.used.shield and snd.used.rebounding then -- baddie is turtling
    string = "razestrike "..snd.target.." blaze"
	 elseif snd.used.shield or snd.used.rebounding then
    string = "target nothing with left"..snd.sep.."target "..right.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
	 -- here's the tricky part, we're checking for optimal conditions
	 -- we need vorpal ready, a leg about to break, and resto poultice off balance
	 elseif vorpal and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
	  if left == "left leg" then right = "right leg" end
	  if left == "right leg" then right = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." trauma numbing"
	 -- we could also meet the same conditions, but on the other limb we picked
	 elseif vorpal and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
	  if right == "left leg" then left = "right leg" end
	  if right == "right leg" then left = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." numbing trauma"
	 else -- we can't do a Big Bad Break, run normal logic
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dsk "..snd.target.." trauma trauma"
   end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^limbs$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>ice blast limbs</name>
								<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  local limbs = {"left leg", "right leg", "left arm", "right arm"}
  local left = "nothing"
  local right = "nothing"
	local vorpal = false
	local rupture = "none"
	if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
	 vorpal = true
	else
	 vorpal = false
	end
	if table.contains(snd.target_has, "frozen") then
	 if snd.limb_dmg["left leg"] &gt;= snd.limb_dmg["right leg"] then
	  left = "left leg"
		right = "left leg"
	 else
	  left = "right leg"
		right = "right leg"
	 end
	else
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb then
	   if right == "nothing" then
	    right = limbs[limb]
	   elseif left == "nothing" and limbs[limb] ~= right and limbs[limb] ~= snd.last_hit_limb then
	    left = limbs[limb]
		 end
	  end
	 end
	end
  for limb in ipairs(limbs) do
	 if snd.limb_bruising[limbs[limb]] &gt;= 3 then
	  rupture = limbs[limb]
	 end
  end
  if snd.used.shield and snd.used.rebounding then
   string = "razestrike "..snd.target .." blaze"
	elseif snd.used.shield then
	 string = "target nothing with left"..snd.sep.."target "..left.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
  elseif rupture ~= "none" then
	 string = "penance "..snd.target..snd.sep.."rupture "..snd.target.." "..rupture
	elseif snd.used.rebounding then
   string = "target nothing with left"..snd.sep.."target "..left.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
	elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and not table.contains(snd.target_has, "frozen") then
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."blade release left iceblast "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	elseif tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 and not table.contains(snd.target_has, "frozen") then
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."blade release right iceblast "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	elseif vorpal then
	 string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	else
   string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dsk "..snd.target.." trauma trauma"
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^lb$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="no" isFolder="no">
								<name>Test (Irra Original)</name>
								<script>-- aura protection/healing, blessing of the other plus redemption, cleansing, or meditation
if snd.class == "Templar" then
  snd.starting_attack()
  function snd.attack_function()
    if not snd.waiting.queue then
      local pet_classes = {"sentinel", "carnifex", "praenomen", "teradrim", "indorani", "luminary"}
      local string = "wipe left"..snd.sep.."wipe right"..snd.sep -- we'll load this with our attack string
      local call = "" -- and this with our affliction call
      local touse = {}
      local tohit = {}
      local todiscord = ""
      local togouge = {}
      local extraaff = "asthma"      
      local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
      
      local iyedlo = false
      if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 90 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 90 then
        iyedlo = true   
      end
      
      local lightning = false
      if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 90 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 90 then
        if not snd.checkAff("epilepsy") and not table.isMember(gmcp.Room.Info.details, "indoors") then
          lightning = true
        end
      end
      
      local vorpal = false
      if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
        vorpal = true
      end
      --should we lightning? blastwave with epilepsy, to strip deafness? Then use battlecry on physical and epilepsy
      --vorpal asthma, content confusion, rending clumsiness
      
      local discordAffs = {
        "paresis",
        "stupidity",
        -- "confusion",
        }
        
      if snd.target_locked() then
        snd.giving = {
        "crippled",
        "mental_disruption",
        "physical_disruption",
        "crippled_body",
        "sensitivity",
        "clumsiness",
        "weariness",
        }
      elseif not snd.can_arms() then
        snd.giving = {
        "conviction",
        "clumsiness",
        "asthma",		
        "slickness",
        "stupidity",
        "anorexia",
        "crippled",
        "mental_disruption",
        "physical_disruption",
        "crippled_body",
        "weariness",
        "haemophilia",
        "allergies",
        "sensitivity",
        "vomiting",
        "recklessness",
        "dizziness"
        }
      elseif snd.timer_check("fitness", .2, "more than") and not snd.target_locked() then
		    snd.giving = {
          "allergies",
		      "asthma",
		      "paresis",
		      "slickness",
		      "anorexia",
		      "stupidity",
		      "crippled",
          "mental_disruption",
          "physical_disruption",
          "crippled_body",
          "weariness",
		      "dizziness",
		      "stupidity",
		      "recklessness",
		      "haemophilia",-
		      "sensitivity",
		      }
          cecho("\n&lt;red&gt;Fitness is down.")        
      elseif snd.timer_check("focus", .2, "more than") and not snd.target_locked() then
        snd.giving = {
          "anorexia",
          "mental_disruption",
          "stupidity", 
          "paresis",
          "weariness",
          "clumsiness",
					"recklessness",
          "sensitivity",
					"dizziness",
          "peace",
		      }
          cecho("\n&lt;red&gt;Focus is down.") 
      elseif table.contains(pet_classes, snd.cureset) then
        snd.giving = {
          "conviction",
          "paresis",
          "clumsiness",
          "asthma",		
          "slickness",
          "disfigurement",
          "anorexia",
          "stupidity",
          "disfigurement",
          "crippled",
          "mental_disruption",
          "physical_disruption",
          "crippled_body",
          "weariness",
          "haemophilia",
          "allergies",
          "sensitivity",
          "vomiting",
          "recklessness",
          "dizziness"
          }
          cecho("\n&lt;red&gt;Venoms for disfigure classes.") 
      else
        snd.giving = {
          "conviction",
          "paresis",
          "clumsiness",
          "asthma",		
          "slickness",
          "stupidity",
          "anorexia",
          "crippled",
          "mental_disruption",
          "physical_disruption",
          "crippled_body",
          "weariness",
          "haemophilia",
          "allergies",
          "sensitivity",
          "vomiting",
          "recklessness",
          "dizziness"
          }
          cecho("\n&lt;red&gt;Normal affs for lock.")
      end

      if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
        string = "RETRIBUTION "..snd.target
      else
        if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
          touse = missing
        elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
          touse = missing
        elseif #missing == 1 and not snd.used.shield then
          touse = missing
        end
        for i in pairs(snd.giving) do
          if not snd.checkAff(snd.giving[i]) then
            if not table.contains(touse, snd.giving[i]) then
              table.insert(touse, snd.giving[i])
            end
          end
        end
        if not snd.can_arms() then
          for i in pairs(discordAffs) do
            if not snd.checkAff(discordAffs[i]) then
              if todiscord ~= discordAffs[i] then
                todiscord = discordAffs[i]
              end
            end
          end
        end
        
        for aff in pairs(touse) do
          table.insert(tohit, snd.effects[touse[aff]])
        end
        
        while #tohit &lt; 3 do
          table.insert(tohit, extraaff)
        end
        
        if not snd.can_arms() then
          string = string.."aura contort "..snd.target.." "..todiscord..snd.sep.."rending "..snd.target.." "..tohit[1]..snd.sep
        elseif snd.checkAff("writhe_impaled") then
          string = string.."DISEMBOWEL "..snd.target..snd.sep
        elseif snd.theytumbling then 
          string = string.."TRANSPIERCE "..snd.target..snd.sep
        elseif snd.used.shield and snd.used.rebounding then
          string = string.."razestrike "..snd.target.." blaze"..snd.sep
          call = "wt Afflicting "..snd.target..": blaze"..snd.sep
        elseif snd.used.shield or snd.used.rebounding then
          string = string.."razestrike "..snd.target.." "..tohit[1]..snd.sep
          call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
        elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				  string = string.."blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]..snd.sep
				  call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
        elseif iyedlo and not snd.target_locked() then      
				  string = string.."blade release waterflow"..snd.sep.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep   
			    call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
        else
          string = string.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep
          call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
        end
      end
      
      if snd.toggles.affcalling and not snd.target_gone then
        string = call..string
      end
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
  snd.send("engage "..snd.target)
  end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Test New</name>
								<script>--bladefury on
if snd.class == "Templar" then
	snd.starting_attack()
	
	function snd.attack_function()
		
		if not snd.waiting.queue then
      
			local string = "wipe left"..snd.sep.."wipe right"..snd.sep -- we'll load this with our attack string
			local call = "" -- and this with our affliction call
			local missing = snd.missingAff("asthma/slickness/anorexia", "/")
      local leftcharge = tonumber(gmcp.Char.Vitals.charge_left)
			local rightcharge = tonumber(gmcp.Char.Vitals.charge_right)
			local charged = math.min(tonumber(gmcp.Char.Vitals.charge_left), tonumber(gmcp.Char.Vitals.charge_right))
			local touse = {}
			local tohit = {}
			local pet_classes = {"sentinel", "carnifex", "praenomen", "teradrim", "indorani", "luminary"}
			local phys_classes = {"carnifex", "praenomen", "teradrim", "luminary", "monk", "sciomancer", "ascendril"}
      local iyedlo = false
      if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 90 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 90 then
        iyedlo = true   
      end      
      local vorpal = false
      if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
        vorpal = true
      end
			
			snd.giving = {
				"conviction",
				"paresis",
				"clumsiness",
				"asthma",
				"disfigurement",
				"slickness",
				"anorexia",
				"stupidity",
				"allergies",				
				"crippled",
				"mental_disruption",
				"physical_disruption",
				"crippled_body",
				"weariness",
				"haemophilia",
				"allergies",
				"sensitivity",
				"vomiting",
				"recklessness",
				"dizziness"
		      }
			
			if not snd.used.rebounding then
				if charged &gt;= 140 then
					if #snd.missingAff("asthma/anorexia", "/") &lt; 3 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 2 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end								
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 3 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end								
						end
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 3 then
						table.insert(snd.giving, 1, "asthma")
					end
				else
					if #snd.missingAff("asthma/anorexia", "/") &lt; 2 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end	
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end	
						end					
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 2 then
						table.insert(snd.giving, 1, "asthma")
					end
				end
			else
				if charged &gt;= 140 then
					if #snd.missingAff("asthma/anorexia", "/") &lt; 2 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 1 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 1 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 1 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 1 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end
						end					
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 2 then
						table.insert(snd.giving, 1, "asthma")					
					end
				else
					if #snd.missingAff("asthma/anorexia", "/") &lt; 1 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						end				
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 1 then
						table.insert(snd.giving, 1, "asthma")
					end
				end
			end
			
			if (snd.timer_check("rebounding", 2.5, "less than") and snd.timer_check("rebounding", 0.1, "more than")) or snd.used.rebounding then
				if not snd.checkAff("asthma") then
					table.insert(snd.giving, 1, "asthma")
				elseif not snd.checkAff("clumsiness") then
					table.insert(snd.giving, 1, "clumsiness")
				end
			end
			
			if snd.checksomeAffs({"asthma", "clumsiness", "weariness" },3) and table.contains(pet_classes, snd.cureset) then
				table.insert(snd.giving, 1, "disfigurement")				
			end
			
			if table.contains(phys_classes, snd.cureset) and not snd.target_locked() and not snd.checkAff("weariness") and not (snd.checksomeAffs({"mental_disruption", "stupidity" },1) or snd.timer_check("focus", 4.5, "less than")) then
				table.insert(snd.giving, 1, "weariness")
			end
			
			if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
				string = string.."RETRIBUTION "..snd.target
			else
				if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
					touse = missing
				elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
					touse = missing
				elseif #missing == 1 and not snd.used.shield then
					touse = missing
				end
				for i in pairs(snd.giving) do
					if not snd.checkAff(snd.giving[i]) then
						if not table.contains(touse, snd.giving[i]) then
							table.insert(touse, snd.giving[i])
						end
					end
				end
        
				for aff in pairs(touse) do
					table.insert(tohit, snd.effects[touse[aff]])
				end
        
				while #tohit &lt; 3 do
					table.insert(tohit, extraaff)
				end
				
				if snd.checkAff("writhe_impaled") then
					string = string.."DISEMBOWEL "..snd.target..snd.sep
				elseif snd.theytumbling then 
					string = string.."TRANSPIERCE "..snd.target..snd.sep
				elseif snd.used.shield and snd.used.rebounding then
					string = string.."razestrike "..snd.target.." blaze"..snd.sep
					call = "wt Afflicting "..snd.target..": blaze"..snd.sep
				elseif snd.used.shield or snd.used.rebounding then
					string = string.."razestrike "..snd.target.." "..tohit[1]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
				elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
					string = string.."blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
				elseif iyedlo and not snd.target_locked() then      
					string = string.."blade release waterflow"..snd.sep.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep   
					call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
				else
					string = string.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
				end
				
			end
      
			if snd.toggles.affcalling and not snd.target_gone then
				string = call..string
			end
      
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		
		end
	end
	
	snd.attack_function()
	snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Test 2 (Updated Irra Advanced)</name>
								<script>--bladefury on
if snd.class == "Templar" then
	snd.starting_attack()
	
	function snd.attack_function()
		
		if not snd.waiting.queue then
      
			local string = "wipe left"..snd.sep.."wipe right"..snd.sep -- we'll load this with our attack string
			local call = "" -- and this with our affliction call
			local missing = snd.missingAff("asthma/slickness/anorexia", "/")
			local leftcharge = tonumber(gmcp.Char.Vitals.charge_left)
			local rightcharge = tonumber(gmcp.Char.Vitals.charge_right)
			local charged = math.min(tonumber(gmcp.Char.Vitals.charge_left), tonumber(gmcp.Char.Vitals.charge_right))
			local touse = {}
			local tohit = {}
			local extraaff = "blaze"
			local pet_classes = {"sentinel", "carnifex", "praenomen", "teradrim", "indorani", "luminary"}
			local phys_classes = {"carnifex", "praenomen", "teradrim", "luminary", "monk", "sciomancer", "ascendril"}
			local iyedlo = false
			if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 90 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 90 then
				iyedlo = true   
			end      
			local vorpal = false
			if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
				vorpal = true
			end
			local lockatdum = false
			local atdumslash = ""
			local ven1 = ""
			local ven2 = ""
			local lockatdumstring = ""
			
			snd.giving = {
				"conviction",
				"paresis",
				"clumsiness",
				"asthma",
				--"disfigurement",
				"slickness",
				"anorexia",
				"stupidity",
				"allergies",				
				"crippled",
				"mental_disruption",
				"physical_disruption",
				"crippled_body",
				"weariness",
				"haemophilia",
				"allergies",
				"sensitivity",
				"vomiting",
				"recklessness",
				"dizziness"
			}
			
			if not snd.used.rebounding then
				if charged &gt;= 140 then
					if #snd.missingAff("asthma/anorexia", "/") &lt; 3 then -- "lockSlickness"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 2 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end								
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 3 then -- "lockAnorexia"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end								
						end
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 3 then -- "lockAsthma"
						table.insert(snd.giving, 1, "asthma")
					end
				else
					if #snd.missingAff("asthma/anorexia", "/") &lt; 2 then -- "lockSlickness"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end	
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then -- "lockAnorexia"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 3 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end	
						end					
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 2 then -- "lockAsthma"
						table.insert(snd.giving, 1, "asthma")
					end
				end
			else
				if charged &gt;= 140 then
					if #snd.missingAff("asthma/anorexia", "/") &lt; 2 then -- "lockSlickness"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						elseif #snd.missingAff("asthma/anorexia", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 1 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 1 then
									table.insert(snd.giving, 1, "slickness")
									table.insert(snd.giving, 2, "stupidity")
								end
							end
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 2 then -- "lockAnorexia"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then
							if charged &gt;= 140 then
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 2 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							else
								if #snd.missingAff("asthma/slickness/anorexia", "/") &lt; 1 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								elseif charged &gt;= 115 and not snd.checkAff("stupidity") and #snd.missingAff("asthma/slickness/anorexia", "/") &gt; 1 then
									table.insert(snd.giving, 1, "anorexia")
									table.insert(snd.giving, 2, "stupidity")
								end
							end
						end					
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 2 then -- "lockAsthma"
						table.insert(snd.giving, 1, "asthma")					
					end
				else
					if #snd.missingAff("asthma/anorexia", "/") &lt; 1 then -- "lockSlickness"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "slickness")
						end
					elseif #snd.missingAff("asthma/slickness", "/") &lt; 1 then -- "lockAnorexia"
						if snd.checksomeAffs({"stupidity", "impatience"},1) or snd.timer_check("focus", 2.2, "more than") then
							table.insert(snd.giving, 1, "anorexia")
						end				
					elseif #snd.missingAff("slickness/anorexia", "/") &lt; 1 then -- "lockAsthma"
						table.insert(snd.giving, 1, "asthma")
					end
				end
			end
			
			if (snd.timer_check("rebounding", 2.5, "less than") and snd.timer_check("rebounding", 0.1, "more than")) or snd.used.rebounding then
				if not snd.checkAff("asthma") then
					table.insert(snd.giving, 1, "asthma") -- "rebounding_asthma"
				elseif not snd.checkAff("clumsiness") then
					table.insert(snd.giving, 1, "clumsiness") -- "rebounding_clumsiness"
				end
			end
			
			--if snd.checksomeAffs({"asthma", "clumsiness", "weariness" },3) and table.contains(pet_classes, snd.cureset) then
			--	table.insert(snd.giving, 1, "disfigurement") -- "buffDisfigurement"				
			--end
			
			if table.contains(phys_classes, snd.cureset) and not snd.target_locked() and not snd.checkAff("weariness") and not (snd.checksomeAffs({"mental_disruption", "stupidity" },1) or snd.timer_check("focus", 4.5, "less than")) then
				table.insert(snd.giving, 1, "weariness") -- "strongWeariness"
			end
			
			if (charged &gt;= 82 and charged &lt; 111) and not iyedlo then -- "preatdumslash"
				if snd.checkAff("asthma") and snd.checkAff("clumsiness") and snd.timer_check("pill", 0.5, "more than") and not snd.checkAff("slickness") then
					if (not snd.checkAff("paresis") and not snd.checkAff("paralysis")) then
						table.insert(snd.giving, 1, "paresis")
						table.insert(snd.giving, 2, "slickness")
					elseif not snd.checkAff("stupidity") then
						table.insert(snd.giving, 1, "stupidity")
						table.insert(snd.giving, 2, "slickness")
					elseif not snd.checkAff("weariness") then
						table.insert(snd.giving, 1, "weariness")
						table.insert(snd.giving, 2, "slickness")
					elseif not snd.checkAff("anorexia") then
						table.insert(snd.giving, 1, "slickness")
						table.insert(snd.giving, 2, "anorexia")
					end
				elseif snd.checkAff("asthma") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and snd.timer_check("pill", 0.5, "more than") and not snd.checkAff("slickness") and not snd.checkAff("clumsiness") then
					table.insert(snd.giving, 1, "clumsiness")
					table.insert(snd.giving, 2, "slickness")
				end
			end
			
			if (charged &gt;= 111 and charged &lt; 140) then -- "preatdumslash"
      cecho("\n I got into pre atdum slash.")
                if snd.checkAff("asthma") and snd.checkAff("slickness") and not snd.checkAff("anorexia") and (snd.checkAff("clumsiness") or snd.timer_check("pill", 0.5, "more than")) and (snd.checkAff("stupidity") or snd.timer_check("focus", 2.5, "more than")) and (snd.checkAff("paresis") or snd.checkAff("paralysis") or snd.timer_check("tree", 2.5, "more than")) then
                    if not snd.checkAff("clumsiness") and snd.timer_check("focus", 2.5, "more than") and snd.timer_check("tree", 2.5, "more than") then
                        table.insert(snd.giving, 1, "clumsiness")
                        table.insert(snd.giving, 2, "anorexia")
                    elseif ((snd.checkAff("stupidity") and snd.timer_check("pill", 0.5, "more than")) or snd.timer_check("focus", 2.5, "more than")) and (not snd.checkAff("paresis") and not snd.checkAff("paralysis")) then
                        table.insert(snd.giving, 1, "paresis")
                        table.insert(snd.giving, 2, "anorexia")
                    elseif ((snd.checkAff("paresis") or snd.checkAff("paralysis")) and snd.timer_check("pill", 0.5, "more than")) and not snd.checkAff("stupidity") then
                        table.insert(snd.giving, 1, "stupidity")
                        table.insert(snd.giving, 2, "anorexia")
                    end
                elseif not snd.checkAff("asthma") and snd.timer_check("fitness", 11.5, "more than") then
                    table.insert(snd.giving, 2, "asthma")
                    if not snd.checkAff("clumsiness") then
                        table.insert(snd.giving, 1, "clumsiness")
                    elseif not snd.checkAff("paresis") and not snd.checkAff("paralysis") and snd.timer_check("tree", 5, "less than") then
                        table.insert(snd.giving, 1, "paresis")
                    elseif not snd.checkAff("stupidity") and snd.timer_check("focus", 5, "less than") then
                        table.insert(snd.giving, 1, "stupidity")
                    elseif not snd.checkAff("weariness") then
                        table.insert(snd.giving, 1, "weariness")
                    elseif not snd.checkAff("slickness") then
                        table.insert(snd.giving, 1, "slickness")
                    end
                end
            end
			
			
			if not snd.checksomeAffs({"slickness", "anorexia"},1) and (not snd.timer_check("fitness", .1, "less than") and #snd.target_has &lt; 4) then -- "quicklock"
				if snd.checkAff("asthma") and snd.checkAff("clumsiness") and (snd.checkAff("paresis") or snd.checkAff("paralysis")) and (snd.checkAff("stupidity") or snd.timer_check("focus", 2.5, "more than")) then
					table.insert(snd.giving, 1, "slickness")
					table.insert(snd.giving, 2, "anorexia")
				end
			end
			
			if charged &gt;= 140 then -- "killatdum"
				if #snd.missingAff("crippled_body/physical_disruption/mental_disruption/paralysis", "/") == 0 then
					string = string.."empower left vorpal disrupt"..snd.sep
				elseif #snd.missingAff("crippled_body/physical_disruption/mental_disruption/paralysis", "/") == 1 then
					if not snd.checkAff("crippled_body") and snd.checkAff("crippled") then
						string = string.."empower left vorpal cripple"..snd.sep
					elseif not snd.checkAff("physical_disruption") then
						string = string.."empower left vorpal disrupt"..snd.sep
					elseif not snd.checkAff("mental_disruption") and snd.checkAff("physical_disruption") then
						string = string.."empower left vorpal disrupt"..snd.sep
					end
				else
					lockatdum = true
          cecho("\n Lock atdum true.")
				end
			end
			
			if snd.checksomeAffs({"paralysis", "crippled_body", "mental_disruption","physical_disruption" },4) then
				string = string.."RETRIBUTION "..snd.target
			else
				if lockatdum then -- "lockatdum"
					local fitness = 12
					if snd.checkAff("physical_disruption") then fitness = fitness - 1 end
					if snd.checkAff("mental_disruption") then fitness = fitness - 1 end
					if snd.checkAff("crippled") then fitness = fitness - 1 end
					if snd.checkAff("paresis") then fitness = fitness - 1 end
					if snd.checkAff("stupidity") then fitness = fitness - 1 end
					if snd.timer_check("fitness", fitness, "more than") then
            cecho("\n Fitness: "..fitness)
						if charged &gt;= 140 then
							if snd.checkAff("asthma") and snd.checkAff("slickness") and not snd.checkAff("anorexia") and not snd.checkAff("stupidity") and not snd.checkAff("paresis") and (snd.timer_check("pill", 0.5, "more than") or snd.checkAff("clumsiness")) then
								atdumslash = "curare"
								ven1 = "aconite"
								ven2 = "slike"
								lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."aura contort "..snd.target.." "..ven1..snd.sep.."rending "..snd.target.." "..ven2..snd.sep
							elseif snd.checkAff("asthma") and (snd.timer_check("pill", 0.5, "more than") or snd.checkAff("clumsiness")) and not snd.checkAff("slickness") and snd.timer_check("focus", 2.5, "more than") and snd.timer_check("tree", 2.5, "more than") then
								if not snd.checkAff("crippled") and not snd.checkAff("crippled_body") then
									atdumslash = "gecko"
									ven1 = "cripple"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								elseif not snd.checkAff("physical_disruption") then
									atdumslash = "gecko"
									ven1 = "disrupt"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								elseif not snd.checkAff("mental_disruption") then
									atdumslash = "gecko"
									ven1 = "disrupt"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								elseif not snd.checkAff("stupidity") then
									atdumslash = "gecko"
									ven1 = "aconite"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								elseif not snd.checkAff("paresis") and not snd.checkAff("paralysis") then
									atdumslash = "gecko"
									ven1 = "curare"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								elseif not snd.checkAff("weariness") then
									atdumslash = "gecko"
									ven1 = "vernalius"
									ven2 = "slike"
									lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
								end
							elseif snd.checkAff("asthma") and (snd.timer_check("pill", 0.5, "more than") or snd.checkAff("clumsiness")) and not snd.checkAff("slickness") and ((snd.checkAff("stupidity") and snd.timer_check("pill", 0.5, "more than")) or snd.timer_check("focus", 2.5, "more than")) then
								atdumslash = "gecko"
								ven1 = "paresis"
								ven2 = "slike"
								lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."aura contort "..snd.target.." "..ven1..snd.sep.."rending "..snd.target.." "..ven2..snd.sep
							elseif snd.checkAff("asthma") and (snd.timer_check("pill", 0.5, "more than") or snd.checkAff("clumsiness")) and not snd.checkAff("slickness") and (((snd.checkAff("paresis") or snd.checkAff("paralysis")) and snd.timer_check("pill", 0.5, "more than")) or snd.timer_check("tree", 2.5, "more than")) then
								atdumslash = "gecko"
								ven1 = "aconite"
								ven2 = "slike"
								lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."aura contort "..snd.target.." "..ven1..snd.sep.."rending "..snd.target.." "..ven2..snd.sep
							elseif not snd.checkAff("asthma") and not snd.checkAff("slickness") and not snd.checkAff("anorexia") and (snd.timer_check("focus", 2.5, "more than") or (snd.checkAff("stupidity") and snd.timer_check("pill", 0.5, "more than"))) and (snd.timer_check("tree", 2.5, "more than") or (snd.checkAff("paresis") or snd.checkAff("paralysis") and snd.timer_check("pill", 0.5, "more than"))) then
								atdumslash = "kalmia"
								ven1 = "slike"
								ven2 = "gecko"
								lockatdumstring = "empower left vorpal "..atdumslash..snd.sep.."dsk "..snd.target.." "..ven1.." "..ven2..snd.sep
							end
              cecho("\n Lock atdum: "..lockatdumstring)
						end
					end
				end
				
				if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
					touse = missing
				elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
					touse = missing
				elseif #missing == 1 and not snd.used.shield then
					touse = missing
				end
				
				for i in pairs(snd.giving) do
					if not snd.checkAff(snd.giving[i]) then
						if not table.contains(touse, snd.giving[i]) then
							table.insert(touse, snd.giving[i])
						end
					end
				end
        
				for aff in pairs(touse) do
					table.insert(tohit, snd.effects[touse[aff]])
				end
        
				while #tohit &lt; 3 do
					table.insert(tohit, extraaff)
				end
				
				if snd.checkAff("writhe_impaled") then
					string = string.."DISEMBOWEL "..snd.target..snd.sep
				elseif snd.theytumbling then 
					string = string.."impale "..snd.target..snd.sep
				elseif snd.used.shield and snd.used.rebounding then
					string = string.."razestrike "..snd.target.." blaze"..snd.sep
					call = "wt Afflicting "..snd.target..": blaze"..snd.sep
				elseif snd.used.shield or snd.used.rebounding then
					string = string.."razestrike "..snd.target.." "..tohit[1]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
				elseif snd.checksomeSelfAffs({"left_arm_broken", "right_arm_broken","left_arm_crippled", "right_arm_crippled"},1) then -- "discord"
					if not (snd.checkAff("paralysis") or snd.checkAff("paresis")) then
						string = string.."aura contort "..snd.target.." paresis"..snd.sep.."rending "..snd.target.." "..tohit[1]..snd.sep
					elseif not snd.checkAff("stupidity") then
						string = string.."aura contort "..snd.target.." stupidity"..snd.sep.."rending "..snd.target.." "..tohit[1]..snd.sep
					elseif not snd.checkAff("confusion") then
						string = string.."aura contort "..snd.target.." confusion"..snd.sep.."rending "..snd.target.." "..tohit[1]..snd.sep
					end
				elseif lockatdum and lockatdumstring ~= "" then -- "lockatdum"
					string = string..lockatdumstring
					call = "wt Afflicting "..snd.target..": "..atdumslash..", "..ven1..", "..ven2..snd.sep
				--elseif table.contains(phys_classes, snd.cureset) and (snd.checkAff("asthma") and snd.checkAff("clumsiness") and (snd.checkAff("paresis") or snd.checkAff("paralysis"))) then -- "strongWithering"
				--	string = string.."aura withering "..snd.target..snd.sep
				elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
					string = string.."blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
				elseif iyedlo and not snd.target_locked() then      
					string = string.."blade release waterflow"..snd.sep.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep   
					call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
				else
					string = string.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]..snd.sep
					call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
				end
				
			end
      
			if snd.toggles.affcalling and not snd.target_gone then
				string = call..string
			end
      
			if string ~= snd.last_attack and not snd.waiting.queue then
				snd.last_attack = string
				snd.attack(snd.last_attack)
				snd.waiting.queue = true
				tempTimer(snd.delay(), [[snd.waiting.queue = false]])
			end
		
		end
	end
	
	snd.attack_function()
	snd.send("engage "..snd.target)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Zealot</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Affliction Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Affs</name>
								<script>if snd.class == "Zealot" then
  snd.starting_attack()

  function snd.attack_function()
  
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
        
    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep 
    end
    
    if not snd.waiting.queue then
      if snd.theytumbling then
        string = "order loyals kill "..snd.target..snd.sep .. "psi tether "..snd.target
      elseif snd.theyran then
        string = "order loyals kill "..snd.target..snd.sep .. "psi fetch "..snd.target
      elseif snd.used.shield then
        string = "touch hammer " .. snd.target..snd.sep
      elseif not snd.checkAff("indifference") then
        string = "psi dull "..snd.target..snd.sep
      elseif not snd.checksomeAffs({"dementia", "paranoia", "merciful"}, 1) then
        string = "psi deprive "..snd.target..snd.sep
      elseif not snd.checkAff("fear") then
        string = "psi dread"..snd.sep
      else
        string = "enact cascade "..snd.target..snd.sep
      end
    
    end
    
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Damage Offenses</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Bleed/Damage</name>
								<script>if snd.class == "Zealot" then
  snd.starting_attack()

  function snd.attack_function()
  
  	local string = ""
    local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    mymental_aff_count = 0
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.have_aff, snd.mental_affs[aff]) then
        mymental_aff_count = mymental_aff_count + 1
      end
    end
    
    if not snd.waiting.queue then
      
      if ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles)) and not snd.used.shield and snd.have_aff("fallen") then
        if snd.hackles or snd.have_aff("blackout") then
          string = "hackles "..snd.target.." rive"..snd.sep
        end			
        string = string.."enact immolation "..snd.target..snd.sep
      elseif snd.have_aff("aeon") and not snd.shield_check then
        string = "touch shield"..snd.sep
		  elseif hp &lt;= 40 then
			  string = "respiration"..snd.sep
		  elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			  string = "enact cauterize"..snd.sep
		  elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			  string = "psi recover"..snd.sep
		  elseif ((snd.have_aff("asthma") and snd.have_aff("impatience")) or (snd.have_aff("asthma") and snd.have_aff("slickness")) or (snd.have_aff("impatience") and snd.have_aff("anorexia")) or (snd.have_aff("anorexia") and snd.have_aff("slickness"))) and snd.can_arms() and not (snd.cureset ~= "indorani" or snd.cureset ~= "oneiromancer") and not snd.have_aff("berserking") then
			  string = "enact rejection"..snd.sep
		  elseif snd.theytumbling then
        string = "psi tether "..snd.target
      elseif snd.theyran then
        string = "psi fetch "..snd.target
      elseif not snd.checkAff("indifference") and not snd.used.shield and tonumber(gmcp.Char.Vitals.psi) &gt; 50 then
        string = "psi dull "..snd.target
      elseif snd.parried_limb ~= "torso" then
        string = "flow " .. snd.target .. " clawtwist clawtwist"
      elseif snd.parried_limb ~= "head" then
        if not snd.checkAff("crippled_throat") then
          string = "flow " .. snd.target .. " edgekick heelrush head"
        else
          string = "flow " .. snd.target .. " sunkick heelrush head"
        end
      elseif snd.parried_limb ~= "left leg" or snd.parried_limb ~= "right leg" then
        string = "flow " .. snd.target .. " wanekick left wanekick right"
      elseif snd.parried_limb ~= "left leg" and snd.parried_limb == "right leg" then
        string = "flow " .. snd.target .. " wanekick left wanekick left"
      elseif snd.parried_limb ~= "right leg" and snd.parried_limb == "left leg" then
        string = "flow " .. snd.target .. " wanekick right wanekick right"
      else
        if snd.parried_limb ~= "left arm" then
          string = "flow " .. snd.target .. " pummel left pummel left"
        elseif snd.parried_limb ~= "right arm" then
          string = "flow " .. snd.target .. " pummel right pummel right"
        else
          string = "rive " .. snd.target .. snd.sep
        end
      end
      
      if gmcp.Char.Vitals.ability_bal == "1" then
        if snd.parried_limb ~= "head" and not snd.checkAff("blurry vision") then
          string = "hackles " .. snd.target .. " jawcrack " .. snd.sep .. string
        else
          string = "hackles " .. snd.target .. " rive " .. snd.sep .. string
        end
      end
      
      if snd.zenith then
        if not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
          string = string .. snd.sep .. "enact heatspear " .. snd.target
        elseif snd.checkAff("ablaze") then
          string = string .. snd.sep .. "enact quicken " .. snd.target
        else
          string = string .. snd.sep .. "enact scorch " .. snd.target
        end
      end
      
      if not snd.zenith then
        if not snd.zenith_coming then
          string = "enact zenith"
        end
      end
      
      if not snd.firefist then
        if snd.checksomeAffs({"ablaze", "heatspear"}, 2) then
          if snd.firefist_cooldown then
            if snd.zenith or snd.zenith_coming then
              string = "enact firefist"
            else
              string = "enact zenith" .. snd.sep .. string
            end
          end
        end
      end
    
      if snd.used.shield then
        if not snd.checkAff("ablaze") then
          string = "touch hammer "..snd.target..snd.sep..string
        else
          string = "enact scorch "..snd.target..snd.sep..string
        end
      end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end      
      
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dmg$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>1v1</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Combo Attack</name>
								<script>if snd.class == "Zealot" then
  snd.starting_attack()

  function snd.attack_function()
    
    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep 
    end
   
-- Zeal Attacks Table
    local zeal_attacks = {
    ["left arm"] = "pummel left ",
    ["right arm"] = "pummel right ",
    ["left leg"] = "wanekick left ",
    ["right leg"] = "wanekick right ",
    torso = "clawtwist",
    head = "sunkick" }
 
    local limbs = {"torso", "left leg", "right leg", "left arm", "right arm"}
    local left = "nothing"
    local right = "nothing"
    local string = ""
    if snd.proned() then -- Go for legs on a prone.
      if snd.parried_limb == "right leg" then
        right = "left leg"
      elseif snd.parried_limb == "left leg" then
        right = "right leg"
      else
        right = "right leg"
        left = "left leg"
      end
    else -- Target isn't prone...
      for limb in pairs(limbs) do
        if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
          if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
            if snd.zenith and not snd.used.shield and snd.resto_limb ~= "none" then
              if right == "nothing" then
                right = limbs[limb]
              elseif left == "nothing" then
                left = limbs[limb]
              end
            end
          elseif right == "nothing" then
            right = limbs[limb]
          elseif left == "nothing" and limbs[limb] ~= right then
            left = limbs[limb]
          end
        end
      end
    end
    
    if left == "nothing" then -- We only found one limb to hit!
      left = right -- double up!
    end
 
    if not snd.waiting.queue then
      if snd.theytumbling then
        string = "order loyals kill "..snd.target..snd.sep .. "psi tether "..snd.target
      elseif snd.theyran then
        string = "order loyals kill "..snd.target..snd.sep .. "psi fetch "..snd.target
      elseif snd.used.shield then
        string = "touch hammer " .. snd.target..snd.sep
      elseif not snd.enemy_restoration_balance and snd.balance.pendulum then
        string = string.."enact pendulum "..snd.target..snd.sep..string
      elseif snd.flamestack &gt;= 12 then
        string = string.."enact immolation " .. snd.target..snd.sep
      elseif snd.zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt;= 33.33 and string.find(left, "torso") and snd.resto_limb ~= "left leg" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt;= 33.33 and string.find(left, "leg") then
        string = string.."flow "..snd.target.." wanekick left direblow"..snd.sep
      elseif snd.zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt; 33.33 and string.find(left, "torso") and snd.resto_limb ~= "right leg" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
        string = string.."flow "..snd.target.." wanekick right direblow"..snd.sep
      elseif snd.zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
        string = string.."flow "..snd.target.." wanekick left twinpress"..snd.sep
      elseif snd.zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
        string = string.."flow "..snd.target.." wanekick right twinpress"..snd.sep
      elseif snd.zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
        string = string.."flow "..snd.target.." wanekick left wanekick left"..snd.sep
      elseif snd.zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
        string = string.."flow "..snd.target.." wanekick right wanekick right"..snd.sep
      else
        string = string.."flow "..snd.target.." "..zeal_attacks[left].." "..zeal_attacks[right]..snd.sep
      end
 
      if gmcp.Char.Vitals.ability_bal == "1" and not snd.used.shield then
        if snd.zenith and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore wrist") then
          string = string.."hackles "..snd.target.." wristlash "..snd.sep
        elseif snd.zenith and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore ankle") then    
          string = string.."hackles "..snd.target.." anklepin "..snd.sep
        elseif not snd.checkAff("stuttering") then
          string = string.."hackles "..snd.target.." jawcrack "..snd.sep
        elseif snd.checkAff("heatspear") then
          string = string.."hackles "..snd.target.." whipburst "..snd.sep
        elseif not snd.checkAff("sore_ankle") then
          string = string.."hackles "..snd.target.." anklepin "..snd.sep
        elseif not snd.checkAff("sore_wrist") then
          string = string.."hackles "..snd.target.." wristlash "..snd.sep
        else
          string = string.."hackles "..snd.target.." whipburst "..snd.sep
        end
      end
 
      if not snd.zenith then
        if not snd.zenith_coming then
          string = "enact zenith"
        else
          if snd.checksomeAffs({"ablaze", "heatspear"}, 2) and not snd.firefist then
            if snd.firefist_cooldown then
              string = "enact firefist"..snd.sep..string
            end
          end
        end
      end
      
      if snd.zenith then
        if snd.checkAff("heatspear") then
          string = string.."enact quicken "..snd.target..snd.sep..string
        elseif not snd.checkAff("heatspear") and not snd.checkAff("ablaze") and snd.firefist then
          string = string.."enact heatspear "..snd.target..snd.sep..string
        elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
          string = string.."enact heatspear "..snd.target..snd.sep..string
        elseif snd.limb_status["torso"] ~= "healed" and snd.checkAff("ablaze") then
          string = string.."enact quicken "..snd.target..snd.sep..string
        else
          string = string.."enact scorch "..snd.target..snd.sep..string
        end
      end
       
  --    if not snd.checkAff("indifference") and not snd.zenith and not snd.checkAff("heatspear") and not snd.used.shield then
 --       string = "psi dull "..snd.target
  --    end
    
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Enebish Test</name>
								<script>if snd.class == "Zealot" then  
  snd.starting_attack()
  
  function snd.attack_function()

    if not snd.loyalsattacking then
      string = "order loyals kill "..snd.target..snd.sep 
    end
   
-- Zeal Attacks Table
    local zeal_attacks = {
    ["left arm"] = "pummel left ",
    ["right arm"] = "pummel right ",
    ["left leg"] = "wanekick left ",
    ["right leg"] = "wanekick right ",
    torso = "clawtwist",
    head = "sunkick" }
 
    local limbs = {"torso", "left leg", "right leg", "left arm", "right arm"}
    local left = "nothing"
    local right = "nothing"
    local string = ""
    if snd.proned() then -- Go for legs on a prone.
      if snd.parried_limb == "right leg" then
        right = "left leg"
      elseif snd.parried_limb == "left leg" then
        right = "right leg"
      else
        right = "right leg"
        left = "left leg"
      end
    else -- Target isn't prone...
      for limb in pairs(limbs) do
        if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
          if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
            if snd.zenith and not snd.used.shield and snd.resto_limb ~= "none" then
              if right == "nothing" then
                right = limbs[limb]
              elseif left == "nothing" then
                left = limbs[limb]
              end
            end
          elseif right == "nothing" then
            right = limbs[limb]
          elseif left == "nothing" and limbs[limb] ~= right then
            left = limbs[limb]
          end
        end
      end
    end
    
    if left == "nothing" then -- We only found one limb to hit!
      left = right -- double up!
    end
    
    if not snd.waiting.queue then
      if snd.used.shield then
        string = string.."touch hammer " ..snd.target
      elseif snd.flamestack &gt;= 12 then
        string = string.."enact immolation " ..snd.target
      elseif snd.checksomeAffs({"torso_mangled","heatspear"}, 2) and not snd.zenith then
        string = string.."enact zenith"
      elseif snd.checksomeAffs({"torso_mangled","heatspear","ablaze"}, 3) then
        string = string.."enact quicken " ..snd.target      
      elseif snd.checkAff("torso_mangled") and not snd.checkAff("heatspear") then
        string = string.."enact heatspear " ..snd.target  
      elseif snd.checksomeAffs({"muscle_spasm","ablaze"}, 2) and not snd.checksomeAffs({"left_arm_dislocated","left_arm_mangled","right_arm_dislocated","right_arm_mangled"}, 4) then
        string = string.."flow " ..snd.target.. " dislocate right arm dislocate left arm" 
      elseif not snd.checksomeAffs({"sore_wrist","muscle_spasm"}, 2) and (snd.checksomeAffs({"right_leg_broken","left_leg_broken"}, 1) or snd.checksomeAffs({"right_arm_broken","left_leg_broken"}, 1)) then
        string = string.."flow " ..snd.target.. " wristlash twinpress"
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken","ablaze"}, 3) and not snd.checkAff("muscle_spasm") then
        string = string.."flow " ..snd.target.. " twinpress direblow"
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken","head_mangled"}, 3) then
        string = string.."flow " ..snd.target.. " heelrush head sunkick"..snd.sep.."psi shock " ..snd.target
      elseif snd.checksomeAffs({"left_arm_broken","right_arm_broken"}, 2) and not snd.checksomeAffs({"torso_broken","head_mangled"}, 1) then
        string = string.."flow " ..snd.target.. " direblow heelrush head"    
      elseif not snd.checksomeAffs({"whiplash","muscle_spasm"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then
        string = string.."flow " ..snd.target.. " uprise twinpress"    
      elseif not snd.checksomeAffs({"sore_wrist","muscle_spasm"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then
        string = string.."flow " ..snd.target.. " wristlash twinpress"    
      elseif not snd.checksomeAffs({"whiplash","sore_wrist"}, 2) and snd.checksomeAffs({"right_leg_broken","left_leg_broken","right_arm_broken","left_arm_broken"}, 1) then 
        string = string.."flow " ..snd.target.. " uprise wristlash"
      elseif snd.checkAff("backstrain") and not snd.checksomeAffs({"torso_broken","fallen"}, 2) and snd.checksomeAffs({"left_leg_broken","right_leg_broken"}, 1) then
        string = string.."flow " ..snd.target.. "clawtwist palmforce"
      else
        string = string.."flow "..snd.target.." "..zeal_attacks[left].." "..zeal_attacks[right]..snd.sep
      end
  
      if gmcp.Char.Vitals.ability_bal == "1" and not snd.used.shield then
        if snd.zenith and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore wrist") then
          string = string.."hackles "..snd.target.." wristlash "
        elseif snd.zenith and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore ankle") then    
          string = string.."hackles "..snd.target.." anklepin"
        elseif not snd.checkAff("stuttering") then
          string = string.."hackles "..snd.target.." jawcrack"
        elseif snd.checkAff("heatspear") then
          string = string.."hackles "..snd.target.." whipburst"
        elseif not snd.checkAff("sore_ankle") then
          string = string.."hackles "..snd.target.." anklepin"
        elseif not snd.checkAff("sore_wrist") then
          string = string.."hackles "..snd.target.." wristlash"
        else
          string = string.."hackles "..snd.target.." whipburst"
        end
      end
    
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end
  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^banana$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Another Test</name>
								<script>if snd.class == "Zealot" then
	snd.starting_attack()

	function snd.attack_function()
    
		local string = ""
		local hackleAttack = ""
		local zenithAbility = ""
		local firstFlow = ""
		local secondFlow = ""
		hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
    mymental_aff_count = 0
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.have_aff, snd.mental_affs[aff]) then
        mymental_aff_count = mymental_aff_count + 1
      end
    end
    
    --if tonumber(gmcp.Char.Vitals.psi) &gt;= "" then
   --   snd.zenith_nope = false
   -- end
    
     
		if snd.checkAff("torso_broken") and not snd.checksomeAffs({"infernal_seal","infernal_shroud"},2) then
			zenithAbility = "enact infernal "..snd.target..snd.sep
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("heatspear") then
			zenithAbility = "enact heatspear "..snd.target..snd.sep
		elseif snd.checkAff("heatspear") then
			zenithAbility = "enact quicken "..snd.target..snd.sep
		elseif not snd.pyromania then
			zenithAbility = "enact pyromania"..snd.sep
		else
			zenithAbility = "enact scorch "..snd.target..snd.sep
		end    
    
		if snd.flamestack &gt;= 11 then
			hackleAttack = "whipburst"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) or not snd.checkAff("sore_wrist") then
			hackleAttack = "wristlash"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) and not snd.checkAff("sore_ankle") then
			hackleAttack = "anklepin"
		elseif snd.welt_ready == "torso" and not snd.checkAff("backstrain") and snd.resto_limb ~= "torso" then
			hackleAttack = "descent"
		elseif snd.welt_ready == "head" and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			hackleAttack = "uprise"
		elseif ((snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm")) then
			hackleAttack = "wristlash"
		elseif ((snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg")) then
			hackleAttack = "anklepin"   
		elseif snd.welt_ready == "torso" and snd.resto_limb ~= "torso" then
			hackleAttack = "descent"
		elseif snd.checkAff("heatspear") then
		  hackleAttack = "whipburst"
		elseif snd.welt_ready == "head" and snd.resto_limb ~= "head" then
			hackleAttack = "uprise" 
		elseif not snd.checkAff("stuttering") then
			hackleAttack = "jawcrack"      
		elseif not snd.checkAff("sore_ankle") then
			hackleAttack = "anklepin"
		elseif not snd.checkAff("sore_wrist") then
			hackleAttack = "wristlash"
		elseif not snd.checkAff("whiplash") then
			hackleAttack = "uprise"
		elseif not snd.checkAff("backstrain") then
			hackleAttack = "descent"
		else
			hackleAttack = "rive"
		end
 
		if snd.checkAff("left_arm_broken") and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and snd.resto_limb ~= "left arm" and snd.can_arms() then
			firstFlow = "dislocate left arm"
		elseif snd.checkAff("right_arm_broken") and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and snd.resto_limb ~= "right arm" and snd.can_arms() then
			firstFlow = "dislocate right arm"  
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "direblow"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checksomeAffs({"infernal_seal","torso_mangled"},2) and not snd.zenith and snd.can_legs() then
			firstFlow = "heelrush torso"    
		elseif snd.resto_limb ~= "left leg" and snd.parried_limb ~= "left leg" and not snd.checkAff("left_leg_crippled") and not snd.zenith and snd.rebuke_limb ~= "left leg" and snd.can_legs() then
			firstFlow = "heelrush left leg"
		elseif snd.resto_limb ~= "right leg" and snd.parried_limb ~= "right leg" and not snd.checkAff("right_leg_crippled") and not snd.zenith and snd.rebuke_limb ~= "right leg" and snd.can_legs() then
			firstFlow = "heelrush right leg"
		elseif snd.resto_limb ~= "torso" and snd.parried_limb ~= "torso" and not snd.checkAff("torso_mangled") and not snd.zenith and not snd.checksomeAffs({"ablaze","heatspear"},2) and snd.can_legs() then
			firstFlow = "heelrush torso"
		elseif snd.resto_limb ~= "left arm" and snd.parried_limb ~= "left arm" and not snd.checkAff("left_arm_crippled") and not snd.zenith and snd.rebuke_limb ~= "left arm" and snd.can_legs() then
			firstFlow = "heelrush left arm"
		elseif snd.resto_limb ~= "right arm" and snd.parried_limb ~= "right arm" and not snd.checkAff("right_arm_crippled") and not snd.zenith and snd.rebuke_limb ~= "right arm" and snd.can_legs() then
			firstFlow = "heelrush right arm"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and not snd.checkAff("head_broken") and not snd.zenith and snd.can_legs() then
			firstFlow = "heelrush head"    
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("torso_broken") then
			firstFlow = "clawtwist"   
		elseif snd.checkAff("ablaze") and not snd.checkAff("crippled_throat") and (snd.checkAff("muscle_spasms") or (snd.cureset == "praenomen" or snd.cureset == "akkari")) and (snd.parried_limb ~= "head" or snd.no_parry()) and snd.can_legs() then
			firstFlow = "edgekick"
		elseif snd.checksomeAffs({"lightwound","muscle_spasms"},2) and not snd.checkAff("crippled_throat") and not snd.have_aff("left_leg_crippled") and (snd.parried_limb ~= "head" or snd.no_parry()) then
			firstFlow = "edgekick"
		elseif (snd.checkAff("ablaze") or snd.firefist or not snd.firefist_cooldown) and snd.checkAff("muscle_spasms") and not snd.checkAff("lightwound") and (snd.parried_limb ~= "torso" or snd.no_parry()) and snd.resto_limb ~= "torso" and snd.can_arms() then
			firstFlow = "direblow"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checkAff("torso_broken") then
			firstFlow = "clawtwist"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_legs() and snd.rebuke_limb ~= "left leg" then
			firstFlow = "wanekick left"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() and snd.rebuke_limb ~= "left arm" then
			firstFlow = "pummel left"
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_legs() and snd.rebuke_limb ~= "right leg" then
			firstFlow = "wanekick right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() and snd.rebuke_limb ~= "right arm" then
			firstFlow = "pummel right"
		elseif snd.parried_limb ~= "head" and snd.resto_limb ~= "head" and not snd.have_aff("left_leg_crippled") then
			firstFlow = "sunkick"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) then
			firstFlow = "clawtwist"
		else
			firstFlow = "palmforce strike"
		end
 
		if (snd.checkAff("left_arm_broken") or (snd.limb_dmg["left arm"] &gt;= 24 and firstFlow == "pummel left" and not snd.checkAff("left_arm_broken"))) and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and firstFlow ~= "dislocate left arm" and snd.resto_limb ~= "left arm" then
			secondFlow = "dislocate left arm"
		elseif (snd.checkAff("right_arm_broken") or (snd.limb_dmg["right arm"] &gt;= 24 and firstFlow == "pummel right" and not snd.checkAff("right_arm_broken"))) and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and firstFlow ~= "dislocate right arm" and snd.resto_limb ~= "right arm" then
			secondFlow = "dislocate right arm"
		elseif ((snd.checkAff("left_leg_broken") and snd.resto_limb ~= "left leg") or (snd.checkAff("right_leg_broken") and snd.resto_limb ~= "right leg")) and not snd.checkAff("fallen") then
			secondFlow = "palmforce strike"
		elseif (snd.zenith and zenithAbility == "enact heatspear "..snd.target) or (snd.checkAff("heatspear") and snd.resto_limb ~= "torso") and not snd.checksomeAffs({"muscle_spasms","stiffness"},2) and firstFlow ~= "twinpress" then
			secondFlow = "twinpress"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and snd.checkAff("heatspear") and not snd.checkAff("torso_broken") then
			secondFlow = "clawtwist"
		elseif snd.no_parry() and snd.can_arms() and snd.resto_limb ~= "torso" and snd.checkAff("torso_broken") and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "clawtwist"
		elseif snd.welt_ready == "torso" and (hackleAttack ~= "descent" or not snd.hackles) and not snd.checkAff("backstrain") and snd.resto_limb ~= "torso" then
			secondFlow = "descent"
		elseif (snd.welt_ready == "left leg" and snd.resto_limb ~= "left leg") or (snd.welt_ready == "right leg" and snd.resto_limb ~= "right leg") and (hackleAttack ~= "anklepin" or not snd.hackles) and not snd.checkAff("sore_ankle") then
			secondFlow = "anklepin" 
		elseif (snd.welt_ready == "left arm" and snd.resto_limb ~= "left arm") or (snd.welt_ready == "right arm" and snd.resto_limb ~= "right arm") and (hackleAttack ~= "wristlash" or not snd.hackles) and not snd.checkAff("sore_wrist") then
			secondFlow = "wristlash"
		elseif snd.welt_ready == "head" and (hackleAttack ~= "uprise" or not snd.hackles) and not snd.checkAff("whiplash") and snd.resto_limb ~= "head" then
			secondFlow = "uprise"
		elseif snd.checksomeAffs({"ablaze","heatspear"},2) and not snd.checkAff("lightwound") and not snd.zenith and ((snd.parried_limb ~= "torso" and snd.checkAff("sore_wrist")) or snd.no_parry()) and snd.can_arms() and firstFlow ~= "heelrush left leg" and firstFlow ~= "heelrush torso" and firstFlow ~= "heelrush right leg" and firstFlow ~= "heelrush right arm" and firstFlow ~= "heelrush left arm" and firstFlow ~= "heelrush head" and (snd.checkAff("crippled_throat") or firstFlow == "edgekick") and firstFlow ~= "direblow" then
			secondFlow = "direblow"
		elseif snd.resto_limb ~= "head" and snd.parried_limb ~= "head" and snd.can_legs() then
			secondFlow = "sunkick" 
		elseif not snd.checkAff("right_leg_broken") and snd.parried_limb ~= "right leg" and snd.resto_limb ~= "right leg" and snd.can_arms() and snd.rebuke_limb ~= "right leg" then
			secondFlow = "wanekick right"
		elseif not snd.checkAff("right_arm_broken") and snd.parried_limb ~= "right arm" and snd.resto_limb ~= "right arm" and snd.can_arms() and snd.rebuke_limb ~= "right arm" then
			secondFlow = "pummel right"
		elseif not snd.checkAff("left_arm_broken") and snd.parried_limb ~= "left arm" and snd.resto_limb ~= "left arm" and snd.can_arms() and snd.rebuke_limb ~= "left arm" then
			secondFlow = "pummel left"
		elseif not snd.checkAff("left_leg_broken") and snd.parried_limb ~= "left leg" and snd.resto_limb ~= "left leg" and snd.can_arms() and snd.rebuke_limb ~= "left leg" then
			secondFlow = "wanekick left"
		elseif snd.parried_limb ~= "torso" and snd.resto_limb ~= "torso" and snd.can_arms() and not snd.checksomeAffs({"ablaze","heatspear"},2) then
			secondFlow = "clawtwist"
		end
		
		if snd.zenith and (firstFlow == "clawtwist" or secondFlow == "clawtwist") and snd.limb_dmg["torso"] &gt; 24 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "enact infernal "..snd.target..snd.sep
		end

		if (snd.checkAff("left_arm_broken") or (snd.limb_dmg["left arm"] &gt;= 24 and secondFlow == "pummel left" and not snd.checkAff("left_arm_broken"))) and not snd.checksomeAffs({"left_arm_mangled","left_arm_dislocated"},2) and secondFlow ~= "dislocate left arm" and snd.resto_limb ~= "left arm" then
			firstFlow = "dislocate left arm"
		elseif (snd.checkAff("right_arm_broken") or (snd.limb_dmg["right arm"] &gt;= 24 and secondFlow == "pummel right" and not snd.checkAff("right_arm_broken"))) and not snd.checksomeAffs({"right_arm_mangled","right_arm_dislocated"},2) and secondFlow ~= "dislocate right arm" and snd.resto_limb ~= "right arm" then
			firstFlow = "dislocate right arm"
		end
    
		if secondFlow == "twinpress" and not snd.checkAff("backstrain") and snd.hackles then
			hackleAttack = "descent"
		end
		
		if (firstFlow == "clawtwist" or secondFlow == "clawtwist") and snd.limb_dmg["torso"] &gt;= 26 and not snd.checkAff("infernal_seal") then 
			zenithAbility = "enact infernal "..snd.target..snd.sep
		end
		
    if snd.theyran then
        string = "order loyals kill "..snd.target..snd.sep .. "psi fetch "..snd.target 
    elseif ((snd.flamestack &gt;= 12) or (snd.flamestack == 11 and snd.hackles and hackleAttack ~= "descent")) and not snd.used.shield and snd.have_aff("fallen") then
			if snd.hackles or snd.have_aff("blackout") then
				string = "hackles "..snd.target.." "..hackleAttack..snd.sep
			end			
			string = string.."enact immolation "..snd.target..snd.sep
		elseif snd.have_aff("aeon") and not snd.shield_check then
			string = "touch shield"..snd.sep
		elseif hp &lt;= 40 and (snd.checkAff("heatspear") or not snd.checkAff("torso_broken")) then
			string = "respiration"..snd.sep
		elseif snd.defenses.def_focalmark.state ~= "deffed" and not snd.zenith then
			string = "enact focalmark"..snd.sep
		elseif tonumber(gmcp.Char.Vitals.bleeding) &gt;= 350 and not snd.zenith then
			string = "enact cauterize"..snd.sep
		elseif snd.recover and (snd.have_aff("paresis") and (snd.have_aff("anorexia") or snd.have_aff("impatience")) or (mymental_aff_count &gt;= 2)) then 
			string = "psi recover"..snd.sep
		elseif ((snd.have_aff("asthma") and snd.have_aff("impatience")) or (snd.have_aff("asthma") and snd.have_aff("slickness")) or (snd.have_aff("impatience") and snd.have_aff("anorexia")) or (snd.have_aff("anorexia") and snd.have_aff("slickness"))) and snd.can_arms() and not (snd.cureset ~= "indorani" or snd.cureset ~= "oneiromancer") and not snd.have_aff("berserking") then
			string = "enact rejection"..snd.sep
		elseif not snd.zenith and not snd.zenith_coming then
			string = "enact zenith"..snd.sep
		elseif snd.checkAff("torso_broken") and not snd.checksomeAffs({"infernal_seal","infernal_shroud"},2) and not snd.zenith then
			string = "enact infernal "..snd.target..snd.sep
		elseif snd.checkAff("ablaze") and snd.resto_limb ~= "none" and not snd.checkAff("heatspear") and not snd.zenith then
			string = "enact heatspear "..snd.target..snd.sep
		elseif snd.checkAff("heatspear") and snd.resto_limb ~= "torso" and snd.checksomeAffs({"torso_broken","ablaze"},2) and not snd.zenith then
			string = "enact quicken "..snd.target..snd.sep
		elseif snd.checkAff("stuttering") and not snd.checkAff("indifference") and (snd.checksomeAffs({"dizziness","stupidity"},1)) then
			string = "psi dull "..snd.target..snd.sep
		else
			if not snd.firefist and snd.firefist_cooldown then
				string = "enact firefist"..snd.sep
			elseif not snd.pyromania then
			  string = "enact pyromania"..snd.sep
      elseif snd.balance.pendulum and (snd.resto_limb == "left arm" or snd.resto_limb == "right arm" or snd.resto_limb == "left leg" or snd.resto_limb == "right leg") then
				string = "enact pendulum "..snd.target..snd.sep
			elseif (snd.cureset == "teradrim" or snd.cureset == "tidesage" or snd.cureset == "shapeshifter" or snd.cureset == "monk" or snd.cureset == "shaman" or snd.cureset == "alchemist" or snd.cureset == "zealot" or snd.cureset == "ravager" or snd.cureset == "sciomancer" or snd.cureset == "runecarver" or snd.cureset == "ascendril" or snd.cureset == "bloodborn") and snd.wrath and snd.swagger &lt; 3 then
				string = "wrath extend"..snd.sep
			elseif snd.wrath then
				string = "wrath"..snd.sep
			elseif snd.parrying == "left leg" and not snd.rebuke then
        if not snd.rebuke then
          string = "rebuke left leg"..snd.sep
        else
				  string = "rebuke right leg"..snd.sep
       end
			elseif snd.zenith then 
				string = zenithAbility..snd.sep..string..snd.sep
        cecho("\nWe are going to zenith: "..zenithAbility)
			elseif gmcp.Char.Vitals.ability_bal == "1" then        
				string = "hackles "..snd.target.." "..hackleAttack..snd.sep.."flow "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
			else
				string = "flow "..snd.target.." "..firstFlow.." "..secondFlow..snd.sep
			end
      
      if snd.used.shield then
        if not snd.checkAff("ablaze") then
          string = "touch hammer "..snd.target..snd.sep..string
        else
          string = "enact scorch "..snd.target..snd.sep..string
        end
      end
			
			if not snd.loyalsattacking then
				string = "order loyals kill "..snd.target..snd.sep..string
			end
      
		end
    
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
      
	end

  snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^kll$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Guardians</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>^vo'acha1$</name>
					<script>hecho("\n#73b1ceV#70b0cdO#6dafcc'#6baecaA#68adc9C#65acc8H#62acc7A#5fabc5,#5caac4 #5aa9c3T#57a8c2H#54a7c0E#51a6bf #4ea5beS#4ca4bdH#49a3bbA#46a2baD#43a2b9O#40a1b8W#3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b #004f9c ")
hecho("\n#6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b ")
hecho("\n#6cabcbM#6faecci#73b1cea#70b0cdz#6dafcci#6baeca #68adc9s#65acc8a#62acc7y#5fabc5s#5caac4,#5aa9c3 #57a8c2\"#54a7c0B#51a6bfl#4ea5bee#4ca4bds#49a3bbs#46a2bai#43a2b9n#40a1b8g#3da0b6s#3b9fb5 #389eb4o#359db3f#329cb1 #2f9bb0t#2d9aafh#2a99aee#2798ac #2498aba#2197aan#1e96a9c#1c95a7i#1994a6e#1693a5n#1591a4t#158fa3s#148da1,#138ba0 #13899fV#12879ea#12859dl#11839co#10819ar#107f99i#0f7d98e#0e7b97.#0e7996 #0d7794W#0c7593h#0c7392a#0b7291t#0b7090 #0a6e8fi#096c8ds#096a8c #08688bi#07668at#076489 #066287y#056086o#055e85u#045c84 #045a83s#035882e#025680e#02547fk#01527e #01527fo#015280f#015281 #015282t#015283h#015183e#015184 #015185S#015186h#015187a#015188d#015189o#01518aw#01518b #01518ca#01518dn#00508dd#00508e #00508fh#005090i#005091s#005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a ")
hecho("\n#68a8c9k#6cabcbi#6faeccn#73b1ced#70b0cdr#6dafcce#6baecad#68adc9?#65acc8\"#62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 ")
hecho("\n#65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 ")
hecho("\n#61a2c6Y#65a5c8o#68a8c9u#6cabcb #6faeccs#73b1cea#70b0cdy#6dafcc,#6baeca #68adc9\"#65acc8W#62acc7h#5fabc5a#5caac4t#5aa9c3 #57a8c2c#54a7c0a#51a6bfn#4ea5be #4ca4bdy#49a3bbo#46a2bau#43a2b9 #40a1b8t#3da0b6e#3b9fb5l#389eb4l#359db3 #329cb1m#2f9bb0e#2d9aaf #2a99aeo#2798acf#2498ab #2197aat#1e96a9h#1c95a7e#1994a6 #1693a5S#1591a4h#158fa3a#148da1d#138ba0o#13899fw#12879e?#12859d\"#11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 ")
hecho("\n#5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 ")
hecho("\n#5a9cc3M#5d9fc5i#61a2c6a#65a5c8z#68a8c9i#6cabcb #6faeccg#73b1cei#70b0cdv#6dafcce#6baecas#68adc9 #65acc8a#62acc7 #5fabc5s#5caac4h#5aa9c3o#57a8c2r#54a7c0t#51a6bf,#4ea5be #4ca4bdb#49a3bba#46a2bar#43a2b9k#40a1b8i#3da0b6n#3b9fb5g#389eb4 #359db3l#329cb1a#2f9bb0u#2d9aafg#2a99aeh#2798ac.#2498ab #2197aa\"#1e96a9Y#1c95a7o#1994a6u#1693a5 #1591a4w#158fa3i#148da1s#138ba0h#13899f #12879et#12859do#11839c #10819ak#107f99n#0f7d98o#0e7b97w#0e7996 #0d7794o#0c7593f#0c7392 #0b7291t#0b7090h#0a6e8fe#096c8d #096a8cS#08688bh#07668aa#076489d#066287o#056086w#055e85?#045c84 #045a83A#035882s#025680 #02547ft#01527eh#01527fi#015280s#015281 #015282a#015283g#015183e#015184 #015185d#015186r#015187a#015188w#015189s#01518a #01518bt#01518co#01518d #00508da#00508e #00508fc#005090l#005091o#005092s#005093e#005094,#005095 #005096 ")
hecho("\n#5699c2I#5a9cc3 #5d9fc5a#61a2c6m#65a5c8 #68a8c9c#6cabcbo#6faeccn#73b1cet#70b0cdi#6dafccn#6baecau#68adc9a#65acc8l#62acc7l#5fabc5y#5caac4 #5aa9c3a#57a8c2m#54a7c0a#51a6bfz#4ea5bee#4ca4bdd#49a3bb #46a2baa#43a2b9n#40a1b8d#3da0b6 #3b9fb5i#389eb4m#359db3p#329cb1r#2f9bb0e#2d9aafs#2a99aes#2798ace#2498abd#2197aa #1e96a9b#1c95a7y#1994a6 #1693a5t#1591a4h#158fa3e#148da1 #138ba0b#13899fr#12879ea#12859dv#11839ce#10819ar#107f99y#0f7d98 #0e7b97o#0e7996f#0d7794 #0c7593t#0c7392h#0b7291o#0b7090s#0a6e8fe#096c8d #096a8cf#08688br#07668ao#076489m#066287 #056086y#055e85o#045c84u#045a83r#035882 #025680l#02547fa#01527en#01527fd#015280s#015281,#015282\"#015283 #015183t#015184h#015185e#015186 #015187s#015188h#015189a#01518am#01518ba#01518cn#01518d #00508dm#00508eu#00508ft#005090t#005091e#005092r#005093s#005094 #005095 ")
hecho("\n#5395c0a#5699c2n#5a9cc3d#5d9fc5 #61a2c6s#65a5c8t#68a8c9r#6cabcba#6faecci#73b1ceg#70b0cdh#6dafcct#6baecae#68adc9n#65acc8s#62acc7 #5fabc5t#5caac4o#5aa9c3 #57a8c2r#54a7c0e#51a6bfg#4ea5bea#4ca4bdr#49a3bbd#46a2ba #43a2b9y#40a1b8o#3da0b6u#3b9fb5 #389eb4w#359db3i#329cb1t#2f9bb0h#2d9aaf #2a99aec#2798aco#2498abl#2197aad#1e96a9 #1c95a7e#1994a6y#1693a5e#1591a4s#158fa3.#148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 ")
hecho("\n#4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 ")
hecho("\n#4b8fbdM#4f92bei#5395c0a#5699c2z#5a9cc3i#5d9fc5 #61a2c6s#65a5c8a#68a8c9y#6cabcbs#6faecc,#73b1ce #70b0cd\"#6dafccV#6baecao#68adc9'#65acc8a#62acc7c#5fabc5h#5caac4a#5aa9c3 #57a8c2i#54a7c0s#51a6bf #4ea5bet#4ca4bdh#49a3bbe#46a2ba #43a2b9d#40a1b8a#3da0b6r#3b9fb5k#389eb4n#359db3e#329cb1s#2f9bb0s#2d9aaf #2a99aeo#2798acn#2498ab #2197aat#1e96a9h#1c95a7e#1994a6 #1693a5f#1591a4o#158fa3r#148da1e#138ba0s#13899ft#12879e #12859df#11839cl#10819ao#107f99o#0f7d98r#0e7b97 #0e7996b#0d7794e#0c7593n#0c7392e#0b7291a#0b7090t#0a6e8fh#096c8d #096a8ct#08688bh#07668ae#076489 #066287l#056086e#055e85a#045c84v#045a83e#035882s#025680,#02547f #01527et#01527fh#015280e#015281 #015282f#015283l#015183e#015184e#015185t#015186i#015187n#015188g#015189 #01518as#01518bh#01518ca#01518dd#00508do#00508ew#00508f #005090i#005091n#005092 ")
hecho("\n#488cbbt#4b8fbdh#4f92bee#5395c0 #5699c2c#5a9cc3o#5d9fc5r#61a2c6n#65a5c8e#68a8c9r#6cabcb #6faecco#73b1cef#70b0cd #6dafccy#6baecao#68adc9u#65acc8r#62acc7 #5fabc5e#5caac4y#5aa9c3e#57a8c2 #54a7c0a#51a6bfn#4ea5bed#4ca4bd #49a3bbt#46a2bah#43a2b9e#40a1b8 #3da0b6c#3b9fb5o#389eb4l#359db3d#329cb1 #2f9bb0k#2d9aafi#2a99aes#2798acs#2498ab #2197aao#1e96a9f#1c95a7 #1994a6d#1693a5e#1591a4a#158fa3t#148da1h#138ba0.#13899f #12879eS#12859dt#11839cr#10819ae#107f99n#0f7d98g#0e7b97t#0e7996h#0d7794 #0c7593i#0c7392s#0b7291 #0b7090h#0a6e8fi#096c8ds#096a8c #08688br#07668ae#076489a#066287l#056086m#055e85;#045c84 #045a83w#035882e#025680 #02547fa#01527er#01527fe#015280 #015281p#015282e#015283e#015183r#015184l#015185e#015186s#015187s#015188,#015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 ")
hecho("\n#4489bar#488cbbe#4b8fbdl#4f92bee#5395c0n#5699c2t#5a9cc3l#5d9fc5e#61a2c6s#65a5c8s#68a8c9.#6cabcb #6faeccW#73b1cee#70b0cd #6dafcca#6baecar#68adc9e#65acc8 #62acc7t#5fabc5h#5caac4e#5aa9c3 #57a8c2h#54a7c0u#51a6bfn#4ea5bet#4ca4bde#49a3bbr#46a2bas#43a2b9 #40a1b8i#3da0b6n#3b9fb5 #389eb4t#359db3h#329cb1e#2f9bb0 #2d9aafd#2a99aea#2798acr#2498abk#2197aa.#1e96a9 #1c95a7W#1994a6e#1693a5 #1591a4t#158fa3r#148da1e#138ba0a#13899fd#12879e #12859dp#11839ca#10819at#107f99h#0f7d98s#0e7b97 #0e7996u#0d7794n#0c7593s#0c7392e#0b7291e#0b7090n#0a6e8f #096c8da#096a8cn#08688bd#07668a #076489u#066287n#056086s#055e85u#045c84n#045a83g#035882.#025680\"#02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 ")
hecho("\n#4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f ")
hecho("\n#3d83b7M#4186b8i#4489baa#488cbbz#4b8fbdi#4f92be #5395c0e#5699c2x#5a9cc3t#5d9fc5e#61a2c6n#65a5c8d#68a8c9s#6cabcb #6faecca#73b1ce #70b0cdh#6dafcca#6baecan#68adc9d#65acc8 #62acc7o#5fabc5u#5caac4t#5aa9c3w#57a8c2a#54a7c0r#51a6bfd#4ea5bes#4ca4bd,#49a3bb #46a2bae#43a2b9l#40a1b8d#3da0b6r#3b9fb5i#389eb4t#359db3c#329cb1h#2f9bb0 #2d9aafm#2a99aea#2798acg#2498abi#2197aac#1e96a9 #1c95a7c#1994a6r#1693a5a#1591a4c#158fa3k#148da1l#138ba0i#13899fn#12879eg#12859d #11839cw#10819ai#107f99t#0f7d98h#0e7b97i#0e7996n#0d7794 #0c7593h#0c7392e#0b7291r#0b7090 #0a6e8fg#096c8dr#096a8ca#08688bs#07668ap#076489 #066287a#056086s#055e85 #045c84s#045a83h#035882e#025680 #02547fc#01527el#01527fe#015280n#015281c#015282h#015283e#015183s#015184 #015185h#015186e#015187r#015188 #015189h#01518aa#01518bn#01518cd#01518d #00508d #00508e ")
hecho("\n#3a80b5i#3d83b7n#4186b8t#4489bao#488cbb #4b8fbda#4f92be #5395c0f#5699c2i#5a9cc3s#5d9fc5t#61a2c6.#65a5c8 #68a8c9\"#6cabcbS#6faecch#73b1ceo#70b0cdu#6dafccl#6baecad#68adc9 #65acc8y#62acc7o#5fabc5u#5caac4r#5aa9c3 #57a8c2s#54a7c0t#51a6bfr#4ea5bee#4ca4bdn#49a3bbg#46a2bat#43a2b9h#40a1b8 #3da0b6f#3b9fb5a#389eb4l#359db3t#329cb1e#2f9bb0r#2d9aaf,#2a99ae #2798acV#2498aba#2197aal#1e96a9o#1c95a7r#1994a6i#1693a5e#1591a4,#158fa3 #148da1V#138ba0o#13899f'#12879ea#12859dc#11839ch#10819aa#107f99 #0f7d98w#0e7b97i#0e7996l#0d7794l#0c7593 #0c7392c#0b7291o#0b7090n#0a6e8fs#096c8du#096a8cm#08688be#07668a #076489y#066287o#056086u#055e85.#045c84 #045a83I#035882t#025680 #02547fi#01527es#01527f #015280t#015281h#015282e#015283 #015183w#015184a#015185y#015186 #015187o#015188f#015189 #01518a #01518b #01518c #01518d #00508d ")
hecho("\n#367db3t#3a80b5h#3d83b7i#4186b8n#4489bag#488cbbs#4b8fbd #4f92bef#5395c0o#5699c2r#5a9cc3 #5d9fc5t#61a2c6h#65a5c8e#68a8c9 #6cabcbw#6faecce#73b1cea#70b0cdk#6dafcc #6baecac#68adc9a#65acc8n#62acc7n#5fabc5o#5caac4t#5aa9c3 #57a8c2b#54a7c0e#51a6bf #4ea5bea#4ca4bdl#49a3bbl#46a2bao#43a2b9w#40a1b8e#3da0b6d#3b9fb5 #389eb4t#359db3o#329cb1 #2f9bb0t#2d9aafh#2a99aer#2798aci#2498abv#2197aae#1e96a9 #1c95a7i#1994a6n#1693a5 #1591a4t#158fa3h#148da1e#138ba0 #13899fd#12879ea#12859dr#11839ck#10819a #107f99o#0f7d98f#0e7b97 #0e7996t#0d7794h#0c7593e#0c7392 #0b7291w#0b7090o#0a6e8fo#096c8dd#096a8c.#08688b\"#07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d ")
cechoLink("\n\n&lt;medium_blue&gt; BACK TO VO'ACHA",function() expandAlias("vo'acha") end, "back", true)
cechoLink("\n&lt;medium_blue&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^vo'acha1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^vo'acha2$</name>
					<script>
hecho("\n#73b1ceY#70b0cdo#6dafccu#6baeca #68adc9s#65acc8a#62acc7y#5fabc5,#5caac4 #5aa9c3\"#57a8c2I#54a7c0 #51a6bfw#4ea5bei#4ca4bds#49a3bbh#46a2ba #43a2b9t#40a1b8o#3da0b6 #3b9fb5o#389eb4f#359db3f#329cb1e#2f9bb0r#2d9aaf #2a99aem#2798acy#2498ab #2197aab#1e96a9l#1c95a7o#1994a6o#1693a5d#1591a4 #158fa3u#148da1p#138ba0 #13899fi#12879en#12859d #11839cr#10819ai#107f99t#0f7d98u#0e7b97a#0e7996l#0d7794 #0c7593a#0c7392n#0b7291d#0b7090 #0a6e8fs#096c8dw#096a8ce#08688ba#07668ar#076489 #066287a#056086n#055e85 #045c84o#045a83a#035882t#025680h#02547f #01527eb#01527fe#015280f#015281o#015282r#015283e#015183 #015184h#015185i#015186s#015187 #015188F#015189a#01518an#01518bg#01518c.#01518d\"#00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b #004f9c ")
hecho("\n#6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b ")
hecho("\n#6cabcbM#6faecci#73b1cea#70b0cdz#6dafcci#6baeca #68adc9s#65acc8a#62acc7y#5fabc5s#5caac4,#5aa9c3 #57a8c2\"#54a7c0A#51a6bfn#4ea5be #4ca4bdo#49a3bba#46a2bat#43a2b9h#40a1b8 #3da0b6i#3b9fb5s#389eb4 #359db3n#329cb1o#2f9bb0t#2d9aaf #2a99ael#2798aci#2498abg#2197aah#1e96a9t#1c95a7l#1994a6y#1693a5 #1591a4t#158fa3a#148da1k#138ba0e#13899fn#12879e,#12859d #11839cV#10819aa#107f99l#0f7d98o#0e7b97r#0e7996i#0d7794e#0c7593.#0c7392 #0b7291I#0b7090t#0a6e8f #096c8di#096a8cs#08688b #07668af#076489o#066287r#056086g#055e85e#045c84d#045a83 #035882i#025680n#02547f #01527eb#01527fo#015280n#015281d#015282s#015283 #015183o#015184f#015185 #015186b#015187l#015188o#015189o#01518ad#01518b #01518ca#01518dn#00508dd#00508e #00508ft#005090h#005091e#005092 #005093S#005094h#005095a#005096d#005097o#004f97w#004f98 #004f99 #004f9a ")
hecho("\n#68a8c9s#6cabcbh#6faecca#73b1cel#70b0cdl#6dafcc #6baecan#68adc9e#65acc8v#62acc7e#5fabc5r#5caac4 #5aa9c3f#57a8c2o#54a7c0r#51a6bfg#4ea5bee#4ca4bdt#49a3bb.#46a2ba #43a2b9Y#40a1b8o#3da0b6u#3b9fb5 #389eb4s#359db3h#329cb1a#2f9bb0l#2d9aafl#2a99ae #2798acb#2498abe#2197aa #1e96a9b#1c95a7o#1994a6u#1693a5n#1591a4d#158fa3 #148da1t#138ba0o#13899f #12879eh#12859di#11839cs#10819a #107f99v#0f7d98e#0e7b97r#0e7996y#0d7794 #0c7593w#0c7392i#0b7291l#0b7090l#0a6e8f.#096c8d #096a8cI#08688bs#07668a #076489t#066287h#056086i#055e85s#045c84 #045a83a#035882 #025680r#02547fi#01527et#01527fe#015280 #015281y#015282o#015283u#015183 #015184w#015185i#015186s#015187h#015188 #015189t#01518ao#01518b #01518cp#01518da#00508dr#00508et#00508fa#005090k#005091e#005092 #005093i#005094n#005095?#005096\"#005097 #004f97 #004f98 #004f99 ")
hecho("\n#65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 ")
hecho("\n#61a2c6Y#65a5c8o#68a8c9u#6cabcb #6faeccs#73b1cea#70b0cdy#6dafcc,#6baeca #68adc9\"#65acc8Y#62acc7e#5fabc5s#5caac4,#5aa9c3 #57a8c2I#54a7c0 #51a6bfd#4ea5beo#4ca4bd.#49a3bb\"#46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 ")
hecho("\n#5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 ")
hecho("\n#5a9cc3M#5d9fc5i#61a2c6a#65a5c8z#68a8c9i#6cabcb #6faeccs#73b1cea#70b0cdy#6dafccs#6baeca,#68adc9 #65acc8\"#62acc7T#5fabc5h#5caac4e#5aa9c3n#57a8c2 #54a7c0p#51a6bfr#4ea5bee#4ca4bdp#49a3bba#46a2bar#43a2b9e#40a1b8 #3da0b6y#3b9fb5o#389eb4u#359db3r#329cb1 #2f9bb0s#2d9aafp#2a99aei#2798acr#2498abi#2197aat#1e96a9,#1c95a7 #1994a6V#1693a5a#1591a4l#158fa3o#148da1r#138ba0i#13899fe#12879e.#12859d #11839cT#10819ah#107f99e#0f7d98 #0e7b97u#0e7996n#0d7794s#0c7593e#0c7392e#0b7291n#0b7090 #0a6e8fp#096c8da#096a8ct#08688bh#07668a #076489o#066287f#056086 #055e85t#045c84h#045a83e#035882 #025680S#02547fh#01527ea#01527fd#015280o#015281w#015282 #015283a#015183w#015184a#015185i#015186t#015187s#015188 #015189y#01518ao#01518bu#01518c.#01518d\"#00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 ")
hecho("\n#5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 ")
hecho("\n#5395c0Y#5699c2o#5a9cc3u#5d9fc5 #61a2c6d#65a5c8r#68a8c9a#6cabcbw#6faecc #73b1cet#70b0cdh#6dafcce#6baeca #68adc9s#65acc8h#62acc7a#5fabc5r#5caac4p#5aa9c3 #57a8c2e#54a7c0d#51a6bfg#4ea5bee#4ca4bd #49a3bbo#46a2baf#43a2b9 #40a1b8a#3da0b6n#3b9fb5 #389eb4o#359db3b#329cb1s#2f9bb0i#2d9aafd#2a99aei#2798aca#2498abn#2197aa #1e96a9k#1c95a7n#1994a6i#1693a5f#1591a4e#158fa3 #148da1e#138ba0t#13899fc#12879eh#12859de#11839cd#10819a #107f99i#0f7d98n#0e7b97 #0e7996r#0d7794u#0c7593n#0c7392e#0b7291s#0b7090 #0a6e8fa#096c8dc#096a8cr#08688bo#07668as#076489s#066287 #056086y#055e85o#045c84u#045a83r#035882 #025680p#02547fa#01527el#01527fm#015280,#015281 #015282b#015283l#015183o#015184o#015185d#015186 #015187b#015188e#015189g#01518ai#01518bn#01518cn#01518di#00508dn#00508eg#00508f #005090t#005091o#005092 #005093 #005094 ")
hecho("\n#4f92bet#5395c0r#5699c2i#5a9cc3c#5d9fc5k#61a2c6l#65a5c8e#68a8c9 #6cabcbf#6faeccr#73b1ceo#70b0cdm#6dafcc #6baecay#68adc9o#65acc8u#62acc7r#5fabc5 #5caac4n#5aa9c3e#57a8c2w#54a7c0 #51a6bfw#4ea5beo#4ca4bdu#49a3bbn#46a2bad#43a2b9.#40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 ")
hecho("\n#4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 ")
hecho("\n#488cbbY#4b8fbdo#4f92beu#5395c0 #5699c2h#5a9cc3o#5d9fc5l#61a2c6d#65a5c8 #68a8c9y#6cabcbo#6faeccu#73b1cer#70b0cd #6dafccb#6baecal#68adc9e#65acc8e#62acc7d#5fabc5i#5caac4n#5aa9c3g#57a8c2 #54a7c0p#51a6bfa#4ea5bel#4ca4bdm#49a3bb #46a2baa#43a2b9g#40a1b8a#3da0b6i#3b9fb5n#389eb4s#359db3t#329cb1 #2f9bb0a#2d9aaf #2a99aec#2798aco#2498abi#2197aal#1e96a9e#1c95a7d#1994a6 #1693a5s#1591a4e#158fa3r#148da1p#138ba0e#13899fn#12879et#12859d #11839ct#10819ao#107f99t#0f7d98e#0e7b97m#0e7996 #0d7794i#0c7593n#0c7392l#0b7291a#0b7090i#0a6e8fd#096c8d #096a8cw#08688bi#07668at#076489h#066287 #056086j#055e85a#045c84d#045a83e#035882 #025680a#02547fn#01527ed#01527f #015280c#015281l#015282o#015283s#015183e#015184 #015185y#015186o#015187u#015188r#015189 #01518ae#01518by#01518ce#01518ds#00508d #00508ea#00508fs#005090 #005091 ")
hecho("\n#4489bay#488cbbo#4b8fbdu#4f92be #5395c0f#5699c2o#5a9cc3c#5d9fc5u#61a2c6s#65a5c8 #68a8c9u#6cabcbp#6faecco#73b1cen#70b0cd #6dafcct#6baecah#68adc9e#65acc8 #62acc7g#5fabc5u#5caac4a#5aa9c3r#57a8c2d#54a7c0i#51a6bfa#4ea5ben#4ca4bd'#49a3bbs#46a2ba #43a2b9s#40a1b8p#3da0b6i#3b9fb5r#389eb4i#359db3t#329cb1.#2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 ")
hecho("\n#4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f ")
hecho("\n#3d83b7\"#4186b8T#4489bah#488cbbe#4b8fbd #4f92beS#5395c0h#5699c2a#5a9cc3d#5d9fc5o#61a2c6w#65a5c8 #68a8c9i#6cabcbs#6faecc #73b1ces#70b0cda#6dafcct#6baecai#68adc9s#65acc8f#62acc7i#5fabc5e#5caac4d#5aa9c3 #57a8c2b#54a7c0y#51a6bf #4ea5bey#4ca4bdo#49a3bbu#46a2bar#43a2b9 #40a1b8o#3da0b6f#3b9fb5f#389eb4e#359db3r#329cb1i#2f9bb0n#2d9aafg#2a99ae,#2798ac\"#2498ab #2197aaM#1e96a9i#1c95a7a#1994a6z#1693a5i#1591a4 #158fa3p#148da1r#138ba0o#13899fn#12879eo#12859du#11839cn#10819ac#107f99e#0f7d98s#0e7b97 #0e7996g#0d7794r#0c7593a#0c7392v#0b7291e#0b7090l#0a6e8fy#096c8d,#096a8c #08688bc#07668ai#076489r#066287c#056086l#055e85i#045c84n#045a83g#035882 #025680t#02547fh#01527ee#01527f #015280i#015281d#015282o#015283l#015183 #015184o#015185f#015186 #015187V#015188o#015189'#01518aa#01518bc#01518ch#01518da#00508d #00508e ")
hecho("\n#3a80b5a#3d83b7s#4186b8 #4489bat#488cbbh#4b8fbde#4f92bey#5395c0 #5699c2l#5a9cc3o#5d9fc5o#61a2c6k#65a5c8 #68a8c9y#6cabcbo#6faeccu#73b1ce #70b0cdu#6dafccp#6baeca #68adc9a#65acc8n#62acc7d#5fabc5 #5caac4d#5aa9c3o#57a8c2w#54a7c0n#51a6bf #4ea5bew#4ca4bdi#49a3bbt#46a2bah#43a2b9 #40a1b8a#3da0b6n#3b9fb5 #389eb4u#359db3t#329cb1t#2f9bb0e#2d9aafr#2a99ae #2798acl#2498aba#2197aac#1e96a9k#1c95a7 #1994a6o#1693a5f#1591a4 #158fa3e#148da1m#138ba0o#13899ft#12879ei#12859do#11839cn#10819a.#107f99 #0f7d98\"#0e7b97I#0e7996 #0d7794a#0c7593m#0c7392 #0b7291t#0b7090h#0a6e8fe#096c8d #096a8cS#08688bh#07668aa#076489d#066287o#056086w#055e85'#045c84s#045a83 #035882w#025680h#02547fi#01527es#01527fp#015280e#015281r#015282,#015283\"#015183 #015184s#015185h#015186e#015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d ")
hecho("\n#367db3i#3a80b5n#3d83b7t#4186b8o#4489ban#488cbbe#4b8fbds#4f92be,#5395c0 #5699c2a#5a9cc3n#5d9fc5d#61a2c6 #65a5c8y#68a8c9o#6cabcbu#6faecc #73b1cef#70b0cde#6dafcce#6baecal#68adc9 #65acc8y#62acc7o#5fabc5u#5caac4r#5aa9c3s#57a8c2e#54a7c0l#51a6bff#4ea5be #4ca4bdd#49a3bbr#46a2baa#43a2b9g#40a1b8g#3da0b6e#3b9fb5d#389eb4 #359db3d#329cb1o#2f9bb0w#2d9aafn#2a99aew#2798aca#2498abr#2197aad#1e96a9 #1c95a7t#1994a6o#1693a5 #1591a4y#158fa3o#148da1u#138ba0r#13899f #12879ek#12859dn#11839ce#10819ae#107f99s#0f7d98.#0e7b97 #0e7996\"#0d7794I#0c7593 #0c7392a#0b7291m#0b7090 #0a6e8ft#096c8dh#096a8ce#08688b #07668aS#076489h#066287a#056086d#055e85o#045c84w#045a83'#035882s#025680 #02547ft#01527eh#01527fo#015280u#015281g#015282h#015283t#015183.#015184\"#015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d ")
hecho("\n#327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c ")
hecho("\n#2f77b0D#327ab2a#367db3r#3a80b5k#3d83b7n#4186b8e#4489bas#488cbbs#4b8fbd #4f92bef#5395c0a#5699c2l#5a9cc3l#5d9fc5s#61a2c6 #65a5c8a#68a8c9s#6cabcb #6faecct#73b1ceh#70b0cde#6dafcc #6baecai#68adc9d#65acc8o#62acc7l#5fabc5'#5caac4s#5aa9c3 #57a8c2s#54a7c0h#51a6bfa#4ea5bed#4ca4bdo#49a3bbw#46a2ba #43a2b9f#40a1b8l#3da0b6i#3b9fb5c#389eb4k#359db3e#329cb1r#2f9bb0s#2d9aaf #2a99aea#2798acn#2498abd#2197aa #1e96a9r#1c95a7i#1994a6s#1693a5e#1591a4s#158fa3,#148da1 #138ba0c#13899fl#12879eo#12859du#11839cd#10819ai#107f99n#0f7d98g#0e7b97 #0e7996t#0d7794h#0c7593e#0c7392 #0b7291a#0b7090i#0a6e8fr#096c8d #096a8cl#08688bi#07668ak#076489e#066287 #056086i#055e85n#045c84k#045a83;#035882 #025680t#02547fh#01527ee#01527f #015280S#015281h#015282a#015283d#015183o#015184w#015185 #015186i#015187s#015188 #015189 #01518a #01518b ")
hecho("\n#2b74afa#2f77b0l#327ab2l#367db3 #3a80b5a#3d83b7r#4186b8o#4489bau#488cbbn#4b8fbdd#4f92be #5395c0y#5699c2o#5a9cc3u#5d9fc5 #61a2c6n#65a5c8o#68a8c9w#6cabcb,#6faecc #73b1cet#70b0cdh#6dafcce#6baeca #68adc9s#65acc8h#62acc7a#5fabc5m#5caac4a#5aa9c3n#57a8c2 #54a7c0n#51a6bfo#4ea5bet#4ca4bdh#49a3bbi#46a2ban#43a2b9g#40a1b8 #3da0b6m#3b9fb5o#389eb4r#359db3e#329cb1 #2f9bb0t#2d9aafh#2a99aea#2798acn#2498ab #2197aaa#1e96a9 #1c95a7v#1994a6a#1693a5g#1591a4u#158fa3e#148da1 #138ba0s#13899fi#12879el#12859dh#11839co#10819au#107f99e#0f7d98t#0e7b97t#0e7996e#0d7794 #0c7593a#0c7392b#0b7291o#0b7090v#0a6e8fe#096c8d #096a8cy#08688bo#07668au#076489.#066287 #056086\"#055e85Y#045c84o#045a83u#035882 #025680a#02547fr#01527ee#01527f #015280c#015281l#015282a#015283w#015183s#015184 #015185a#015186n#015187d#015188 #015189 #01518a ")
hecho("\n#2871adt#2b74afe#2f77b0e#327ab2t#367db3h#3a80b5 #3d83b7n#4186b8o#4489baw#488cbb,#4b8fbd\"#4f92be #5395c0t#5699c2h#5a9cc3e#5d9fc5y#61a2c6 #65a5c8d#68a8c9e#6cabcbc#6faeccl#73b1cea#70b0cdr#6dafcce#6baeca.#68adc9 #65acc8\"#62acc7Y#5fabc5o#5caac4u#5aa9c3 #57a8c2w#54a7c0i#51a6bfl#4ea5bel#4ca4bd #49a3bbm#46a2bao#43a2b9v#40a1b8e#3da0b6 #3b9fb5s#389eb4w#359db3i#329cb1f#2f9bb0t#2d9aafl#2a99aey#2798ac #2498abt#2197aah#1e96a9r#1c95a7o#1994a6u#1693a5g#1591a4h#158fa3 #148da1t#138ba0h#13899fe#12879e #12859dt#11839cr#10819ae#107f99e#0f7d98s#0e7b97,#0e7996 #0d7794h#0c7593u#0c7392n#0b7291t#0b7090 #0a6e8fa#096c8dl#096a8cl#08688b #07668at#076489h#066287i#056086n#055e85g#045c84s#045a83 #035882t#025680h#02547fa#01527et#01527f #015280w#015281o#015282u#015283l#015183d#015184 #015185 #015186 #015187 #015188 #015189 ")
hecho("\n#246eacd#2871ade#2b74afs#2f77b0t#327ab2r#367db3o#3a80b5y#3d83b7 #4186b8D#4489bae#488cbbn#4b8fbdd#4f92bea#5395c0r#5699c2a#5a9cc3.#5d9fc5 #61a2c6T#65a5c8h#68a8c9i#6cabcbs#6faecc #73b1cei#70b0cds#6dafcc #6baecat#68adc9h#65acc8e#62acc7 #5fabc5p#5caac4a#5aa9c3t#57a8c2h#54a7c0 #51a6bfo#4ea5bef#4ca4bd #49a3bbt#46a2bah#43a2b9e#40a1b8 #3da0b6S#3b9fb5h#389eb4a#359db3d#329cb1o#2f9bb0w#2d9aaf.#2a99ae #2798acT#2498abh#2197aai#1e96a9s#1c95a7 #1994a6i#1693a5s#1591a4 #158fa3t#148da1h#138ba0e#13899f #12879eb#12859do#11839cn#10819ad#107f99 #0f7d98t#0e7b97h#0e7996a#0d7794t#0c7593 #0c7392y#0b7291o#0b7090u#0a6e8f #096c8dh#096a8ca#08688bv#07668ae#076489 #066287w#056086i#055e85s#045c84h#045a83e#035882d#025680 #02547ff#01527eo#01527fr#015280.#015281\"#015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 ")
hecho("\n#206baa #246eac #2871ad #2b74af #2f77b0 #327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 ")
hecho("\n#1d68a9\"#206baaB#246eace#2871adn#2b74afe#2f77b0a#327ab2t#367db3h#3a80b5 #3d83b7t#4186b8h#4489bae#488cbb #4b8fbds#4f92beh#5395c0a#5699c2d#5a9cc3o#5d9fc5w#61a2c6 #65a5c8o#68a8c9f#6cabcb #6faecct#73b1ceh#70b0cde#6dafcc #6baecal#68adc9e#65acc8a#62acc7v#5fabc5e#5caac4s#5aa9c3,#57a8c2 #54a7c0y#51a6bfo#4ea5beu#4ca4bd #49a3bbw#46a2bai#43a2b9l#40a1b8l#3da0b6 #3b9fb5d#389eb4r#359db3a#329cb1w#2f9bb0 #2d9aafs#2a99aet#2798acr#2498abe#2197aan#1e96a9g#1c95a7t#1994a6h#1693a5.#1591a4\"#158fa3 #148da1T#138ba0h#13899fe#12879e #12859dS#11839ch#10819aa#107f99d#0f7d98o#0e7b97w#0e7996 #0d7794c#0c7593i#0c7392r#0b7291c#0b7090l#0a6e8fe#096c8ds#096a8c #08688by#07668ao#076489u#066287,#056086 #055e85a#045c84n#045a83d#035882 #025680y#02547fo#01527eu#01527f #015280s#015281m#015282e#015283l#015183l#015184 #015185 #015186 ")
hecho("\n#1964a7b#1d68a9l#206baao#246eaco#2871add#2b74af #2f77b0u#327ab2p#367db3o#3a80b5n#3d83b7 #4186b8t#4489bah#488cbbe#4b8fbd #4f92bec#5395c0o#5699c2l#5a9cc3d#5d9fc5 #61a2c6w#65a5c8i#68a8c9n#6cabcbd#6faecc.#73b1ce #70b0cdA#6dafccl#6baecal#68adc9 #65acc8t#62acc7h#5fabc5e#5caac4 #5aa9c3w#57a8c2a#54a7c0r#51a6bfm#4ea5bet#4ca4bdh#49a3bb #46a2bah#43a2b9a#40a1b8s#3da0b6 #3b9fb5g#389eb4o#359db3n#329cb1e#2f9bb0 #2d9aafo#2a99aeu#2798act#2498ab #2197aao#1e96a9f#1c95a7 #1994a6t#1693a5h#1591a4e#158fa3 #148da1a#138ba0i#13899fr#12879e,#12859d #11839ca#10819an#107f99d#0f7d98 #0e7b97y#0e7996o#0d7794u#0c7593 #0c7392f#0b7291i#0b7090n#0a6e8fd#096c8d #096a8cy#08688bo#07668au#076489r#066287s#056086e#055e85l#045c84f#045a83 #035882s#025680h#02547fi#01527ev#01527fe#015280r#015281i#015282n#015283g#015183.#015184 #015185 ")
hecho("\n#1661a5N#1964a7o#1d68a9t#206baah#246eaci#2871adn#2b74afg#2f77b0 #327ab2s#367db3u#3a80b5r#3d83b7r#4186b8o#4489bau#488cbbn#4b8fbdd#4f92bes#5395c0 #5699c2y#5a9cc3o#5d9fc5u#61a2c6 #65a5c8b#68a8c9u#6cabcbt#6faecc #73b1ced#70b0cda#6dafccr#6baecak#68adc9n#65acc8e#62acc7s#5fabc5s#5caac4 #5aa9c3w#57a8c2i#54a7c0t#51a6bfh#4ea5be #4ca4bdt#49a3bbh#46a2bae#43a2b9 #40a1b8e#3da0b6e#3b9fb5r#389eb4i#359db3e#329cb1 #2f9bb0d#2d9aafr#2a99aey#2798ac #2498abr#2197aaa#1e96a9s#1c95a7p#1994a6 #1693a5o#1591a4f#158fa3 #148da1s#138ba0c#13899fa#12879el#12859de#11839cs#10819a #107f99s#0f7d98c#0e7b97r#0e7996a#0d7794t#0c7593c#0c7392h#0b7291i#0b7090n#0a6e8fg#096c8d #096a8ca#08688bg#07668aa#076489i#066287n#056086s#055e85t#045c84 #045a83t#035882h#025680e#02547f #01527ee#01527fa#015280r#015281t#015282h#015283.#015183 #015184 ")
hecho("\n#125ea4 #1661a5 #1964a7 #1d68a9 #206baa #246eac #2871ad #2b74af #2f77b0 #327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 ")
hecho("\n#0e5ba2\"#125ea4S#1661a5t#1964a7r#1d68a9e#206baan#246eacg#2871adt#2b74afh#2f77b0 #327ab2i#367db3s#3a80b5 #3d83b7h#4186b8i#4489bas#488cbb #4b8fbdw#4f92bei#5395c0l#5699c2l#5a9cc3,#5d9fc5\"#61a2c6 #65a5c8w#68a8c9h#6cabcbi#6faeccs#73b1cep#70b0cde#6dafccr#6baecas#68adc9 #65acc8M#62acc7i#5fabc5a#5caac4z#5aa9c3i#57a8c2.#54a7c0 #51a6bf\"#4ea5beH#4ca4bdi#49a3bbs#46a2ba #43a2b9w#40a1b8i#3da0b6l#3b9fb5l#389eb4 #359db3i#329cb1s#2f9bb0 #2d9aaft#2a99aeh#2798aca#2498abt#2197aa #1e96a9w#1c95a7e#1994a6a#1693a5k#1591a4n#158fa3e#148da1s#138ba0s#13899f #12879eb#12859de#11839c #10819ap#107f99u#0f7d98r#0e7b97g#0e7996e#0d7794d#0c7593.#0c7392\"#0b7291 #0b7090T#0a6e8fh#096c8de#096a8c #08688bd#07668aa#076489r#066287k#056086n#055e85e#045c84s#045a83s#035882 #025680p#02547fr#01527ee#01527fs#015280s#015281e#015282s#015283 ")
hecho("\n#0b58a1i#0e5ba2n#125ea4,#1661a5 #1964a7a#1d68a9l#206baam#246eaco#2871ads#2b74aft#2f77b0 #327ab2a#367db3s#3a80b5 #3d83b7i#4186b8f#4489ba #488cbbi#4b8fbdt#4f92be #5395c0w#5699c2e#5a9cc3r#5d9fc5e#61a2c6 #65a5c8c#68a8c9h#6cabcbo#6faecck#73b1cei#70b0cdn#6dafccg#6baeca #68adc9y#65acc8o#62acc7u#5fabc5,#5caac4 #5aa9c3a#57a8c2n#54a7c0d#51a6bf #4ea5bey#4ca4bdo#49a3bbu#46a2ba #43a2b9f#40a1b8i#3da0b6g#3b9fb5h#389eb4t#359db3 #329cb1t#2f9bb0o#2d9aaf #2a99aeb#2798acr#2498abe#2197aaa#1e96a9t#1c95a7h#1994a6e#1693a5.#1591a4 #158fa3\"#148da1T#138ba0h#13899fe#12879e #12859ds#11839ct#10819ar#107f99o#0f7d98n#0e7b97g#0e7996 #0d7794w#0c7593i#0c7392l#0b7291l#0b7090 #0a6e8fw#096c8di#096a8cn#08688b #07668ao#076489u#066287t#056086,#055e85 #045c84a#045a83n#035882d#025680 #02547fy#01527eo#01527fu#015280 #015281 #015282 ")
hecho("\n#07559fw#0b58a1i#0e5ba2l#125ea4l#1661a5 #1964a7b#1d68a9e#206baa #246eacs#2871adt#2b74afr#2f77b0o#327ab2n#367db3g#3a80b5 #3d83b7t#4186b8o#4489ba #488cbbb#4b8fbde#4f92bet#5395c0t#5699c2e#5a9cc3r#5d9fc5 #61a2c6s#65a5c8e#68a8c9r#6cabcbv#6faecce#73b1ce #70b0cdh#6dafcci#6baecam#68adc9.#65acc8\"#62acc7 #5fabc5T#5caac4h#5aa9c3e#57a8c2 #54a7c0m#51a6bfa#4ea5bes#4ca4bds#49a3bbi#46a2bav#43a2b9e#40a1b8 #3da0b6s#3b9fb5e#389eb4r#359db3p#329cb1e#2f9bb0n#2d9aaft#2a99ae #2798acm#2498aba#2197aat#1e96a9e#1c95a7r#1994a6i#1693a5a#1591a4l#158fa3i#148da1z#138ba0e#13899fs#12879e #12859db#11839ce#10819af#107f99o#0f7d98r#0e7b97e#0e7996 #0d7794y#0c7593o#0c7392u#0b7291,#0b7090 #0a6e8fi#096c8dt#096a8cs#08688b #07668as#076489c#066287a#056086l#055e85e#045c84s#045a83 #035882b#025680l#02547fa#01527ec#01527fk#015280 #015281 ")
hecho("\n#04529ea#07559fs#0b58a1 #0e5ba2p#125ea4i#1661a5t#1964a7c#1d68a9h#206baa #246eaca#2871adn#2b74afd#2f77b0 #327ab2i#367db3t#3a80b5s#3d83b7 #4186b8e#4489bay#488cbbe#4b8fbds#4f92be #5395c0l#5699c2i#5a9cc3k#5d9fc5e#61a2c6 #65a5c8h#68a8c9o#6cabcbt#6faecc #73b1ceb#70b0cdu#6dafccr#6baecan#68adc9i#65acc8n#62acc7g#5fabc5 #5caac4c#5aa9c3o#57a8c2a#54a7c0l#51a6bfs#4ea5be #4ca4bdf#49a3bbr#46a2bao#43a2b9m#40a1b8 #3da0b6t#3b9fb5h#389eb4e#359db3 #329cb1d#2f9bb0e#2d9aafp#2a99aet#2798ach#2498abs#2197aa #1e96a9o#1c95a7f#1994a6 #1693a5t#1591a4h#158fa3e#148da1 #138ba0e#13899fa#12879er#12859dt#11839ch#10819a.#107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 ")
hecho("\n#004f9c #04529e #07559f #0b58a1 #0e5ba2 #125ea4 #1661a5 #1964a7 #1d68a9 #206baa #246eac #2871ad #2b74af #2f77b0 #327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f ")
hecho("\n#004f9b\"#004f9cI#04529ef#07559f #0b58a1y#0e5ba2o#125ea4u#1661a5 #1964a7a#1d68a9r#206baae#246eac #2871adf#2b74afo#2f77b0u#327ab2n#367db3d#3a80b5 #3d83b7w#4186b8a#4489ban#488cbbt#4b8fbdi#4f92ben#5395c0g#5699c2,#5a9cc3 #5d9fc5y#61a2c6o#65a5c8u#68a8c9r#6cabcb #6faeccb#73b1cel#70b0cdo#6dafcco#6baecad#68adc9 #65acc8w#62acc7i#5fabc5l#5caac4l#5aa9c3 #57a8c2f#54a7c0e#51a6bfe#4ea5bed#4ca4bd #49a3bbt#46a2bah#43a2b9e#40a1b8 #3da0b6t#3b9fb5r#389eb4e#359db3e#329cb1s#2f9bb0 #2d9aafa#2a99aen#2798acd#2498ab #2197aay#1e96a9o#1c95a7u#1994a6r#1693a5 #1591a4f#158fa3l#148da1e#138ba0s#13899fh#12879e #12859dw#11839ci#10819al#107f99l#0f7d98 #0e7b97f#0e7996e#0d7794e#0c7593d#0c7392 #0b7291t#0b7090h#0a6e8fe#096c8d #096a8ca#08688bn#07668ai#076489m#066287a#056086l#055e85s#045c84.#045a83 #035882O#025680n#02547fe#01527e ")
hecho("\n#004f9aw#004f9ba#004f9cy#04529e #07559fo#0b58a1r#0e5ba2 #125ea4a#1661a5n#1964a7o#1d68a9t#206baah#246eace#2871adr#2b74af,#2f77b0 #327ab2s#367db3t#3a80b5r#3d83b7e#4186b8n#4489bag#488cbbt#4b8fbdh#4f92be #5395c0s#5699c2h#5a9cc3a#5d9fc5l#61a2c6l#65a5c8 #68a8c9c#6cabcbo#6faeccm#73b1cee#70b0cd #6dafccf#6baecar#68adc9o#65acc8m#62acc7 #5fabc5w#5caac4e#5aa9c3a#57a8c2k#54a7c0n#51a6bfe#4ea5bes#4ca4bds#49a3bb.#46a2ba\"#43a2b9 #40a1b8T#3da0b6h#3b9fb5e#389eb4 #359db3d#329cb1r#2f9bb0y#2d9aaf #2a99aer#2798aca#2498abs#2197aap#1e96a9 #1c95a7e#1994a6c#1693a5h#1591a4o#158fa3e#148da1s#138ba0 #13899fw#12879ei#12859dt#11839ch#10819ai#107f99n#0f7d98 #0e7b97y#0e7996o#0d7794u#0c7593r#0c7392 #0b7291m#0b7090i#0a6e8fn#096c8dd#096a8c #08688ba#07668as#076489 #066287V#056086o#055e85'#045c84a#045a83c#035882h#025680a#02547f ")
hecho("\n#004f99s#004f9ap#004f9be#004f9ca#04529ek#07559fs#0b58a1,#0e5ba2 #125ea4i#1661a5t#1964a7s#1d68a9 #206baad#246eace#2871ada#2b74afd#2f77b0 #327ab2e#367db3y#3a80b5e#3d83b7s#4186b8 #4489baf#488cbbo#4b8fbdc#4f92beu#5395c0s#5699c2e#5a9cc3d#5d9fc5 #61a2c6o#65a5c8n#68a8c9 #6cabcby#6faecco#73b1ceu#70b0cd #6dafcca#6baecas#68adc9 #65acc8i#62acc7t#5fabc5 #5caac4s#5aa9c3l#57a8c2i#54a7c0t#51a6bfh#4ea5bee#4ca4bdr#49a3bbs#46a2ba #43a2b9a#40a1b8r#3da0b6o#3b9fb5u#389eb4n#359db3d#329cb1 #2f9bb0y#2d9aafo#2a99aeu#2798ac,#2498ab #2197aat#1e96a9o#1c95a7n#1994a6g#1693a5u#1591a4e#158fa3 #148da1d#138ba0a#13899fr#12879et#12859di#11839cn#10819ag#107f99 #0f7d98o#0e7b97u#0e7996t#0d7794 #0c7593t#0c7392o#0b7291 #0b7090t#0a6e8fa#096c8ds#096a8ct#08688be#07668a #076489t#066287h#056086e#055e85 #045c84a#045a83i#035882r#025680.")
hecho("\n#004f98 #004f99 #004f9a #004f9b #004f9c #04529e #07559f #0b58a1 #0e5ba2 #125ea4 #1661a5 #1964a7 #1d68a9 #206baa #246eac #2871ad #2b74af #2f77b0 #327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 ")
hecho("\n#004f97\"#004f98B#004f99e#004f9a #004f9bs#004f9ct#04529er#07559fo#0b58a1n#0e5ba2g#125ea4,#1661a5\"#1964a7 #1d68a9M#206baai#246eaca#2871adz#2b74afi#2f77b0 #327ab2c#367db3o#3a80b5m#3d83b7m#4186b8a#4489ban#488cbbd#4b8fbds#4f92be,#5395c0 #5699c2a#5a9cc3s#5d9fc5 #61a2c6V#65a5c8o#68a8c9'#6cabcba#6faeccc#73b1ceh#70b0cda#6dafcc #6baecar#68adc9e#65acc8a#62acc7r#5fabc5s#5caac4 #5aa9c3u#57a8c2p#54a7c0 #51a6bfb#4ea5bee#4ca4bdf#49a3bbo#46a2bar#43a2b9e#40a1b8 #3da0b6y#3b9fb5o#389eb4u#359db3,#329cb1 #2f9bb0s#2d9aafp#2a99aer#2798ace#2498aba#2197aad#1e96a9i#1c95a7n#1994a6g#1693a5 #1591a4i#158fa3t#148da1s#138ba0 #13899fg#12879er#12859de#11839ca#10819at#107f99 #0f7d98h#0e7b97o#0e7996o#0d7794d#0c7593 #0c7392o#0b7291u#0b7090t#0a6e8fw#096c8da#096a8cr#08688bd#07668a.#076489 #066287 #056086 #055e85 #045c84 #045a83 ")
hecho("\n#005097\"#004f97F#004f98e#004f99e#004f9ad#004f9b #004f9ct#04529eh#07559fe#0b58a1 #0e5ba2g#125ea4r#1661a5o#1964a7u#1d68a9n#206baad#246eac #2871adb#2b74afl#2f77b0o#327ab2o#367db3d#3a80b5.#3d83b7 #4186b8F#4489bae#488cbbe#4b8fbdd#4f92be #5395c0t#5699c2h#5a9cc3e#5d9fc5 #61a2c6a#65a5c8n#68a8c9i#6cabcbm#6faecca#73b1cel#70b0cds#6dafcc #6baecaf#68adc9l#65acc8e#62acc7s#5fabc5h#5caac4.#5aa9c3 #57a8c2G#54a7c0i#51a6bfv#4ea5bee#4ca4bd #49a3bbt#46a2bah#43a2b9e#40a1b8 #3da0b6S#3b9fb5h#389eb4a#359db3d#329cb1o#2f9bb0w#2d9aaf #2a99aey#2798aco#2498abu#2197aar#1e96a9 #1c95a7s#1994a6t#1693a5r#1591a4e#158fa3n#148da1g#138ba0t#13899fh#12879e,#12859d #11839ca#10819an#107f99d#0f7d98 #0e7b97h#0e7996e#0d7794 #0c7593s#0c7392h#0b7291a#0b7090l#0a6e8fl#096c8d #096a8cg#08688bi#07668av#076489e#066287 #056086 #055e85 #045c84 ")
hecho("\n#005096y#005097o#004f97u#004f98 #004f99h#004f9ai#004f9bs#004f9c.#04529e\"#07559f #0b58a1V#0e5ba2o#125ea4'#1661a5a#1964a7c#1d68a9h#206baaa#246eac #2871adl#2b74afu#2f77b0n#327ab2g#367db3e#3a80b5s#3d83b7 #4186b8f#4489bao#488cbbr#4b8fbdw#4f92bea#5395c0r#5699c2d#5a9cc3,#5d9fc5 #61a2c6s#65a5c8n#68a8c9a#6cabcbp#6faeccp#73b1cei#70b0cdn#6dafccg#6baeca #68adc9t#65acc8h#62acc7e#5fabc5 #5caac4a#5aa9c3i#57a8c2r#54a7c0 #51a6bfb#4ea5bee#4ca4bdf#49a3bbo#46a2bar#43a2b9e#40a1b8 #3da0b6y#3b9fb5o#389eb4u#359db3 #329cb1w#2f9bb0i#2d9aaft#2a99aeh#2798ac #2498aba#2197aa #1e96a9c#1c95a7h#1994a6o#1693a5r#1591a4t#158fa3l#148da1e#138ba0d#13899f #12879eh#12859di#11839cs#10819as#107f99 #0f7d98a#0e7b97n#0e7996d#0d7794 #0c7593v#0c7392a#0b7291n#0b7090i#0a6e8fs#096c8dh#096a8ce#08688bs#07668a #076489i#066287n#056086 #055e85 ")
hecho("\n#005095a#005096 #005097c#004f97o#004f98l#004f99l#004f9aa#004f9bp#004f9cs#04529ee#07559f #0b58a1o#0e5ba2f#125ea4 #1661a5s#1964a7m#1d68a9o#206baak#246eace#2871ad #2b74afa#2f77b0n#327ab2d#367db3 #3a80b5e#3d83b7l#4186b8d#4489bar#488cbbi#4b8fbdt#4f92bec#5395c0h#5699c2 #5a9cc3m#5d9fc5a#61a2c6g#65a5c8i#68a8c9c#6cabcbs#6faecc.#73b1ce #70b0cdM#6dafcci#6baecaa#68adc9z#65acc8i#62acc7 #5fabc5g#5caac4i#5aa9c3v#57a8c2e#54a7c0s#51a6bf #4ea5bea#4ca4bd #49a3bbs#46a2bao#43a2b9f#40a1b8t#3da0b6 #3b9fb5l#389eb4a#359db3u#329cb1g#2f9bb0h#2d9aaf,#2a99ae #2798acn#2498abe#2197aas#1e96a9t#1c95a7l#1994a6i#1693a5n#1591a4g#158fa3 #148da1a#138ba0g#13899fa#12879ei#12859dn#11839cs#10819at#107f99 #0f7d98t#0e7b97h#0e7996e#0d7794 #0c7593i#0c7392d#0b7291o#0b7090l#0a6e8f #096c8dw#096a8ci#08688bt#07668ah#076489 #066287a#056086 ")
hecho("\n#005094s#005095n#005096e#005097e#004f97r#004f98.#004f99 #004f9a\"#004f9bS#004f9ce#04529er#07559fv#0b58a1e#0e5ba2 #125ea4t#1661a5h#1964a7e#1d68a9 #206baaP#246eacr#2871ada#2b74afa#2f77b0d#327ab2i#367db3 #3a80b5w#3d83b7e#4186b8l#4489bal#488cbb.#4b8fbd\"#4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 ")
hecho("\n#005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b #004f9c #04529e #07559f #0b58a1 #0e5ba2 #125ea4 #1661a5 #1964a7 #1d68a9 #206baa #246eac #2871ad #2b74af #2f77b0 #327ab2 #367db3 #3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 ")
hecho("\n#005092Y#005093o#005094u#005095 #005096h#005097a#004f97v#004f98e#004f99 #004f9ag#004f9ba#004f9ci#04529en#07559fe#0b58a1d#0e5ba2 #125ea4t#1661a5h#1964a7e#1d68a9 #206baaO#246eaca#2871adt#2b74afh#2f77b0 #327ab2o#367db3f#3a80b5 #3d83b7t#4186b8h#4489bae#488cbb #4b8fbdF#4f92beo#5395c0r#5699c2e#5a9cc3s#5d9fc5t#61a2c6w#65a5c8a#68a8c9l#6cabcbk#6faecce#73b1cer#70b0cd.#6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a ")
cechoLink("\n\n&lt;medium_blue&gt; BACK TO VO'ACHA",function() expandAlias("vo'acha") end, "back", true)
cechoLink("\n&lt;medium_blue&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^vo'acha2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^vo'acha3$</name>
					<script>hecho("\n#73b1ceV#70b0cdO#6dafcc'#6baecaA#68adc9C#65acc8H#62acc7A#5fabc5,#5caac4 #5aa9c3T#57a8c2H#54a7c0E#51a6bf #4ea5beS#4ca4bdH#49a3bbA#46a2baD#43a2b9O#40a1b8W#3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b #004f9c ")
hecho("\n#6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a #004f9b ")
hecho("\n#6cabcbT#6faecch#73b1cee#70b0cd #6dafccS#6baecah#68adc9a#65acc8d#62acc7o#5fabc5w#5caac4 #5aa9c3t#57a8c2a#54a7c0k#51a6bfe#4ea5bes#4ca4bd #49a3bbt#46a2bah#43a2b9e#40a1b8 #3da0b6f#3b9fb5o#389eb4r#359db3m#329cb1 #2f9bb0o#2d9aaff#2a99ae #2798act#2498abh#2197aae#1e96a9 #1c95a7s#1994a6i#1693a5n#1591a4u#158fa3o#148da1u#138ba0s#13899f #12879ev#12859di#11839cp#10819ae#107f99r#0f7d98.#0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 #004f9a ")
hecho("\n#68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 #005097 #004f97 #004f98 #004f99 ")
hecho("\n#65a5c8T#68a8c9h#6cabcbe#6faecc #73b1ceS#70b0cdh#6dafcca#6baecad#68adc9o#65acc8w#62acc7 #5fabc5i#5caac4s#5aa9c3 #57a8c2t#54a7c0h#51a6bfe#4ea5be #4ca4bda#49a3bbc#46a2bat#43a2b9i#40a1b8v#3da0b6e#3b9fb5 #389eb4h#359db3u#329cb1n#2f9bb0t#2d9aafe#2a99aer#2798ac,#2498ab #2197aaw#1e96a9o#1c95a7r#1994a6k#1693a5i#1591a4n#158fa3g#148da1 #138ba0p#13899fu#12879er#12859de#11839cl#10819ay#107f99 #0f7d98o#0e7b97n#0e7996 #0d7794w#0c7593i#0c7392l#0b7291l#0b7090 #0a6e8fa#096c8dn#096a8cd#08688b #07668ai#076489n#066287s#056086t#055e85i#045c84n#045a83c#035882t#025680 #02547fa#01527el#01527fo#015280n#015281e#015282.#015283 #015183W#015184h#015185e#015186r#015187e#015188a#015189s#01518a #01518bt#01518ch#01518de#00508d #00508eB#00508fr#005090o#005091o#005092d#005093m#005094o#005095t#005096h#005097e#004f97r#004f98 ")
hecho("\n#61a2c6l#65a5c8a#68a8c9y#6cabcbs#6faecc #73b1ceh#70b0cde#6dafccr#6baeca #68adc9t#65acc8r#62acc7a#5fabc5p#5caac4 #5aa9c3a#57a8c2n#54a7c0d#51a6bf #4ea5bew#4ca4bda#49a3bbi#46a2bat#43a2b9s#40a1b8 #3da0b6t#3b9fb5o#389eb4 #359db3s#329cb1t#2f9bb0r#2d9aafi#2a99aek#2798ace#2498ab,#2197aa #1e96a9t#1c95a7h#1994a6e#1693a5 #1591a4S#158fa3h#148da1a#138ba0d#13899fo#12879ew#12859d #11839cw#10819ai#107f99l#0f7d98l#0e7b97 #0e7996n#0d7794o#0c7593t#0c7392 #0b7291o#0b7090n#0a6e8fl#096c8dy#096a8c #08688bw#07668aa#076489i#066287t#056086 #055e85b#045c84u#045a83t#035882 #025680s#02547fe#01527ee#01527fk#015280 #015281t#015282h#015283e#015183 #015184o#015185p#015186p#015187o#015188r#015189t#01518au#01518bn#01518ci#01518dt#00508dy#00508e #00508ft#005090o#005091 #005092l#005093a#005094y#005095 #005096 #005097 #004f97 ")
hecho("\n#5d9fc5d#61a2c6o#65a5c8w#68a8c9n#6cabcb #6faecci#73b1cet#70b0cds#6dafcc #6baecap#68adc9r#65acc8e#62acc7y#5fabc5.#5caac4 #5aa9c3T#57a8c2h#54a7c0e#51a6bf #4ea5beS#4ca4bdh#49a3bba#46a2bad#43a2b9o#40a1b8w#3da0b6 #3b9fb5f#389eb4i#359db3n#329cb1d#2f9bb0s#2d9aaf #2a99aes#2798act#2498abr#2197aae#1e96a9n#1c95a7g#1994a6t#1693a5h#1591a4 #158fa3i#148da1n#138ba0 #13899ft#12879eh#12859de#11839c #10819at#107f99r#0f7d98a#0e7b97c#0e7996k#0d7794i#0c7593n#0c7392g#0b7291,#0b7090 #0a6e8ft#096c8dh#096a8ce#08688b #07668aa#076489m#066287b#056086u#055e85s#045c84h#045a83,#035882 #025680i#02547ft#01527e #01527fw#015280i#015281l#015282l#015283 #015183m#015184o#015185v#015186e#015187 #015188s#015189w#01518ai#01518bf#01518ct#01518dl#00508dy#00508e #00508ft#005090o#005091 #005092p#005093u#005094r#005095g#005096e#005097 ")
hecho("\n#5a9cc3a#5d9fc5l#61a2c6l#65a5c8 #68a8c9t#6cabcbh#6faecca#73b1cet#70b0cd #6dafccw#6baecao#68adc9u#65acc8l#62acc7d#5fabc5 #5caac4d#5aa9c3e#57a8c2s#54a7c0t#51a6bfr#4ea5beo#4ca4bdy#49a3bb #46a2baD#43a2b9e#40a1b8n#3da0b6d#3b9fb5a#389eb4r#359db3a#329cb1 #2f9bb0a#2d9aafn#2a99aed#2798ac #2498abw#2197aae#1e96a9a#1c95a7k#1994a6n#1693a5e#1591a4s#158fa3s#148da1 #138ba0i#13899fn#12879e #12859dt#11839ch#10819ae#107f99 #0f7d98R#0e7b97h#0e7996y#0d7794t#0c7593h#0c7392m#0b7291.#0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 #005096 ")
hecho("\n#5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 #005094 #005095 ")
hecho("\n#5395c0.#5699c2:#5a9cc3*#5d9fc5~#61a2c6*#65a5c8:#68a8c9.#6cabcb_#6faecc.#73b1ce:#70b0cd*#6dafcc~#6baeca*#68adc9:#65acc8.#62acc7_#5fabc5.#5caac4:#5aa9c3*#57a8c2~#54a7c0*#51a6bf:#4ea5be.#4ca4bd_#49a3bb.#46a2ba:#43a2b9*#40a1b8~#3da0b6*#3b9fb5:#389eb4.#359db3_#329cb1.#2f9bb0:#2d9aaf*#2a99ae~#2798ac*#2498ab:#2197aa.#1e96a9_#1c95a7.#1994a6:#1693a5*#1591a4~#158fa3*#148da1:#138ba0.#13899f_#12879e.#12859d:#11839c*#10819a~#107f99*#0f7d98:#0e7b97.#0e7996_#0d7794.#0c7593:#0c7392*#0b7291~#0b7090*#0a6e8f:#096c8d.#096a8c_#08688b.#07668a:#076489*#066287~#056086*#055e85:#045c84.#045a83_#035882.#025680:#02547f*#01527e~#01527f*#015280:#015281.#015282_#015283.#015183:#015184*#015185~#015186*#015187:#015188.#015189_#01518a.#01518b:#01518c*#01518d~#00508d*#00508e:#00508f.#005090 #005091 #005092 #005093 #005094 ")
hecho("\n#4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e #00508f #005090 #005091 #005092 #005093 ")
hecho("\n#4b8fbdW#4f92bee#5395c0 #5699c2a#5a9cc3r#5d9fc5e#61a2c6 #65a5c8w#68a8c9a#6cabcbr#6faeccn#73b1cee#70b0cdd#6dafcc #6baecat#68adc9h#65acc8a#62acc7t#5fabc5 #5caac4V#5aa9c3o#57a8c2'#54a7c0a#51a6bfc#4ea5beh#4ca4bda#49a3bb #46a2bai#43a2b9s#40a1b8 #3da0b6w#3b9fb5i#389eb4t#359db3h#329cb1 #2f9bb0u#2d9aafs#2a99ae,#2798ac #2498abw#2197aah#1e96a9e#1c95a7n#1994a6 #1693a5w#1591a4e#158fa3 #148da1t#138ba0r#13899fe#12879ea#12859dd#11839c #10819ai#107f99n#0f7d98 #0e7b97t#0e7996h#0d7794o#0c7593s#0c7392e#0b7291 #0b7090d#0a6e8fa#096c8dr#096a8ck#08688b #07668ap#076489l#066287a#056086c#055e85e#045c84s#045a83.#035882 #025680H#02547fe#01527e #01527fi#015280s#015281 #015282n#015283o#015183t#015184 #015185t#015186h#015187e#015188r#015189e#01518a #01518bt#01518co#01518d #00508dg#00508eu#00508fi#005090d#005091e#005092 ")
hecho("\n#488cbbo#4b8fbdu#4f92ber#5395c0 #5699c2w#5a9cc3a#5d9fc5y#61a2c6,#65a5c8 #68a8c9H#6cabcbe#6faecc #73b1cei#70b0cds#6dafcc #6baecan#68adc9o#65acc8t#62acc7 #5fabc5t#5caac4h#5aa9c3e#57a8c2r#54a7c0e#51a6bf #4ea5bet#4ca4bdo#49a3bb #46a2bac#43a2b9o#40a1b8m#3da0b6f#3b9fb5o#389eb4r#359db3t#329cb1 #2f9bb0u#2d9aafs#2a99ae #2798acf#2498abr#2197aao#1e96a9m#1c95a7 #1994a6t#1693a5h#1591a4e#158fa3 #148da1t#138ba0e#13899fr#12879er#12859do#11839cr#10819as#107f99 #0f7d98w#0e7b97e#0e7996 #0d7794c#0c7593a#0c7392n#0b7291n#0b7090o#0a6e8ft#096c8d #096a8cs#08688be#07668ae#076489.#066287 #056086H#055e85e#045c84 #045a83i#035882s#025680 #02547ft#01527eh#01527fe#015280r#015281e#015282 #015283t#015183o#015184 #015185d#015186e#015187m#015188a#015189n#01518ad#01518b #01518ct#01518dh#00508da#00508et#00508f #005090 #005091 ")
hecho("\n#4489baw#488cbbe#4b8fbd #4f92beh#5395c0a#5699c2v#5a9cc3e#5d9fc5 #61a2c6n#65a5c8o#68a8c9 #6cabcbf#6faecce#73b1cea#70b0cdr#6dafcc,#6baeca #68adc9t#65acc8h#62acc7a#5fabc5t#5caac4 #5aa9c3w#57a8c2e#54a7c0 #51a6bfa#4ea5ber#4ca4bde#49a3bb #46a2ban#43a2b9o#40a1b8t#3da0b6 #3b9fb5w#389eb4e#359db3a#329cb1k#2f9bb0 #2d9aafi#2a99aen#2798ac #2498abt#2197aah#1e96a9e#1c95a7 #1994a6f#1693a5a#1591a4c#158fa3e#148da1 #138ba0o#13899ff#12879e #12859dt#11839ch#10819ae#107f99 #0f7d98u#0e7b97n#0e7996k#0d7794n#0c7593o#0c7392w#0b7291n#0b7090 #0a6e8fa#096c8dn#096a8cd#08688b #07668at#076489h#066287e#056086 #055e85h#045c84o#045a83r#035882r#025680i#02547fb#01527el#01527fe#015280.#015281 #015282W#015283e#015183 #015184m#015185u#015186s#015187t#015188 #015189d#01518ao#01518b #01518ct#01518dh#00508di#00508es#00508f,#005090 ")
hecho("\n#4186b8o#4489bar#488cbb #4b8fbdd#4f92bei#5395c0e#5699c2.#5a9cc3 #5d9fc5I#61a2c6t#65a5c8 #68a8c9i#6cabcbs#6faecc #73b1ceo#70b0cdu#6dafccr#6baeca #68adc9p#65acc8l#62acc7a#5fabc5c#5caac4e#5aa9c3 #57a8c2t#54a7c0o#51a6bf #4ea5bel#4ca4bdu#49a3bbr#46a2bak#43a2b9 #40a1b8i#3da0b6n#3b9fb5 #389eb4t#359db3h#329cb1e#2f9bb0 #2d9aafd#2a99aea#2798acr#2498abk#2197aa #1e96a9o#1c95a7f#1994a6 #1693a5t#1591a4h#158fa3e#148da1 #138ba0w#13899fo#12879er#12859dl#11839cd#10819a #107f99a#0f7d98n#0e7b97d#0e7996 #0d7794c#0c7593l#0c7392e#0b7291a#0b7090n#0a6e8fs#096c8de#096a8c #08688bi#07668at#076489 #066287o#056086f#055e85 #045c84w#045a83h#035882a#025680t#02547f #01527em#01527fa#015280k#015281e#015282s#015283 #015183i#015184t#015185 #015186f#015187o#015188u#015189l#01518a,#01518b #01518ci#01518dt#00508d #00508e #00508f ")
hecho("\n#3d83b7i#4186b8s#4489ba #488cbbo#4b8fbdu#4f92ber#5395c0 #5699c2p#5a9cc3l#5d9fc5a#61a2c6c#65a5c8e#68a8c9 #6cabcbt#6faecco#73b1ce #70b0cdb#6dafcce#6baeca #68adc9t#65acc8h#62acc7e#5fabc5 #5caac4t#5aa9c3e#57a8c2r#54a7c0r#51a6bfo#4ea5ber#4ca4bd #49a3bbi#46a2ban#43a2b9 #40a1b8t#3da0b6h#3b9fb5e#389eb4 #359db3s#329cb1h#2f9bb0a#2d9aafd#2a99aeo#2798acw#2498abs#2197aa #1e96a9t#1c95a7h#1994a6a#1693a5t#1591a4 #158fa3f#148da1i#138ba0r#13899fs#12879et#12859d #11839cw#10819ae#107f99r#0f7d98e#0e7b97 #0e7996o#0d7794u#0c7593r#0c7392s#0b7291!#0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d #00508e ")
hecho("\n#3a80b5 #3d83b7 #4186b8 #4489ba #488cbb #4b8fbd #4f92be #5395c0 #5699c2 #5a9cc3 #5d9fc5 #61a2c6 #65a5c8 #68a8c9 #6cabcb #6faecc #73b1ce #70b0cd #6dafcc #6baeca #68adc9 #65acc8 #62acc7 #5fabc5 #5caac4 #5aa9c3 #57a8c2 #54a7c0 #51a6bf #4ea5be #4ca4bd #49a3bb #46a2ba #43a2b9 #40a1b8 #3da0b6 #3b9fb5 #389eb4 #359db3 #329cb1 #2f9bb0 #2d9aaf #2a99ae #2798ac #2498ab #2197aa #1e96a9 #1c95a7 #1994a6 #1693a5 #1591a4 #158fa3 #148da1 #138ba0 #13899f #12879e #12859d #11839c #10819a #107f99 #0f7d98 #0e7b97 #0e7996 #0d7794 #0c7593 #0c7392 #0b7291 #0b7090 #0a6e8f #096c8d #096a8c #08688b #07668a #076489 #066287 #056086 #055e85 #045c84 #045a83 #035882 #025680 #02547f #01527e #01527f #015280 #015281 #015282 #015283 #015183 #015184 #015185 #015186 #015187 #015188 #015189 #01518a #01518b #01518c #01518d #00508d ")
hecho("\n#367db3.#3a80b5:#3d83b7*#4186b8~#4489ba*#488cbb:#4b8fbd.#4f92be_#5395c0.#5699c2:#5a9cc3*#5d9fc5~#61a2c6*#65a5c8:#68a8c9.#6cabcb_#6faecc.#73b1ce:#70b0cd*#6dafcc~#6baeca*#68adc9:#65acc8.#62acc7_#5fabc5.#5caac4:#5aa9c3*#57a8c2~#54a7c0*#51a6bf:#4ea5be.#4ca4bd_#49a3bb.#46a2ba:#43a2b9*#40a1b8~#3da0b6*#3b9fb5:#389eb4.#359db3_#329cb1.#2f9bb0:#2d9aaf*#2a99ae~#2798ac*#2498ab:#2197aa.#1e96a9_#1c95a7.#1994a6:#1693a5*#1591a4~#158fa3*#148da1:#138ba0.#13899f_#12879e.#12859d:#11839c*#10819a~#107f99*#0f7d98:#0e7b97.#0e7996_#0d7794.#0c7593:#0c7392*#0b7291~#0b7090*#0a6e8f:#096c8d.#096a8c_#08688b.#07668a:#076489*#066287~#056086*#055e85:#045c84.#045a83_#035882.#025680:#02547f*#01527e~#01527f*#015280:#015281.#015282_#015283.#015183:#015184*#015185~#015186*#015187:#015188.#015189 #01518a #01518b #01518c #01518d ")
cechoLink("\n\n&lt;medium_blue&gt; BACK TO VO'ACHA",function() expandAlias("vo'acha") end, "back", true)
cechoLink("\n&lt;medium_blue&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^vo'acha3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^srahda1$</name>
					<script>hecho("\n#0000cdS#0400caR#0700c8A#0b00c5H#0f00c3D#1200c0A#1601be,#1a01bb #1e01b9T#2101b6H#2501b4E#2901b1 #2c01afS#3001acE#3401aaE#3701a7R")
hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afB#3001acl#3401aae#3701a7s#3b01a5s#3f02a2i#4302a0n#46029dg#4a029bs#4e0298 #510296u#550293n#590291t#5c028eo#60028c #640289t#680387h#6b0384e#6f0382 #73037fa#76037dn#7a037ac#7d037ci#7f037fe#820381n#840383t#870386s#890288,#8c028a #8e028dV#91028fa#930291l#960294o#980296r#9b0298i#9d029be#a0029d.#a2029f #a501a2M#a701a4a#aa01a6y#ac01a9 #af01abt#b101adh#b401b0e#b601b2 #b901b4S#bb01b7e#be01b9e#c000bbr#c300be #c500c0g#c800c2u#ca00c5i#cd00c7d#c700c7e#c100c7 #ba00c8y#b400c8o#ae00c8u#a800c8r#a200c8 #9b00c8h#9500c9a#8f00c9n#8900c9d#8200c9 #7c00c9a#7600can#7000cad#6a00ca #6300caw#5d00caa#5700car#5100cbd#4b00cb #4400cby#3e00cbo#3800cbu#3200ccr#2b00cc #2500ccs#1f00ccp#1900cci#1300ccr#0c00cdi#0600cdt#0000cd ")
hecho("\n#0000cdi#0400can#0700c8 #0b00c5t#0f00c3h#1200c0e#1601bes#1a01bbe#1e01b9 #2101b6d#2501b4a#2901b1r#2c01afk#3001ac #3401aat#3701a7i#3b01a5m#3f02a2e#4302a0s#46029d.#4a029b #4e0298T#510296h#550293e#590291 #5c028eP#60028cr#640289a#680387a#6b0384d#6f0382i#73037f #76037da#7a037an#7d037c-#7f037fK#820381i#840383a#870386r#890288 #8c028ao#8e028df#91028f #930291D#960294e#980296n#9b0298d#9d029ba#a0029dr#a2029fa#a501a2 #a701a4w#aa01a6e#ac01a9l#af01abc#b101ado#b401b0m#b601b2e#b901b4 #bb01b7y#be01b9o#c000bbu#c300be.#c500c0\"")
hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3s#1200c0a#1601bey#1a01bb,#1e01b9 #2101b6\"#2501b4W#2901b1h#2c01afa#3001act#3401aa #3701a7c#3b01a5a#3f02a2n#4302a0 #46029dy#4a029bo#4e0298u#510296 #550293t#590291e#5c028el#60028cl#640289 #680387m#6b0384e#6f0382 #73037fo#76037df#7a037a #7d037ct#7f037fh#820381e#840383 #870386S#890288e#8c028ae#8e028dr#91028f?#930291\"")
hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afY#3001aco#3401aau#3701a7 #3b01a5a#3f02a2s#4302a0k#46029d #4a029bo#4e0298f#510296 #550293t#590291h#5c028ee#60028c #640289S#680387e#6b0384e#6f0382r#73037f?#76037d #7a037aT#7d037ch#7f037fo#820381s#840383e#870386 #890288w#8c028ah#8e028do#91028f #930291s#960294w#980296e#9b0298a#9d029br#a0029d #a2029fo#a501a2a#a701a4t#aa01a6h#ac01a9s#af01ab #b101adu#b401b0n#b601b2t#b901b4o#bb01b7 #be01b9h#c000bbe#c300ber#c500c0 #c800c2w#ca00c5a#cd00c7t#c700c7c#c100c7h#ba00c8 #b400c8o#ae00c8v#a800c8e#a200c8r#9b00c8 #9500c9t#8f00c9h#8900c9e#8200c9 #7c00c9m#7600caa#7000can#6a00cay#6300ca #5d00cap#5700caa#5100cbt#4b00cbh#4400cbs#3e00cb #3800cbo#3200ccf#2b00cc ")
hecho("\n#0000cdD#0400cae#0700c8n#0b00c5d#0f00c3a#1200c0r#1601bea#1a01bb;#1e01b9 #2101b6l#2501b4o#2901b1o#2c01afk#3001ac #3401aat#3701a7h#3b01a5r#3f02a2o#4302a0u#46029dg#4a029bh#4e0298 #510296t#550293h#590291e#5c028e #60028cv#640289e#680387i#6b0384l#6f0382 #73037fa#76037dn#7a037ad#7d037c #7f037fs#820381e#840383e#870386 #890288n#8c028ao#8e028dt#91028f #930291m#960294e#980296r#9b0298e#9d029bl#a0029dy#a2029f #a501a2t#a701a4h#aa01a6e#ac01a9 #af01abp#b101adr#b401b0e#b601b2s#b901b4e#bb01b7n#be01b9t#c000bb,#c300be #c500c0b#c800c2u#ca00c5t#cd00c7 #c700c7p#c100c7a#ba00c8s#b400c8t#ae00c8 #a800c8a#a200c8n#9b00c8d#9500c9 #8f00c9f#8900c9u#8200c9t#7c00c9u#7600car#7000cae#6a00ca.#6300ca #5d00caT#5700cah#5100cbe#4b00cb #4400cbe#3e00cbo#3800cbn#3200ccs#2b00cc #2500ccp#1f00cca#1900ccs#1300ccs#0c00cd ")
hecho("\n#0000cda#0400can#0700c8d#0b00c5 #0f00c3a#1200c0n#1601be #1a01bba#1e01b9g#2101b6e#2501b4 #2901b1i#2c01afs#3001ac #3401aac#3701a7o#3b01a5m#3f02a2i#4302a0n#46029dg#4a029b #4e0298t#510296o#550293 #590291a#5c028en#60028c #640289e#680387n#6b0384d#6f0382;#73037f #76037da#7a037an#7d037c #7f037fa#820381g#840383e#870386 #890288o#8c028af#8e028d #91028fm#930291i#960294d#980296n#9b0298i#9d029bg#a0029dh#a2029ft#a501a2 #a701a4a#aa01a6n#ac01a9d#af01ab #b101add#b401b0a#b601b2r#b901b4k#bb01b7.#be01b9 #c000bbW#c300bee#c500c0 #c800c2f#ca00c5e#cd00c7e#c700c7l#c100c7 #ba00c8i#b400c8t#ae00c8 #a800c8i#a200c8n#9b00c8 #9500c9t#8f00c9h#8900c9e#8200c9 #7c00c9e#7600caa#7000car#6a00cat#6300cah#5d00ca #5700caa#5100cbn#4b00cbd#4400cb #3e00cbs#3800cbm#3200cce#2b00ccl#2500ccl#1f00cc #1900cci#1300cct#0c00cd ")
hecho("\n#0000cdi#0400can#0700c8 #0b00c5t#0f00c3h#1200c0e#1601be #1a01bba#1e01b9i#2101b6r#2501b4.#2901b1\"")
hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0e#1601bex#1a01bbt#1e01b9e#2101b6n#2501b4d#2901b1s#2c01af #3001ach#3401aai#3701a7s#3b01a5 #3f02a2h#4302a0a#46029dn#4a029bd#4e0298s#510296 #550293o#590291u#5c028et#60028c,#640289 #680387p#6b0384a#6f0382l#73037fm#76037ds#7a037a #7d037cu#7f037fp#820381w#840383a#870386r#890288d#8c028a.")
hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afB#3001acu#3401aat#3701a7 #3b01a5w#3f02a2h#4302a0a#46029dt#4a029b #4e0298a#510296w#550293a#590291i#5c028et#60028cs#640289 #680387u#6b0384s#6f0382 #73037fi#76037dn#7a037a #7d037ct#7f037fh#820381a#840383t#870386 #890288t#8c028ae#8e028dr#91028fr#930291i#960294b#980296l#9b0298e#9d029b #a0029da#a2029fb#a501a2y#a701a4s#aa01a6s#ac01a9 #af01abb#b101ade#b401b0y#b601b2o#b901b4n#bb01b7d#be01b9 #c000bbt#c300beh#c500c0e#c800c2 #ca00c5s#cd00c7t#c700c7a#c100c7r#ba00c8s#b400c8?#ae00c8 #a800c8I#a200c8t#9b00c8 #9500c9i#8f00c9s#8900c9 #8200c9a#7c00c9 #7600caq#7000cau#6a00cae#6300cas#5d00cat#5700cai#5100cbo#4b00cbn#4400cb #3e00cbt#3800cbh#3200cca#2b00cct#2500cc #1f00ccw#1900cce#1300cc ")
hecho("\n#0000cdh#0400caa#0700c8v#0b00c5e#0f00c3 #1200c0y#1601bee#1a01bbt#1e01b9 #2101b6t#2501b4o#2901b1 #2c01afa#3001acn#3401aas#3701a7w#3b01a5e#3f02a2r#4302a0,#46029d #4a029bb#4e0298u#510296t#550293 #590291o#5c028en#60028ce#640289 #680387w#6b0384e#6f0382 #73037fh#76037da#7a037av#7d037ce#7f037f #820381c#840383o#870386n#890288s#8c028ai#8e028dd#91028fe#930291r#960294e#980296d#9b0298 #9d029bf#a0029do#a2029fr#a501a2 #a701a4a#aa01a6g#ac01a9e#af01abs#b101ad #b401b0u#b601b2n#b901b4t#bb01b7o#be01b9l#c000bbd#c300be.#c500c0 #c800c2T#ca00c5h#cd00c7i#c700c7s#c100c7 #ba00c8i#b400c8s#ae00c8 #a800c8t#a200c8h#9b00c8e#9500c9 #8f00c9w#8900c9a#8200c9y#7c00c9 #7600cao#7000caf#6a00ca #6300cat#5d00cah#5700cae#5100cb #4b00cbS#4400cbe#3e00cbe#3800cbr#3200cc.#2b00cc\"")
hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3s#1200c0a#1601bey#1a01bb,#1e01b9 #2101b6\"#2501b4W#2901b1h#2c01afo#3001ac #3401aaa#3701a7r#3b01a5e#3f02a2 #4302a0t#46029dh#4a029be#4e0298 #510296P#550293r#590291a#5c028ea#60028cd#640289i#680387 #6b0384a#6f0382n#73037f-#76037dK#7a037ai#7d037ca#7f037fr#820381?#840383\"")
hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afT#3001ach#3401aae#3701a7 #3b01a5P#3f02a2r#4302a0a#46029da#4a029bd#4e0298i#510296 #550293a#590291r#5c028ee#60028c #640289t#680387h#6b0384e#6f0382 #73037fw#76037di#7a037al#7d037cl#7f037f #820381o#840383f#870386 #890288t#8c028ah#8e028de#91028f #930291g#960294u#980296a#9b0298r#9d029bd#a0029di#a2029fa#a501a2n#a701a4s#aa01a6;#ac01a9 #af01abp#b101adr#b401b0i#b601b2m#b901b4e#bb01b7v#be01b9a#c000bbl#c300be #c500c0s#c800c2p#ca00c5i#cd00c7r#c700c7i#c100c7t#ba00c8s#b400c8 #ae00c8o#a800c8f#a200c8 #9b00c8b#9500c9l#8f00c9o#8900c9o#8200c9d#7c00c9 #7600caa#7000can#6a00cad#6300ca #5d00cas#5700caa#5100cbc#4b00cbr#4400cbi#3e00cbf#3800cbi#3200ccc#2b00cce#2500cc.#1f00cc\"")
hecho("\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afM#3001aco#3401aar#3701a7t#3b01a5a#3f02a2l#4302a0 #46029dm#4a029be#4e0298n#510296 #550293a#590291n#5c028ed#60028c #640289w#680387o#6b0384m#6f0382e#73037fn#76037d #7a037at#7d037ch#7f037fa#820381t#840383 #870386w#890288e#8c028ar#8e028de#91028f #930291b#960294o#980296u#9b0298n#9d029bd#a0029d #a2029fi#a501a2n#a701a4 #aa01a6l#ac01a9i#af01abf#b101ade#b401b0,#b601b2 #b901b4a#bb01b7n#be01b9d#c000bb #c300bew#c500c0i#c800c2l#ca00c5l#cd00c7 #c700c7s#c100c7e#ba00c8r#b400c8v#ae00c8e#a800c8 #a200c8e#9b00c8v#9500c9e#8f00c9n#8900c9 #8200c9i#7c00c9n#7600ca #7000cad#6a00cae#6300caa#5d00cat#5700cah#5100cb,#4b00cb #4400cbt#3e00cbh#3800cbe#3200cc #2b00cca#2500ccn#1f00ccc#1900cci#1300cce#0c00cdn#0600cdt#0000cd ")
hecho("\n#0000cdg#0400cau#0700c8a#0b00c5r#0f00c3d#1200c0i#1601bea#1a01bbn#1e01b9s#2101b6 #2501b4t#2901b1h#2c01afa#3001act#3401aa #3701a7r#3b01a5o#3f02a2a#4302a0m#46029d #4a029bt#4e0298h#510296e#550293 #590291p#5c028el#60028ca#640289n#680387e#6b0384 #6f0382o#73037ff#76037d #7a037aD#7d037ce#7f037fn#820381d#840383a#870386r#890288a#8c028a.#8e028d\"")
cechoLink("\n\n&lt;violet_red&gt; BACK TO SRAHDA",function() expandAlias("srahda") end, "back", true)
cechoLink("\n&lt;violet_red&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^srahda1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^srahda2$</name>
					<script>hecho("\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3s#1200c0a#1601bey#1a01bb,#1e01b9 #2101b6\"#2501b4I#2901b1 #2c01afw#3001aci#3401aas#3701a7h#3b01a5 #3f02a2t#4302a0o#46029d #4a029bo#4e0298f#510296f#550293e#590291r#5c028e #60028cm#640289y#680387 #6b0384b#6f0382l#73037fo#76037do#7a037ad#7d037c #7f037fu#820381p#840383 #870386i#890288n#8c028a #8e028dr#91028fi#930291t#960294u#980296a#9b0298l#9d029b #a0029da#a2029fn#a501a2d#a701a4 #aa01a6s#ac01a9w#af01abe#b101ada#b401b0r#b601b2 #b901b4a#bb01b7n#be01b9 #c000bbo#c300bea#c500c0t#c800c2h#ca00c5 #cd00c7b#c700c7e#c100c7f#ba00c8o#b400c8r#ae00c8e#a800c8 #a200c8h#9b00c8e#9500c9r#8f00c9 #8900c9T#8200c9a#7c00c9l#7600cao#7000can#6a00ca.#6300ca\"")

hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0r#1601bea#1a01bbi#1e01b9s#2101b6e#2501b4s#2901b1 #2c01afa#3001ac #3401aah#3701a7a#3b01a5n#3f02a2d#4302a0 #46029db#4a029be#4e0298f#510296o#550293r#590291e#5c028e #60028cy#640289o#680387u#6b0384,#6f0382 #73037fh#76037di#7a037as#7d037c #7f037fv#820381o#840383i#870386c#890288e#8c028a #8e028dc#91028fo#930291l#960294d#980296 #9b0298a#9d029bn#a0029dd#a2029f #a501a2d#a701a4i#aa01a6s#ac01a9t#af01aba#b101adn#b401b0t#b601b2 #b901b4a#bb01b7s#be01b9 #c000bbi#c300bet#c500c0 #c800c2r#ca00c5i#cd00c7n#c700c7g#c100c7s#ba00c8 #b400c8o#ae00c8u#a800c8t#a200c8 #9b00c8f#9500c9r#8f00c9o#8900c9m#8200c9 #7c00c9t#7600cah#7000cae#6a00ca #6300cah#5d00cao#5700cal#5100cbl#4b00cbo#4400cbw#3e00cb #3800cbd#3200cce#2b00ccp#2500cct#1f00cch#1900ccs#1300cc #0c00cdo#0600cdf#0000cd ")
hecho("\n#0000cdh#0400cai#0700c8s#0b00c5 #0f00c3m#1200c0a#1601bes#1a01bbk#1e01b9.")

hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afA#3001acn#3401aa #3701a7o#3b01a5a#3f02a2t#4302a0h#46029d #4a029bi#4e0298s#510296 #550293n#590291o#5c028et#60028c #640289l#680387i#6b0384g#6f0382h#73037ft#76037dl#7a037ay#7d037c #7f037ft#820381a#840383k#870386e#890288n#8c028a #8e028df#91028fo#930291r#960294 #980296i#9b0298t#9d029b #a0029di#a2029fs#a501a2 #a701a4f#aa01a6o#ac01a9r#af01abg#b101ade#b401b0d#b601b2 #b901b4i#bb01b7n#be01b9 #c000bbb#c300bel#c500c0o#c800c2o#ca00c5d#cd00c7 #c700c7a#c100c7n#ba00c8d#b400c8 #ae00c8b#a800c8i#a200c8n#9b00c8d#9500c9i#8f00c9n#8900c9g#8200c9 #7c00c9w#7600car#7000cai#6a00cat#6300ca.#5d00ca #5700caI#5100cbf#4b00cb #4400cby#3e00cbo#3800cbu#3200cc #2b00ccs#2500ccw#1f00cce#1900cca#1300ccr#0c00cd ")
hecho("\n#0000cdu#0400can#0700c8t#0b00c5o#0f00c3 #1200c0t#1601beh#1a01bbe#1e01b9 #2101b6S#2501b4e#2901b1e#2c01afr#3001ac,#3401aa #3701a7y#3b01a5o#3f02a2u#4302a0 #46029ds#4a029bh#4e0298a#510296l#550293l#590291 #5c028eb#60028ce#640289 #680387b#6b0384o#6f0382u#73037fn#76037dd#7a037a #7d037ct#7f037fo#820381 #840383h#870386e#890288r#8c028a #8e028dv#91028fe#930291r#960294y#980296 #9b0298w#9d029bi#a0029dl#a2029fl#a501a2.#a701a4 #aa01a6D#ac01a9o#af01ab #b101ady#b401b0o#b601b2u#b901b4 #bb01b7w#be01b9i#c000bbs#c300beh#c500c0 #c800c2t#ca00c5o#cd00c7 #c700c7u#c100c7n#ba00c8d#b400c8e#ae00c8r#a800c8t#a200c8a#9b00c8k#9500c9e#8f00c9 #8900c9s#8200c9u#7c00c9c#7600cah#7000ca #6a00caa#6300ca #5d00car#5700cai#5100cbt#4b00cbe#4400cb?#3e00cb\"")

hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3s#1200c0a#1601bey#1a01bb,#1e01b9 #2101b6\"#2501b4Y#2901b1e#2c01afs#3001ac,#3401aa #3701a7I#3b01a5 #3f02a2d#4302a0o#46029d.#4a029b\"")

hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0s#1601bea#1a01bby#1e01b9s#2101b6,#2501b4 #2901b1\"#2c01afT#3001ach#3401aae#3701a7n#3b01a5 #3f02a2p#4302a0r#46029de#4a029bp#4e0298a#510296r#550293e#590291 #5c028ey#60028co#640289u#680387r#6b0384 #6f0382s#73037fp#76037di#7a037ar#7d037ci#7f037ft#820381,#840383 #870386V#890288a#8c028al#8e028do#91028fr#930291i#960294e#980296.#9b0298 #9d029bT#a0029dh#a2029fe#a501a2 #a701a4d#aa01a6a#ac01a9r#af01abk#b101ad #b401b0p#b601b2a#b901b4t#bb01b7h#be01b9 #c000bbo#c300bef#c500c0 #c800c2t#ca00c5h#cd00c7e#c700c7 #c100c7S#ba00c8e#b400c8e#ae00c8r#a800c8 #a200c8a#9b00c8w#9500c9a#8f00c9i#8900c9t#8200c9s#7c00c9 #7600cay#7000cao#6a00cau#6300ca.#5d00ca\"")

hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3d#1200c0r#1601bea#1a01bbw#1e01b9 #2101b6t#2501b4h#2901b1e#2c01af #3001acs#3401aah#3701a7a#3b01a5r#3f02a2p#4302a0 #46029de#4a029bd#4e0298g#510296e#550293 #590291o#5c028ef#60028c #640289a#680387n#6b0384 #6f0382o#73037fb#76037ds#7a037ai#7d037cd#7f037fi#820381a#840383n#870386 #890288k#8c028an#8e028di#91028ff#930291e#960294 #980296e#9b0298t#9d029bc#a0029dh#a2029fe#a501a2d#a701a4 #aa01a6i#ac01a9n#af01ab #b101adr#b401b0u#b601b2n#b901b4e#bb01b7s#be01b9 #c000bba#c300bec#c500c0r#c800c2o#ca00c5s#cd00c7s#c700c7 #c100c7y#ba00c8o#b400c8u#ae00c8r#a800c8 #a200c8p#9b00c8a#9500c9l#8f00c9m#8900c9,#8200c9 #7c00c9b#7600cal#7000cao#6a00cao#6300cad#5d00ca #5700cab#5100cbe#4b00cbg#4400cbi#3e00cbn#3800cbn#3200cci#2b00ccn#2500ccg#1f00cc #1900cct#1300cco#0c00cd ")
hecho("\n#0000cdt#0400car#0700c8i#0b00c5c#0f00c3k#1200c0l#1601bee#1a01bb #1e01b9f#2101b6r#2501b4o#2901b1m#2c01af #3001acy#3401aao#3701a7u#3b01a5r#3f02a2 #4302a0n#46029de#4a029bw#4e0298 #510296w#550293o#590291u#5c028en#60028cd#640289.")

hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3h#1200c0o#1601bel#1a01bbd#1e01b9 #2101b6y#2501b4o#2901b1u#2c01afr#3001ac #3401aab#3701a7l#3b01a5e#3f02a2e#4302a0d#46029di#4a029bn#4e0298g#510296 #550293p#590291a#5c028el#60028cm#640289 #680387a#6b0384g#6f0382a#73037fi#76037dn#7a037as#7d037ct#7f037f #820381a#840383 #870386f#890288e#8c028aa#8e028dt#91028fh#930291e#960294r#980296e#9b0298d#9d029b #a0029dr#a2029fa#a501a2v#a701a4e#aa01a6n#ac01a9 #af01abt#b101ado#b401b0t#b601b2e#b901b4m#bb01b7 #be01b9o#c000bbf#c300be #c500c0d#c800c2a#ca00c5r#cd00c7k#c700c7 #c100c7o#ba00c8n#b400c8y#ae00c8x#a800c8 #a200c8a#9b00c8n#9500c9d#8f00c9 #8900c9c#8200c9l#7c00c9o#7600cas#7000cae#6a00ca #6300cay#5d00cao#5700cau#5100cbr#4b00cb #4400cbe#3e00cby#3800cbe#3200ccs#2b00cc #2500cca#1f00ccs#1900cc #1300ccy#0c00cdo#0600cdu#0000cd ")
hecho("\n#0000cdf#0400cao#0700c8c#0b00c5u#0f00c3s#1200c0 #1601beu#1a01bbp#1e01b9o#2101b6n#2501b4 #2901b1t#2c01afh#3001ace#3401aa #3701a7g#3b01a5u#3f02a2a#4302a0r#46029dd#4a029bi#4e0298a#510296n#550293'#590291s#5c028e #60028cs#640289p#680387i#6b0384r#6f0382i#73037ft#76037d.")

hecho("\n\n#0000cdT#0400cah#0700c8e#0b00c5 #0f00c3f#1200c0i#1601beg#1a01bbu#1e01b9r#2101b6e#2501b4 #2901b1s#2c01afo#3001ac #3401aap#3701a7e#3b01a5r#3f02a2f#4302a0e#46029dc#4a029bt#4e0298l#510296y#550293 #590291i#5c028en#60028ce#640289r#680387t#6b0384 #6f0382b#73037fe#76037ds#7a037ai#7d037cd#7f037fe#820381 #840383t#870386h#890288e#8c028a #8e028di#91028fd#930291o#960294l#980296 #9b0298t#9d029bo#a0029d #a2029fS#a501a2r#a701a4a#aa01a6h#ac01a9d#af01aba#b101ad #b401b0n#b601b2o#b901b4w#bb01b7 #be01b9c#c000bbo#c300bem#c500c0e#c800c2s#ca00c5 #cd00c7t#c700c7o#c100c7 #ba00c8l#b400c8i#ae00c8f#a800c8e#a200c8,#9b00c8 #9500c9t#8f00c9h#8900c9e#8200c9 #7c00c9h#7600cae#7000caa#6a00cav#6300cay#5d00ca #5700caf#5100cba#4b00cbb#4400cbr#3e00cbi#3800cbc#3200cc #2b00cco#2500ccf#1f00cc #1900cch#1300cci#0c00cds#0600cd ")
hecho("\n#0000cdr#0400cao#0700c8b#0b00c5e#0f00c3s#1200c0 #1601beh#1a01bba#1e01b9r#2101b6d#2501b4l#2901b1y#2c01af #3001acs#3401aah#3701a7i#3b01a5f#3f02a2t#4302a0i#46029dn#4a029bg#4e0298 #510296e#550293v#590291e#5c028en#60028c #640289i#680387n#6b0384 #6f0382m#73037fo#76037dv#7a037ae#7d037cm#7f037fe#820381n#840383t#870386 #890288t#8c028ao#8e028dw#91028fa#930291r#960294d#980296 #9b0298y#9d029bo#a0029du#a2029f.#a501a2 #a701a4F#aa01a6r#ac01a9o#af01abm#b101ad #b401b0b#b601b2e#b901b4n#bb01b7e#be01b9a#c000bbt#c300beh#c500c0 #c800c2t#ca00c5h#cd00c7e#c700c7 #c100c7m#ba00c8a#b400c8s#ae00c8s#a800c8i#a200c8v#9b00c8e#9500c9 #8f00c9c#8900c9o#8200c9r#7c00c9v#7600cau#7000cas#6a00ca #6300cas#5d00cak#5700cau#5100cbl#4b00cbl#4400cb #3e00cbt#3800cbh#3200cca#2b00cct#2500cc #1f00ccm#1900cca#1300ccs#0c00cdk#0600cds#0000cd ")
hecho("\n#0000cdh#0400cai#0700c8s#0b00c5 #0f00c3v#1200c0i#1601bes#1a01bba#1e01b9g#2101b6e#2501b4,#2901b1 #2c01afh#3001aci#3401aas#3701a7 #3b01a5v#3f02a2o#4302a0i#46029dc#4a029be#4e0298 #510296e#550293c#590291h#5c028eo#60028ce#640289s#680387 #6b0384o#6f0382u#73037ft#76037d,#7a037a #7d037ca#7f037fm#820381p#840383l#870386i#890288f#8c028ai#8e028de#91028fd#930291 #960294w#980296i#9b0298t#9d029bh#a0029di#a2029fn#a501a2 #a701a4t#aa01a6h#ac01a9e#af01ab #b101adh#b401b0o#b601b2l#b901b4l#bb01b7o#be01b9w#c000bb #c300beb#c500c0o#c800c2n#ca00c5e#cd00c7 #c700c7s#c100c7t#ba00c8r#b400c8u#ae00c8c#a800c8t#a200c8u#9b00c8r#9500c9e#8f00c9,#8900c9 #8200c9\"#7c00c9T#7600cah#7000cae#6a00ca #6300caS#5d00cae#5700cae#5100cbr#4b00cb #4400cbh#3e00cba#3800cbs#3200cc #2b00ccb#2500cce#1f00cce#1900ccn#1300cc ")
hecho("\n#0000cde#0400cax#0700c8p#0b00c5e#0f00c3c#1200c0t#1601bei#1a01bbn#1e01b9g#2101b6 #2501b4y#2901b1o#2c01afu#3001ac,#3401aa #3701a7V#3b01a5a#3f02a2l#4302a0o#46029dr#4a029bi#4e0298e#510296,#550293 #590291a#5c028en#60028cd#640289 #680387a#6b0384c#6f0382c#73037fe#76037dp#7a037at#7d037cs#7f037f #820381y#840383o#870386u#890288r#8c028a #8e028db#91028fl#930291o#960294o#980296d#9b0298 #9d029bo#a0029df#a2029ff#a501a2e#a701a4r#aa01a6i#ac01a9n#af01abg#b101ad.#b401b0 #b601b2I#b901b4 #bb01b7a#be01b9m#c000bb #c300beh#c500c0e#c800c2r#ca00c5 #cd00c7v#c700c7o#c100c7i#ba00c8c#b400c8e#ae00c8,#a800c8 #a200c8h#9b00c8e#9500c9r#8f00c9 #8900c9w#8200c9i#7c00c9l#7600cal#7000ca,#6a00ca #6300cah#5d00cae#5700car#5100cb #4b00cbT#4400cba#3e00cbl#3800cbo#3200ccn#2b00cc.#2500cc #1f00ccY#1900cco#1300ccu#0c00cd,#0600cd ")
hecho("\n#0000cdt#0400cao#0700c8o#0b00c5,#0f00c3 #1200c0w#1601bei#1a01bbl#1e01b9l#2101b6 #2501b4n#2901b1o#2c01afw#3001ac #3401aac#3701a7o#3b01a5m#3f02a2e#4302a0 #46029dt#4a029bo#4e0298 #510296k#550293n#590291o#5c028ew#60028c #640289w#680387h#6b0384a#6f0382t#73037f #76037di#7a037at#7d037c #7f037fi#820381s#840383 #870386t#890288o#8c028a #8e028dS#91028fe#930291e#960294.#980296\"")

hecho("\n\n#0000cdB#0400cal#0700c8u#0b00c5s#0f00c3t#1200c0e#1601ber#1a01bbi#1e01b9n#2101b6g#2501b4 #2901b1w#2c01afi#3001acn#3401aad#3701a7s#3b01a5 #3f02a2b#4302a0u#46029df#4a029bf#4e0298e#510296t#550293 #590291y#5c028eo#60028cu#640289,#680387 #6b0384n#6f0382e#73037fa#76037dr#7a037al#7d037cy#7f037f #820381k#840383n#870386o#890288c#8c028ak#8e028di#91028fn#930291g#960294 #980296y#9b0298o#9d029bu#a0029d #a2029fb#a501a2a#a701a4c#aa01a6k#ac01a9 #af01aba#b101ads#b401b0 #b601b2a#b901b4n#bb01b7 #be01b9i#c000bbm#c300bem#c500c0e#c800c2n#ca00c5s#cd00c7e#c700c7 #c100c7s#ba00c8p#b400c8e#ae00c8c#a800c8t#a200c8r#9b00c8a#9500c9l#8f00c9 #8900c9r#8200c9a#7c00c9v#7600cae#7000can#6a00ca #6300caa#5d00cal#5700cai#5100cbg#4b00cbh#4400cbt#3e00cbs#3800cb #3200ccu#2b00ccp#2500cco#1f00ccn#1900cc #1300cct#0c00cdh#0600cde#0000cd ")
hecho("\n#0000cdi#0400cad#0700c8o#0b00c5l#0f00c3,#1200c0 #1601bes#1a01bbw#1e01b9i#2101b6r#2501b4l#2901b1i#2c01afn#3001acg#3401aa #3701a7e#3b01a5d#3f02a2d#4302a0i#46029de#4a029bs#4e0298 #510296o#550293f#590291 #5c028ee#60028cl#640289d#680387r#6b0384i#6f0382t#73037fc#76037dh#7a037a #7d037cm#7f037fa#820381g#840383i#870386c#890288 #8c028at#8e028dr#91028fa#930291i#960294l#980296i#9b0298n#9d029bg#a0029d #a2029ff#a501a2r#a701a4o#aa01a6m#ac01a9 #af01abe#b101adv#b401b0e#b601b2r#b901b4y#bb01b7 #be01b9b#c000bbe#c300bea#c500c0t#c800c2 #ca00c5o#cd00c7f#c700c7 #c100c7h#ba00c8e#b400c8r#ae00c8 #a800c8w#a200c8i#9b00c8n#9500c9g#8f00c9s#8900c9.#8200c9 #7c00c9T#7600cah#7000car#6a00cae#6300cae#5d00ca #5700cae#5100cby#4b00cbe#4400cbs#3e00cb #3800cbg#3200cca#2b00ccz#2500cce#1f00cc #1900ccd#1300cco#0c00cdw#0600cdn#0000cd ")
hecho("\n#0000cdu#0400cap#0700c8o#0b00c5n#0f00c3 #1200c0t#1601beh#1a01bbe#1e01b9 #2101b6p#2501b4a#2901b1i#2c01afr#3001ac #3401aao#3701a7f#3b01a5 #3f02a2y#4302a0o#46029du#4a029b,#4e0298 #510296a#550293n#590291d#5c028e #60028cV#640289r#680387a#6b0384s#6f0382 #73037fb#76037do#7a037aw#7d037cs#7f037f #820381h#840383i#870386s#890288 #8c028ah#8e028de#91028fa#930291d#960294 #980296i#9b0298n#9d029b #a0029dh#a2029fu#a501a2m#a701a4i#aa01a6l#ac01a9i#af01abt#b101ady#b401b0 #b601b2t#b901b4o#bb01b7 #be01b9t#c000bbh#c300bee#c500c0 #c800c2a#ca00c5s#cd00c7p#c700c7e#c100c7c#ba00c8t#b400c8.#ae00c8 #a800c8G#a200c8l#9b00c8a#9500c9n#8f00c9c#8900c9i#8200c9n#7c00c9g#7600ca #7000cat#6a00cao#6300caw#5d00caa#5700car#5100cbd#4b00cb #4400cby#3e00cbo#3800cbu#3200cc ")
hecho("\n#0000cds#0400cai#0700c8d#0b00c5e#0f00c3l#1200c0o#1601ben#1a01bbg#1e01b9,#2101b6 #2501b4h#2901b1e#2c01af #3001acs#3401aaa#3701a7y#3b01a5s#3f02a2,#4302a0 #46029d\"#4a029bM#4e0298o#510296r#550293t#590291a#5c028el#60028cs#640289 #680387h#6b0384a#6f0382v#73037fe#76037d #7a037ab#7d037ce#7f037fc#820381o#840383m#870386e#890288 #8c028ab#8e028dl#91028fi#930291n#960294d#980296 #9b0298t#9d029bo#a0029d #a2029ft#a501a2h#a701a4e#aa01a6 #ac01a9t#af01abr#b101adu#b401b0e#b601b2 #b901b4n#bb01b7a#be01b9t#c000bbu#c300ber#c500c0e#c800c2 #ca00c5o#cd00c7f#c700c7 #c100c7t#ba00c8h#b400c8i#ae00c8n#a800c8g#a200c8s#9b00c8,#9500c9 #8f00c9t#8900c9o#8200c9 #7c00c9t#7600cah#7000cae#6a00ca #6300caf#5d00cau#5700cat#5100cbu#4b00cbr#4400cbe#3e00cb #3800cba#3200ccn#2b00ccd#2500cc #1f00cci#1900cct#1300ccs#0c00cd ")
hecho("\n#0000cdi#0400can#0700c8f#0b00c5i#0f00c3n#1200c0i#1601bet#1a01bbe#1e01b9 #2101b6p#2501b4a#2901b1t#2c01afh#3001acs#3401aa.#3701a7 #3b01a5B#3f02a2u#4302a0t#46029d #4a029bi#4e0298t#510296 #550293d#590291o#5c028ee#60028cs#640289 #680387n#6b0384o#6f0382t#73037f #76037dh#7a037aa#7d037cv#7f037fe#820381 #840383t#870386o#890288 #8c028ab#8e028de#91028f #930291s#960294o#980296-#9b0298-#9d029bS#a0029dr#a2029fa#a501a2h#a701a4d#aa01a6a#ac01a9 #af01abm#b101ada#b401b0y#b601b2 #b901b4g#bb01b7r#be01b9a#c000bbn#c300bet#c500c0 #c800c2y#ca00c5o#cd00c7u#c700c7 #c100c7S#ba00c8i#b400c8g#ae00c8h#a800c8t#a200c8 #9b00c8a#9500c9g#8f00c9a#8900c9i#8200c9n#7c00c9,#7600ca #7000caf#6a00car#6300cai#5d00cae#5700can#5100cbd#4b00cb,#4400cb #3e00cbi#3800cbf#3200cc #2b00ccy#2500cco#1f00ccu#1900cc #1300cca#0c00cdr#0600cde#0000cd ")
hecho("\n#0000cdw#0400cai#0700c8l#0b00c5l#0f00c3i#1200c0n#1601beg#1a01bb #1e01b9t#2101b6o#2501b4 #2901b1l#2c01afe#3001aca#3401aar#3701a7n#3b01a5.#3f02a2\"")

hecho("\n\n#0000cdT#0400cah#0700c8e#0b00c5 #0f00c3g#1200c0r#1601bee#1a01bba#1e01b9t#2101b6 #2501b4s#2901b1p#2c01afe#3001acc#3401aat#3701a7r#3b01a5a#3f02a2l#4302a0 #46029db#4a029bi#4e0298r#510296d#550293 #590291s#5c028eh#60028ci#640289f#680387t#6b0384s#6f0382 #73037fa#76037dt#7a037ao#7d037cp#7f037f #820381t#840383h#870386e#890288 #8c028ai#8e028dd#91028fo#930291l#960294,#980296 #9b0298h#9d029be#a0029dr#a2029f #a501a2i#a701a4n#aa01a6s#ac01a9u#af01abb#b101ads#b401b0t#b601b2a#b901b4n#bb01b7t#be01b9i#c000bba#c300bel#c500c0 #c800c2t#ca00c5a#cd00c7l#c700c7o#c100c7n#ba00c8s#b400c8 #ae00c8s#a800c8t#a200c8i#9b00c8l#9500c9l#8f00c9 #8900c9s#8200c9c#7c00c9r#7600caa#7000cap#6a00cai#6300can#5d00cag#5700ca #5100cba#4b00cbu#4400cbd#3e00cbi#3800cbb#3200ccl#2b00ccy#2500cc ")
hecho("\n#0000cda#0400cag#0700c8a#0b00c5i#0f00c3n#1200c0s#1601bet#1a01bb #1e01b9t#2101b6h#2501b4e#2901b1 #2c01afs#3001act#3401aao#3701a7n#3b01a5e#3f02a2.#4302a0 #46029dS#4a029bh#4e0298e#510296 #550293c#590291l#5c028ea#60028cc#640289k#680387s#6b0384 #6f0382h#73037fe#76037dr#7a037a #7d037cb#7f037fe#820381a#840383k#870386 #890288o#8c028an#8e028dc#91028fe#930291,#960294 #980296t#9b0298w#9d029bi#a0029dc#a2029fe#a501a2,#a701a4 #aa01a6a#ac01a9n#af01abd#b101ad #b401b0b#b601b2l#b901b4i#bb01b7n#be01b9k#c000bbs#c300be,#c500c0 #c800c2t#ca00c5h#cd00c7o#c700c7u#c100c7g#ba00c8h#b400c8 #ae00c8t#a800c8h#a200c8e#9b00c8 #9500c9t#8f00c9h#8900c9i#8200c9r#7c00c9d#7600ca #7000cae#6a00cay#6300cae#5d00ca #5700cai#5100cbn#4b00cb #4400cbt#3e00cbh#3800cbe#3200cc #2b00ccc#2500cce#1f00ccn#1900cct#1300cce#0c00cdr#0600cd ")
hecho("\n#0000cdo#0400caf#0700c8 #0b00c5h#0f00c3e#1200c0r#1601be #1a01bbf#1e01b9o#2101b6r#2501b4e#2901b1h#2c01afe#3001aca#3401aad#3701a7 #3b01a5d#3f02a2o#4302a0e#46029ds#4a029b #4e0298n#510296o#550293t#590291,#5c028e #60028cj#640289u#680387s#6b0384t#6f0382 #73037fa#76037ds#7a037a #7d037ci#7f037ft#820381 #840383d#870386o#890288e#8c028as#8e028d #91028fn#930291o#960294t#980296 #9b0298w#9d029ba#a0029dv#a2029fe#a501a2r#a701a4 #aa01a6f#ac01a9r#af01abo#b101adm#b401b0 #b601b2y#b901b4o#bb01b7u#be01b9.#c000bb #c300be\"#c500c0Y#c800c2o#ca00c5u#cd00c7,#c700c7\"#c100c7 #ba00c8t#b400c8h#ae00c8e#a800c8 #a200c8s#9b00c8o#9500c9n#8f00c9o#8900c9r#8200c9o#7c00c9u#7600cas#7000ca,#6a00ca #6300cac#5d00cal#5700cai#5100cbp#4b00cbp#4400cbe#3e00cbd#3800cb #3200ccv#2b00cco#2500cci#1f00ccc#1900cce#1300ccs#0c00cd ")
hecho("\n#0000cdd#0400cae#0700c8c#0b00c5l#0f00c3a#1200c0r#1601bee#1a01bb,#1e01b9 #2101b6f#2501b4a#2901b1r#2c01af #3001act#3401aao#3701a7o#3b01a5 #3f02a2a#4302a0r#46029dt#4a029bi#4e0298c#510296u#550293l#590291a#5c028et#60028ce#640289 #680387t#6b0384o#6f0382 #73037fc#76037do#7a037am#7d037ce#7f037f #820381f#840383r#870386o#890288m#8c028a #8e028dt#91028fh#930291e#960294 #980296r#9b0298a#9d029bv#a0029de#a2029fn#a501a2 #a701a4a#aa01a6n#ac01a9d#af01ab #b101ady#b401b0e#b601b2t#b901b4 #bb01b7y#be01b9o#c000bbu#c300be #c500c0k#c800c2n#ca00c5o#cd00c7w#c700c7 #c100c7t#ba00c8h#b400c8a#ae00c8t#a800c8 #a200c8t#9b00c8o#9500c9 #8f00c9b#8900c9e#8200c9 #7c00c9t#7600cah#7000cae#6a00ca #6300cas#5d00cao#5700cau#5100cbr#4b00cbc#4400cbe#3e00cb,#3800cb #3200ccs#2b00cco#2500cc #1f00ccm#1900cca#1300ccn#0c00cdy#0600cd ")
hecho("\n#0000cdc#0400cao#0700c8m#0b00c5i#0f00c3n#1200c0g#1601be #1a01bbf#1e01b9r#2101b6o#2501b4m#2901b1 #2c01afo#3001acn#3401aae#3701a7 #3b01a5b#3f02a2e#4302a0i#46029dn#4a029bg#4e0298.#510296 #550293\"#590291Y#5c028eo#60028cu#640289 #680387h#6b0384a#6f0382v#73037fe#76037d #7a037ap#7d037co#7f037ft#820381e#840383n#870386t#890288i#8c028aa#8e028dl#91028f,#930291 #960294a#980296s#9b0298 #9d029bf#a0029de#a2029fw#a501a2 #a701a4I#aa01a6 #ac01a9h#af01aba#b101adv#b401b0e#b601b2 #b901b4s#bb01b7e#be01b9e#c000bbn#c300be.#c500c0 #c800c2Y#ca00c5e#cd00c7s#c700c7.#c100c7 #ba00c8M#b400c8y#ae00c8 #a800c8g#a200c8i#9b00c8f#9500c9t#8f00c9,#8900c9 #8200c9i#7c00c9n#7600ca #7000cay#6a00cao#6300cau#5d00ca,#5700ca #5100cbw#4b00cbi#4400cbl#3e00cbl#3800cb #3200ccb#2b00cce#2500cc #1f00cca#1900cc ")
hecho("\n#0000cdg#0400cao#0700c8o#0b00c5d#0f00c3 #1200c0t#1601beh#1a01bbi#1e01b9n#2101b6g#2501b4,#2901b1 #2c01afa#3001ac #3401aap#3701a7o#3b01a5w#3f02a2e#4302a0r#46029df#4a029bu#4e0298l#510296 #550293t#590291h#5c028ei#60028cn#640289g#680387.#6b0384\"#6f0382 #73037fA#76037d #7a037as#7d037ci#7f037fn#820381g#840383l#870386e#890288 #8c028ar#8e028da#91028fu#930291c#960294o#980296u#9b0298s#9d029b #a0029dc#a2029fa#a501a2l#a701a4l#aa01a6 #ac01a9p#af01abu#b101adn#b401b0c#b601b2t#b901b4u#bb01b7a#be01b9t#c000bbe#c300bes#c500c0 #c800c2S#ca00c5r#cd00c7a#c700c7h#c100c7d#ba00c8a#b400c8'#ae00c8s#a800c8 #a200c8w#9b00c8o#9500c9r#8f00c9d#8900c9s#8200c9 #7c00c9a#7600can#7000cad#6a00ca #6300cas#5d00cah#5700cae#5100cb #4b00cbs#4400cbh#3e00cbi#3800cbf#3200cct#2b00ccs#2500cc ")
hecho("\n#0000cda#0400cag#0700c8a#0b00c5i#0f00c3n#1200c0,#1601be #1a01bbi#1e01b9m#2101b6p#2501b4a#2901b1t#2c01afi#3001ace#3401aan#3701a7t#3b01a5 #3f02a2a#4302a0l#46029dm#4a029bo#4e0298s#510296t#550293,#590291 #5c028et#60028ch#640289e#680387 #6b0384f#6f0382o#73037fg#76037d-#7a037al#7d037ci#7f037fk#820381e#840383 #870386p#890288a#8c028al#8e028dl#91028f #930291s#960294u#980296r#9b0298r#9d029bo#a0029du#a2029fn#a501a2d#a701a4i#aa01a6n#ac01a9g#af01ab #b101adh#b401b0e#b601b2r#b901b4 #bb01b7p#be01b9o#c000bbu#c300ber#c500c0i#c800c2n#ca00c5g#cd00c7 #c700c7o#c100c7f#ba00c8f#b400c8 #ae00c8a#a800c8n#a200c8d#9b00c8 #9500c9d#8f00c9r#8900c9i#8200c9p#7c00c9p#7600cai#7000can#6a00cag#6300ca #5d00cad#5700cao#5100cbw#4b00cbn#4400cb,#3e00cb ")
hecho("\n#0000cdd#0400cai#0700c8s#0b00c5s#0f00c3i#1200c0p#1601bea#1a01bbt#1e01b9i#2101b6n#2501b4g#2901b1 #2c01afb#3001ace#3401aaf#3701a7o#3b01a5r#3f02a2e#4302a0 #46029di#4a029bt#4e0298 #510296h#550293i#590291t#5c028es#60028c #640289t#680387h#6b0384e#6f0382 #73037fg#76037dr#7a037ao#7d037cu#7f037fn#820381d#840383.#870386 #890288N#8c028ao#8e028dn#91028fe#930291t#960294h#980296e#9b0298l#9d029be#a0029ds#a2029fs#a501a2,#a701a4 #aa01a6y#ac01a9o#af01abu#b101ad #b401b0f#b601b2e#b901b4e#bb01b7l#be01b9 #c000bbi#c300bet#c500c0s#c800c2 #ca00c5s#cd00c7e#c700c7e#c100c7p#ba00c8i#b400c8n#ae00c8g#a800c8 #a200c8c#9b00c8h#9500c9i#8f00c9l#8900c9l#8200c9.")

hecho("\n\n#0000cdV#0400car#0700c8a#0b00c5s#0f00c3 #1200c0l#1601bei#1a01bbf#1e01b9t#2101b6s#2501b4 #2901b1h#2c01afi#3001acs#3401aa #3701a7b#3b01a5o#3f02a2w#4302a0e#46029dd#4a029b #4e0298h#510296e#550293a#590291d#5c028e,#60028c #640289t#680387h#6b0384e#6f0382 #73037fh#76037do#7a037al#7d037cl#7f037fo#820381w#840383 #870386s#890288o#8c028ac#8e028dk#91028fe#930291t#960294s#980296 #9b0298o#9d029bf#a0029d #a2029fh#a501a2i#a701a4s#aa01a6 #ac01a9s#af01abk#b101adu#b401b0l#b601b2l#b901b4 #bb01b7m#be01b9a#c000bbs#c300bek#c500c0 #c800c2t#ca00c5r#cd00c7a#c700c7i#c100c7n#ba00c8i#b400c8n#ae00c8g#a800c8 #a200c8u#9b00c8p#9500c9o#8f00c9n#8900c9 #8200c9y#7c00c9o#7600cau#7000car#6a00ca #6300caf#5d00caa#5700cac#5100cbe#4b00cb #4400cbo#3e00cbn#3800cbc#3200cce#2b00cc #2500ccm#1f00cco#1900ccr#1300cce#0c00cd.#0600cd ")
hecho("\n#0000cd\"#0400caI#0700c8t#0b00c5 #0f00c3i#1200c0s#1601be #1a01bbn#1e01b9o#2101b6t#2501b4 #2901b1e#2c01afn#3001aco#3401aau#3701a7g#3b01a5h#3f02a2 #4302a0t#46029do#4a029b #4e0298l#510296i#550293v#590291e#5c028e #60028ci#640289n#680387 #6b0384t#6f0382h#73037fe#76037d #7a037ap#7d037cr#7f037fe#820381s#840383e#870386n#890288t#8c028a,#8e028d #91028fo#930291n#960294l#980296y#9b0298 #9d029bt#a0029do#a2029f #a501a2r#a701a4e#aa01a6a#ac01a9c#af01abt#b101ad.#b401b0 #b601b2O#b901b4n#bb01b7e#be01b9 #c000bbm#c300beu#c500c0s#c800c2t#ca00c5 #cd00c7b#c700c7e#c100c7 #ba00c8v#b400c8i#ae00c8g#a800c8i#a200c8l#9b00c8a#9500c9n#8f00c9t#8900c9.#8200c9 #7c00c9O#7600can#7000cae#6a00ca #6300cam#5d00cau#5700cas#5100cbt#4b00cb #4400cbl#3e00cbo#3800cbo#3200cck#2b00cc #2500cct#1f00cco#1900cc #1300cct#0c00cdh#0600cde#0000cd ")
hecho("\n#0000cdf#0400cau#0700c8t#0b00c5u#0f00c3r#1200c0e#1601be,#1a01bb #1e01b9a#2101b6n#2501b4d#2901b1 #2c01afs#3001ace#3401aae#3701a7 #3b01a5t#3f02a2h#4302a0e#46029di#4a029br#4e0298 #510296f#550293o#590291e#5c028e #60028cb#640289e#680387f#6b0384o#6f0382r#73037fe#76037d #7a037at#7d037ch#7f037fe#820381y#840383 #870386h#890288a#8c028av#8e028de#91028f #930291b#960294e#980296c#9b0298o#9d029bm#a0029de#a2029f #a501a2o#a701a4n#aa01a6e#ac01a9,#af01ab #b101ads#b401b0o#b601b2 #b901b4t#bb01b7h#be01b9a#c000bbt#c300be #c500c0t#c800c2h#ca00c5e#cd00c7y#c700c7 #c100c7m#ba00c8a#b400c8y#ae00c8 #a800c8s#a200c8t#9b00c8r#9500c9i#8f00c9k#8900c9e#8200c9 #7c00c9a#7600can#7000cad#6a00ca #6300cac#5d00cau#5700cal#5100cbl#4b00cb #4400cbb#3e00cbe#3800cbf#3200cco#2b00ccr#2500cce#1f00cc #1900cct#1300cch#0c00cde#0600cdy#0000cd ")
hecho("\n#0000cde#0400cav#0700c8e#0b00c5r#0f00c3 #1200c0a#1601ber#1a01bbe#1e01b9,#2101b6\"#2501b4 #2901b1h#2c01afe#3001ac #3401aae#3701a7x#3b01a5p#3f02a2l#4302a0a#46029di#4a029bn#4e0298s#510296 #550293i#590291n#5c028e #60028ch#640289i#680387s#6b0384 #6f0382o#73037fw#76037dn#7a037a #7d037cr#7f037fu#820381m#840383b#870386l#890288i#8c028an#8e028dg#91028f,#930291 #960294s#980296t#9b0298e#9d029ba#a0029dd#a2029fy#a501a2 #a701a4t#aa01a6o#ac01a9n#af01abe#b101ad.#b401b0 #b601b2\"#b901b4T#bb01b7h#be01b9a#c000bbt#c300be #c500c0i#c800c2s#ca00c5 #cd00c7t#c700c7h#c100c7e#ba00c8 #b400c8o#ae00c8n#a800c8l#a200c8y#9b00c8 #9500c9w#8f00c9a#8900c9y#8200c9 #7c00c9D#7600cae#7000can#6a00cad#6300caa#5d00car#5700caa#5100cb #4b00cbm#4400cba#3e00cby#3800cb #3200ccb#2b00cce#2500cc #1f00cck#1900cce#1300ccp#0c00cdt#0600cd ")
hecho("\n#0000cdp#0400cau#0700c8r#0b00c5e#0f00c3 #1200c0a#1601ben#1a01bbd#1e01b9 #2101b6s#2501b4a#2901b1f#2c01afe#3001ac.#3401aa #3701a7W#3b01a5e#3f02a2 #4302a0m#46029du#4a029bs#4e0298t#510296 #550293n#590291e#5c028ev#60028ce#640289r#680387 #6b0384t#6f0382u#73037fr#76037dn#7a037a #7d037ca#7f037f #820381b#840383l#870386i#890288n#8c028ad#8e028d #91028fe#930291y#960294e#980296 #9b0298a#9d029bg#a0029da#a2029fi#a501a2n#a701a4,#aa01a6 #ac01a9l#af01abe#b101ads#b401b0t#b601b2 #b901b4h#bb01b7i#be01b9s#c000bbt#c300beo#c500c0r#c800c2y#ca00c5 #cd00c7r#c700c7e#c100c7p#ba00c8e#b400c8a#ae00c8t#a800c8 #a200c8i#9b00c8t#9500c9s#8f00c9e#8900c9l#8200c9f#7c00c9.#7600ca #7000caI#6a00cat#6300ca #5d00cai#5700cas#5100cb #4b00cbb#4400cby#3e00cb #3800cbt#3200cch#2b00cce#2500cc ")
hecho("\n#0000cdb#0400cal#0700c8e#0b00c5s#0f00c3s#1200c0e#1601bed#1a01bb #1e01b9S#2101b6e#2501b4e#2901b1r#2c01af #3001act#3401aah#3701a7a#3b01a5t#3f02a2 #4302a0w#46029de#4a029b #4e0298m#510296a#550293y#590291 #5c028es#60028ce#640289e#680387 #6b0384t#6f0382h#73037fe#76037d #7a037af#7d037cu#7f037ft#820381u#840383r#870386e#890288,#8c028a #8e028da#91028fn#930291d#960294 #980296c#9b0298a#9d029br#a0029dv#a2029fe#a501a2 #a701a4a#aa01a6 #ac01a9n#af01abe#b101adw#b401b0 #b601b2o#b901b4n#bb01b7e#be01b9,#c000bb #c300bea#c500c0 #c800c2b#ca00c5e#cd00c7t#c700c7t#c100c7e#ba00c8r#b400c8 #ae00c8o#a800c8n#a200c8e#9b00c8.#9500c9 #8f00c9Y#8900c9o#8200c9u#7c00c9 #7600caw#7000cai#6a00cal#6300cal#5d00ca #5700cal#5100cbe#4b00cba#4400cbr#3e00cbn#3800cb #3200cch#2b00cco#2500ccw#1f00cc #1900ccn#1300cco#0c00cdt#0600cd ")
hecho("\n#0000cdt#0400cao#0700c8 #0b00c5f#0f00c3a#1200c0i#1601bel#1a01bb #1e01b9a#2101b6s#2501b4 #2901b1c#2c01afo#3001acu#3401aan#3701a7t#3b01a5l#3f02a2e#4302a0s#46029ds#4a029b #4e0298d#510296i#550293d#590291 #5c028eb#60028ce#640289f#680387o#6b0384r#6f0382e#73037f #76037dy#7a037ao#7d037cu#7f037f.#820381\"")

hecho("\n\n#0000cd\"#0400caC#0700c8o#0b00c5m#0f00c3e#1200c0,#1601be #1a01bbV#1e01b9a#2101b6l#2501b4o#2901b1r#2c01afi#3001ace#3401aa.#3701a7 #3b01a5S#3f02a2t#4302a0e#46029dp#4a029b #4e0298f#510296o#550293r#590291w#5c028ea#60028cr#640289d#680387 #6b0384a#6f0382n#73037fd#76037d #7a037ar#7d037ce#7f037fc#820381e#840383i#870386v#890288e#8c028a #8e028dt#91028fh#930291e#960294 #980296m#9b0298a#9d029br#a0029dk#a2029f #a501a2o#a701a4f#aa01a6 #ac01a9t#af01abh#b101ade#b401b0 #b601b2S#b901b4e#bb01b7e#be01b9r#c000bb,#c300be #c500c0s#c800c2o#ca00c5 #cd00c7t#c700c7h#c100c7a#ba00c8t#b400c8 #ae00c8y#a800c8o#a200c8u#9b00c8 #9500c9m#8f00c9a#8900c9y#8200c9 #7c00c9f#7600cau#7000cal#6a00caf#6300cai#5d00cal#5700cal#5100cb #4b00cby#4400cbo#3e00cbu#3800cbr#3200cc ")
hecho("\n#0000cdd#0400cae#0700c8s#0b00c5t#0f00c3i#1200c0n#1601bey#1a01bb,#1e01b9 #2101b6a#2501b4n#2901b1d#2c01af #3001aci#3401aan#3701a7 #3b01a5d#3f02a2o#4302a0i#46029dn#4a029bg#4e0298 #510296s#550293o#590291,#5c028e #60028cd#640289e#680387l#6b0384i#6f0382v#73037fe#76037dr#7a037a #7d037cu#7f037fs#820381 #840383a#870386l#890288l#8c028a.#8e028d\"#91028f #930291H#960294e#980296 #9b0298t#9d029ba#a0029dk#a2029fe#a501a2s#a701a4 #aa01a6a#ac01a9 #af01abs#b101adt#b401b0e#b601b2p#b901b4 #bb01b7c#be01b9l#c000bbo#c300bes#c500c0e#c800c2r#ca00c5 #cd00c7a#c700c7n#c100c7d#ba00c8 #b400c8i#ae00c8n#a800c8d#a200c8i#9b00c8c#9500c9a#8f00c9t#8900c9e#8200c9s#7c00c9 #7600caf#7000cao#6a00car#6300ca #5d00cay#5700cao#5100cbu#4b00cb #4400cbt#3e00cbo#3800cb #3200ccd#2b00cco#2500cc #1f00cct#1900cch#1300cce#0c00cd ")
hecho("\n#0000cds#0400caa#0700c8m#0b00c5e#0f00c3,#1200c0 #1601bea#1a01bbn#1e01b9d#2101b6 #2501b4o#2901b1n#2c01afc#3001ace#3401aa #3701a7y#3b01a5o#3f02a2u#4302a0 #46029dh#4a029ba#4e0298v#510296e#550293,#590291 #5c028eh#60028ce#640289 #680387s#6b0384p#6f0382e#73037fa#76037dk#7a037as#7d037c #7f037fa#820381g#840383a#870386i#890288n#8c028a.#8e028d #91028fT#930291h#960294o#980296u#9b0298g#9d029bh#a0029d #a2029fy#a501a2o#a701a4u#aa01a6 #ac01a9c#af01aba#b101adn#b401b0n#b601b2o#b901b4t#bb01b7 #be01b9s#c000bbe#c300bee#c500c0 #c800c2h#ca00c5i#cd00c7s#c700c7 #c100c7e#ba00c8x#b400c8p#ae00c8r#a800c8e#a200c8s#9b00c8s#9500c9i#8f00c9o#8900c9n#8200c9,#7c00c9 #7600cat#7000cah#6a00cae#6300car#5d00cae#5700ca #5100cbi#4b00cbs#4400cb #3e00cba#3800cbn#3200cc ")
hecho("\n#0000cda#0400cap#0700c8p#0b00c5r#0f00c3o#1200c0v#1601bei#1a01bbn#1e01b9g#2101b6 #2501b4s#2901b1m#2c01afi#3001acl#3401aae#3701a7 #3b01a5t#3f02a2o#4302a0 #46029dh#4a029bi#4e0298s#510296 #550293i#590291n#5c028et#60028co#640289n#680387a#6b0384t#6f0382i#73037fo#76037dn#7a037a.#7d037c #7f037f\"#820381C#840383o#870386m#890288e#8c028a,#8e028d #91028fa#930291n#960294d#980296 #9b0298S#9d029be#a0029de#a2029f.#a501a2\"#a701a4 #aa01a6W#ac01a9i#af01abt#b101adh#b401b0 #b601b2t#b901b4h#bb01b7a#be01b9t#c000bb,#c300be #c500c0S#c800c2r#ca00c5a#cd00c7h#c700c7d#c100c7a#ba00c8 #b400c8s#ae00c8h#a800c8i#a200c8f#9b00c8t#9500c9s#8f00c9 #8900c9h#8200c9e#7c00c9r#7600ca #7000caw#6a00cae#6300cai#5d00cag#5700cah#5100cbt#4b00cb #4400cbt#3e00cbo#3800cb #3200cct#2b00cch#2500cce#1f00cc #1900ccs#1300cci#0c00cdd#0600cde#0000cd ")
hecho("\n#0000cda#0400can#0700c8d#0b00c5 #0f00c3e#1200c0x#1601bet#1a01bbe#1e01b9n#2101b6d#2501b4s#2901b1 #2c01afh#3001ace#3401aar#3701a7 #3b01a5t#3f02a2a#4302a0l#46029do#4a029bn#4e0298 #510296b#550293e#590291l#5c028eo#60028cw#640289,#680387 #6b0384t#6f0382h#73037fe#76037d #7a037al#7d037ce#7f037fg#820381 #840383s#870386t#890288r#8c028ae#8e028dt#91028fc#930291h#960294i#980296n#9b0298g#9d029b #a0029do#a2029fu#a501a2t#a701a4 #aa01a6i#ac01a9m#af01abp#b101ado#b401b0s#b601b2s#b901b4i#bb01b7b#be01b9l#c000bby#c300be #c500c0l#c800c2o#ca00c5n#cd00c7g#c700c7,#c100c7 #ba00c8s#b400c8p#ae00c8a#a800c8n#a200c8n#9b00c8i#9500c9n#8f00c9g#8900c9 #8200c9t#7c00c9h#7600cae#7000ca #6a00cad#6300cai#5d00cas#5700cat#5100cba#4b00cbn#4400cbc#3e00cbe#3800cb #3200ccf#2b00ccr#2500cco#1f00ccm#1900cc #1300cch#0c00cde#0600cdr#0000cd ")
hecho("\n#0000cdp#0400cae#0700c8r#0b00c5c#0f00c3h#1200c0 #1601bet#1a01bbo#1e01b9 #2101b6y#2501b4o#2901b1u#2c01af.#3001ac #3401aaT#3701a7h#3b01a5e#3f02a2r#4302a0e#46029d #4a029bi#4e0298s#510296 #550293n#590291o#5c028e #60028cw#640289o#680387r#6b0384d#6f0382 #73037fo#76037dr#7a037a #7d037ci#7f037fn#820381d#840383i#870386c#890288a#8c028at#8e028di#91028fo#930291n#960294 #980296o#9b0298f#9d029b #a0029dw#a2029fh#a501a2a#a701a4t#aa01a6 #ac01a9c#af01abo#b101adm#b401b0e#b601b2s#b901b4,#bb01b7 #be01b9t#c000bbh#c300bee#c500c0 #c800c2h#ca00c5a#cd00c7r#c700c7s#c100c7h#ba00c8 #b400c8r#ae00c8a#a800c8k#a200c8e#9b00c8 #9500c9o#8f00c9f#8900c9 #8200c9c#7c00c9l#7600caa#7000caw#6a00cas#6300ca #5d00cao#5700cav#5100cbe#4b00cbr#4400cb #3e00cby#3800cbo#3200ccu#2b00ccr#2500cc #1f00ccf#1900cca#1300ccc#0c00cde#0600cd,#0000cd ")
hecho("\n#0000cdt#0400cae#0700c8a#0b00c5r#0f00c3i#1200c0n#1601beg#1a01bb #1e01b9a#2101b6t#2501b4 #2901b1y#2c01afo#3001acu#3401aar#3701a7 #3b01a5f#3f02a2l#4302a0e#46029ds#4a029bh#4e0298 #510296a#550293n#590291d#5c028e #60028cr#640289e#680387n#6b0384d#6f0382i#73037fn#76037dg#7a037a #7d037ci#7f037ft#820381 #840383s#870386o#890288 #8c028at#8e028dh#91028fa#930291t#960294 #980296y#9b0298o#9d029bu#a0029dr#a2029f #a501a2h#a701a4a#aa01a6n#ac01a9d#af01abs#b101ad #b401b0i#b601b2n#b901b4v#bb01b7o#be01b9l#c000bbu#c300ben#c500c0t#c800c2a#ca00c5r#cd00c7i#c700c7l#c100c7y#ba00c8 #b400c8l#ae00c8i#a800c8f#a200c8t#9b00c8 #9500c9a#8f00c9n#8900c9d#8200c9 #7c00c9d#7600cae#7000cas#6a00cap#6300cae#5d00car#5700caa#5100cbt#4b00cbe#4400cbl#3e00cby#3800cb #3200ccs#2b00cce#2500cca#1f00ccr#1900ccc#1300cch#0c00cd ")
hecho("\n#0000cdf#0400cao#0700c8r#0b00c5 #0f00c3t#1200c0h#1601bee#1a01bb #1e01b9m#2101b6a#2501b4r#2901b1k#2c01afs#3001ac #3401aat#3701a7h#3b01a5a#3f02a2t#4302a0 #46029ds#4a029bu#4e0298r#510296e#550293l#590291y#5c028e #60028cm#640289u#680387s#6b0384t#6f0382 #73037fb#76037de#7a037a #7d037ct#7f037fh#820381e#840383r#870386e#890288.")

hecho("\n\n#0000cdB#0400cau#0700c8t#0b00c5 #0f00c3t#1200c0h#1601bee#1a01bbr#1e01b9e#2101b6 #2501b4i#2901b1s#2c01af #3001acn#3401aao#3701a7n#3b01a5e#3f02a2,#4302a0 #46029da#4a029bn#4e0298d#510296 #550293t#590291h#5c028ee#60028cr#640289e#680387 #6b0384i#6f0382s#73037f #76037dn#7a037ao#7d037c #7f037fb#820381l#840383o#870386o#890288d#8c028a #8e028dt#91028fo#930291 #960294c#980296o#9b0298a#9d029bt#a0029d #a2029fy#a501a2o#a701a4u#aa01a6r#ac01a9 #af01abh#b101ada#b401b0n#b601b2d#b901b4s#bb01b7.#be01b9 #c000bbS#c300beo#c500c0 #c800c2s#ca00c5o#cd00c7o#c700c7n#c100c7 #ba00c8a#b400c8s#ae00c8 #a800c8y#a200c8o#9b00c8u#9500c9 #8f00c9r#8900c9e#8200c9a#7c00c9l#7600cai#7000caz#6a00cae#6300ca #5d00cat#5700cah#5100cbi#4b00cbs#4400cb,#3e00cb #3800cbt#3200cch#2b00cce#2500cc #1f00ccp#1900cca#1300cci#0c00cdn#0600cd ")
hecho("\n#0000cde#0400cab#0700c8b#0b00c5s#0f00c3,#1200c0 #1601bea#1a01bbn#1e01b9d#2101b6 #2501b4y#2901b1o#2c01afu#3001ac #3401aal#3701a7i#3b01a5f#3f02a2t#4302a0 #46029dy#4a029bo#4e0298u#510296r#550293 #590291c#5c028eh#60028ci#640289n#680387 #6b0384a#6f0382g#73037fa#76037di#7a037an#7d037c #7f037ft#820381o#840383 #870386g#890288a#8c028az#8e028de#91028f #930291u#960294p#980296 #9b0298a#9d029bt#a0029d #a2029ft#a501a2h#a701a4e#aa01a6 #ac01a9a#af01abs#b101adp#b401b0e#b601b2c#b901b4t#bb01b7.#be01b9 #c000bbA#c300bes#c500c0 #c800c2i#ca00c5f#cd00c7 #c700c7a#c100c7n#ba00c8t#b400c8i#ae00c8c#a800c8i#a200c8p#9b00c8a#9500c9t#8f00c9i#8900c9n#8200c9g#7c00c9 #7600cat#7000cah#6a00cae#6300ca #5d00caq#5700cau#5100cbe#4b00cbs#4400cbt#3e00cbi#3800cbo#3200ccn#2b00cc #2500ccu#1f00ccp#1900cco#1300ccn#0c00cd ")
hecho("\n#0000cdy#0400cao#0700c8u#0b00c5r#0f00c3 #1200c0t#1601beo#1a01bbn#1e01b9g#2101b6u#2501b4e#2901b1,#2c01af #3001ach#3401aae#3701a7r#3b01a5 #3f02a2v#4302a0o#46029di#4a029bc#4e0298e#510296 #550293r#590291e#5c028ev#60028ce#640289r#680387b#6b0384e#6f0382r#73037fa#76037dt#7a037ae#7d037cs#7f037f #820381i#840383n#870386 #890288y#8c028ao#8e028du#91028fr#930291 #960294s#980296k#9b0298u#9d029bl#a0029dl#a2029f #a501a2o#a701a4n#aa01a6c#ac01a9e#af01ab #b101adm#b401b0o#b601b2r#b901b4e#bb01b7,#be01b9 #c000bb\"#c300beI#c500c0 #c800c2h#ca00c5a#cd00c7v#c700c7e#c100c7 #ba00c8t#b400c8o#ae00c8r#a800c8n#a200c8 #9b00c8t#9500c9h#8f00c9e#8900c9 #8200c9g#7c00c9a#7600cau#7000caz#6a00cae#6300ca #5d00cat#5700cah#5100cba#4b00cbt#4400cb #3e00cbo#3800cbn#3200ccc#2b00cce#2500cc #1f00ccb#1900cco#1300ccu#0c00cdn#0600cdd#0000cd ")
hecho("\n#0000cdy#0400cao#0700c8u#0b00c5,#0f00c3 #1200c0t#1601beh#1a01bba#1e01b9t#2101b6 #2501b4b#2901b1i#2c01afn#3001acd#3401aas#3701a7 #3b01a5a#3f02a2l#4302a0l#46029d #4a029bm#4e0298o#510296r#550293t#590291a#5c028el#60028cs#640289.#680387 #6b0384N#6f0382o#73037f #76037dl#7a037ao#7d037cn#7f037fg#820381e#840383r#870386 #890288w#8c028ai#8e028dl#91028fl#930291 #960294i#980296t#9b0298 #9d029bo#a0029db#a2029fs#a501a2c#a701a4u#aa01a6r#ac01a9e#af01ab #b101adt#b401b0h#b601b2e#b901b4 #bb01b7w#be01b9o#c000bbr#c300bel#c500c0d#c800c2 #ca00c5a#cd00c7n#c700c7d#c100c7 #ba00c8a#b400c8l#ae00c8l#a800c8 #a200c8f#9b00c8u#9500c9t#8f00c9u#8900c9r#8200c9e#7c00c9 #7600caw#7000cao#6a00car#6300cal#5d00cad#5700cas#5100cb #4b00cbf#4400cbr#3e00cbo#3800cbm#3200cc #2b00ccy#2500cco#1f00ccu#1900cc.#1300cc ")
hecho("\n#0000cdN#0400cao#0700c8w#0b00c5 #0f00c3y#1200c0o#1601beu#1a01bb #1e01b9m#2101b6a#2501b4y#2901b1 #2c01afb#3001ace#3401aa #3701a7m#3b01a5a#3f02a2d#4302a0e#46029d #4a029bt#4e0298o#510296 #550293S#590291e#5c028ee#60028c.#640289\"#680387 #6b0384S#6f0382h#73037fe#76037d #7a037ar#7d037ce#7f037ft#820381r#840383a#870386c#890288t#8c028as#8e028d,#91028f #930291a#960294n#980296d#9b0298 #9d029bw#a0029di#a2029ft#a501a2h#a701a4 #aa01a6a#ac01a9 #af01abs#b101adi#b401b0n#b601b2g#b901b4l#bb01b7e#be01b9,#c000bb #c300bep#c500c0o#c800c2w#ca00c5e#cd00c7r#c700c7f#c100c7u#ba00c8l#b400c8 #ae00c8b#a800c8e#a200c8a#9b00c8t#9500c9 #8f00c9o#8900c9f#8200c9 #7c00c9h#7600cae#7000car#6a00ca #6300caw#5d00cai#5700can#5100cbg#4b00cbs#4400cb,#3e00cb #3800cbs#3200cch#2b00cce#2500cc #1f00cci#1900ccs#1300cc ")
hecho("\n#0000cds#0400cak#0700c8y#0b00c5b#0f00c3o#1200c0r#1601ben#1a01bbe#1e01b9 #2101b6a#2501b4n#2901b1d#2c01af #3001acg#3401aao#3701a7n#3b01a5e#3f02a2.#4302a0 #46029d\"#4a029bM#4e0298a#510296y#550293 #590291t#5c028eh#60028ce#640289 #680387r#6b0384a#6f0382v#73037fe#76037dn#7a037a #7d037cs#7f037fh#820381o#840383w#870386 #890288y#8c028ao#8e028du#91028f #930291a#960294l#980296l#9b0298 #9d029bt#a0029dh#a2029fa#a501a2t#a701a4 #aa01a6i#ac01a9s#af01ab,#b101ad #b401b0a#b601b2n#b901b4d#bb01b7 #be01b9c#c000bbo#c300beu#c500c0l#c800c2d#ca00c5 #cd00c7b#c700c7e#c100c7,#ba00c8 #b400c8a#ae00c8n#a800c8d#a200c8 #9b00c8w#9500c9i#8f00c9l#8900c9l#8200c9 #7c00c9b#7600cae#7000ca,#6a00ca #6300caV#5d00caa#5700cal#5100cbo#4b00cbr#4400cbi#3e00cbe#3800cb,#3200cc\"#2b00cc #2500ccV#1f00ccr#1900cca#1300ccs#0c00cd ")
hecho("\n#0000cdc#0400cao#0700c8n#0b00c5c#0f00c3l#1200c0u#1601bed#1a01bbe#1e01b9s#2101b6,#2501b4 #2901b1s#2c01aft#3001ace#3401aap#3701a7p#3b01a5i#3f02a2n#4302a0g#46029d #4a029bb#4e0298a#510296c#550293k#590291 #5c028et#60028co#640289 #680387h#6b0384i#6f0382s#73037f #76037dr#7a037ae#7d037cs#7f037ft#820381i#840383n#870386g#890288 #8c028ap#8e028do#91028fs#930291i#960294t#980296i#9b0298o#9d029bn#a0029d #a2029fw#a501a2i#a701a4t#aa01a6h#ac01a9o#af01abu#b101adt#b401b0 #b601b2f#b901b4u#bb01b7r#be01b9t#c000bbh#c300bee#c500c0r#c800c2 #ca00c5f#cd00c7a#c700c7n#c100c7f#ba00c8a#b400c8r#ae00c8e#a800c8.")

hecho("\n\n#0000cdY#0400cao#0700c8u#0b00c5 #0f00c3h#1200c0a#1601bev#1a01bbe#1e01b9 #2101b6g#2501b4a#2901b1i#2c01afn#3001ace#3401aad#3701a7 #3b01a5t#3f02a2h#4302a0e#46029d #4a029bO#4e0298a#510296t#550293h#590291 #5c028eo#60028cf#640289 #680387t#6b0384h#6f0382e#73037f #76037dE#7a037al#7d037cd#7f037fe#820381r#840383 #870386S#890288h#8c028aa#8e028dm#91028fa#930291n#960294.")
cechoLink("\n\n&lt;violet_red&gt; BACK TO SRAHDA",function() expandAlias("srahda") end, "back", true)
cechoLink("\n&lt;violet_red&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^srahda2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^srahda3$</name>
					<script>hecho("\n#0000cdS#0200cbR#0500caA#0700c8H#0a00c6D#0c00c5A#0f00c3,#1100c1 #1400bfT#1601beH#1901bcE#1b01ba #1e01b9S#2001b7E#2301b5E#2501b4R")

hecho("\n\n#0000cdT#0200cbh#0500cae#0700c8 #0a00c6S#0c00c5e#0f00c3e#1100c1r#1400bf #1601bet#1901bca#1b01bak#1e01b9e#2001b7s#2301b5 #2501b4t#2801b2h#2a01b0e#2d01af #2f01ads#3201abh#3401a9a#3701a8p#3901a6e#3c01a4 #3e02a3o#4102a1f#43029f #46029et#48029ch#4b029ae#4d0298 #500297t#520295h#550293r#570292e#5a0290e#5c028e-#5f028de#61028by#640289e#660388d#690386 #6b0384r#6e0382a#700381v#73037fe#75037dn#78037c.")

hecho("\n\n#0000cdT#0200cbh#0500cae#0700c8 #0a00c6r#0c00c5a#0f00c3v#1100c1e#1400bfn#1601be #1901bcs#1b01bap#1e01b9i#2001b7r#2301b5i#2501b4t#2801b2 #2a01b0b#2d01afe#2f01ada#3201abr#3401a9s#3701a8 #3901a6a#3c01a4n#3e02a3 #4102a1e#43029fx#46029et#48029cr#4b029aa#4d0298 #500297e#520295y#550293e#570292,#5a0290 #5c028ea#5f028dl#61028bl#640289o#660388w#690386i#6b0384n#6e0382g#700381 #73037fh#75037de#78037cr#7a037a #78037ct#76037do#74037f #720381s#700382e#6e0384e#6c0386 #6a0388a#670289l#65028bl#63028d #61028ep#5f0290a#5d0292t#5b0293h#590295s#570297 #550298p#53029aa#51029cs#4f029et#4d029f,#4b02a1 #4902a3p#4601a4r#4401a6e#4201a8s#4001a9e#3e01abn#3c01adt#3a01af,#3801b0 #3601b2a#3401b4n#3201b5d#3001b7 #2e01b9f#2c01bau#2a01bct#2801beu#2500bfr#2300c1e#2100c3.#1f00c5 #1d00c6A#1b00c8l#1900cal")
hecho("\n#0000cdp#0200cbo#0500cas#0700c8s#0a00c6i#0c00c5b#0f00c3i#1100c1l#1400bfi#1601bet#1901bci#1b01bae#1e01b9s#2001b7 #2301b5a#2501b4r#2801b2e#2a01b0 #2d01afs#2f01ade#3201abe#3401a9n#3701a8,#3901a6 #3c01a4a#3e02a3l#4102a1l#43029f #46029er#48029co#4b029aa#4d0298d#500297s#520295 #550293c#570292a#5a0290n#5c028e #5f028db#61028be#640289 #660388t#690386r#6b0384a#6e0382v#700381e#73037fl#75037de#78037cd#7a037a,#78037c #76037da#74037fl#720381l#700382 #6e0384l#6c0386e#6a0388a#670289d#65028b #63028dt#61028eo#5f0290 #5d0292o#5b0293n#590295e#570297 #550298f#53029ai#51029cn#4f029ea#4d029fl#4b02a1 #4902a3e#4601a4n#4401a6d#4201a8.#4001a9 #3e01abT#3c01adh#3a01afe#3801b0 #3601b2t#3401b4h#3201b5r#3001b7e#2e01b9e#2c01ba-#2a01bce#2801bey#2500bfe#2300c1d#2100c3 #1f00c5r#1d00c6a#1b00c8v#1900cae#1700cbn#1500cd ")
hecho("\n#0000cdr#0200cbe#0500cam#0700c8i#0a00c6n#0c00c5d#0f00c3s#1100c1 #1400bfu#1601bes#1901bc #1b01ban#1e01b9o#2001b7t#2301b5 #2501b4o#2801b2n#2a01b0l#2d01afy#2f01ad #3201abt#3401a9o#3701a8 #3901a6l#3c01a4o#3e02a3o#4102a1k#43029f #46029et#48029co#4b029a #4d0298t#500297h#520295e#550293 #570292p#5a0290a#5c028es#5f028dt#61028b #640289t#660388o#690386 #6b0384r#6e0382e#700381m#73037fa#75037di#78037cn#7a037a #78037cv#76037di#74037fg#720381i#700382l#6e0384a#6c0386n#6a0388t#670289 #65028bi#63028dn#61028e #5f0290t#5d0292h#5b0293e#590295 #570297p#550298r#53029ae#51029cs#4f029ee#4d029fn#4b02a1t#4902a3 #4601a4b#4401a6u#4201a8t#4001a9 #3e01aba#3c01adl#3a01afs#3801b0o#3601b2 #3401b4t#3201b5o#3001b7 #2e01b9l#2c01bao#2a01bco#2801bek#2500bf #2300c1t#2100c3o#1f00c5 #1d00c6t#1b00c8h#1900cae#1700cb ")
hecho("\n#0000cdf#0200cbu#0500cat#0700c8u#0a00c6r#0c00c5e#0f00c3.#1100c1 #1400bfT#1601beo#1901bc #1b01bas#1e01b9e#2001b7e#2301b5 #2501b4a#2801b2n#2a01b0 #2d01afe#2f01adn#3201abe#3401a9m#3701a8y#3901a6 #3c01a4b#3e02a3e#4102a1f#43029fo#46029er#48029ce#4b029a #4d0298t#500297h#520295e#550293y#570292 #5a0290a#5c028er#5f028dr#61028bi#640289v#660388e#690386,#6b0384 #6e0382a#700381 #73037ff#75037dr#78037ci#7a037ae#78037cn#76037dd#74037f #720381b#700382e#6e0384f#6c0386o#6a0388r#670289e#65028b #63028dt#61028eh#5f0290e#5d0292y#5b0293 #590295s#570297p#550298e#53029aa#51029ck#4f029e,#4d029f #4b02a1a#4902a3n#4601a4 #4401a6o#4201a8p#4001a9p#3e01abo#3c01adr#3a01aft#3801b0u#3601b2n#3401b4i#3201b5t#3001b7y#2e01b9 #2c01bab#2a01bce#2801bef#2500bfo#2300c1r#2100c3e#1f00c5 #1d00c6i#1b00c8t#1900ca ")
hecho("\n#0000cdp#0200cbr#0500cae#0700c8s#0a00c6e#0c00c5n#0f00c3t#1100c1s#1400bf #1601bei#1901bct#1b01bas#1e01b9e#2001b7l#2301b5f#2501b4.#2801b2 #2a01b0T#2d01afo#2f01ad #3201abs#3401a9e#3701a8e#3901a6 #3c01a4t#3e02a3h#4102a1e#43029f #46029ef#48029cu#4b029at#4d0298u#500297r#520295e#550293 #570292i#5a0290s#5c028e #5f028dt#61028bo#640289 #660388b#690386e#6b0384 #6e0382a#700381b#73037fl#75037de#78037c #7a037at#78037co#76037d #74037fm#720381a#700382k#6e0384e#6c0386 #6a0388a#670289 #65028bn#63028de#61028ew#5f0290 #5d0292a#5b0293n#590295d#570297 #550298b#53029ae#51029ct#4f029et#4d029fe#4b02a1r#4902a3 #4601a4o#4401a6n#4201a8e#4001a9.")

hecho("\n\n#0000cd.#0200cb:#0500ca*#0700c8~#0a00c6*#0c00c5:#0f00c3.#1100c1_#1400bf.#1601be:#1901bc*#1b01ba~#1e01b9*#2001b7:#2301b5.#2501b4_#2801b2.#2a01b0:#2d01af*#2f01ad~#3201ab*#3401a9:#3701a8.#3901a6_#3c01a4.#3e02a3:#4102a1*#43029f~#46029e*#48029c:#4b029a.#4d0298_#500297.#520295:#550293*#570292~#5a0290*#5c028e:#5f028d.#61028b_#640289.#660388:#690386*#6b0384~#6e0382*#700381:#73037f.#75037d_#78037c.#7a037a:#78037c*#76037d~#74037f*#720381:#6f0383.#6d0384_#6b0386.#690388:#67028a*#65028b~#63028d*#61028f:#5f0290.#5d0292_#5a0294.#580296:#560297*#540299~#52029b*#50029d:#4e029e.#4c02a0_#4a02a2.#4702a3:#4501a5*#4301a7~#4101a9*#3f01aa:#3d01ac.#3b01ae_#3901b0.#3701b1:#3501b3*#3201b5~#3001b7*#2e01b8:#2c01ba.#2a01bc_#2801bd.#2601bf:#2400c1*#2200c3~#2000c4*#1d00c6:#1b00c8.")

hecho("\n\n#0000cdS#0200cbr#0500caa#0700c8h#0a00c6d#0c00c5a#0f00c3 #1100c1i#1400bfm#1601bep#1901bcl#1b01bao#1e01b9r#2001b7e#2301b5s#2501b4 #2801b2u#2a01b0s#2d01af,#2f01ad #3201abt#3401a9h#3701a8i#3901a6n#3c01a4k#3e02a3!#4102a1 #43029fS#46029ee#48029ce#4b029ak#4d0298 #500297t#520295h#550293e#570292 #5a0290m#5c028ea#5f028dn#61028by#640289 #660388p#690386a#6b0384t#6e0382h#700381s#73037f #75037do#78037cf#7a037a #78037ct#76037dh#74037fi#720381s#6f0383 #6d0384w#6b0386o#690388r#67028al#65028bd#63028d,#61028f #5f0290s#5d0292e#5a0294e#580296k#560297 #540299t#52029bh#50029de#4e029e #4c02a0d#4a02a2a#4702a3r#4501a5k#4301a7 #4101a9r#3f01aae#3d01aca#3b01aec#3901b0h#3701b1e#3501b3s#3201b5 #3001b7a#2e01b8n#2c01bad#2a01bc #2801bdt#2601bfe#2400c1r#2200c3r#2000c4i#1d00c6b#1b00c8l#1900cae")
hecho("\n#0000cdq#0200cbu#0500cae#0700c8s#0a00c6t#0c00c5i#0f00c3o#1100c1n#1400bfs#1601be #1901bct#1b01bah#1e01b9a#2001b7t#2301b5 #2501b4l#2801b2e#2a01b0s#2d01afs#2f01ade#3201abr#3401a9 #3701a8t#3901a6h#3c01a4i#3e02a3n#4102a1g#43029fs#46029e #48029cw#4b029ao#4d0298u#500297l#520295d#550293 #570292t#5a0290o#5c028eo#5f028d #61028bm#640289u#660388c#690386h#6b0384 #6e0382d#700381r#73037fe#75037da#78037cd#7a037a.#78037c #76037dT#74037fh#720381i#6f0383n#6d0384k#6b0386,#690388 #67028as#65028be#63028de#61028f #5f0290a#5d0292n#5a0294d#580296 #560297k#540299n#52029bo#50029dw#4e029e.#4c02a0 #4a02a2T#4702a3h#4501a5e#4301a7 #4101a9p#3f01aaa#3d01acs#3b01aet#3901b0,#3701b1 #3501b3t#3201b5h#3001b7e#2e01b8 #2c01bap#2a01bcr#2801bde#2601bfs#2400c1e#2200c3n#2000c4t#1d00c6 #1b00c8a#1900can#1700cbd#1500cd ")
hecho("\n#0000cdt#0200cbh#0500cae#0700c8 #0a00c6f#0c00c5u#0f00c3t#1100c1u#1400bfr#1601bee#1901bc #1b01baa#1e01b9l#2001b7l#2301b5 #2501b4h#2801b2o#2a01b0l#2d01afd#2f01ad #3201abq#3401a9u#3701a8e#3901a6s#3c01a4t#3e02a3i#4102a1o#43029fn#46029es#48029c #4b029aa#4d0298n#500297d#520295 #550293a#570292n#5a0290s#5c028ew#5f028de#61028br#640289s#660388 #690386f#6b0384o#6e0382r#700381 #73037ft#75037dh#78037co#7a037as#78037ce#76037d #74037fw#720381h#6f0383o#6d0384 #6b0386s#690388e#67028ae#65028bk#63028d.")

hecho("\n\n#0000cd.#0200cb:#0500ca*#0700c8~#0a00c6*#0c00c5:#0f00c3.#1100c1_#1400bf.#1601be:#1901bc*#1b01ba~#1e01b9*#2001b7:#2301b5.#2501b4_#2801b2.#2a01b0:#2d01af*#2f01ad~#3201ab*#3401a9:#3701a8.#3901a6_#3c01a4.#3e02a3:#4102a1*#43029f~#46029e*#48029c:#4b029a.#4d0298_#500297.#520295:#550293*#570292~#5a0290*#5c028e:#5f028d.#61028b_#640289.#660388:#690386*#6b0384~#6e0382*#700381:#73037f.#75037d_#78037c.#7a037a:#78037c*#76037d~#74037f*#720381:#6f0383.#6d0384_#6b0386.#690388:#67028a*#65028b~#63028d*#61028f:#5f0290.#5d0292_#5a0294.#580296:#560297*#540299~#52029b*#50029d:#4e029e.#4c02a0_#4a02a2.#4702a3:#4501a5*#4301a7~#4101a9*#3f01aa:#3d01ac.#3b01ae_#3901b0.#3701b1:#3501b3*#3201b5~#3001b7*#2e01b8:#2c01ba.#2a01bc_#2801bd.#2601bf:#2400c1*#2200c3~#2000c4*#1d00c6:#1b00c8.")
cechoLink("\n\n&lt;violet_red&gt; BACK TO SRAHDA",function() expandAlias("srahda") end, "back", true)
cechoLink("\n&lt;violet_red&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^srahda3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^kree-sa1$</name>
					<script>hecho("\n#01a501K#02a402R#03a203E#03a103E#049f04-#059e05S#069c06A#079b07,#079907 #089808T#099609H#0a950aE#0b930b #0b920bB#0c900cR#0d8f0dO#0e8d0eO#0f8c0fD#0f8a0fM#108910O#118711T#128612H#138413E#138313R#148114 ")
hecho("\n\n#01a501N#02a402a#03a203r#03a103r#049f04a#059e05 #069c06s#079b07a#079907y#089808s#099609,#0a950a #0b930b\"#0b920bB#0c900cl#0d8f0de#0e8d0es#0f8c0fs#0f8a0fi#108910n#118711g#128612s#138413 #138313o#148114f#158015 #167e15t#187d14h#197b14e#1a7913 #1c7813a#1d7612n#1e7412c#207311i#217111e#226f10n#246e10t#256c0fs#266a0f #27680ea#29670en#2a650dd#2b630d #2d620cs#2e600cp#2f5e0bi#315d0br#325b0ai#33590at#355809s#365609,#355709 #33590aV#325a0aa#305b0bl#2f5d0bo#2d5e0br#2c5f0ci#2a610ce#29620d.#27630d #26650eW#24660eh#23670ea#22690ft#206a0f #1f6b10d#1d6d10o#1c6e10 #1a6f11y#197111o#177212u#167312 #147513s#137613e#157812e#177a11k#197c11 #1b7e10i#1d810fn#1f830e #21850et#23870dh#25890ce#278b0b #298d0bB#2b8f0ar#2e9209o#309408o#329608d#349807m#369a06o#389c05t#3a9e05h#3ca004e#3ea303r#40a502'#42a702s#44a901 ")
hecho("\n#01a501l#02a402a#03a203i#03a103r#049f04?#059e05\"")

hecho("\n\n#01a501Y#02a402o#03a203u#03a103 #049f04s#059e05a#069c06y#079b07,#079907 #089808\"#099609W#0a950ah#0b930ba#0b920bt#0c900c #0d8f0dc#0e8d0ea#0f8c0fn#0f8a0f #108910y#118711o#128612u#138413 #138313t#148114e#158015l#167e15l#187d14 #197b14m#1a7913e#1c7813 #1d7612o#1e7412f#207311 #217111t#226f10h#246e10e#256c0f #266a0fB#27680er#29670eo#2a650do#2b630dd#2d620cm#2e600co#2f5e0bt#315d0bh#325b0ae#33590ar#355809?#365609\"")

hecho("\n\n#01a501W#02a402i#03a203t#03a103h#049f04 #059e05a#069c06 #079b07s#079907o#089808f#099609t#0a950a #0b930bc#0b920bh#0c900cu#0d8f0dc#0e8d0ek#0f8c0fl#0f8a0fe#108910,#118711 #128612N#138413a#138313r#148114r#158015a#167e15 #187d14s#197b14a#1a7913y#1c7813s#1d7612,#1e7412 #207311\"#217111Y#226f10o#246e10u#256c0f #266a0fs#27680eh#29670eo#2a650dw#2b630d #2d620ca#2e600c #2f5e0bg#315d0br#325b0ae#33590aa#355809t#365609 #355709d#33590ae#325a0aa#305b0bl#2f5d0b #2d5e0bo#2c5f0cf#2a610c #29620db#27630dr#26650ea#24660ev#23670ee#22690fr#206a0fy#1f6b10 #1d6d10t#1c6e10o#1a6f11 #197111l#177212i#167312n#147513g#137613e#157812r#177a11 #197c11w#1b7e10i#1d810ft#1f830eh#21850ei#23870dn#25890c #278b0bh#298d0be#2b8f0ar#2e9209 #309408l#329608a#349807i#369a06r#389c05,#3a9e05 ")
hecho("\n#01a501V#02a402a#03a203l#03a103o#049f04r#059e05i#069c06e#079b07.#079907 #089808F#099609o#0a950ar#0b930b #0b920bt#0c900ch#0d8f0da#0e8d0et#0f8c0f,#0f8a0f #108910y#118711o#128612u#138413 #138313h#148114a#158015v#167e15e#187d14 #197b14o#1a7913u#1c7813r#1d7612 #1e7412r#207311e#217111s#226f10p#246e10e#256c0fc#266a0ft#27680e #29670ea#2a650dn#2b630dd#2d620c #2e600cI#2f5e0b #315d0bs#325b0ah#33590aa#355809l#365609l#355709 #33590at#325a0ae#305b0bl#2f5d0bl#2d5e0b #2c5f0cy#2a610co#29620du#27630d #26650eo#24660ef#23670e #22690fh#206a0fe#1f6b10r#1d6d10.#1c6e10\"")

hecho("\n\n#01a501N#02a402a#03a203r#03a103r#049f04a#059e05 #069c06p#079b07l#079907a#089808c#099609e#0a950as#0b930b #0b920ba#0c900c #0d8f0dh#0e8d0ea#0f8c0fn#0f8a0fd#108910 #118711o#128612n#138413 #138313t#148114h#158015e#167e15 #187d14t#197b14o#1a7913t#1c7813e#1d7612m#1e7412,#207311 #217111h#226f10e#246e10r#256c0f #266a0fe#27680ey#29670ee#2a650ds#2b630d #2d620ca#2e600cp#2f5e0bp#315d0br#325b0aa#33590ai#355809s#365609i#355709n#33590ag#325a0a #305b0bt#2f5d0bh#2d5e0be#2c5f0c #2a610ca#29620dn#27630dc#26650ei#24660ee#23670en#22690ft#206a0f #1f6b10r#1d6d10e#1c6e10l#1a6f11i#197111c#177212 #167312i#147513n#137613 #157812s#177a11i#197c11l#1b7e10e#1d810fn#1f830ec#21850ee#23870d #25890cb#278b0be#298d0bf#2b8f0ao#2e9209r#309408e#329608 #349807s#369a06p#389c05e#3a9e05a#3ca004k#3ea303i#40a502n#42a702g#44a901 ")
hecho("\n#01a501i#02a402n#03a203 #03a103a#049f04 #059e05l#069c06o#079b07w#079907 #089808v#099609o#0a950ai#0b930bc#0b920be#0c900c.#0d8f0d #0e8d0e\"#0f8c0fT#0f8a0fh#108910e#118711 #128612B#138413r#138313o#148114o#158015d#167e15m#187d14o#197b14t#1a7913h#1c7813e#1d7612r#1e7412 #207311i#217111s#226f10 #246e10a#256c0f #266a0fp#27680ee#29670ee#2a650dr#2b630dl#2d620ce#2e600cs#2f5e0bs#315d0b #325b0ah#33590au#355809n#365609t#355709e#33590ar#325a0a,#305b0b #2f5d0bs#2d5e0bi#2c5f0cl#2a610ce#29620dn#27630dt#26650e #24660ea#23670en#22690fd#206a0f #1f6b10p#1d6d10a#1c6e10t#1a6f11i#197111e#177212n#167312t#147513.#137613 #157812S#177a11h#197c11e#1b7e10 #1d810fl#1f830ei#21850en#23870dg#25890ce#278b0br#298d0bs#2b8f0a #2e9209i#309408n#329608 #349807t#369a06h#389c05e#3a9e05 #3ca004d#3ea303a#40a502r#42a702k#44a901 ")
hecho("\n#01a501p#02a402l#03a203a#03a103c#049f04e#059e05s#069c06 #079b07o#079907f#089808 #099609t#0a950ah#0b930be#0b920b #0c900cw#0d8f0do#0e8d0er#0f8c0fl#0f8a0fd#108910 #118711w#128612h#138413e#138313r#148114e#158015 #167e15e#187d14v#197b14e#1a7913n#1c7813 #1d7612V#1e7412o#207311'#217111a#226f10c#246e10h#256c0fa#266a0f'#27680es#29670e #2a650dk#2b630di#2d620cn#2e600cd#2f5e0br#315d0be#325b0ad#33590a #355809s#365609h#355709a#33590al#325a0al#305b0b #2f5d0bn#2d5e0bo#2c5f0ct#2a610c #29620dt#27630dr#26650ee#24660ea#23670ed#22690f.#206a0f #1f6b10S#1d6d10h#1c6e10e#1a6f11 #197111p#177212e#167312r#147513s#137613i#157812s#177a11t#197c11s#1b7e10 #1d810ft#1f830eh#21850er#23870do#25890cu#278b0bg#298d0bh#2b8f0a #2e9209e#309408o#329608n#349807s#369a06 #389c05a#3a9e05n#3ca004d#3ea303 ")
hecho("\n#01a501a#02a402g#03a203e#03a103s#049f04,#059e05 #069c06h#079b07e#079907r#089808 #099609b#0a950ar#0b930bo#0b920bo#0c900cd#0d8f0d #0e8d0ea#0f8c0fs#0f8a0f #108910i#118711n#128612e#138413v#138313i#148114t#158015a#167e15b#187d14l#197b14e#1a7913 #1c7813a#1d7612s#1e7412 #207311t#217111h#226f10e#246e10 #256c0fc#266a0fr#27680ea#29670es#2a650dh#2b630d #2d620co#2e600cf#2f5e0b #315d0bt#325b0ah#33590ae#355809 #365609t#355709i#33590ad#325a0ae#305b0bs#2f5d0b #2d5e0bu#2c5f0cp#2a610co#29620dn#27630d #26650et#24660eh#23670ee#22690f #206a0fe#1f6b10n#1d6d10d#1c6e10l#1a6f11e#197111s#177212s#167312 #147513s#137613h#157812o#177a11r#197c11e#1b7e10.#1d810f\"")

hecho("\n\n#01a501A#02a402 #03a203s#03a103m#049f04i#059e05l#069c06e#079b07 #079907w#089808o#099609r#0a950ak#0b930bi#0b920bn#0c900cg#0d8f0d #0e8d0ea#0f8c0fc#0f8a0fr#108910o#118711s#128612s#138413 #138313h#148114e#158015r#167e15 #187d14f#197b14e#1a7913a#1c7813t#1d7612u#1e7412r#207311e#217111s#226f10,#246e10 #256c0fN#266a0fa#27680er#29670er#2a650da#2b630d #2d620cs#2e600ca#2f5e0by#315d0bs#325b0a,#33590a #355809\"#365609F#355709o#33590ar#325a0a #305b0ba#2f5d0bl#2d5e0bl#2c5f0c #2a610co#29620df#27630d #26650et#24660eh#23670ei#22690fs#206a0f,#1f6b10 #1d6d10h#1c6e10o#1a6f11w#197111e#177212v#167312e#147513r#137613,#157812 #177a11t#197c11h#1b7e10e#1d810f #1f830eB#21850er#23870do#25890co#278b0bd#298d0bm#2b8f0ao#2e9209t#309408h#329608e#349807r#369a06 #389c05i#3a9e05s#3ca004 ")
hecho("\n#01a501i#02a402n#03a203s#03a103a#049f04t#059e05i#069c06a#079b07b#079907l#089808e#099609 #0a950ai#0b930bn#0b920b #0c900ch#0d8f0de#0e8d0er#0f8c0f #0f8a0fh#108910u#118711n#128612g#138413e#138313r#148114 #158015f#167e15o#187d14r#197b14 #1a7913t#1c7813h#1d7612e#1e7412 #207311b#217111r#226f10o#246e10o#256c0fd#266a0f #27680es#29670eh#2a650de#2b630d #2d620cm#2e600cu#2f5e0bs#315d0bt#325b0a #33590af#355809e#365609e#355709d#33590a #325a0ai#305b0bs#2f5d0b #2d5e0bv#2c5f0ca#2a610cs#29620dt#27630d #26650ea#24660en#23670ed#22690f #206a0fn#1f6b10o#1d6d10n#1c6e10e#1a6f11 #197111e#177212s#167312c#147513a#137613p#157812e#177a11 #197c11h#1b7e10e#1d810fr#1f830e #21850eg#23870da#25890cz#278b0be#298d0b.#2b8f0a #2e9209N#309408o#329608t#349807 #369a06e#389c05v#3a9e05e#3ca004n#3ea303 #40a502t#42a702h#44a901e#46ab00 ")
hecho("\n#01a501p#02a402r#03a203o#03a103u#049f04d#059e05 #069c06h#079b07u#079907n#089808t#099609e#0a950ar#0b930bs#0b920b #0c900co#0d8f0df#0e8d0e #0f8c0fV#0f8a0fo#108910'#118711a#128612c#138413h#138313a#148114 #158015a#167e15r#187d14e#197b14 #1a7913b#1c7813e#1d7612y#1e7412o#207311n#217111d#226f10 #246e10h#256c0fe#266a0fr#27680e,#29670e #2a650di#2b630dn#2d620c #2e600ct#2f5e0br#315d0bu#325b0at#33590ah#355809,#365609 #355709t#33590ah#325a0ao#305b0bu#2f5d0bg#2d5e0bh#2c5f0c #2a610ct#29620dh#27630de#26650ey#24660e #23670ew#22690fo#206a0fu#1f6b10l#1d6d10d#1c6e10 #1a6f11d#197111i#177212s#167312p#147513u#137613t#157812e#177a11 #197c11s#1b7e10u#1d810fc#1f830eh#21850e #23870da#25890c #278b0bc#298d0bl#2b8f0aa#2e9209i#309408m#329608 #349807t#369a06i#389c05l#3a9e05l#3ca004 ")
hecho("\n#01a501t#02a402h#03a203e#03a103i#049f04r#059e05 #069c06d#079b07y#079907i#089808n#099609g#0a950a #0b930bd#0b920ba#0c900cy#0d8f0ds#0e8d0e.#0f8c0f #0f8a0fT#108910h#118711e#128612r#138413e#138313 #148114i#158015s#167e15 #187d14n#197b14o#1a7913 #1c7813c#1d7612r#1e7412u#207311e#217111l#226f10t#246e10y#256c0f #266a0fi#27680en#29670e #2a650dt#2b630dh#2d620ci#2e600cs#2f5e0b,#315d0b #325b0aV#33590aa#355809l#365609o#355709r#33590ai#325a0ae#305b0b.#2f5d0b #2d5e0bS#2c5f0ch#2a610ce#29620d #27630di#26650es#24660e #23670eo#22690fn#206a0fe#1f6b10 #1d6d10f#1c6e10a#1a6f11c#197111e#177212t#167312 #147513o#137613f#157812 #177a11t#197c11h#1b7e10e#1d810f #1f830eg#21850er#23870de#25890ca#278b0bt#298d0b #2b8f0aR#2e9209h#309408y#329608t#349807h#369a06m#389c05 #3a9e05t#3ca004h#3ea303a#40a502t#42a702 ")
hecho("\n#01a501i#02a402s#03a203 #03a103t#049f04h#059e05e#069c06 #079b07v#079907e#089808r#099609y#0a950a #0b930bh#0b920be#0c900ca#0d8f0dr#0e8d0et#0f8c0f #0f8a0fo#108910f#118711 #128612D#138413e#138313n#148114d#158015a#167e15r#187d14a#197b14,#1a7913 #1c7813d#1d7612a#1e7412r#207311k#217111 #226f10a#246e10s#256c0f #266a0fi#27680et#29670e #2a650dm#2b630da#2d620cy#2e600c #2f5e0bb#315d0be#325b0a.#33590a #355809H#365609e#355709r#33590a #325a0ak#305b0bi#2f5d0bs#2d5e0bs#2c5f0c #2a610ci#29620ds#27630d #26650ea#24660es#23670e #22690fn#206a0fa#1f6b10t#1d6d10u#1c6e10r#1a6f11e#197111'#177212s#167312 #147513b#137613l#157812a#177a11d#197c11e#1b7e10,#1d810f #1f830el#21850ee#23870dt#25890ch#278b0ba#298d0bl#2b8f0a #2e9209a#309408n#329608d#349807 #369a06d#389c05e#3a9e05a#3ca004d#3ea303l#40a502y#42a702 ")
hecho("\n#01a501i#02a402n#03a203 #03a103i#049f04t#059e05s#069c06 #079b07s#079907t#089808r#099609i#0a950ak#0b930be#0b920b.#0c900c\"")
cechoLink("\n\n&lt;forest_green&gt; BACK TO KREE-SA",function() expandAlias("kree-sa") end, "back", true)
cechoLink("\n&lt;forest_green&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^kree-sa1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^kree-sa2$</name>
					<script>hecho("\n#01a501Y#02a402o#03a203u#03a103 #049f04s#059e05a#069c06y#079b07,#079907 #089808\"#099609I#0a950a #0b930bw#0b920bi#0c900cs#0d8f0dh#0e8d0e #0f8c0ft#0f8a0fo#108910 #118711o#128612f#138413f#138313e#148114r#158015 #167e15m#187d14y#197b14 #1a7913b#1c7813l#1d7612o#1e7412o#207311d#217111 #226f10u#246e10p#256c0f #266a0fi#27680en#29670e #2a650dr#2b630di#2d620ct#2e600cu#2f5e0ba#315d0bl#325b0a #33590aa#355809n#365609d#355709 #33590as#325a0aw#305b0be#2f5d0ba#2d5e0br#2c5f0c #2a610ca#29620dn#27630d #26650eo#24660ea#23670et#22690fh#206a0f #1f6b10b#1d6d10e#1c6e10f#1a6f11o#197111r#177212e#167312 #147513h#137613e#157812r#177a11 #197c11F#1b7e10a#1d810fn#1f830eg#21850e.#23870d\"")
hecho("\n\n#01a501N#02a402a#03a203r#03a103r#049f04a#059e05 #069c06s#079b07a#079907y#089808s#099609,#0a950a #0b930b\"#0b920bA#0c900cn#0d8f0d #0e8d0eo#0f8c0fa#0f8a0ft#108910h#118711 #128612i#138413s#138313 #148114n#158015o#167e15t#187d14 #197b14l#1a7913i#1c7813g#1d7612h#1e7412t#207311l#217111y#226f10 #246e10t#256c0fa#266a0fk#27680ee#29670en#2a650d,#2b630d #2d620cV#2e600ca#2f5e0bl#315d0bo#325b0ar#33590ai#355809e#365609.#355709 #33590aI#325a0at#305b0b #2f5d0bi#2d5e0bs#2c5f0c #2a610cf#29620do#27630dr#26650eg#24660ee#23670ed#22690f #206a0fi#1f6b10n#1d6d10 #1c6e10b#1a6f11o#197111n#177212d#167312s#147513 #137613o#157812f#177a11 #197c11b#1b7e10l#1d810fo#1f830eo#21850ed#23870d #25890ca#278b0bn#298d0bd#2b8f0a #2e9209t#309408h#329608e#349807 ")
hecho("\n#01a501B#02a402r#03a203o#03a103o#049f04d#059e05m#069c06o#079b07t#079907h#089808e#099609r#0a950a #0b930bs#0b920bh#0c900ca#0d8f0dl#0e8d0el#0f8c0f #0f8a0fn#108910e#118711v#128612e#138413r#138313 #148114f#158015o#167e15r#187d14g#197b14e#1a7913t#1c7813.#1d7612 #1e7412Y#207311o#217111u#226f10 #246e10s#256c0fh#266a0fa#27680el#29670el#2a650d #2b630db#2d620ce#2e600c #2f5e0bb#315d0bo#325b0au#33590an#355809d#365609 #355709t#33590ao#325a0a #305b0bh#2f5d0be#2d5e0br#2c5f0c #2a610cv#29620de#27630dr#26650ey#24660e #23670ew#22690fi#206a0fl#1f6b10l#1d6d10 #1c6e10a#1a6f11n#197111d#177212 #167312e#147513v#137613e#157812n#177a11 #197c11h#1b7e10e#1d810fr#1f830e #21850eh#23870du#25890cn#278b0bg#298d0be#2b8f0ar#2e9209 #309408s#329608h#349807a#369a06l#389c05l#3a9e05 #3ca004b#3ea303e#40a502 ")
hecho("\n#01a501p#02a402a#03a203r#03a103t#049f04 #059e05o#069c06f#079b07 #079907y#089808o#099609u#0a950ar#0b930b #0b920bt#0c900ch#0d8f0do#0e8d0eu#0f8c0fg#0f8a0fh#108910t#118711s#128612.#138413 #138313I#148114s#158015 #167e15t#187d14h#197b14i#1a7913s#1c7813 #1d7612a#1e7412 #207311r#217111i#226f10t#246e10e#256c0f #266a0fy#27680eo#29670eu#2a650d #2b630dw#2d620ci#2e600cs#2f5e0bh#315d0b #325b0at#33590ao#355809 #365609p#355709a#33590ar#325a0at#305b0ba#2f5d0bk#2d5e0be#2c5f0c #2a610ci#29620dn#27630d?#26650e\"")
hecho("\n\n#01a501Y#02a402o#03a203u#03a103 #049f04s#059e05a#069c06y#079b07,#079907 #089808\"#099609Y#0a950ae#0b930bs#0b920b,#0c900c #0d8f0dI#0e8d0e #0f8c0fd#0f8a0fo#108910.#118711\"")
hecho("\n\n#01a501N#02a402a#03a203r#03a103r#049f04a#059e05 #069c06s#079b07a#079907y#089808s#099609,#0a950a #0b930b\"#0b920bT#0c900ch#0d8f0de#0e8d0en#0f8c0f #0f8a0fp#108910r#118711e#128612p#138413a#138313r#148114e#158015 #167e15y#187d14o#197b14u#1a7913r#1c7813 #1d7612s#1e7412p#207311i#217111r#226f10i#246e10t#256c0f,#266a0f #27680eV#29670ea#2a650dl#2b630do#2d620cr#2e600ci#2f5e0be#315d0b.#325b0a #33590aT#355809h#365609e#355709 #33590at#325a0aa#305b0bn#2f5d0bg#2d5e0bl#2c5f0ce#2a610cd#29620d #27630dw#26650ee#24660eb#23670es#22690f #206a0fo#1f6b10f#1d6d10 #1c6e10t#1a6f11h#197111e#177212 #167312B#147513r#137613o#157812o#177a11d#197c11m#1b7e10o#1d810ft#1f830eh#21850ee#23870dr#25890c #278b0ba#298d0bw#2b8f0aa#2e9209i#309408t#329608 #349807y#369a06o#389c05u#3a9e05.#3ca004\"")
hecho("\n\n#01a501Y#02a402o#03a203u#03a103 #049f04d#059e05r#069c06a#079b07w#079907 #089808t#099609h#0a950ae#0b930b #0b920bs#0c900ch#0d8f0da#0e8d0er#0f8c0fp#0f8a0f #108910e#118711d#128612g#138413e#138313 #148114o#158015f#167e15 #187d14a#197b14n#1a7913 #1c7813o#1d7612b#1e7412s#207311i#217111d#226f10i#246e10a#256c0fn#266a0f #27680ek#29670en#2a650di#2b630df#2d620ce#2e600c #2f5e0be#315d0bt#325b0ac#33590ah#355809e#365609d#355709 #33590ai#325a0an#305b0b #2f5d0br#2d5e0bu#2c5f0cn#2a610ce#29620ds#27630d #26650ea#24660ec#23670er#22690fo#206a0fs#1f6b10s#1d6d10 #1c6e10y#1a6f11o#197111u#177212r#167312 #147513p#137613a#157812l#177a11m#197c11,#1b7e10 #1d810fb#1f830el#21850eo#23870do#25890cd#278b0b #298d0bb#2b8f0ae#2e9209g#309408i#329608n#349807n#369a06i#389c05n#3a9e05g#3ca004 #3ea303t#40a502o#42a702 ")
hecho("\n#01a501t#02a402r#03a203i#03a103c#049f04k#059e05l#069c06e#079b07 #079907f#089808r#099609o#0a950am#0b930b #0b920by#0c900co#0d8f0du#0e8d0er#0f8c0f #0f8a0fn#108910e#118711w#128612 #138413w#138313o#148114u#158015n#167e15d#187d14.")
hecho("\n\n#01a501Y#02a402o#03a203u#03a103 #049f04h#059e05o#069c06l#079b07d#079907 #089808y#099609o#0a950au#0b930br#0b920b #0c900cb#0d8f0dl#0e8d0ee#0f8c0fe#0f8a0fd#108910i#118711n#128612g#138413 #138313p#148114a#158015l#167e15m#187d14 #197b14a#1a7913g#1c7813a#1d7612i#1e7412n#207311s#217111t#226f10 #246e10a#256c0f #266a0fs#27680et#29670er#2a650di#2b630da#2d620ct#2e600ce#2f5e0bd#315d0b #325b0as#33590ap#355809i#365609d#355709e#33590ar#325a0a #305b0bt#2f5d0bo#2d5e0bt#2c5f0ce#2a610cm#29620d #27630do#26650ef#24660e #23670ep#22690fa#206a0fi#1f6b10n#1d6d10t#1c6e10e#1a6f11d#197111 #177212i#167312v#147513o#137613r#157812y#177a11 #197c11a#1b7e10n#1d810fd#1f830e #21850ec#23870dl#25890co#278b0bs#298d0be#2b8f0a #2e9209y#309408o#329608u#349807r#369a06 #389c05e#3a9e05y#3ca004e#3ea303s#40a502 #42a702a#44a901s#46ab00 ")
hecho("\n#01a501y#02a402o#03a203u#03a103 #049f04f#059e05o#069c06c#079b07u#079907s#089808 #099609u#0a950ap#0b930bo#0b920bn#0c900c #0d8f0dt#0e8d0eh#0f8c0fe#0f8a0f #108910g#118711u#128612a#138413r#138313d#148114i#158015a#167e15n#187d14'#197b14s#1a7913 #1c7813s#1d7612p#1e7412i#207311r#217111i#226f10t#246e10.")
hecho("\n\n#01a501\"#02a402T#03a203h#03a103e#049f04 #059e05B#069c06r#079b07o#079907o#089808d#099609m#0a950ao#0b930bt#0b920bh#0c900ce#0d8f0dr#0e8d0e #0f8c0fa#0f8a0fc#108910c#118711e#128612p#138413t#138313s#148114 #158015y#167e15o#187d14u#197b14r#1a7913 #1c7813o#1d7612f#1e7412f#207311e#217111r#226f10i#246e10n#256c0fg#266a0f,#27680e\"#29670e #2a650dt#2b630dh#2d620ce#2e600c #2f5e0bw#315d0ba#325b0ar#33590ar#355809i#365609o#355709r#33590a #325a0as#305b0ba#2f5d0by#2d5e0bs#2c5f0c,#2a610c #29620ds#27630dh#26650ei#24660ef#23670et#22690fi#206a0fn#1f6b10g#1d6d10 #1c6e10h#1a6f11e#197111r#177212 #167312w#147513e#137613i#157812g#177a11h#197c11t#1b7e10 #1d810fo#1f830ef#21850ef#23870d #25890ct#278b0bh#298d0be#2b8f0a #2e9209i#309408d#329608o#349807l#369a06 #389c05t#3a9e05o#3ca004 #3ea303K#40a502r#42a702e#44a901e#46ab00-")
hecho("\n#01a501s#02a402a#03a203 #03a103a#049f04n#059e05d#069c06 #079b07s#079907t#089808e#099609p#0a950ap#0b930bi#0b920bn#0c900cg#0d8f0d #0e8d0ef#0f8c0fo#0f8a0fr#108910w#118711a#128612r#138413d#138313 #148114t#158015o#167e15 #187d14c#197b14l#1a7913a#1c7813s#1d7612p#1e7412 #207311y#217111o#226f10u#246e10r#256c0f #266a0fs#27680eh#29670eo#2a650du#2b630dl#2d620cd#2e600ce#2f5e0br#315d0b #325b0at#33590ai#355809g#365609h#355709t#33590al#325a0ay#305b0b.#2f5d0b #2d5e0bH#2c5f0ce#2a610cr#29620d #27630dh#26650ea#24660er#23670ed#22690fe#206a0fn#1f6b10e#1d6d10d#1c6e10 #1a6f11e#197111y#177212e#167312s#147513 #137613g#157812l#177a11i#197c11t#1b7e10t#1d810fe#1f830er#21850e #23870dk#25890ce#278b0be#298d0bn#2b8f0al#2e9209y#309408,#329608 #349807p#369a06r#389c05i#3a9e05d#3ca004e#3ea303 #40a502i#42a702n#44a901 ")
hecho("\n#01a501h#02a402e#03a203r#03a103 #049f04v#059e05o#069c06i#079b07c#079907e#089808 #099609a#0a950as#0b930b #0b920bs#0c900ch#0d8f0de#0e8d0e #0f8c0fi#0f8a0fn#108910t#118711o#128612n#138413e#138313s#148114,#158015 #167e15\"#187d14I#197b14 #1a7913a#1c7813m#1d7612 #1e7412t#207311h#217111e#226f10 #246e10B#256c0fr#266a0fo#27680eo#29670ed#2a650dm#2b630do#2d620ct#2e600ch#2f5e0be#315d0br#325b0a'#33590as#355809 #365609v#355709o#33590ai#325a0ac#305b0be#2f5d0b.#2d5e0b #2c5f0cI#2a610c #29620da#27630dm#26650e #24660et#23670eh#22690fe#206a0f #1f6b10B#1d6d10r#1c6e10o#1a6f11o#197111d#177212m#167312o#147513t#137613h#157812e#177a11r#197c11'#1b7e10s#1d810f #1f830ew#21850ei#23870dl#25890cl#278b0b.#298d0b #2b8f0aY#2e9209o#309408u#329608 #349807a#369a06r#389c05e#3a9e05 #3ca004t#3ea303o#40a502 #42a702b#44a901e#46ab00 ")
hecho("\n#01a501b#02a402o#03a203u#03a103n#049f04d#059e05 #069c06t#079b07o#079907 #089808h#099609e#0a950ar#0b930b #0b920ba#0c900cs#0d8f0d #0e8d0eI#0f8c0f.#0f8a0f\"")
hecho("\n\n#01a501A#02a402 #03a203c#03a103h#049f04i#059e05t#069c06i#079b07n#079907o#089808u#099609s#0a950a #0b930bc#0b920bl#0c900ci#0d8f0dc#0e8d0ek#0f8c0fi#0f8a0fn#108910g#118711 #128612f#138413i#138313l#148114l#158015s#167e15 #187d14t#197b14h#1a7913e#1c7813 #1d7612c#1e7412a#207311v#217111e#226f10r#246e10n#256c0f #266a0fa#27680es#29670e #2a650dK#2b630dr#2d620ce#2e600ce#2f5e0b-#315d0bs#325b0aa#33590a,#355809 #365609t#355709h#33590ae#325a0a #305b0bB#2f5d0br#2d5e0bo#2c5f0co#2a610cd#29620dm#27630do#26650et#24660eh#23670ee#22690fr#206a0f #1f6b10m#1d6d10a#1c6e10n#1a6f11i#197111f#177212e#167312s#147513t#137613s#157812,#177a11 #197c11t#1b7e10h#1d810fe#1f830e #21850em#23870do#25890ct#278b0bi#298d0bo#2b8f0an#2e9209 #309408s#329608m#349807o#369a06o#389c05t#3a9e05h#3ca004 #3ea303a#40a502n#42a702d#44a901 ")
hecho("\n#01a501e#02a402e#03a203r#03a103i#049f04l#059e05y#069c06 #079b07g#079907r#089808a#099609c#0a950ae#0b930bf#0b920bu#0c900cl#0d8f0d #0e8d0ea#0f8c0fs#0f8a0f #108910i#118711t#128612 #138413f#138313l#148114o#158015w#167e15s#187d14 #197b14t#1a7913h#1c7813r#1d7612o#1e7412u#207311g#217111h#226f10 #246e10a#256c0fl#266a0fl#27680e #29670ee#2a650di#2b630dg#2d620ch#2e600ct#2f5e0b #315d0bo#325b0af#33590a #355809h#365609e#355709r#33590a #325a0aj#305b0bo#2f5d0bi#2d5e0bn#2c5f0ct#2a610ce#29620dd#27630d,#26650e #24660eh#23670ea#22690fi#206a0fr#1f6b10y#1d6d10 #1c6e10l#1a6f11e#197111g#177212s#167312 #147513t#137613o#157812 #177a11c#197c11a#1b7e10r#1d810fr#1f830ey#21850e #23870dh#25890ce#278b0br#298d0b #2b8f0af#2e9209o#309408r#329608w#349807a#369a06r#389c05d#3a9e05 #3ca004t#3ea303o#40a502 ")
hecho("\n#01a501y#02a402o#03a203u#03a103.#049f04 #059e05T#069c06h#079b07e#079907 #089808w#099609a#0a950ar#0b930br#0b920bi#0c900co#0d8f0dr#0e8d0e #0f8c0fr#0f8a0fe#108910t#118711r#128612a#138413c#138313t#148114s#158015 #167e15f#187d14r#197b14o#1a7913m#1c7813 #1d7612y#1e7412o#207311u#217111 #226f10a#246e10n#256c0fd#266a0f #27680ea#29670ed#2a650do#2b630dp#2d620ct#2e600cs#2f5e0b #315d0br#325b0ai#33590ag#355809i#365609d#355709 #33590ap#325a0ao#305b0bs#2f5d0bt#2d5e0bu#2c5f0cr#2a610ci#29620dn#27630dg#26650e,#24660e #23670ea#22690f #206a0ff#1f6b10e#1d6d10a#1c6e10r#1a6f11f#197111u#177212l#167312,#147513 #137613r#157812e#177a11s#197c11p#1b7e10e#1d810fc#1f830et#21850ef#23870du#25890cl#278b0b #298d0bs#2b8f0ao#2e9209r#309408t#329608 #349807o#369a06f#389c05 #3a9e05a#3ca004w#3ea303e#40a502 ")
hecho("\n#01a501r#02a402e#03a203f#03a103l#049f04e#059e05c#069c06t#079b07e#079907d#089808 #099609i#0a950an#0b930b #0b920bh#0c900ce#0d8f0dr#0e8d0e #0f8c0ff#0f8a0fa#108910c#118711e#128612-#138413-#138313h#148114e#158015r#167e15 #187d14a#197b14t#1a7913t#1c7813e#1d7612n#1e7412t#207311i#217111o#226f10n#246e10 #256c0fr#266a0fe#27680em#29670ea#2a650di#2b630dn#2d620cs#2e600c #2f5e0br#315d0bi#325b0av#33590ae#355809t#365609e#355709d#33590a #325a0at#305b0bo#2f5d0b #2d5e0bt#2c5f0ch#2a610ce#29620d #27630da#26650es#24660ep#23670ee#22690fc#206a0ft#1f6b10 #1d6d10e#1c6e10v#1a6f11e#197111n#177212 #167312a#147513s#137613 #157812s#177a11h#197c11e#1b7e10 #1d810fs#1f830ep#21850ee#23870da#25890ck#278b0bs#298d0b #2b8f0at#2e9209o#309408 #329608y#349807o#369a06u#389c05.#3a9e05 ")
hecho("\n\n#01a501\"#02a402B#03a203l#03a103o#049f04o#059e05d#069c06 #079b07i#079907s#089808 #099609l#0a950ai#0b930bf#0b920be#0c900c,#0d8f0d #0e8d0ej#0f8c0fu#0f8a0fs#108910t#118711 #128612a#138413s#138313 #148114s#158015u#167e15r#187d14e#197b14l#1a7913y#1c7813 #1d7612a#1e7412s#207311 #217111m#226f10y#246e10 #256c0fb#266a0fl#27680ea#29670ed#2a650de#2b630d #2d620cm#2e600ca#2f5e0by#315d0b #325b0as#33590ap#355809i#365609l#355709l#33590a #325a0ai#305b0bt#2f5d0b #2d5e0ba#2c5f0cn#2a610cd#29620d #27630du#26650es#24660eh#23670ee#22690fr#206a0f #1f6b10d#1d6d10e#1c6e10a#1a6f11t#197111h#177212.#167312 #147513T#137613h#157812i#177a11s#197c11 #1b7e10i#1d810fs#1f830e #21850et#23870dh#25890ce#278b0b #298d0bp#2b8f0aa#2e9209t#309408h#329608 #349807w#369a06e#389c05 #3a9e05w#3ca004a#3ea303l#40a502k#42a702,#44a901 ")
hecho("\n#01a501t#02a402h#03a203a#03a103t#049f04 #059e05y#069c06o#079b07u#079907 #089808w#099609i#0a950al#0b930bl#0b920b #0c900cl#0d8f0de#0e8d0ea#0f8c0fr#0f8a0fn#108910 #118711o#128612f#138413.#138313 #148114Y#158015o#167e15u#187d14 #197b14w#1a7913i#1c7813l#1d7612l#1e7412 #207311s#217111t#226f10r#246e10i#256c0fk#266a0fe#27680e #29670es#2a650dw#2b630di#2d620cf#2e600ct#2f5e0b,#315d0b #325b0aa#33590an#355809d#365609 #355709t#33590ar#325a0au#305b0be#2f5d0b,#2d5e0b #2c5f0ca#2a610cn#29620dd#27630d #26650ed#24660ee#23670ea#22690fd#206a0fl#1f6b10y#1d6d10.#1c6e10\"")
hecho("\n\n#01a501I#02a402n#03a203n#03a103u#049f04m#059e05e#069c06r#079b07a#079907b#089808l#099609e#0a950a #0b930bv#0b920bo#0c900ci#0d8f0dc#0e8d0ee#0f8c0fs#0f8a0f #108910s#118711e#128612e#138413p#138313 #148114i#158015n#167e15t#187d14o#197b14 #1a7913y#1c7813o#1d7612u#1e7412r#207311 #217111h#226f10e#246e10a#256c0fd#266a0f,#27680e #29670ea#2a650d #2b630dc#2d620ca#2e600cc#2f5e0ba#315d0bp#325b0ah#33590ao#355809n#365609y#355709 #33590ao#325a0af#305b0b #2f5d0bc#2d5e0bh#2c5f0ci#2a610ct#29620dt#27630de#26650er#24660ei#23670en#22690fg#206a0f #1f6b10w#1d6d10h#1c6e10i#1a6f11s#197111p#177212e#167312r#147513s#137613 #157812s#177a11y#197c11n#1b7e10c#1d810fh#1f830er#21850eo#23870dn#25890ci#278b0bz#298d0be#2b8f0ad#2e9209 #309408b#329608y#349807 #369a06w#389c05o#3a9e05r#3ca004d#3ea303 #40a502a#42a702n#44a901d#46ab00 ")
hecho("\n#01a501b#02a402y#03a203 #03a103p#049f04u#059e05r#069c06p#079b07o#079907s#089808e#099609,#0a950a #0b930bt#0b920bh#0c900ce#0d8f0d #0e8d0ev#0f8c0fo#0f8a0fi#108910c#118711e#128612 #138413o#138313f#148114 #158015K#167e15r#187d14e#197b14e#1a7913-#1c7813s#1d7612a#1e7412.#207311 #217111\"#226f10I#246e10n#256c0f #266a0fs#27680ee#29670ee#2a650dk#2b630di#2d620cn#2e600cg#2f5e0b #315d0bt#325b0ao#33590a #355809w#365609a#355709l#33590ak#325a0a #305b0bm#2f5d0by#2d5e0b #2c5f0cp#2a610ca#29620dt#27630dh#26650e,#24660e #23670ek#22690fn#206a0fo#1f6b10w#1d6d10 #1c6e10t#1a6f11h#197111i#177212s#167312,#147513 #137613m#157812o#177a11r#197c11t#1b7e10a#1d810fl#1f830e:#21850e #23870di#25890ct#278b0b #298d0bi#2b8f0as#2e9209 #309408n#329608o#349807t#369a06 #389c05f#3a9e05o#3ca004r#3ea303 #40a502t#42a702h#44a901e#46ab00 ")
hecho("\n#01a501f#02a402a#03a203i#03a103n#049f04t#059e05 #069c06o#079b07f#079907 #089808h#099609e#0a950aa#0b930br#0b920bt#0c900c.#0d8f0d #0e8d0eI#0f8c0ft#0f8a0f #108910i#118711s#128612 #138413f#138313o#148114r#158015 #167e15t#187d14h#197b14e#1a7913 #1c7813h#1d7612u#1e7412n#207311t#217111e#226f10r#246e10,#256c0f #266a0fb#27680eo#29670er#2a650dn#2b630de#2d620c #2e600co#2f5e0bf#315d0b #325b0at#33590ah#355809e#365609 #355709w#33590ai#325a0al#305b0bd#2f5d0bs#2d5e0b #2c5f0ca#2a610cn#29620dd#27630d #26650ef#24660eo#23670er#22690fg#206a0fe#1f6b10d#1d6d10 #1c6e10o#1a6f11f#197111 #177212t#167312h#147513e#137613 #157812R#177a11h#197c11y#1b7e10t#1d810fh#1f830em#21850e.#23870d\"#25890c #278b0bT#298d0bh#2b8f0ae#2e9209 ")
hecho("\n#01a501m#02a402a#03a203n#03a103i#049f04f#059e05e#069c06s#079b07t#079907a#089808t#099609i#0a950ao#0b930bn#0b920b #0c900ct#0d8f0da#0e8d0ek#0f8c0fe#0f8a0fs#108910 #118711a#128612 #138413s#138313t#148114e#158015p#167e15 #187d14o#197b14r#1a7913 #1c7813t#1d7612w#1e7412o#207311 #217111c#226f10l#246e10o#256c0fs#266a0fe#27680er#29670e,#2a650d #2b630dh#2d620ce#2e600cr#2f5e0b #315d0bm#325b0aa#33590an#355809d#365609i#355709b#33590al#325a0ae#305b0bs#2f5d0b #2d5e0bw#2c5f0co#2a610cr#29620dk#27630di#26650en#24660eg#23670e #22690fs#206a0fl#1f6b10o#1d6d10w#1c6e10l#1a6f11y#197111 #177212i#167312n#147513 #137613c#157812o#177a11n#197c11t#1b7e10e#1d810fm#1f830ep#21850el#23870da#25890ct#278b0bi#298d0bo#2b8f0an#2e9209,#309408 #329608a#349807n#369a06d#389c05 #3a9e05y#3ca004o#3ea303u#40a502 ")
hecho("\n#01a501c#02a402a#03a203n#03a103 #049f04s#059e05e#069c06e#079b07 #079907t#089808h#099609e#0a950a #0b930bb#0b920bu#0c900cb#0d8f0db#0e8d0el#0f8c0fe#0f8a0fd#108910 #118711d#128612i#138413s#138313t#148114o#158015r#167e15t#187d14i#197b14o#1a7913n#1c7813 #1d7612o#1e7412f#207311 #217111y#226f10o#246e10u#256c0fr#266a0f #27680er#29670ee#2a650df#2b630dl#2d620ce#2e600cc#2f5e0bt#315d0bi#325b0ao#33590an#355809 #365609i#355709n#33590a #325a0ae#305b0ba#2f5d0bc#2d5e0bh#2c5f0c #2a610co#29620df#27630d #26650et#24660eh#23670eo#22690fs#206a0fe#1f6b10 #1d6d10g#1c6e10l#1a6f11o#197111s#177212s#167312y#147513,#137613 #157812f#177a11a#197c11t#1b7e10h#1d810fo#1f830em#21850el#23870de#25890cs#278b0bs#298d0b #2b8f0ab#2e9209l#309408a#329608c#349807k#369a06 #389c05e#3a9e05y#3ca004e#3ea303s#40a502.#42a702 ")
hecho("\n\n#01a501H#02a402e#03a203r#03a103 #049f04s#059e05c#069c06r#079b07u#079907t#089808i#099609n#0a950ay#0b930b #0b920bi#0c900cs#0d8f0d #0e8d0ea#0f8c0f #0f8a0fd#108910i#118711f#128612f#138413i#138313c#148114u#158015l#167e15t#187d14 #197b14w#1a7913e#1c7813i#1d7612g#1e7412h#207311t#217111 #226f10t#246e10o#256c0f #266a0fb#27680ee#29670ea#2a650dr#2b630d,#2d620c #2e600cb#2f5e0bu#315d0bt#325b0a #33590ay#355809o#365609u#355709 #33590ad#325a0ao#305b0b #2f5d0by#2d5e0bo#2c5f0cu#2a610cr#29620d #27630db#26650ee#24660es#23670et#22690f #206a0ft#1f6b10o#1d6d10 #1c6e10s#1a6f11t#197111e#177212e#167312l#147513 #137613y#157812o#177a11u#197c11r#1b7e10s#1d810fe#1f830el#21850ef#23870d #25890ca#278b0bn#298d0bd#2b8f0a #2e9209n#309408o#329608t#349807 #369a06t#389c05o#3a9e05 #3ca004s#3ea303h#40a502y#42a702 ")
hecho("\n#01a501a#02a402w#03a203a#03a103y#049f04 #059e05b#069c06e#079b07n#079907e#089808a#099609t#0a950ah#0b930b #0b920bt#0c900ch#0d8f0da#0e8d0et#0f8c0f #0f8a0fu#108910n#118711n#128612e#138413r#138313v#148114i#158015n#167e15g#187d14 #197b14g#1a7913a#1c7813z#1d7612e#1e7412.")
hecho("\n\n#01a501T#02a402h#03a203i#03a103s#049f04 #059e05s#069c06e#079b07e#079907m#089808s#099609 #0a950at#0b930bo#0b920b #0c900cp#0d8f0dl#0e8d0ee#0f8c0fa#0f8a0fs#108910e#118711 #128612t#138413h#138313e#148114 #158015B#167e15r#187d14o#197b14o#1a7913d#1c7813m#1d7612o#1e7412t#207311h#217111e#226f10r#246e10,#256c0f #266a0fh#27680ee#29670er#2a650d #2b630da#2d620cp#2e600cp#2f5e0br#315d0bo#325b0av#33590aa#355809l#365609 #355709e#33590ax#325a0ap#305b0br#2f5d0be#2d5e0bs#2c5f0cs#2a610ce#29620dd#27630d #26650ea#24660es#23670e #22690fa#206a0f #1f6b10s#1d6d10o#1c6e10f#1a6f11t#197111,#177212 #167312h#147513o#137613l#157812l#177a11o#197c11w#1b7e10 #1d810fc#1f830el#21850ei#23870dc#25890ck#278b0b #298d0bo#2b8f0af#2e9209 #309408h#329608e#349807r#369a06 #389c05c#3a9e05u#3ca004r#3ea303v#40a502e#42a702d#44a901 ")
hecho("\n#01a501f#02a402a#03a203n#03a103g#049f04s#059e05.#069c06 #079b07S#079907h#089808i#099609f#0a950at#0b930bi#0b920bn#0c900cg#0d8f0d #0e8d0eh#0f8c0fe#0f8a0fr#108910 #118711a#128612t#138413t#138313e#148114n#158015t#167e15i#187d14o#197b14n#1a7913 #1c7813b#1d7612a#1e7412c#207311k#217111 #226f10t#246e10o#256c0f #266a0fy#27680eo#29670eu#2a650d,#2b630d #2d620ct#2e600ch#2f5e0be#315d0b #325b0as#33590ah#355809a#365609m#355709a#33590an#325a0a #305b0bb#2f5d0by#2d5e0b #2c5f0cy#2a610co#29620du#27630dr#26650e #24660es#23670ei#22690fd#206a0fe#1f6b10 #1d6d10c#1c6e10o#1a6f11n#197111t#177212i#167312n#147513u#137613e#157812s#177a11 #197c11t#1b7e10h#1d810fe#1f830e #21850el#23870de#25890cc#278b0bt#298d0bu#2b8f0ar#2e9209e#309408 #329608t#349807h#369a06r#389c05o#3a9e05u#3ca004g#3ea303h#40a502 ")
hecho("\n#01a501s#02a402l#03a203i#03a103g#049f04h#059e05t#069c06l#079b07y#079907 #089808c#099609u#0a950ar#0b930bl#0b920be#0c900cd#0d8f0d #0e8d0el#0f8c0fi#0f8a0fp#108910s#118711.#128612 #138413\"#138313T#148114h#158015e#167e15 #187d14s#197b14p#1a7913i#1c7813d#1d7612e#1e7412r#207311 #217111i#226f10s#246e10 #256c0fa#266a0f #27680ec#29670eu#2a650dn#2b630dn#2d620ci#2e600cn#2f5e0bg#315d0b,#325b0a #33590av#355809e#365609r#355709s#33590aa#325a0at#305b0bi#2f5d0bl#2d5e0be#2c5f0c #2a610ch#29620du#27630dn#26650et#24660er#23670ee#22690fs#206a0fs#1f6b10.#1d6d10 #1c6e10S#1a6f11h#197111e#177212 #167312i#147513s#137613 #157812p#177a11a#197c11t#1b7e10i#1d810fe#1f830en#21850et#23870d.#25890c #278b0bS#298d0bh#2b8f0ae#2e9209 #309408s#329608e#349807i#369a06z#389c05e#3a9e05s#3ca004 ")
hecho("\n#01a501o#02a402p#03a203p#03a103o#049f04r#059e05t#069c06u#079b07n#079907i#089808t#099609y#0a950a #0b930ba#0b920bn#0c900cd#0d8f0d #0e8d0ec#0f8c0fh#0f8a0fo#108910o#118711s#128612e#138413s#138313 #148114t#158015h#167e15e#187d14 #197b14b#1a7913e#1c7813s#1d7612t#1e7412 #207311m#217111o#226f10m#246e10e#256c0fn#266a0ft#27680e #29670et#2a650do#2b630d #2d620cm#2e600co#2f5e0bv#315d0be#325b0a #33590ai#355809n#365609 #355709f#33590ao#325a0ar#305b0b #2f5d0bt#2d5e0bh#2c5f0ce#2a610c #29620dk#27630di#26650el#24660el#23670e.#22690f #206a0fS#1f6b10h#1d6d10e#1c6e10 #1a6f11k#197111n#177212o#167312w#147513s#137613 #157812w#177a11h#197c11e#1b7e10n#1d810f #1f830et#21850eo#23870d #25890cw#278b0ba#298d0bi#2b8f0at#2e9209 #309408a#329608n#349807d#369a06 #389c05w#3a9e05e#3ca004a#3ea303v#40a502e#42a702 ")
hecho("\n#01a501h#02a402e#03a203r#03a103 #049f04w#059e05e#069c06b#079b07,#079907 #089808a#099609n#0a950ad#0b930b #0b920bs#0c900ch#0d8f0de#0e8d0e #0f8c0fk#0f8a0fn#108910o#118711w#128612s#138413 #138313w#148114h#158015e#167e15n#187d14 #197b14t#1a7913o#1c7813 #1d7612s#1e7412t#207311a#217111l#226f10k#246e10 #256c0fh#266a0fe#27680er#29670e #2a650dp#2b630dr#2d620ce#2e600cy#2f5e0b.#315d0b #325b0aH#33590ae#355809r#365609 #355709b#33590ai#325a0at#305b0be#2f5d0b #2d5e0bc#2c5f0ca#2a610cr#29620dr#27630di#26650ee#24660es#23670e #22690ft#206a0fh#1f6b10e#1d6d10 #1c6e10p#1a6f11r#197111o#177212m#167312i#147513s#137613e#157812 #177a11o#197c11f#1b7e10 #1d810fd#1f830ee#21850ea#23870dt#25890ch#278b0b.#298d0b\"#2b8f0a #2e9209N#309408a#329608r#349807r#369a06a#389c05 #3a9e05l#3ca004i#3ea303f#40a502t#42a702s#44a901 ")
hecho("\n#01a501h#02a402e#03a203r#03a103 #049f04s#059e05a#069c06c#079b07r#079907i#089808f#099609i#0a950ac#0b930ba#0b920bl#0c900c #0d8f0dw#0e8d0ee#0f8c0fa#0f8a0fp#108910o#118711n#128612s#138413 #138313b#148114e#158015f#167e15o#187d14r#197b14e#1a7913 #1c7813y#1d7612o#1e7412u#207311,#217111 #226f10d#246e10u#256c0fa#266a0fl#27680e #29670ek#2a650du#2b630dk#2d620cr#2e600ci#2f5e0bs#315d0b #325b0af#33590aa#355809s#365609h#355709i#33590ao#325a0an#305b0be#2f5d0bd#2d5e0b #2c5f0ci#2a610cn#29620d #27630dt#26650eh#24660ee#23670e #22690fs#206a0fp#1f6b10i#1d6d10r#1c6e10i#1a6f11t#197111 #177212o#167312f#147513 #137613t#157812h#177a11e#197c11 #1b7e10s#1d810fp#1f830ei#21850ed#23870de#25890cr#278b0b'#298d0bs#2b8f0a #2e9209f#309408a#329608n#349807g#369a06s#389c05,#3a9e05 #3ca004t#3ea303h#40a502e#42a702i#44a901r#46ab00 ")
hecho("\n#01a501e#02a402d#03a203g#03a103e#049f04s#059e05 #069c06s#079b07i#079907n#089808g#099609i#0a950an#0b930bg#0b920b #0c900ct#0d8f0dh#0e8d0er#0f8c0fo#0f8a0fu#108910g#118711h#128612 #138413t#138313h#148114e#158015 #167e15a#187d14i#197b14r#1a7913 #1c7813i#1d7612n#1e7412 #207311a#217111 #226f10d#246e10e#256c0ff#266a0ft#27680e,#29670e #2a650da#2b630dr#2d620ct#2e600cf#2f5e0bu#315d0bl#325b0a #33590aw#355809e#365609a#355709v#33590ae#325a0a.")
hecho("\n\n#01a501\"#02a402S#03a203o#03a103 #049f04t#059e05o#069c06 #079b07s#079907h#089808a#099609l#0a950al#0b930b #0b920by#0c900co#0d8f0du#0e8d0e #0f8c0fb#0f8a0fe#108910,#118711\"#128612 #138413s#138313h#148114e#158015 #167e15s#187d14a#197b14y#1a7913s#1c7813,#1d7612 #1e7412t#207311h#217111e#226f10 #246e10a#256c0fr#266a0ft#27680ef#29670eu#2a650dl#2b630d #2d620cm#2e600co#2f5e0bt#315d0bi#325b0ao#33590an#355809 #365609c#355709o#33590am#325a0ai#305b0bn#2f5d0bg#2d5e0b #2c5f0ct#2a610co#29620d #27630dr#26650ee#24660es#23670et#22690f,#206a0f #1f6b10\"#1d6d10b#1c6e10e#1a6f11n#197111e#177212a#167312t#147513h#137613 #157812t#177a11h#197c11e#1b7e10 #1d810fB#1f830er#21850eo#23870do#25890cd#278b0bm#298d0bo#2b8f0at#2e9209h#309408e#329608r#349807'#369a06s#389c05 #3a9e05g#3ca004r#3ea303a#40a502c#42a702e#44a901s#46ab00.")
hecho("\n#01a501 #02a402L#03a203e#03a103a#049f04r#059e05n#069c06,#079b07 #079907a#089808n#099609d#0a950a #0b930bb#0b920be#0c900c,#0d8f0d #0e8d0ef#0f8c0fo#0f8a0fr#108910 #118711i#128612t#138413 #138313i#148114s#158015 #167e15n#187d14o#197b14t#1a7913 #1c7813e#1d7612n#1e7412o#207311u#217111g#226f10h#246e10 #256c0ft#266a0fo#27680e #29670em#2a650di#2b630dm#2d620ci#2e600cc#2f5e0b.#315d0b #325b0aB#33590ae#355809 #365609h#355709u#33590am#325a0ab#305b0bl#2f5d0be#2d5e0b #2c5f0ca#2a610cn#29620dd#27630d #26650eb#24660ee#23670e #22690ft#206a0fh#1f6b10a#1d6d10n#1c6e10k#1a6f11f#197111u#177212l#167312,#147513 #137613f#157812o#177a11r#197c11 #1b7e10t#1d810fh#1f830ee#21850e #23870dh#25890cu#278b0bn#298d0bt#2b8f0ae#2e9209r#309408 #329608s#349807o#369a06 #389c05s#3a9e05w#3ca004i#3ea303f#40a502t#42a702l#44a901y#46ab00 ")
hecho("\n#01a501b#02a402e#03a203c#03a103o#049f04m#059e05e#069c06s#079b07 #079907t#089808h#099609e#0a950a #0b930bh#0b920bu#0c900cn#0d8f0dt#0e8d0ee#0f8c0fd#0f8a0f.#108910 #118711S#128612o#138413 #138313i#148114t#158015 #167e15i#187d14s#197b14,#1a7913 #1c7813a#1d7612s#1e7412 #207311y#217111o#226f10u#246e10 #256c0ft#266a0fa#27680ek#29670ee#2a650d #2b630du#2d620cp#2e600co#2f5e0bn#315d0b #325b0at#33590ah#355809i#365609s#355709 #33590ao#325a0aa#305b0bt#2f5d0bh#2d5e0b.#2c5f0c\"#2a610c #29620dW#27630di#26650et#24660eh#23670e #22690ft#206a0fh#1f6b10e#1d6d10 #1c6e10w#1a6f11a#197111r#177212r#167312i#147513o#137613r#157812 #177a11s#197c11i#1b7e10l#1d810fe#1f830en#21850et#23870d #25890ca#278b0bg#298d0ba#2b8f0ai#2e9209n#309408,#329608 #349807t#369a06h#389c05e#3a9e05 ")
hecho("\n#01a501e#02a402n#03a203o#03a103r#049f04m#059e05o#069c06u#079b07s#079907 #089808s#099609p#0a950ai#0b930bd#0b920be#0c900cr#0d8f0d #0e8d0es#0f8c0fe#0f8a0fi#108910z#118711e#128612s#138413 #138313o#148114p#158015p#167e15o#187d14r#197b14t#1a7913u#1c7813n#1d7612i#1e7412t#207311y#217111 #226f10a#246e10s#256c0f #266a0fp#27680er#29670eo#2a650dm#2b630di#2d620cs#2e600ce#2f5e0bd#315d0b-#325b0a-#33590as#355809o#365609 #355709c#33590al#325a0ao#305b0bs#2f5d0be#2d5e0b #2c5f0ct#2a610co#29620d #27630dy#26650eo#24660eu#23670e,#22690f #206a0fh#1f6b10e#1d6d10r#1c6e10 #1a6f11m#197111a#177212x#167312i#147513l#137613l#157812a#177a11e#197c11 #1b7e10h#1d810fa#1f830ev#21850ee#23870d #25890cn#278b0bo#298d0b #2b8f0at#2e9209r#309408o#329608u#349807b#369a06l#389c05e#3a9e05 ")
hecho("\n#01a501d#02a402a#03a203r#03a103t#049f04i#059e05n#069c06g#079b07 #079907o#089808u#099609t#0a950a #0b930ba#0b920bn#0c900cd#0d8f0d #0e8d0el#0f8c0fi#0f8a0ff#108910t#118711i#128612n#138413g#138313 #148114y#158015o#167e15u#187d14 #197b14c#1a7913l#1c7813e#1d7612a#1e7412r#207311 #217111f#226f10r#246e10o#256c0fm#266a0f #27680et#29670eh#2a650de#2b630d #2d620cg#2e600cr#2f5e0bo#315d0bu#325b0an#33590ad#355809 #365609t#355709o#33590a #325a0aw#305b0ba#2f5d0bi#2d5e0bt#2c5f0ci#2a610cn#29620dg#27630d #26650em#24660ea#23670en#22690fd#206a0fi#1f6b10b#1d6d10l#1c6e10e#1a6f11s#197111,#177212 #167312m#147513a#137613s#157812s#177a11i#197c11v#1b7e10e#1d810f #1f830ef#21850ea#23870dn#25890cg#278b0bs#298d0b #2b8f0as#2e9209i#309408n#329608k#349807i#369a06n#389c05g#3a9e05 #3ca004i#3ea303n#40a502 #42a702t#44a901o#46ab00 ")
hecho("\n#01a501t#02a402h#03a203e#03a103 #049f04t#059e05e#069c06n#079b07d#079907e#089808r#099609 #0a950ak#0b930bn#0b920bo#0c900ct#0d8f0ds#0e8d0e #0f8c0fo#0f8a0ff#108910 #118711m#128612u#138413s#138313c#148114l#158015e#167e15 #187d14o#197b14n#1a7913e#1c7813 #1d7612o#1e7412t#207311h#217111e#226f10r#246e10 #256c0fs#266a0fi#27680ed#29670ee#2a650d #2b630do#2d620cf#2e600c #2f5e0by#315d0bo#325b0au#33590ar#355809 #365609n#355709e#33590ac#325a0ak#305b0b.")
hecho("\n\n#01a501T#02a402h#03a203e#03a103 #049f04s#059e05u#069c06c#079b07c#079907e#089808s#099609s#0a950ai#0b930bo#0b920bn#0c900c #0d8f0do#0e8d0ef#0f8c0f #0f8a0fa#108910c#118711t#128612i#138413o#138313n#148114 #158015i#167e15s#187d14 #197b14s#1a7913o#1c7813 #1d7612r#1e7412a#207311p#217111i#226f10d#246e10 #256c0fy#266a0fo#27680eu#29670e #2a650dh#2b630da#2d620cv#2e600ce#2f5e0b #315d0bn#325b0ao#33590a #355809c#365609h#355709a#33590an#325a0ac#305b0be#2f5d0b #2d5e0bt#2c5f0co#2a610c #29620dr#27630de#26650ea#24660ec#23670et#22690f #206a0fa#1f6b10n#1d6d10d#1c6e10 #1a6f11t#197111h#177212e#167312 #147513i#137613m#157812p#177a11o#197c11s#1b7e10s#1d810fi#1f830eb#21850el#23870dy#25890c #278b0bs#298d0bh#2b8f0aa#2e9209r#309408p#329608 #349807f#369a06a#389c05n#3a9e05g#3ca004s#3ea303 ")
hecho("\n#01a501p#02a402i#03a203e#03a103r#049f04c#059e05e#069c06 #079b07y#079907o#089808u#099609r#0a950a #0b930bf#0b920bl#0c900ce#0d8f0ds#0e8d0eh#0f8c0f #0f8a0fw#108910i#118711t#128612h#138413 #138313n#148114e#158015x#167e15t#187d14 #197b14t#1a7913o#1c7813 #1d7612n#1e7412o#207311 #217111r#226f10e#246e10s#256c0fi#266a0fs#27680et#29670ea#2a650dn#2b630dc#2d620ce#2e600c #2f5e0ba#315d0bn#325b0ad#33590a #355809s#365609u#355709r#33590ap#325a0ar#305b0bi#2f5d0bs#2d5e0bi#2c5f0cn#2a610cg#29620dl#27630dy#26650e #24660el#23670ei#22690ft#206a0ft#1f6b10l#1d6d10e#1c6e10 #1a6f11p#197111a#177212i#167312n#147513.#137613 #157812T#177a11h#197c11e#1b7e10r#1d810fe#1f830e #21850ei#23870ds#25890c,#278b0b #298d0bh#2b8f0ao#2e9209w#309408e#329608v#349807e#369a06r#389c05,#3a9e05 #3ca004t#3ea303h#40a502e#42a702 ")
hecho("\n#01a501a#02a402l#03a203a#03a103r#049f04m#059e05i#069c06n#079b07g#079907 #089808s#099609e#0a950an#0b930bs#0b920ba#0c900ct#0d8f0di#0e8d0eo#0f8c0fn#0f8a0f #108910o#118711f#128612 #138413v#138313e#148114n#158015o#167e15m#187d14 #197b14b#1a7913e#1c7813i#1d7612n#1e7412g#207311 #217111p#226f10u#246e10m#256c0fp#266a0fe#27680ed#29670e #2a650di#2b630dn#2d620ct#2e600co#2f5e0b #315d0by#325b0ao#33590au#355809r#365609 #355709b#33590ao#325a0ad#305b0by#2f5d0b #2d5e0bb#2c5f0ce#2a610cf#29620do#27630dr#26650ee#24660e #23670ey#22690fo#206a0fu#1f6b10 #1d6d10a#1c6e10r#1a6f11e#197111 #177212a#167312b#147513r#137613u#157812p#177a11t#197c11l#1b7e10y#1d810f #1f830er#21850ee#23870dl#25890ce#278b0ba#298d0bs#2b8f0ae#2e9209d#309408 #329608a#349807n#369a06d#389c05 ")
hecho("\n#01a501d#02a402r#03a203o#03a103p#049f04p#059e05e#069c06d#079b07 #079907b#089808a#099609c#0a950ak#0b930b #0b920bt#0c900co#0d8f0d #0e8d0et#0f8c0fh#0f8a0fe#108910 #118711g#128612r#138413o#138313u#148114n#158015d#167e15.#187d14 #197b14A#1a7913s#1c7813 #1d7612t#1e7412h#207311e#217111 #226f10f#246e10l#256c0fu#266a0fi#27680ed#29670e #2a650dm#2b630di#2d620cn#2e600cg#2f5e0bl#315d0be#325b0as#33590a #355809w#365609i#355709t#33590ah#325a0a #305b0by#2f5d0bo#2d5e0bu#2c5f0cr#2a610c #29620db#27630dl#26650eo#24660eo#23670ed#22690f,#206a0f #1f6b10y#1d6d10o#1c6e10u#1a6f11 #197111f#177212l#167312u#147513s#137613h#157812 #177a11w#197c11i#1b7e10t#1d810fh#1f830e #21850eh#23870de#25890ca#278b0bt#298d0b,#2b8f0a #2e9209t#309408h#329608o#349807u#369a06g#389c05h#3a9e05 #3ca004n#3ea303o#40a502 ")
hecho("\n#01a501o#02a402t#03a203h#03a103e#049f04r#059e05 #069c06s#079b07i#079907d#089808e#099609-#0a950ae#0b930bf#0b920bf#0c900ce#0d8f0dc#0e8d0et#0f8c0fs#0f8a0f #108910a#118711r#128612e#138413 #138313r#148114e#158015a#167e15d#187d14i#197b14l#1a7913y#1c7813 #1d7612a#1e7412p#207311p#217111a#226f10r#246e10e#256c0fn#266a0ft#27680e.#29670e #2a650dK#2b630dr#2d620ce#2e600ce#2f5e0b-#315d0bs#325b0aa#33590a #355809f#365609a#355709d#33590ae#325a0as#305b0b #2f5d0ba#2d5e0bw#2c5f0ca#2a610cy#29620d #27630db#26650ee#24660ef#23670eo#22690fr#206a0fe#1f6b10 #1d6d10y#1c6e10o#1a6f11u#197111r#177212 #167312e#147513y#137613e#157812s#177a11,#197c11 #1b7e10i#1d810fn#1f830es#21850eu#23870db#25890cs#278b0bt#298d0ba#2b8f0an#2e9209t#309408i#329608a#349807l#369a06 #389c05e#3a9e05v#3ca004e#3ea303n#40a502 #42a702a#44a901s#46ab00 ")
hecho("\n#01a501y#02a402o#03a203u#03a103 #049f04f#059e05e#069c06e#079b07l#079907 #089808t#099609h#0a950ae#0b930b #0b920br#0c900ce#0d8f0ds#0e8d0ei#0f8c0fd#0f8a0fu#108910a#118711l#128612 #138413p#138313i#148114n#158015c#167e15h#187d14 #197b14o#1a7913f#1c7813 #1d7612h#1e7412e#207311r#217111 #226f10b#246e10i#256c0ft#266a0fe#27680e,#29670e #2a650da#2b630dn#2d620cd#2e600c #2f5e0bN#315d0ba#325b0ar#33590ar#355809a#365609 #355709s#33590at#325a0ae#305b0bp#2f5d0bs#2d5e0b #2c5f0cf#2a610co#29620dr#27630dw#26650ea#24660er#23670ed#22690f #206a0fa#1f6b10g#1d6d10a#1c6e10i#1a6f11n#197111 #177212t#167312o#147513 #137613p#157812u#177a11l#197c11l#1b7e10 #1d810fy#1f830eo#21850eu#23870d #25890ct#278b0bo#298d0b #2b8f0ay#2e9209o#309408u#329608r#349807 #369a06f#389c05e#3a9e05e#3ca004t#3ea303.#40a502 ")
hecho("\n\n#01a501S#02a402e#03a203n#03a103d#049f04i#059e05n#069c06g#079b07 #079907a#089808 #099609p#0a950aa#0b930bn#0b920bg#0c900c #0d8f0dt#0e8d0eh#0f8c0fr#0f8a0fo#108910u#118711g#128612h#138413 #138313t#148114e#158015n#167e15d#187d14e#197b14r#1a7913 #1c7813i#1d7612n#1e7412j#207311e#217111c#226f10t#246e10i#256c0fo#266a0fn#27680e #29670ep#2a650do#2b630di#2d620cn#2e600ct#2f5e0bs#315d0b,#325b0a #33590as#355809h#365609e#355709 #33590ac#325a0al#305b0ba#2f5d0bs#2d5e0bp#2c5f0cs#2a610c #29620dy#27630do#26650eu#24660er#23670e #22690fs#206a0fh#1f6b10o#1d6d10u#1c6e10l#1a6f11d#197111e#177212r#167312 #147513a#137613g#157812a#177a11i#197c11n#1b7e10,#1d810f #1f830e\"#21850eY#23870do#25890cu#278b0b #298d0ba#2b8f0ar#2e9209e#309408 #329608o#349807f#369a06 #389c05t#3a9e05h#3ca004e#3ea303 ")
hecho("\n#01a501B#02a402r#03a203o#03a103o#049f04d#059e05m#069c06o#079b07t#079907h#089808e#099609r#0a950a #0b930bn#0b920bo#0c900cw#0d8f0d,#0e8d0e #0f8c0fV#0f8a0fa#108910l#118711o#128612r#138413i#138313e#148114.#158015 #167e15H#187d14e#197b14r#1a7913 #1c7813k#1d7612n#1e7412o#207311w#217111l#226f10e#246e10d#256c0fg#266a0fe#27680e #29670ef#2a650dl#2b630do#2d620cw#2e600cs#2f5e0b #315d0bt#325b0ah#33590ar#355809o#365609u#355709g#33590ah#325a0a #305b0by#2f5d0bo#2d5e0bu#2c5f0cr#2a610c #29620dv#27630de#26650ei#24660en#23670es#22690f,#206a0f #1f6b10a#1d6d10 #1c6e10p#1a6f11a#197111r#177212t#167312 #147513o#137613f#157812 #177a11y#197c11o#1b7e10u#1d810fr#1f830e #21850el#23870di#25890cf#278b0be#298d0b-#2b8f0af#2e9209o#309408r#329608c#349807e#369a06.#389c05 #3a9e05H#3ca004o#3ea303n#40a502o#42a702u#44a901r#46ab00 ")
hecho("\n#01a501i#02a402t#03a203,#03a103 #049f04a#059e05n#069c06d#079b07 #079907w#089808i#099609e#0a950al#0b930bd#0b920b #0c900ci#0d8f0dt#0e8d0e #0f8c0fw#0f8a0fi#108910t#118711h#128612 #138413p#138313u#148114r#158015p#167e15o#187d14s#197b14e#1a7913.#1c7813\"#1d7612 #1e7412W#207311i#217111t#226f10h#246e10 #256c0ft#266a0fh#27680ea#29670et#2a650d,#2b630d #2d620ct#2e600ch#2f5e0be#315d0b #325b0aw#33590aa#355809r#365609r#355709i#33590ao#325a0ar#305b0b #2f5d0bs#2d5e0bt#2c5f0ce#2a610cp#29620ds#27630d #26650eb#24660ea#23670ec#22690fk#206a0f,#1f6b10 #1d6d10r#1c6e10e#1a6f11s#197111u#177212m#167312i#147513n#137613g#157812 #177a11h#197c11e#1b7e10r#1d810f #1f830er#21850ee#23870dl#25890ca#278b0bx#298d0be#2b8f0ad#2e9209 #309408s#329608l#349807o#369a06u#389c05c#3a9e05h#3ca004 ")
hecho("\n#01a501a#02a402g#03a203a#03a103i#049f04n#059e05s#069c06t#079b07 #079907t#089808h#099609e#0a950a #0b930bi#0b920bd#0c900co#0d8f0dl#0e8d0e #0f8c0fo#0f8a0ff#108910 #118711t#128612h#138413e#138313 #148114B#158015r#167e15o#187d14o#197b14d#1a7913m#1c7813o#1d7612t#1e7412h#207311e#217111r#226f10.")
hecho("\n\n#01a501Y#02a402o#03a203u#03a103 #049f04h#059e05a#069c06v#079b07e#079907 #089808g#099609a#0a950ai#0b930bn#0b920be#0c900cd#0d8f0d #0e8d0et#0f8c0fh#0f8a0fe#108910 #118711O#128612a#138413t#138313h#148114 #158015o#167e15f#187d14 #197b14N#1a7913a#1c7813t#1d7612u#1e7412r#207311e#217111'#226f10s#246e10 #256c0fB#266a0fl#27680ea#29670ed#2a650de#2b630d.")
cechoLink("\n\n&lt;forest_green&gt; BACK TO KREE-SA",function() expandAlias("kree-sa") end, "back", true)
cechoLink("\n&lt;forest_green&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^kree-sa2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^kree-sa3$</name>
					<script>hecho("\n#01a501K#049f04R#089908E#0b930bE#0e8c0e-#128612S#158015A#1b7913,#207211 #266b0fT#2b640dH#315d0bE#365609 #2f5c0bB#28630dR#21690fO#1a7011O#137613D#1c7f10M#24880dO#2d910aT#359906H#3ea203E#46ab00R")

hecho("\n\n#01a501T#02a402h#03a203e#03a103 #049f04B#059e05r#069c06o#079b07o#079907d#089808m#099609o#0a950at#0b930bh#0b920be#0c900cr#0d8f0d #0e8d0et#0f8c0fa#0f8a0fk#108910e#118711s#128612 #138413t#138313h#148114e#158015 #167e15f#187d14o#197b14r#1a7913m#1c7813 #1d7612o#1e7412f#207311 #217111t#226f10h#246e10e#256c0f #266a0fs#27680ei#29670el#2a650de#2b630dn#2d620ct#2e600c #2f5e0ba#315d0bn#325b0ad#33590a #355809p#365609a#355709t#33590ai#325a0ae#305b0bn#2f5d0bt#2d5e0b #2c5f0cs#2a610cp#29620di#27630dd#26650ee#24660er#23670e.")

hecho("\n\n#01a501S#02a402h#03a203e#03a103 #049f04i#059e05s#069c06 #079b07n#079907o#089808t#099609 #0a950aa#0b930bn#0b920b #0c900ca#0d8f0dc#0e8d0et#0f8c0fi#0f8a0fv#108910e#118711 #128612h#138413u#138313n#148114t#158015e#167e15r#187d14,#197b14 #1a7913a#1c7813s#1d7612 #1e7412V#207311o#217111'#226f10a#246e10c#256c0fh#266a0fa#27680e,#29670e #2a650db#2b630du#2d620ct#2e600c #2f5e0bs#315d0bh#325b0ae#33590a #355809w#365609a#355709t#33590ac#325a0ah#305b0be#2f5d0bs#2d5e0b #2c5f0ct#2a610ch#29620de#27630d #26650eb#24660ee#23670eh#22690fa#206a0fv#1f6b10i#1d6d10o#1c6e10r#1a6f11 #197111o#177212f#167312 #147513h#137613e#157812r#177a11 #197c11p#1b7e10r#1d810fe#1f830ey#21850e,#23870d #25890cs#278b0be#298d0bt#2b8f0as#2e9209 #309408h#329608e#349807r#369a06 #389c05t#3a9e05r#3ca004a#3ea303p#40a502,")
hecho("\n#01a501a#02a402n#03a203d#03a103 #049f04l#059e05i#069c06e#079b07s#079907 #089808i#099609n#0a950a #0b930bw#0b920ba#0c900ci#0d8f0dt#0e8d0e #0f8c0ff#0f8a0fo#108910r#118711 #128612t#138413h#138313e#148114m#158015 #167e15t#187d14o#197b14 #1a7913c#1c7813o#1d7612m#1e7412e#207311 #217111t#226f10o#246e10 #256c0fh#266a0fe#27680er#29670e.#2a650d #2b630dH#2d620ce#2e600cr#2f5e0b #315d0bm#325b0aa#33590an#355809y#365609 #355709e#33590ay#325a0ae#305b0bd#2f5d0b #2d5e0bg#2c5f0ca#2a610cz#29620de#27630d #26650ea#24660en#23670ed#22690f #206a0fh#1f6b10e#1d6d10r#1c6e10 #1a6f11b#197111r#177212o#167312o#147513d#137613 #157812i#177a11s#197c11 #1b7e10v#1d810fa#1f830es#21850et#23870d,#25890c #278b0bs#298d0bh#2b8f0ae#2e9209 #309408l#329608o#349807o#369a06k#389c05s#3a9e05 #3ca004f#3ea303o#40a502r#42a702 ")
hecho("\n#01a501p#02a402a#03a203t#03a103t#049f04e#059e05r#069c06n#079b07s#079907 #089808a#099609n#0a950ad#0b930b #0b920bw#0c900ce#0d8f0da#0e8d0ek#0f8c0fn#0f8a0fe#108910s#118711s#128612e#138413s#138313 #148114t#158015o#167e15 #187d14s#197b14e#1a7913t#1c7813 #1d7612a#1e7412 #207311l#217111e#226f10t#246e10h#256c0fa#266a0fl#27680e #29670et#2a650du#2b630dr#2d620cn#2e600c #2f5e0bo#315d0bf#325b0a #33590ae#355809v#365609e#355709n#33590at#325a0as#305b0b #2f5d0bi#2d5e0bn#2c5f0c #2a610cp#29620dl#27630da#26650ec#24660ee#23670e #22690ft#206a0fh#1f6b10a#1d6d10t#1c6e10 #1a6f11a#197111l#177212l#167312 #147513l#137613e#157812a#177a11d#197c11 #1b7e10t#1d810fo#1f830e #21850eh#23870de#25890cr#278b0b #298d0bp#2b8f0ar#2e9209e#309408y#329608 #349807t#369a06o#389c05 #3a9e05t#3ca004h#3ea303e#40a502 ")
hecho("\n#01a501s#02a402p#03a203i#03a103d#049f04e#059e05r#069c06'#079b07s#079907 #089808l#099609e#0a950at#0b930bh#0b920ba#0c900cl#0d8f0d #0e8d0es#0f8c0ft#0f8a0fr#108910i#118711k#128612e#138413.")

hecho("\n\n#01a501.#02a402:#03a203*#03a103~#049f04*#059e05:#069c06.#079b07_#079907.#089808:#099609*#0a950a~#0b930b*#0b920b:#0c900c.#0d8f0d_#0e8d0e.#0f8c0f:#0f8a0f*#108910~#118711*#128612:#138413.#138313_#148114.#158015:#167e15*#187d14~#197b14*#1a7913:#1c7813.#1d7612_#1e7412.#207311:#217111*#226f10~#246e10*#256c0f:#266a0f.#27680e_#29670e.#2a650d:#2b630d*#2d620c~#2e600c*#2f5e0b:#315d0b.#325b0a_#33590a.#355809:#365609*#355709~#33590a*#325a0a:#305b0b.#2f5d0b_#2d5e0b.#2c5f0c:#2a610c*#29620d~#27630d*#26650e:#24660e.#23670e_#22690f.#206a0f:#1f6b10*#1d6d10~#1c6e10*#1a6f11:#197111.#177212_#167312.#147513:#137613*#157812~#177a11*#197c11:#1b7e10.#1d810f_#1f830e.#21850e:#23870d*#25890c~#278b0b*#298d0b:#2b8f0a.#2e9209_#309408.#329608:#349807*#369a06~#389c05*#3a9e05:#3ca004.")

hecho("\n\n#01a501W#02a402e#03a203 #03a103a#049f04r#059e05e#069c06 #079b07t#079907o#089808l#099609d#0a950a #0b930bo#0b920bf#0c900c #0d8f0dK#0e8d0er#0f8c0fe#0f8a0fe#108910-#118711s#128612a#138413,#138313 #148114a#158015n#167e15d#187d14 #197b14H#1a7913e#1c7813r#1d7612 #1e7412i#207311m#217111m#226f10e#246e10a#256c0fs#266a0fu#27680er#29670ea#2a650db#2b630dl#2d620ce#2e600c #2f5e0bb#315d0br#325b0ao#33590ao#355809d#365609.#355709 #33590aT#325a0ah#305b0be#2f5d0by#2d5e0b #2c5f0cl#2a610cu#29620dr#27630dk#26650e #24660ei#23670en#22690f #206a0fp#1f6b10l#1d6d10a#1c6e10c#1a6f11e#197111s#177212 #167312t#147513o#137613o#157812 #177a11d#197c11a#1b7e10r#1d810fk#1f830e #21850ef#23870do#25890cr#278b0b #298d0be#2b8f0av#2e9209e#309408n#329608 #349807V#369a06o#389c05'#3a9e05a#3ca004c#3ea303h#40a502a#42a702'#44a901s")
hecho("\n#01a501k#02a402i#03a203n#03a103d#049f04r#059e05e#069c06d#079b07,#079907 #089808i#099609n#0a950ae#0b930bv#0b920bi#0c900ct#0d8f0da#0e8d0eb#0f8c0fl#0f8a0fe#108910,#118711 #128612i#138413n#138313s#148114a#158015t#167e15i#187d14a#197b14b#1a7913l#1c7813e#1d7612 #1e7412b#207311u#217111t#226f10 #246e10p#256c0fa#266a0ft#27680ei#29670ee#2a650dn#2b630dt#2d620c #2e600ci#2f5e0bn#315d0b #325b0aT#33590ah#355809e#365609i#355709r#33590a #325a0ah#305b0bu#2f5d0bn#2d5e0bg#2c5f0ce#2a610cr#29620d.#27630d #26650eF#24660er#23670eo#22690fm#206a0f #1f6b10T#1d6d10h#1c6e10e#1a6f11m#197111 #177212w#167312e#147513 #137613m#157812a#177a11y#197c11 #1b7e10l#1d810fe#1f830ea#21850er#23870dn#25890c #278b0bt#298d0bo#2b8f0a #2e9209s#309408t#329608r#349807i#369a06k#389c05e#3a9e05 #3ca004a#3ea303t#40a502 #42a702t#44a901h#46ab00e")
hecho("\n#01a501p#02a402e#03a203r#03a103f#049f04e#059e05c#069c06t#079b07 #079907m#089808o#099609m#0a950ae#0b930bn#0b920bt#0c900c,#0d8f0d #0e8d0ec#0f8c0fl#0f8a0fe#108910v#118711e#128612r#138413 #138313a#148114n#158015d#167e15 #187d14l#197b14e#1a7913t#1c7813h#1d7612a#1e7412l#207311,#217111 #226f10e#246e10n#256c0fs#266a0fu#27680er#29670ei#2a650dn#2b630dg#2d620c #2e600ct#2f5e0bh#315d0be#325b0a #33590ad#355809e#365609m#355709i#33590as#325a0ae#305b0b #2f5d0bo#2d5e0bf#2c5f0c #2a610co#29620du#27630dr#26650e #24660ep#23670er#22690fe#206a0fy#1f6b10 #1d6d10a#1c6e10s#1a6f11 #197111s#177212u#167312r#147513e#137613l#157812y#177a11 #197c11a#1b7e10s#1d810f #1f830et#21850eh#23870de#25890c #278b0bb#298d0br#2b8f0ao#2e9209o#309408d#329608 #349807w#369a06o#389c05u#3a9e05l#3ca004d#3ea303 ")
hecho("\n#01a501c#02a402o#03a203n#03a103s#049f04u#059e05m#069c06e#079b07 #079907u#089808s#099609 #0a950aa#0b930bl#0b920bl#0c900c.#0d8f0d #0e8d0eF#0f8c0fo#0f8a0fr#108910 #118711i#128612t#138413 #138313i#148114s#158015 #167e15t#187d14h#197b14e#1a7913 #1c7813w#1d7612a#1e7412y#207311 #217111o#226f10f#246e10 #256c0ft#266a0fh#27680ee#29670e #2a650dw#2b630do#2d620cr#2e600cl#2f5e0bd#315d0b #325b0at#33590ah#355809a#365609t#355709 #33590aa#325a0al#305b0bl#2f5d0b #2d5e0bt#2c5f0ch#2a610ci#29620dn#27630dg#26650es#24660e #23670em#22690fu#206a0fs#1f6b10t#1d6d10 #1c6e10d#1a6f11i#197111e#177212.#167312 #147513T#137613h#157812e#177a11r#197c11e#1b7e10 #1d810fi#1f830es#21850e #23870dn#25890co#278b0b #298d0bc#2b8f0ar#2e9209u#309408e#329608l#349807t#369a06y#389c05,#3a9e05 #3ca004n#3ea303o#40a502 ")
hecho("\n#01a501f#02a402e#03a203a#03a103r#049f04 #059e05t#069c06o#079b07 #079907b#089808e#099609 #0a950af#0b930bo#0b920bu#0c900cn#0d8f0dd#0e8d0e #0f8c0fi#0f8a0fn#108910 #118711t#128612h#138413i#138313s#148114.#158015 #167e15A#187d14l#197b14l#1a7913 #1c7813t#1d7612h#1e7412i#207311n#217111g#226f10s#246e10 #256c0fm#266a0fu#27680es#29670et#2a650d #2b630dd#2d620ci#2e600ce#2f5e0b,#315d0b #325b0ab#33590ae#355809c#365609a#355709u#33590as#325a0ae#305b0b #2f5d0ba#2d5e0bl#2c5f0cl#2a610c #29620dd#27630de#26650ea#24660et#23670eh#22690f #206a0fm#1f6b10u#1d6d10s#1c6e10t#1a6f11 #197111y#177212i#167312e#147513l#137613d#157812 #177a11t#197c11o#1b7e10 #1d810ft#1f830eh#21850ee#23870d #25890cr#278b0be#298d0bs#2b8f0au#2e9209r#309408g#329608e#349807n#369a06c#389c05e#3a9e05 #3ca004o#3ea303f#40a502 ")
hecho("\n#01a501l#02a402i#03a203f#03a103e#049f04.")

hecho("\n\n#01a501.#02a402:#03a203*#03a103~#049f04*#059e05:#069c06.#079b07_#079907.#089808:#099609*#0a950a~#0b930b*#0b920b:#0c900c.#0d8f0d_#0e8d0e.#0f8c0f:#0f8a0f*#108910~#118711*#128612:#138413.#138313_#148114.#158015:#167e15*#187d14~#197b14*#1a7913:#1c7813.#1d7612_#1e7412.#207311:#217111*#226f10~#246e10*#256c0f:#266a0f.#27680e_#29670e.#2a650d:#2b630d*#2d620c~#2e600c*#2f5e0b:#315d0b.#325b0a_#33590a.#355809:#365609*#355709~#33590a*#325a0a:#305b0b.#2f5d0b_#2d5e0b.#2c5f0c:#2a610c*#29620d~#27630d*#26650e:#24660e.#23670e_#22690f.#206a0f:#1f6b10*#1d6d10~#1c6e10*#1a6f11:#197111.#177212_#167312.#147513:#137613*#157812~#177a11*#197c11:#1b7e10.#1d810f_#1f830e.#21850e:#23870d*#25890c~#278b0b*#298d0b:#2b8f0a.#2e9209_#309408.#329608:#349807*#369a06~#389c05*#3a9e05:#3ca004.")
cechoLink("\n\n&lt;forest_green&gt; BACK TO KREE-SA",function() expandAlias("kree-sa") end, "back", true)
cechoLink("\n&lt;forest_green&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^kree-sa3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^griash2$</name>
					<script>hecho("\n\n#f48e8e\"#f48f8eY#f4908do#f3918du#f3928dr#f3938c #f3948co#f3958bf#f2968bf#f2978be#f2988ar#f2998ai#f29a8an#f19b89g#f19c89 #f19d89t#f19e88o#f19f88 #f0a088t#f0a187h#f0a287e#f0a386 #f0a486K#efa586e#efa685e#efa785p#efa885e#efa984r#eeaa84 #eeab84i#eeac83s#eead83 #eeae82w#edaf82o#edb082r#edb181t#edb281h#edb381y#ecb480,#ecb580\"#ecb680 #ecb77fG#ecb87fo#ebb97fr#ebba7et#ebbb7eu#ebbc7dk#ebbd7d #eabe7dt#eabf7ch#eac07ce#e9c17d #e7c27es#e6c27fh#e5c380a#e3c481m#e2c582a#e0c584n#dfc685 #dec786a#dcc887s#dbc888s#dac989u#d8ca8ar#d7cb8be#d5cb8cs#d4cc8d #d3cd8ey#d1ce8fo#d0ce91u#cfcf92 #cdd093i#ccd194n#cbd195 #c9d296h#c8d397i#c6d498s#c5d499 #c4d59ae#c2d69bv#c1d79ce#c0d79en#bed89f,#bdd9a0 #bcdaa1r#badaa2e#b9dba3l#b7dca4a#b6dda5x#b5dda6e#b3dea7d#b2dfa8 #b1e0a9t#afe0abo#aee1acn#ace2ade#abe3ae;#aae3af ")
hecho("\n#f48e8eh#f48f8ee#f4908d #f3918dr#f3928de#f3938ca#f3948cc#f3958bh#f2968be#f2978bs#f2988a #f2998ao#f29a8au#f19b89t#f19c89 #f19d89a#f19e88n#f19f88d#f0a088 #f0a187c#f0a287l#f0a386a#f0a486s#efa586p#efa685s#efa785 #efa885y#efa984o#eeaa84u#eeab84r#eeac83 #eead83h#eeae82a#edaf82n#edb082d#edb181 #edb281i#edb381n#ecb480 #ecb580h#ecb680i#ecb77fs#ecb87f #ebb97fo#ebba7ew#ebbb7en#ebbc7d,#ebbd7d #eabe7dh#eabf7ci#eac07cs#e9c17d #e7c27ev#e6c27fa#e5c380g#e3c481u#e2c582e#e0c584,#dfc685 #dec786c#dcc887u#dbc888r#dac989i#d8ca8ao#d7cb8bu#d5cb8cs#d4cc8d #d3cd8es#d1ce8ft#d0ce91a#cfcf92r#cdd093e#ccd194 #cbd195r#c9d296o#c8d397a#c6d498m#c5d499i#c4d59an#c2d69bg#c1d79c #c0d79eo#bed89fv#bdd9a0e#bcdaa1r#badaa2 #b9dba3y#b7dca4o#b6dda5u#b5dda6.#b3dea7 #b2dfa8\"#b1e0a9I#afe0ab #aee1acs#ace2adp#abe3aee#aae3afa#a8e4b0k#a7e5b1 ")
hecho("\n#f48e8ef#f48f8eo#f4908dr#f3918d #f3928dt#f3938ch#f3948ce#f3958b #f2968bK#f2978be#f2988ae#f2998ap#f29a8ae#f19b89r#f19c89;#f19d89 #f19e88I#f19f88 #f0a088f#f0a187o#f0a287l#f0a386l#f0a486o#efa586w#efa685 #efa785t#efa885h#efa984e#eeaa84 #eeab84K#eeac83e#eead83e#eeae82p#edaf82e#edb082r#edb181'#edb281s#edb381 #ecb480c#ecb580o#ecb680m#ecb77fm#ecb87fa#ebb97fn#ebba7ed#ebbb7e.#ebbc7d #ebbd7dS#eabe7do#eabf7c #eac07cw#e9c17di#e7c27el#e6c27fl#e5c380 #e3c481y#e2c582o#e0c584u#dfc685.#dec786 #dcc887C#dbc888o#dac989m#d8ca8ae#d7cb8b,#d5cb8c #d4cc8ds#d3cd8ei#d1ce8ft#d0ce91.#cfcf92\"#cdd093 #ccd194H#cbd195e#c9d296 #c8d397d#c6d498r#c5d499a#c4d59aw#c2d69bs#c1d79c #c0d79ey#bed89fo#bdd9a0u#bcdaa1 #badaa2d#b9dba3o#b7dca4w#b6dda5n#b5dda6,#b3dea7 #b2dfa8s#b1e0a9e#afe0abt#aee1act#ace2adl#abe3aei#aae3afn#a8e4b0g#a7e5b1 ")
hecho("\n#f48e8ey#f48f8eo#f4908du#f3918d #f3928do#f3938cp#f3948cp#f3958bo#f2968bs#f2978bi#f2988at#f2998ae#f29a8a #f19b89h#f19c89i#f19d89m#f19e88,#f19f88 #f0a088a#f0a187n#f0a287d#f0a386 #f0a486l#efa586e#efa685a#efa785n#efa885s#efa984 #eeaa84f#eeab84o#eeac83r#eead83w#eeae82a#edaf82r#edb082d#edb181 #edb281t#edb381o#ecb480 #ecb580g#ecb680a#ecb77fz#ecb87fe#ebb97f #ebba7er#ebbb7ei#ebbc7dg#ebbd7dh#eabe7dt#eabf7c #eac07ci#e9c17dn#e7c27et#e6c27fo#e5c380 #e3c481y#e2c582o#e0c584u#dfc685r#dec786 #dcc887e#dbc888y#dac989e#d8ca8as#d7cb8b.")

hecho("\n\n#f48e8eT#f48f8eh#f4908de#f3918d #f3928ds#f3938cp#f3948ci#f3958br#f2968bi#f2978bt#f2988a #f2998ao#f29a8af#f19b89 #f19c89G#f19d89r#f19e88i#f19f88a#f0a088s#f0a187h#f0a287,#f0a386 #f0a486t#efa586h#efa685e#efa785 #efa885K#efa984e#eeaa84e#eeab84p#eeac83e#eead83r#eeae82 #edaf82o#edb082v#edb181e#edb281r#edb381l#ecb480a#ecb580p#ecb680s#ecb77f #ecb87fG#ebb97fo#ebba7er#ebbb7et#ebbc7du#ebbd7dk#eabe7d'#eabf7cs#eac07c #e9c17df#e7c27ea#e6c27fc#e5c380e#e3c481,#e2c582 #e0c584t#dfc685h#dec786e#dcc887 #dbc888m#dac989i#d8ca8ag#d7cb8bh#d5cb8ct#d4cc8dy#d3cd8e #d1ce8fc#d0ce91o#cfcf92u#cdd093g#ccd194a#cbd195r#c9d296 #c8d397s#c6d498t#c5d499a#c4d59ar#c2d69bi#c1d79cn#c0d79eg#bed89f #bdd9a0a#bcdaa1t#badaa2 #b9dba3y#b7dca4o#b6dda5u#b5dda6 #b3dea7c#b2dfa8a#b1e0a9l#afe0abm#aee1acl#ace2ady#abe3ae ")
hecho("\n#f48e8ea#f48f8en#f4908dd#f3918d #f3928dc#f3938co#f3948cn#f3958bt#f2968be#f2978bm#f2988ap#f2998al#f29a8aa#f19b89t#f19c89i#f19d89v#f19e88e#f19f88l#f0a088y#f0a187.#f0a287 #f0a386\"#f0a486T#efa586h#efa685e#efa785 #efa885w#efa984a#eeaa84y#eeab84 #eeac83o#eead83f#eeae82 #edaf82t#edb082h#edb181e#edb281 #edb381K#ecb480e#ecb580e#ecb680p#ecb77fe#ecb87fr#ebb97f #ebba7ei#ebbb7es#ebbc7d #ebbd7dp#eabe7de#eabf7ca#eac07cc#e9c17de#e7c27e,#e6c27f\"#e5c380 #e3c481h#e2c582e#e0c584 #dfc685s#dec786a#dcc887y#dbc888s#dac989 #d8ca8aa#d7cb8bs#d5cb8c #d4cc8dt#d3cd8eh#d1ce8fe#d0ce91 #cfcf92b#cdd093e#ccd194i#cbd195n#c9d296g#c8d397'#c6d498s#c5d499 #c4d59ab#c2d69bi#c1d79cs#c0d79ee#bed89fc#bdd9a0t#bcdaa1e#badaa2d#b9dba3 #b7dca4e#b6dda5y#b5dda6e#b3dea7s#b2dfa8 #b1e0a9r#afe0abe#aee1aca#ace2add#abe3ae ")
hecho("\n#f48e8ey#f48f8eo#f4908du#f3918d.#f3928d #f3938c\"#f3948cO#f3958bn#f2968bl#f2978by#f2988a #f2998ab#f29a8ay#f19b89 #f19c89f#f19d89i#f19e88r#f19f88s#f0a088t#f0a187 #f0a287m#f0a386a#f0a486s#efa586t#efa685e#efa785r#efa885i#efa984n#eeaa84g#eeab84 #eeac83o#eead83u#eeae82r#edaf82s#edb082e#edb181l#edb281v#edb381e#ecb480s#ecb580 #ecb680c#ecb77fa#ecb87fn#ebb97f #ebba7ew#ebbb7ee#ebbc7d #ebbd7db#eabe7dr#eabf7ci#eac07cn#e9c17dg#e7c27e #e6c27ft#e5c380h#e3c481a#e2c582t#e0c584 #dfc685s#dec786a#dcc887m#dbc888e#dac989 #d8ca8as#d7cb8be#d5cb8cr#d4cc8de#d3cd8en#d1ce8fi#d0ce91t#cfcf92y#cdd093 #ccd194t#cbd195o#c9d296 #c8d397t#c6d498h#c5d499e#c4d59a #c2d69bw#c1d79ci#c0d79el#bed89fd#bdd9a0s#bcdaa1 #badaa2w#b9dba3e#b7dca4 #b6dda5a#b5dda6r#b3dea7e#b2dfa8 #b1e0a9c#afe0abh#aee1aca#ace2adr#abe3aeg#aae3afe#a8e4b0d#a7e5b1 ")
hecho("\n#f48e8ew#f48f8ei#f4908dt#f3918dh#f3928d #f3938cp#f3948cr#f3958bo#f2968bt#f2978be#f2988ac#f2998at#f29a8ai#f19b89n#f19c89g#f19d89.#f19e88\"")

hecho("\n\n#f48e8eT#f48f8eh#f4908de#f3918d #f3928ds#f3938cp#f3948ci#f3958br#f2968bi#f2978bt#f2988a #f2998as#f29a8ae#f19b89p#f19c89a#f19d89r#f19e88a#f19f88t#f0a088e#f0a187s#f0a287 #f0a386f#f0a486r#efa586o#efa685m#efa785 #efa885t#efa984h#eeaa84e#eeab84 #eeac83s#eead83h#eeae82a#edaf82m#edb082a#edb181n#edb281'#edb381s#ecb480 #ecb580b#ecb680o#ecb77fd#ecb87fy#ebb97f,#ebba7e #ebbb7ec#ebbc7di#ebbd7dr#eabe7dc#eabf7cl#eac07ci#e9c17dn#e7c27eg#e6c27f #e5c380y#e3c481o#e2c582u#e0c584 #dfc685a#dec786n#dcc887d#dbc888 #dac989h#d8ca8ae#d7cb8b #d5cb8ci#d4cc8dn#d3cd8e #d1ce8fs#d0ce91i#cfcf92l#cdd093e#ccd194n#cbd195c#c9d296e#c8d397.#c6d498 #c5d499\"#c4d59aT#c2d69bh#c1d79ci#c0d79es#bed89f #bdd9a0c#bcdaa1o#badaa2n#b9dba3t#b7dca4r#b6dda5o#b5dda6l#b3dea7 #b2dfa8i#b1e0a9s#afe0ab #aee1aca#ace2ad ")
hecho("\n#f48e8ep#f48f8eo#f4908dw#f3918de#f3928dr#f3938cf#f3948cu#f3958bl#f2968b #f2978bt#f2988ah#f2998ai#f29a8an#f19b89g#f19c89;#f19d89 #f19e88t#f19f88o#f0a088 #f0a187a#f0a287c#f0a386c#f0a486e#efa586p#efa685t#efa785 #efa885s#efa984u#eeaa84f#eeab84f#eeac83e#eead83r#eeae82i#edaf82n#edb082g#edb181,#edb281 #edb381t#ecb480o#ecb580 #ecb680l#ecb77fe#ecb87ft#ebb97f #ebba7ee#ebbb7em#ebbc7do#ebbd7dt#eabe7di#eabf7co#eac07cn#e9c17d #e7c27ef#e6c27fl#e5c380o#e3c481w#e2c582 #e0c584o#dfc685v#dec786e#dcc887r#dbc888 #dac989y#d8ca8ao#d7cb8bu#d5cb8c #d4cc8dw#d3cd8ei#d1ce8ft#d0ce91h#cfcf92o#cdd093u#ccd194t#cbd195 #c9d296b#c8d397e#c6d498i#c5d499n#c4d59ag#c2d69b #c1d79cd#c0d79er#bed89fo#bdd9a0w#bcdaa1n#badaa2e#b9dba3d#b7dca4 #b6dda5b#b5dda6y#b3dea7 #b2dfa8i#b1e0a9t#afe0ab.#aee1ac\"#ace2ad #abe3aeH#aae3afe#a8e4b0 ")
hecho("\n#f48e8es#f48f8em#f4908di#f3918dl#f3928de#f3938cs#f3948c #f3958bk#f2968bi#f2978bn#f2988ad#f2998al#f29a8ay#f19b89,#f19c89 #f19d89h#f19e88i#f19f88s#f0a088 #f0a187h#f0a287a#f0a386n#f0a486d#efa586 #efa685w#efa785r#efa885a#efa984p#eeaa84p#eeab84e#eeac83d#eead83 #eeae82c#edaf82o#edb082m#edb181f#edb281o#edb381r#ecb480t#ecb580a#ecb680b#ecb77fl#ecb87fy#ebb97f #ebba7ea#ebbb7er#ebbc7do#ebbd7du#eabe7dn#eabf7cd#eac07c #e9c17dy#e7c27eo#e6c27fu#e5c380r#e3c481 #e2c582o#e0c584w#dfc685n#dec786.#dcc887 #dbc888\"#dac989I#d8ca8at#d7cb8b #d5cb8ci#d4cc8ds#d3cd8e #d1ce8fw#d0ce91h#cfcf92a#cdd093t#ccd194 #cbd195t#c9d296h#c8d397e#c6d498 #c5d499K#c4d59ae#c2d69be#c1d79cp#c0d79ee#bed89fr#bdd9a0 #bcdaa1a#badaa2s#b9dba3k#b7dca4s#b6dda5 #b5dda6o#b3dea7f#b2dfa8 #b1e0a9u#afe0abs#aee1ac,#ace2ad ")
hecho("\n#f48e8ea#f48f8eb#f4908do#f3918dv#f3928de#f3938c #f3948ca#f3958bl#f2968bl#f2978b #f2988ao#f2998at#f29a8ah#f19b89e#f19c89r#f19d89 #f19e88t#f19f88h#f0a088i#f0a187n#f0a287g#f0a386s#f0a486.#efa586\"")

hecho("\n\n#f48e8eY#f48f8eo#f4908du#f3918d #f3928df#f3938ce#f3948ce#f3958bl#f2968b #f2978bt#f2988ah#f2998ae#f29a8a #f19b89K#f19c89e#f19d89e#f19e88p#f19f88e#f0a088r#f0a187 #f0a287s#f0a386t#f0a486a#efa586n#efa685d#efa785i#efa885n#efa984g#eeaa84 #eeab84a#eeac83b#eead83o#eeae82v#edaf82e#edb082 #edb181y#edb281o#edb381u#ecb480,#ecb580 #ecb680h#ecb77fe#ecb87fa#ebb97fd#ebba7e #ebbb7em#ebbc7de#ebbd7dr#eabe7de#eabf7c #eac07ci#e9c17dn#e7c27ec#e6c27fh#e5c380e#e3c481s#e2c582 #e0c584a#dfc685w#dec786a#dcc887y#dbc888 #dac989f#d8ca8ar#d7cb8bo#d5cb8cm#d4cc8d #d3cd8ey#d1ce8fo#d0ce91u#cfcf92r#cdd093 #ccd194o#cbd195w#c9d296n#c8d397;#c6d498 #c5d499a#c4d59a #c2d69bl#c1d79co#c0d79ew#bed89f #bdd9a0p#bcdaa1u#badaa2r#b9dba3r#b7dca4 #b6dda5e#b5dda6m#b3dea7a#b2dfa8n#b1e0a9a#afe0abt#aee1ace#ace2ads#abe3ae ")
hecho("\n#f48e8ef#f48f8er#f4908do#f3918dm#f3928d #f3938ci#f3948ct#f3958bs#f2968b #f2978bp#f2988ao#f2998aw#f29a8ae#f19b89r#f19c89f#f19d89u#f19e88l#f19f88 #f0a088f#f0a187r#f0a287a#f0a386m#f0a486e#efa586,#efa685 #efa785t#efa885h#efa984e#eeaa84 #eeab84m#eeac83e#eead83r#eeae82e#edaf82 #edb082s#edb181o#edb281u#edb381n#ecb480d#ecb580 #ecb680r#ecb77fe#ecb87fl#ebb97fa#ebba7ex#ebbb7ei#ebbc7dn#ebbd7dg#eabe7d #eabf7ca#eac07cn#e9c17dd#e7c27e #e6c27fs#e5c380o#e3c481o#e2c582t#e0c584h#dfc685i#dec786n#dcc887g#dbc888 #dac989y#d8ca8ao#d7cb8bu#d5cb8c.#d4cc8d #d3cd8e\"#d1ce8fW#d0ce91h#cfcf92e#cdd093n#ccd194 #cbd195e#c9d296m#c8d397o#c6d498t#c5d499i#c4d59ao#c2d69bn#c1d79c #c0d79ec#bed89fe#bdd9a0a#bcdaa1s#badaa2e#b9dba3s#b7dca4 #b6dda5t#b5dda6o#b3dea7 #b2dfa8a#b1e0a9f#afe0abf#aee1ace#ace2adc#abe3aet#aae3af ")
hecho("\n#f48e8eu#f48f8es#f4908d,#f3918d #f3928dw#f3938ce#f3948c #f3958bs#f2968be#f2978be#f2988a #f2998ac#f29a8al#f19b89e#f19c89a#f19d89r#f19e88e#f19f88r#f0a088,#f0a187\"#f0a287 #f0a386G#f0a486o#efa586r#efa685t#efa785u#efa885k#efa984 #eeaa84g#eeab84o#eeac83e#eead83s#eeae82 #edaf82o#edb082n#edb181.#edb281 #edb381\"#ecb480A#ecb580 #ecb680h#ecb77fu#ecb87fn#ebb97ft#ebba7ee#ebbb7er#ebbc7d #ebbd7dc#eabe7da#eabf7cn#eac07cn#e9c17do#e7c27et#e6c27f #e5c380a#e3c481f#e2c582f#e0c584o#dfc685r#dec786d#dcc887 #dbc888r#dac989a#d8ca8ag#d7cb8be#d5cb8c,#d4cc8d #d3cd8ec#d1ce8fa#d0ce91n#cfcf92n#cdd093o#ccd194t#cbd195 #c9d296a#c8d397f#c6d498f#c5d499o#c4d59ar#c2d69bd#c1d79c #c0d79et#bed89fe#bdd9a0r#bcdaa1r#badaa2o#b9dba3r#b7dca4 #b6dda5o#b5dda6r#b3dea7 ")
hecho("\n#f48e8ec#f48f8eo#f4908dm#f3918dp#f3928dl#f3938ca#f3948cc#f3958be#f2968bn#f2978bc#f2988ay#f2998a.#f29a8a #f19b89I#f19c89f#f19d89 #f19e88y#f19f88o#f0a088u#f0a187 #f0a287h#f0a386a#f0a486r#efa586n#efa685e#efa785s#efa885s#efa984 #eeaa84e#eeab84m#eeac83o#eead83t#eeae82i#edaf82o#edb082n#edb181,#edb281 #edb381i#ecb480t#ecb580 #ecb680w#ecb77fi#ecb87fl#ebb97fl#ebba7e #ebbb7eh#ebbc7da#ebbd7dr#eabe7dn#eabf7ce#eac07cs#e9c17ds#e7c27e #e6c27fy#e5c380o#e3c481u#e2c582;#e0c584 #dfc685w#dec786h#dcc887e#dbc888n#dac989 #d8ca8ai#d7cb8bt#d5cb8c #d4cc8di#d3cd8es#d1ce8f #d0ce91c#cfcf92l#cdd093e#ccd194a#cbd195r#c9d296e#c8d397d#c6d498 #c5d499a#c4d59aw#c2d69ba#c1d79cy#c0d79e,#bed89f #bdd9a0y#bcdaa1o#badaa2u#b9dba3 #b7dca4b#b6dda5e#b5dda6c#b3dea7o#b2dfa8m#b1e0a9e#afe0ab ")
hecho("\n#f48e8ey#f48f8eo#f4908du#f3918dr#f3928ds#f3938ce#f3948cl#f3958bf#f2968b,#f2978b #f2988as#f2998at#f29a8ar#f19b89o#f19c89n#f19d89g#f19e88e#f19f88r#f0a088 #f0a187a#f0a287n#f0a386d#f0a486 #efa586b#efa685e#efa785t#efa885t#efa984e#eeaa84r#eeab84 #eeac83f#eead83o#eeae82r#edaf82 #edb082i#edb181t#edb281.#edb381\"")

hecho("\n\n#f48e8e\"#f48f8eY#f4908do#f3918du#f3928d #f3938cs#f3948ce#f3958be#f2968b,#f2978b\"#f2988a #f2998aG#f29a8ao#f19b89r#f19c89t#f19d89u#f19e88k#f19f88 #f0a088m#f0a187u#f0a287r#f0a386m#f0a486u#efa586r#efa685s#efa785 #efa885t#efa984o#eeaa84 #eeab84y#eeac83o#eead83u#eeae82 #edaf82e#edb082a#edb181s#edb281i#edb381l#ecb480y#ecb580,#ecb680 #ecb77f\"#ecb87fR#ebb97fe#ebba7ea#ebbb7el#ebbc7d #ebbd7dp#eabe7do#eabf7cw#eac07ce#e9c17dr#e7c27e #e6c27fc#e5c380o#e3c481m#e2c582e#e0c584s#dfc685 #dec786w#dcc887h#dbc888e#dac989n#d8ca8a #d7cb8by#d5cb8co#d4cc8du#d3cd8e #d1ce8fs#d0ce91u#cfcf92r#cdd093r#ccd194e#cbd195n#c9d296d#c8d397e#c6d498r#c5d499 #c4d59at#c2d69bh#c1d79ce#c0d79e #bed89fd#bdd9a0e#bcdaa1s#badaa2i#b9dba3r#b7dca4e#b6dda5 #b5dda6t#b3dea7o#b2dfa8 #b1e0a9b#afe0abe#aee1ac ")
hecho("\n#f48e8ep#f48f8eo#f4908dw#f3918de#f3928dr#f3938cf#f3948cu#f3958bl#f2968b.#f2978b #f2988aW#f2998ah#f29a8ae#f19b89n#f19c89 #f19d89y#f19e88o#f19f88u#f0a088 #f0a187l#f0a287e#f0a386t#f0a486 #efa586e#efa685v#efa785e#efa885r#efa984y#eeaa84t#eeab84h#eeac83i#eead83n#eeae82g#edaf82 #edb082e#edb181l#edb281s#edb381e#ecb480 #ecb580f#ecb680l#ecb77fo#ecb87fw#ebb97f #ebba7ea#ebbb7ew#ebbc7da#ebbd7dy#eabe7d,#eabf7c #eac07ca#e9c17dn#e7c27ed#e6c27f #e5c380w#e3c481h#e2c582e#e0c584n#dfc685 #dec786y#dcc887o#dbc888u#dac989 #d8ca8al#d7cb8be#d5cb8ct#d4cc8d #d3cd8et#d1ce8fh#d0ce91e#cfcf92 #cdd093f#ccd194o#cbd195r#c9d296e#c8d397s#c6d498t#c5d499 #c4d59ai#c2d69bn#c1d79c.#c0d79e #bed89fI#bdd9a0f#bcdaa1 #badaa2y#b9dba3o#b7dca4u#b6dda5 #b5dda6c#b3dea7a#b2dfa8r#b1e0a9r#afe0aby#aee1ac #ace2adt#abe3aeh#aae3afe#a8e4b0 ")
hecho("\n#f48e8ef#f48f8eo#f4908dr#f3918de#f3928ds#f3938ct#f3948c #f3958bi#f2968bn#f2978b #f2988ay#f2998ao#f29a8au#f19b89r#f19c89 #f19d89h#f19e88e#f19f88a#f0a088r#f0a187t#f0a287,#f0a386 #f0a486w#efa586h#efa685e#efa785t#efa885h#efa984e#eeaa84r#eeab84 #eeac83i#eead83n#eeae82s#edaf82i#edb082d#edb181e#edb281 #edb381o#ecb480r#ecb580 #ecb680o#ecb77fu#ecb87ft#ebb97f,#ebba7e #ebbb7ey#ebbc7do#ebbd7du#eabe7d #eabf7cw#eac07ci#e9c17dl#e7c27el#e6c27f #e5c380h#e3c481a#e2c582v#e0c584e#dfc685 #dec786r#dcc887o#dbc888o#dac989t#d8ca8as#d7cb8b #d5cb8cs#d4cc8dt#d3cd8er#d1ce8fo#d0ce91n#cfcf92g#cdd093 #ccd194e#cbd195n#c9d296o#c8d397u#c6d498g#c5d499h#c4d59a #c2d69bt#c1d79co#c0d79e #bed89fw#bdd9a0i#bcdaa1t#badaa2h#b9dba3s#b7dca4t#b6dda5a#b5dda6n#b3dea7d#b2dfa8 ")
hecho("\n#f48e8ew#f48f8eh#f4908da#f3918dt#f3928de#f3938cv#f3948ce#f3958br#f2968b #f2978bt#f2988ah#f2998ae#f29a8a #f19b89w#f19c89o#f19d89r#f19e88l#f19f88d#f0a088 #f0a187m#f0a287a#f0a386y#f0a486 #efa586g#efa685i#efa785v#efa885e#efa984 #eeaa84y#eeab84o#eeac83u#eead83.#eeae82\"")

hecho("\n\n#f48e8eG#f48f8er#f4908di#f3918da#f3928ds#f3938ch#f3948c,#f3958b #f2968bt#f2978bh#f2988ae#f2998a #f29a8aK#f19b89e#f19c89e#f19d89p#f19e88e#f19f88r#f0a088 #f0a187l#f0a287e#f0a386a#f0a486p#efa586s#efa685 #efa785t#efa885o#efa984w#eeaa84a#eeab84r#eeac83d#eead83 #eeae82t#edaf82h#edb082e#edb181 #edb281i#edb381d#ecb480o#ecb580l#ecb680,#ecb77f #ecb87fv#ebb97fa#ebba7en#ebbb7ei#ebbc7ds#ebbd7dh#eabe7di#eabf7cn#eac07cg#e9c17d #e7c27ea#e6c27fw#e5c380a#e3c481y#e2c582 #e0c584i#dfc685n#dec786 #dcc887s#dbc888i#dac989l#d8ca8ae#d7cb8bn#d5cb8cc#d4cc8de#d3cd8e;#d1ce8f #d0ce91G#cfcf92o#cdd093r#ccd194t#cbd195u#c9d296k#c8d397 #c6d498r#c5d499i#c4d59as#c2d69be#c1d79cs#c0d79e,#bed89f #bdd9a0g#bcdaa1u#badaa2i#b9dba3d#b7dca4i#b6dda5n#b5dda6g#b3dea7 #b2dfa8y#b1e0a9o#afe0abu#aee1ac #ace2adt#abe3aeo#aae3af ")
hecho("\n#f48e8ey#f48f8eo#f4908du#f3918dr#f3928d #f3938cf#f3948ce#f3958be#f2968bt#f2978b,#f2988a #f2998ah#f29a8ai#f19b89s#f19c89 #f19d89g#f19e88r#f19f88i#f0a088p#f0a187 #f0a287p#f0a386o#f0a486w#efa586e#efa685r#efa785f#efa885u#efa984l#eeaa84 #eeab84b#eeac83u#eead83t#eeae82 #edaf82g#edb082e#edb181n#edb281t#edb381l#ecb480e#ecb580.#ecb680 #ecb77f\"#ecb87fT#ebb97fh#ebba7ee#ebbb7e #ebbc7dK#ebbd7de#eabe7de#eabf7cp#eac07ce#e9c17dr#e7c27e #e6c27fu#e5c380n#e3c481d#e2c582e#e0c584r#dfc685s#dec786t#dcc887a#dbc888n#dac989d#d8ca8as#d7cb8b #d5cb8ct#d4cc8dh#d3cd8ea#d1ce8ft#d0ce91 #cfcf92t#cdd093r#ccd194u#cbd195e#c9d296 #c8d397c#c6d498a#c5d499l#c4d59am#c2d69b #c1d79ci#c0d79es#bed89f #bdd9a0d#bcdaa1i#badaa2f#b9dba3f#b7dca4i#b6dda5c#b5dda6u#b3dea7l#b2dfa8t#b1e0a9 #afe0abt#aee1aco#ace2ad ")
hecho("\n#f48e8ea#f48f8et#f4908dt#f3918da#f3928di#f3938cn#f3948c,#f3958b\"#f2968b #f2978bh#f2988ae#f2998a #f29a8aa#f19b89s#f19c89s#f19d89u#f19e88r#f19f88e#f0a088s#f0a187 #f0a287y#f0a386o#f0a486u#efa586,#efa685 #efa785\"#efa885B#efa984u#eeaa84t#eeab84 #eeac83w#eead83i#eeae82t#edaf82h#edb082 #edb181t#edb281i#edb381m#ecb480e#ecb580,#ecb680 #ecb77fi#ecb87ft#ebb97f #ebba7eg#ebbb7er#ebbc7do#ebbd7dw#eabe7ds#eabf7c #eac07ce#e9c17da#e7c27es#e6c27fi#e5c380e#e3c481r#e2c582 #e0c584a#dfc685n#dec786d#dcc887 #dbc888e#dac989a#d8ca8as#d7cb8bi#d5cb8ce#d4cc8dr#d3cd8e.#d1ce8f #d0ce91K#cfcf92e#cdd093e#ccd194p#cbd195 #c9d296t#c8d397h#c6d498e#c5d499 #c4d59af#c2d69bo#c1d79cr#c0d79ee#bed89fs#bdd9a0t#bcdaa1 #badaa2i#b9dba3n#b7dca4 #b6dda5y#b5dda6o#b3dea7u#b2dfa8r#b1e0a9 #afe0abh#aee1ace#ace2ada#abe3aer#aae3aft#a8e4b0,#a7e5b1 ")
hecho("\n#f48e8eb#f48f8er#f4908do#f3918dt#f3928dh#f3938ce#f3948cr#f3958b.#f2968b\"")

hecho("\n\n#f48e8eY#f48f8eo#f4908du#f3918d #f3928dh#f3938ca#f3948cv#f3958be#f2968b #f2978bg#f2988aa#f2998ai#f29a8an#f19b89e#f19c89d#f19d89 #f19e88t#f19f88h#f0a088e#f0a187 #f0a287O#f0a386a#f0a486t#efa586h#efa685 #efa785o#efa885f#efa984 #eeaa84t#eeab84h#eeac83e#eead83 #eeae82R#edaf82h#edb082y#edb181t#edb281h#edb381m#ecb480.")
cechoLink("\n\n&lt;salmon&gt; BACK TO GRIASH",function() expandAlias("griash") end, "back", true)
cechoLink("\n&lt;salmon&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^griash2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^griash3$</name>
					<script>hecho("\n#f48e8eG#f48f8eR#f4908dI#f3918dA#f3928dS#f3938cH#f3948c,#f3958b #f2968bT#f2978bH#f2988aE#f2998a #f29a8aK#f19b89E#f19c89E#f19d89P#f19e88E#f19f88R")
hecho("\n")
hecho("\n#f48e8eT#f48f8eh#f4908de#f3918d #f3928dK#f3938ce#f3948ce#f3958bp#f2968be#f2978br#f2988a #f2998at#f29a8aa#f19b89k#f19c89e#f19d89s#f19e88 #f19f88t#f0a088h#f0a187e#f0a287 #f0a386f#f0a486o#efa586r#efa685m#efa785 #efa885o#efa984f#eeaa84 #eeab84t#eeac83h#eead83e#eeae82 #edaf82c#edb082o#edb181n#edb281t#edb381e#ecb480m#ecb580p#ecb680l#ecb77fa#ecb87ft#ebb97fi#ebba7ev#ebbb7ee#ebbc7d #ebbd7dc#eabe7do#eabf7cu#eac07cg#e9c17da#e7c17er#e6c27f.")
hecho("\n")
hecho("\n#f48e8eT#f48f8eh#f4908de#f3918d #f3928dp#f3938co#f3948cw#f3958be#f2968br#f2978bf#f2988au#f2998al#f29a8a #f19b89c#f19c89o#f19d89n#f19e88t#f19f88r#f0a088o#f0a187l#f0a287 #f0a386o#f0a486f#efa586 #efa685t#efa785h#efa885e#efa984 #eeaa84K#eeab84e#eeac83e#eead83p#eeae82e#edaf82r#edb082 #edb181r#edb281e#edb381m#ecb480i#ecb580n#ecb680d#ecb77fs#ecb87f #ebb97fu#ebba7es#ebbb7e #ebbc7dt#ebbd7dh#eabe7da#eabf7ct#eac07c #e9c17dw#e7c17ei#e6c27ft#e5c380h#e3c481 #e2c482p#e1c583o#dfc684w#dec786e#ddc787r#dbc888 #dac989c#d9ca8ao#d7ca8bm#d6cb8ce#d5cc8ds#d3cd8e #d2cd8fr#d1ce90e#cfcf91s#ced092p#cdd093o#cbd194n#cad295s#c8d397i#c7d398b#c6d499i#c4d59al#c3d59bi#c2d69ct#c0d79dy#bfd89e.#bed89f #bcd9a0W#bbdaa1e#badba2 #b8dba3m#b7dca4u#b6dda5s#b4dea6t#b3dea7 #b2dfa9b#b0e0aae")
hecho("\n#f48e8ew#f48f8ei#f4908dl#f3918dl#f3928di#f3938cn#f3948cg#f3958b #f2968bt#f2978bo#f2988a #f2998as#f29a8ae#f19b89p#f19c89a#f19d89r#f19e88a#f19f88t#f0a088e#f0a187 #f0a287o#f0a386u#f0a486r#efa586s#efa685e#efa785l#efa885v#efa984e#eeaa84s#eeab84 #eeac83f#eead83r#eeae82o#edaf82m#edb082 #edb181o#edb281u#edb381r#ecb480 #ecb580d#ecb680e#ecb77fs#ecb87fi#ebb97fr#ebba7ee#ebbb7es#ebbc7d,#ebbd7d #eabe7dd#eabf7ce#eac07cs#e9c17di#e7c17er#e6c27fe#e5c380s#e3c481 #e2c482a#e1c583n#dfc684d#dec786 #ddc787e#dbc888m#dac989o#d9ca8at#d7ca8bi#d6cb8co#d5cc8dn#d3cd8es#d2cd8f #d1ce90t#cfcf91h#ced092a#cdd093t#cbd194 #cad295w#c8d397i#c7d398l#c6d499l#c4d59a #c3d59bc#c2d69cl#c0d79do#bfd89eu#bed89fd#bcd9a0 #bbdaa1o#badba2u#b8dba3r#b7dca4 #b6dda5j#b4dea6u#b3dea7d#b2dfa9g#b0e0aae#afe1abm#aee1ace#ace2adn#abe3aet#aae4af ")
hecho("\n#f48e8ea#f48f8en#f4908dd#f3918d #f3928dm#f3938ca#f3948ck#f3958be#f2968b #f2978bu#f2988as#f2998a #f29a8aa#f19b89c#f19c89t#f19d89 #f19e88i#f19f88r#f0a088r#f0a187a#f0a287t#f0a386i#f0a486o#efa586n#efa685a#efa785l#efa885l#efa984y#eeaa84.#eeab84 #eeac83T#eead83h#eeae82e#edaf82s#edb082e#edb181 #edb281a#edb381r#ecb480e#ecb580 #ecb680t#ecb77fh#ecb87fi#ebb97fn#ebba7eg#ebbb7es#ebbc7d #ebbd7dt#eabe7dh#eabf7ca#eac07ct#e9c17d #e7c17ea#e6c27f #e5c380h#e3c481u#e2c482n#e1c583t#dfc684e#dec786r#ddc787 #dbc888c#dac989a#d9ca8an#d7ca8bn#d6cb8co#d5cc8dt#d3cd8e #d2cd8fa#d1ce90f#cfcf91f#ced092o#cdd093r#cbd194d#cad295,#c8d397 #c7d398a#c6d499 #c4d59aP#c3d59br#c2d69ca#c0d79da#bfd89ed#bed89fi#bcd9a0 #bbdaa1c#badba2a#b8dba3n#b7dca4n#b6dda5o#b4dea6t#b3dea7 #b2dfa9a#b0e0aaf#afe1abf#aee1aco#ace2adr#abe3aed#aae4af.#a8e4b0 ")
hecho("\n#f48e8eW#f48f8eh#f4908de#f3918dn#f3928d #f3938cw#f3948ce#f3958b #f2968bs#f2978bu#f2988ar#f2998ar#f29a8ae#f19b89n#f19c89d#f19d89e#f19e88r#f19f88 #f0a088t#f0a187o#f0a287 #f0a386o#f0a486u#efa586r#efa685 #efa785d#efa885e#efa984s#eeaa84i#eeab84r#eeac83e#eead83s#eeae82,#edaf82 #edb082e#edb181m#edb281o#edb381t#ecb480i#ecb580o#ecb680n#ecb77fs#ecb87f,#ebb97f #ebba7ei#ebbb7er#ebbc7dr#ebbd7da#eabe7dt#eabf7ci#eac07co#e9c17dn#e7c17ea#e6c27fb#e5c380i#e3c481l#e2c482i#e1c583t#dfc684y#dec786,#ddc787 #dbc888o#dac989u#d9ca8ar#d7ca8b #d6cb8cb#d5cc8do#d3cd8ed#d2cd8fi#d1ce90e#cfcf91s#ced092 #cdd093a#cbd194n#cad295d#c8d397 #c7d398h#c6d499e#c4d59aa#c3d59br#c2d69ct#c0d79ds#bfd89e #bed89fb#bcd9a0e#bbdaa1c#badba2o#b8dba3m#b7dca4e#b6dda5 #b4dea6w#b3dea7a#b2dfa9n#b0e0aad#afe1abe#aee1acr#ace2adi#abe3aen#aae4afg#a8e4b0 ")
hecho("\n#f48e8ea#f48f8en#f4908dd#f3918d #f3928dw#f3938ce#f3948ca#f3958bk#f2968b.#f2978b #f2988aW#f2998ah#f29a8ae#f19b89n#f19c89 #f19d89i#f19e88t#f19f88 #f0a088i#f0a187s#f0a287 #f0a386a#f0a486l#efa586l#efa685 #efa785c#efa885l#efa984e#eeaa84a#eeab84r#eeac83e#eead83d#eeae82 #edaf82a#edb082w#edb181a#edb281y#edb381,#ecb480 #ecb580w#ecb680e#ecb77f #ecb87fb#ebb97fe#ebba7ec#ebbb7eo#ebbc7dm#ebbd7de#eabe7d #eabf7cs#eac07ct#e9c17dr#e7c17eo#e6c27fn#e5c380g#e3c481e#e2c482r#e1c583,#dfc684 #dec786o#ddc787u#dbc888r#dac989 #d9ca8ar#d7ca8bo#d6cb8co#d5cc8dt#d3cd8es#d2cd8f #d1ce90d#cfcf91e#ced092e#cdd093p#cbd194e#cad295r#c8d397,#c7d398 #c6d499w#c4d59ae#c3d59b #c2d69cd#c0d79do#bfd89e #bed89fn#bcd9a0o#bbdaa1t#badba2 #b8dba3l#b7dca4o#b6dda5s#b4dea6e#b3dea7 #b2dfa9s#b0e0aai#afe1abg#aee1ach#ace2adt#abe3ae #aae4afo#a8e4b0f#a7e5b1")
hecho("\n#f48e8eo#f48f8eu#f4908dr#f3918d #f3928dp#f3938cu#f3948cr#f3958bp#f2968bo#f2978bs#f2988ae#f2998a.")
hecho("\n")
hecho("\n#f48e8e.#f48f8e:#f4908d*#f3918d~#f3928d*#f3938c:#f3948c.#f3958b_#f2968b.#f2978b:#f2988a*#f2998a~#f29a8a*#f19b89:#f19c89.#f19d89_#f19e88.#f19f88:#f0a088*#f0a187~#f0a287*#f0a386:#f0a486.#efa586_#efa685.#efa785:#efa885*#efa984~#eeaa84*#eeab84:#eeac83.#eead83_#eeae82.#edaf82:#edb082*#edb181~#edb281*#edb381:#ecb480.#ecb580_#ecb680.#ecb77f:#ecb87f*#ebb97f~#ebba7e*#ebbb7e:#ebbc7d.#ebbd7d_#eabe7d.#eabf7c:#eac07c*#e9c17d~#e7c17e*#e6c27f:#e5c380.#e3c481_#e2c482.#e1c583:#dfc684*#dec786~#ddc787*#dbc888:#dac989.#d9ca8a_#d7ca8b.#d6cb8c:#d5cc8d*#d3cd8e~#d2cd8f*#d1ce90:#cfcf91.#ced092_#cdd093.#cbd194:#cad295*#c8d397~#c7d398*#c6d499:#c4d59a.#c3d59b_#c2d69c.#c0d79d:#bfd89e*#bed89f~#bcd9a0*#bbdaa1:#badba2.#b8dba3_#b7dca4.#b6dda5:#b4dea6*#b3dea7~#b2dfa9*#b0e0aa:#afe1ab.")
hecho("\n")
hecho("\n#f48e8eG#f48f8er#f4908di#f3918da#f3928ds#f3938ch#f3948c #f3958bg#f2968bu#f2978bi#f2988ad#f2998ae#f29a8as#f19b89 #f19c89u#f19d89s#f19e88 #f19f88i#f0a088n#f0a187 #f0a287h#f0a386a#f0a486r#efa586n#efa685e#efa785s#efa885s#efa984i#eeaa84n#eeab84g#eeac83 #eead83t#eeae82h#edaf82e#edb082s#edb181e#edb281 #edb381t#ecb480e#ecb580a#ecb680c#ecb77fh#ecb87fi#ebb97fn#ebba7eg#ebbb7es#ebbc7d,#ebbd7d #eabe7db#eabf7ce#eac07cc#e9c17do#e7c17em#e6c27fi#e5c380n#e3c481g#e2c482 #e1c583a#dfc684 #dec786p#ddc787a#dbc888r#dac989t#d9ca8a #d7ca8bo#d6cb8cf#d5cc8d #d3cd8et#d2cd8fh#d1ce90e#cfcf91 #ced092w#cdd093o#cbd194r#cad295l#c8d397d#c7d398 #c6d499a#c4d59ar#c3d59bo#c2d69cu#c0d79dn#bfd89ed#bed89f #bcd9a0u#bbdaa1s#badba2,#b8dba3 #b7dca4S#b6dda5h#b4dea6e#b3dea7 #b2dfa9w#b0e0aaa#afe1abr#aee1acn#ace2ads#abe3ae #aae4afu#a8e4b0s")
hecho("\n#f48e8et#f48f8eo#f4908d #f3918dm#f3928da#f3938cs#f3948ct#f3958be#f2968br#f2978b #f2988af#f2998ai#f29a8ar#f19b89s#f19c89t#f19d89 #f19e88o#f19f88u#f0a088r#f0a187s#f0a287e#f0a386l#f0a486v#efa586e#efa685s#efa785.#efa885 #efa984T#eeaa84h#eeab84e#eeac83 #eead83r#eeae82e#edaf82s#edb082o#edb181l#edb281v#edb381e#ecb480 #ecb580o#ecb680f#ecb77f #ecb87fR#ebb97fh#ebba7eu#ebbb7el#ebbc7dv#ebbd7do#eabe7dk#eabf7c,#eac07c #e9c17dt#e7c17eh#e6c27fe#e5c380 #e3c481c#e2c482o#e1c583u#dfc684r#dec786a#ddc787g#dbc888e#dac989 #d9ca8ao#d7ca8bf#d6cb8c #d5cc8dV#d3cd8eo#d2cd8f'#d1ce90a#cfcf91c#ced092h#cdd093a#cbd194,#cad295 #c8d397t#c7d398h#c6d499e#c4d59a #c3d59bl#c2d69ce#c0d79dt#bfd89eh#bed89fa#bcd9a0l#bbdaa1i#badba2t#b8dba3y#b7dca4 #b6dda5o#b4dea6f#b3dea7 #b2dfa9K#b0e0aar#afe1abe#aee1ace#ace2ad-#abe3aes#aae4afa#a8e4b0,#a7e5b1")
hecho("\n#f48e8et#f48f8eh#f4908de#f3918d #f3928df#f3938co#f3948cr#f3958be#f2968bs#f2978bi#f2988ag#f2998ah#f29a8at#f19b89 #f19c89o#f19d89f#f19e88 #f19f88S#f0a088r#f0a187a#f0a287h#f0a386d#f0a486a#efa586 #efa685a#efa785n#efa885d#efa984 #eeaa84e#eeab84v#eeac83e#eead83n#eeae82 #edaf82t#edb082h#edb181e#edb281 #edb381F#ecb480u#ecb580r#ecb680y#ecb77f #ecb87fo#ebb97ff#ebba7e #ebbb7eT#ebbc7da#ebbd7dk#eabe7da#eabf7cr#eac07co#e9c17ds#e7c17e #e6c27fm#e5c380e#e3c481a#e2c482n#e1c583 #dfc684n#dec786o#ddc787t#dbc888h#dac989i#d9ca8an#d7ca8bg#d6cb8c #d5cc8di#d3cd8ef#d2cd8f #d1ce90w#cfcf91e#ced092 #cdd093a#cbd194l#cad295l#c8d397o#c7d398w#c6d499 #c4d59ao#c3d59bu#c2d69cr#c0d79d #bfd89ee#bed89fv#bcd9a0e#bbdaa1r#badba2y#b8dba3 #b7dca4e#b6dda5m#b4dea6o#b3dea7t#b2dfa9i#b0e0aao#afe1abn#aee1ac #ace2adt#abe3aeo#aae4af ")
hecho("\n#f48e8er#f48f8eu#f4908dl#f3918de#f3928d #f3938cu#f3948cs#f3958b.#f2968b #f2978bF#f2988ae#f2998ae#f29a8al#f19b89 #f19c89t#f19d89h#f19e88e#f19f88 #f0a088t#f0a187h#f0a287i#f0a386n#f0a486g#efa586s#efa685 #efa785t#efa885h#efa984a#eeaa84t#eeab84 #eeac83y#eead83o#eeae82u#edaf82 #edb082f#edb181e#edb281e#edb381l#ecb480,#ecb580 #ecb680l#ecb77fe#ecb87ft#ebb97f #ebba7et#ebbb7eh#ebbc7de#ebbd7dm#eabe7d #eabf7cf#eac07cl#e9c17do#e7c17ew#e6c27f #e5c380t#e3c481h#e2c482r#e1c583o#dfc684u#dec786g#ddc787h#dbc888 #dac989y#d9ca8ao#d7ca8bu#d6cb8c #d5cc8dl#d3cd8ei#d2cd8fk#d1ce90e#cfcf91 #ced092D#cdd093e#cbd194n#cad295d#c8d397a#c7d398r#c6d499a#c4d59a #c3d59bd#c2d69co#c0d79de#bfd89es#bed89f,#bcd9a0 #bbdaa1c#badba2a#b8dba3s#b7dca4t#b6dda5 #b4dea6a#b3dea7s#b2dfa9i#b0e0aad#afe1abe#aee1ac ")
hecho("\n#f48e8et#f48f8eh#f4908de#f3918di#f3928dr#f3938c #f3948ci#f3958bn#f2968bf#f2978bl#f2988au#f2998ae#f29a8an#f19b89c#f19c89e#f19d89s#f19e88 #f19f88a#f0a088n#f0a187d#f0a287 #f0a386k#f0a486e#efa586e#efa685p#efa785 #efa885p#efa984e#eeaa84a#eeab84c#eeac83e#eead83 #eeae82w#edaf82i#edb082t#edb181h#edb281i#edb381n#ecb480,#ecb580 #ecb680t#ecb77fh#ecb87fa#ebb97ft#ebba7e #ebbb7ey#ebbc7do#ebbd7du#eabe7d #eabf7cm#eac07ca#e9c17dy#e7c17e #e6c27fe#e5c380x#e3c481e#e2c482r#e1c583t#dfc684 #dec786y#ddc787o#dbc888u#dac989r#d9ca8a #d7ca8bt#d6cb8cr#d5cc8du#d3cd8ee#d2cd8f #d1ce90p#cfcf91u#ced092r#cdd093p#cbd194o#cad295s#c8d397e#c7d398 #c6d499w#c4d59ai#c3d59bt#c2d69ch#c0d79do#bfd89eu#bed89ft#bcd9a0 #bbdaa1a#badba2n#b8dba3d#b7dca4 #b6dda5n#b4dea6e#b3dea7v#b2dfa9e#b0e0aar#afe1ab #aee1acb#ace2ade#abe3ae ")
hecho("\n#f48e8el#f48f8eo#f4908ds#f3918dt#f3928d #f3938ci#f3948cn#f3958b #f2968bi#f2978bt#f2988as#f2998a #f29a8ap#f19b89u#f19c89r#f19d89s#f19e88u#f19f88i#f0a088t#f0a187.")
hecho("\n")
hecho("\n#f48e8e.#f48f8e:#f4908d*#f3918d~#f3928d*#f3938c:#f3948c.#f3958b_#f2968b.#f2978b:#f2988a*#f2998a~#f29a8a*#f19b89:#f19c89.#f19d89_#f19e88.#f19f88:#f0a088*#f0a187~#f0a287*#f0a386:#f0a486.#efa586_#efa685.#efa785:#efa885*#efa984~#eeaa84*#eeab84:#eeac83.#eead83_#eeae82.#edaf82:#edb082*#edb181~#edb281*#edb381:#ecb480.#ecb580_#ecb680.#ecb77f:#ecb87f*#ebb97f~#ebba7e*#ebbb7e:#ebbc7d.#ebbd7d_#eabe7d.#eabf7c:#eac07c*#e9c17d~#e7c17e*#e6c27f:#e5c380.#e3c481_#e2c482.#e1c583:#dfc684*#dec786~#ddc787*#dbc888:#dac989.#d9ca8a_#d7ca8b.#d6cb8c:#d5cc8d*#d3cd8e~#d2cd8f*#d1ce90:#cfcf91.#ced092_#cdd093.#cbd194:#cad295*#c8d397~#c7d398*#c6d499:#c4d59a.#c3d59b_#c2d69c.#c0d79d:#bfd89e*#bed89f~#bcd9a0*#bbdaa1:#badba2.#b8dba3_#b7dca4.#b6dda5:#b4dea6*#b3dea7~#b2dfa9*#b0e0aa:#afe1ab.")
cechoLink("\n\n&lt;salmon&gt; BACK TO GRIASH",function() expandAlias("griash") end, "back", true)
cechoLink("\n&lt;salmon&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^griash3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rhulvok1$</name>
					<script>hecho("\n#ffffffR#fefdfdH#fcfcfcU#fbfafaL#f9f8f8V#f8f7f7O#f6f5f5K#f5f4f4,#f3f2f2 #f2f0f0T#f1efefH#efededE#eeebeb #eceaeaW#ebe8e8A#e9e6e6R#e8e5e5D#e7e3e3E#e5e1e1N")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5s#f5f4f4a#f3f2f2y#f2f0f0s#f1efef,#efeded #eeebeb\"#eceaeaB#ebe8e8l#e9e6e6e#e8e5e5s#e7e3e3s#e5e1e1i#e4e0e0n#e2dedeg#e1dddds#dfdbdb #ded9d9o#dcd8d8f#dbd6d6 #d9d4d4t#d7d2d2h#d4d0d0e#d2cece #d0cccca#cecacan#cbc8c8c#c9c6c6i#c7c4c4e#c5c2c2n#c2c0c0t#c0bebes#bebbbb #bcb9b9u#b9b7b7p#b7b5b5o#b5b3b3n#b3b1b1 #b0afafy#aeadado#acababu#aaa9a9,#a7a7a7 #a5a5a5V#a3a3a3a#a1a1a1l#a0a0a0o#9e9e9er#9d9d9di#9b9b9be#999a99.#989898 #969796M#959595a#939493y#929292 #909190t#8e8f8eh#8d8d8de#8b8c8b #8a8a8aW#888988a#868786r#858685d#838483e#828382n#808180 #7f807fw#7d7e7da#7c7d7ct#7b7c7bc#7a7b7ah#797a79 #787978o#777877v#767676e#757575r#747474 #737373y#727272o#717171u#6f706f #6e6f6ea#6d6e6dn#6c6d6cd#6b6c6b #6a6b6ay#696969o#686868u#676767r#666666 ")
hecho("\n#ffffffb#fefdfde#fcfcfcl#fbfafal#f9f8f8y#f8f7f7 #f6f5f5b#f5f4f4e#f3f2f2 #f2f0f0f#f1efefu#efededl#eeebebl#eceaea #ebe8e8i#e9e6e6n#e8e5e5 #e7e3e3s#e5e1e1u#e4e0e0c#e2dedeh#e1dddd #dfdbdbd#ded9d9a#dcd8d8r#dbd6d6k#d9d4d4 #d7d2d2t#d4d0d0i#d2cecem#d0cccce#cecacas#cbc8c8.#c9c6c6\"")

hecho("\n\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8s#f8f7f7a#f6f5f5y#f5f4f4,#f3f2f2 #f2f0f0\"#f1efefW#efededh#eeebeba#eceaeat#ebe8e8 #e9e6e6c#e8e5e5a#e7e3e3n#e5e1e1 #e4e0e0y#e2dedeo#e1ddddu#dfdbdb #ded9d9t#dcd8d8e#dbd6d6l#d9d4d4l#d7d2d2 #d4d0d0m#d2cecee#d0cccc #cecacao#cbc8c8f#c9c6c6 #c7c4c4t#c5c2c2h#c2c0c0e#c0bebe #bebbbbW#bcb9b9a#b9b7b7r#b7b5b5d#b5b3b3e#b3b1b1n#b0afaf?#aeadad\"")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5s#f5f4f4a#f3f2f2y#f2f0f0s#f1efef,#efeded #eeebeb\"#eceaeaA#ebe8e8h#e9e6e6h#e8e5e5,#e7e3e3 #e5e1e1R#e4e0e0h#e2dedeu#e1ddddl#dfdbdbv#ded9d9o#dcd8d8k#dbd6d6.#d9d4d4 #d7d2d2H#d4d0d0i#d2ceces#d0cccc #cecacah#cbc8c8i#c9c6c6d#c7c4c4e#c5c2c2 #c2c0c0i#c0bebes#bebbbb #bcb9b9a#b9b7b7s#b7b5b5 #b5b3b3s#b3b1b1t#b0afafo#aeadadn#acababe#aaa9a9,#a7a7a7 #a5a5a5V#a3a3a3a#a1a1a1l#a0a0a0o#9e9e9er#9d9d9di#9b9b9be#999a99;#989898 #969796s#959595c#939493a#929292r#909190r#8e8f8ee#8d8d8dd#8b8c8b #8a8a8aa#888988n#868786d#858685 #838483r#828382a#808180v#7f807fa#7d7e7dg#7c7d7ce#7b7c7bd#7a7b7a #797a79b#787978y#777877 #767676h#757575i#747474s#737373 #727272b#717171a#6f706ft#6e6f6et#6d6e6dl#6c6d6ce#6b6c6bs#6a6b6a #696969w#686868i#676767t#666666h#656565 ")
hecho("\n#fffffft#fefdfdh#fcfcfco#fbfafas#f9f8f8e#f8f7f7 #f6f5f5w#f5f4f4h#f3f2f2o#f2f0f0 #f1efefw#efededo#eeebebu#eceaeal#ebe8e8d#e9e6e6 #e8e5e5s#e7e3e3e#e5e1e1e#e4e0e0k#e2dede #e1ddddt#dfdbdbo#ded9d9 #dcd8d8d#dbd6d6e#d9d4d4s#d7d2d2t#d4d0d0r#d2ceceo#d0ccccy#cecaca #cbc8c8D#c9c6c6e#c7c4c4n#c5c2c2d#c2c0c0a#c0beber#bebbbba#bcb9b9 #b9b7b7h#b7b5b5e#b5b3b3 #b3b1b1h#b0afafa#aeadads#acabab #aaa9a9s#a7a7a7t#a5a5a5o#a3a3a3o#a1a1a1d#a0a0a0 #9e9e9ee#9d9d9dv#9b9b9be#999a99r#989898 #969796s#959595t#939493r#929292o#909190n#8e8f8eg#8d8d8d #8b8c8ba#8a8a8ag#888988a#868786i#858685n#838483s#828382t#808180 #7f807ft#7d7e7dh#7c7d7ce#7b7c7b #7a7b7ad#797a79a#787978r#777877k#767676 #757575t#747474i#737373d#727272e#717171s#6f706f.#6e6f6e #6d6e6dH#6c6d6ci#6b6c6bs#6a6b6a #696969t#686868e#676767e#666666t#656565h#646464 ")
hecho("\n#ffffffa#fefdfdr#fcfcfce#fbfafa #f9f8f8b#f8f7f7r#f6f5f5o#f5f4f4k#f3f2f2e#f2f0f0n#f1efef #efededa#eeebebn#eceaead#ebe8e8 #e9e6e6c#e8e5e5l#e7e3e3a#e5e1e1w#e4e0e0s#e2dede #e1ddddb#dfdbdbl#ded9d9u#dcd8d8n#dbd6d6t#d9d4d4e#d7d2d2d#d4d0d0,#d2cece #d0ccccb#cecacau#cbc8c8t#c9c6c6 #c7c4c4t#c5c2c2h#c2c0c0e#c0bebe #bebbbbW#bcb9b9a#b9b7b7r#b7b5b5d#b5b3b3e#b3b1b1n#b0afaf #aeadadc#acababo#aaa9a9n#a7a7a7t#a5a5a5i#a3a3a3n#a1a1a1u#a0a0a0e#9e9e9es#9d9d9d #9b9b9bh#999a99i#989898s#969796 #959595v#939493i#929292g#909190i#8e8f8el#8d8d8d.#8b8c8b #8a8a8aT#888988h#868786o#858685s#838483e#828382 #808180w#7f807fh#7d7e7do#7c7d7c #7b7c7bs#7a7b7aw#797a79e#787978a#777877r#767676 #757575o#747474a#737373t#727272h#717171s#6f706f #6e6f6eu#6d6e6dn#6c6d6ct#6b6c6bo#6a6b6a #696969h#686868i#676767m#666666 ")
hecho("\n#ffffffa#fefdfdr#fcfcfce#fbfafa #f9f8f8g#f8f7f7u#f6f5f5a#f5f4f4r#f3f2f2d#f2f0f0i#f1efefa#efededn#eeebebs#eceaea #ebe8e8o#e9e6e6f#e8e5e5 #e7e3e3t#e5e1e1h#e4e0e0e#e2dede #e1ddddv#dfdbdbe#ded9d9r#dcd8d8y#dbd6d6 #d9d4d4w#d7d2d2o#d4d0d0r#d2cecel#d0ccccd#cecaca,#cbc8c8 #c9c6c6a#c7c4c4c#c5c2c2t#c2c0c0i#c0beben#bebbbbg#bcb9b9 #b9b7b7a#b7b5b5s#b5b3b3 #b3b1b1b#b0afafo#aeadadt#acababh#aaa9a9 #a7a7a7e#a5a5a5y#a3a3a3e#a1a1a1s#a0a0a0 #9e9e9ea#9d9d9dn#9b9b9bd#999a99 #989898e#969796a#959595r#939493s#929292 #909190w#8e8f8eh#8d8d8de#8b8c8br#8a8a8ae#888988 #868786f#858685e#838483w#828382 #808180o#7f807ft#7d7e7dh#7c7d7ce#7b7c7br#7a7b7as#797a79 #787978w#777877i#767676l#757575l#747474 #737373t#727272r#717171e#6f706fa#6e6f6ed#6d6e6d.#6c6d6c\"")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5p#f5f4f4l#f3f2f2a#f2f0f0c#f1efefe#efededs#eeebeb #eceaeaa#ebe8e8 #e9e6e6h#e8e5e5a#e7e3e3n#e5e1e1d#e4e0e0 #e2dedea#e1ddddg#dfdbdba#ded9d9i#dcd8d8n#dbd6d6s#d9d4d4t#d7d2d2 #d4d0d0t#d2ceceh#d0cccce#cecaca #cbc8c8t#c9c6c6o#c7c4c4t#c5c2c2e#c2c0c0m#c0bebe,#bebbbb #bcb9b9h#b9b7b7i#b7b5b5s#b5b3b3 #b3b1b1w#b0afafe#aeadada#acababt#aaa9a9h#a7a7a7e#a5a5a5r#a3a3a3e#a1a1a1d#a0a0a0 #9e9e9ef#9d9d9de#9b9b9ba#999a99t#989898u#969796r#959595e#939493s#929292 #909190c#8e8f8er#8d8d8di#8b8c8bn#8a8a8ak#888988l#868786i#858685n#838483g#828382 #808180i#7f807fn#7d7e7dt#7c7d7co#7b7c7b #7a7b7aa#797a79 #787978s#777877m#767676i#757575l#747474e#737373.#727272 #717171\"#6f706fB#6e6f6eu#6d6e6dt#6c6d6c #6b6c6bw#6a6b6ae#696969 #686868s#676767t#666666a#656565n#646464d#636363 ")
hecho("\n#ffffffs#fefdfdt#fcfcfcr#fbfafao#f9f8f8n#f8f7f7g#f6f5f5,#f5f4f4\"#f3f2f2 #f2f0f0t#f1efefh#efedede#eeebeb #eceaeas#ebe8e8h#e9e6e6a#e8e5e5m#e7e3e3a#e5e1e1n#e4e0e0 #e2dedei#e1ddddn#dfdbdbt#ded9d9o#dcd8d8n#dbd6d6e#d9d4d4s#d7d2d2 #d4d0d0i#d2cecen#d0cccc #cecacaa#cbc8c8 #c9c6c6l#c7c4c4o#c5c2c2w#c2c0c0 #c0bebev#bebbbbo#bcb9b9i#b9b7b7c#b7b5b5e#b5b3b3.#b3b1b1 #b0afaf\"#aeadadW#acababe#aaa9a9 #a7a7a7f#a5a5a5i#a3a3a3n#a1a1a1d#a0a0a0 #9e9e9ep#9d9d9de#9b9b9ba#999a99c#989898e#969796 #959595i#939493n#929292 #909190t#8e8f8eh#8d8d8de#8b8c8b #8a8a8aw#888988h#868786o#858685l#838483e#828382 #808180o#7f807ff#7d7e7d #7c7d7cD#7b7c7be#7a7b7an#797a79d#787978a#777877r#767676a#757575 #747474a#737373n#727272d#717171 #6f706ft#6e6f6eh#6d6e6de#6c6d6c #6b6c6bb#6a6b6al#696969e#686868s#676767s#666666e#656565d#646464 ")
hecho("\n#ffffffl#fefdfda#fcfcfcn#fbfafad#f9f8f8s#f8f7f7 #f6f5f5o#f5f4f4f#f3f2f2 #f2f0f0y#f1efefo#efededu#eeebebr#eceaea #ebe8e8r#e9e6e6e#e8e5e5a#e7e3e3l#e5e1e1m#e4e0e0.#e2dede\"")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5s#f5f4f4a#f3f2f2y#f2f0f0s#f1efef,#efeded #eeebeb\"#eceaeaT#ebe8e8h#e9e6e6e#e8e5e5 #e7e3e3W#e5e1e1a#e4e0e0r#e2deded#e1dddde#dfdbdbn#ded9d9'#dcd8d8s#dbd6d6 #d9d4d4s#d7d2d2e#d4d0d0r#d2cecev#d0cccca#cecacan#cbc8c8t#c9c6c6s#c7c4c4 #c5c2c2a#c2c0c0r#c0bebee#bebbbb #bcb9b9t#b9b7b7i#b7b5b5r#b5b3b3e#b3b1b1l#b0afafe#aeadads#acababs#aaa9a9 #a7a7a7i#a5a5a5n#a3a3a3 #a1a1a1t#a0a0a0h#9e9e9ee#9d9d9di#9b9b9br#999a99 #989898v#969796i#959595g#939493i#929292l#909190,#8e8f8e #8d8d8ds#8b8c8bt#8a8a8ar#888988i#868786k#858685i#838483n#828382g#808180 #7f807fa#7d7e7dg#7c7d7ca#7b7c7bi#7a7b7an#797a79s#787978t#777877 #767676g#757575n#747474a#737373r#727272l#717171e#6f706fd#6e6f6e #6d6e6ds#6c6d6cp#6b6c6bi#6a6b6ar#696969i#686868t#676767s#666666 ")
hecho("\n#ffffffw#fefdfdh#fcfcfco#fbfafa #f9f8f8w#f8f7f7o#f6f5f5u#f5f4f4l#f3f2f2d#f2f0f0 #f1efefu#efededn#eeebebd#eceaeao#ebe8e8 #e9e6e6t#e8e5e5h#e7e3e3e#e5e1e1 #e4e0e0w#e2dedeo#e1ddddr#dfdbdbk#ded9d9 #dcd8d8o#dbd6d6f#d9d4d4 #d7d2d2t#d4d0d0h#d2cecee#d0cccc #cecacaa#cbc8c8n#c9c6c6c#c7c4c4i#c5c2c2e#c2c0c0n#c0bebet#bebbbbs#bcb9b9 #b9b7b7a#b7b5b5n#b5b3b3d#b3b1b1 #b0afaft#aeadadh#acababo#aaa9a9s#a7a7a7e#a5a5a5 #a3a3a3w#a1a1a1h#a0a0a0o#9e9e9e #9d9d9dw#9b9b9bo#999a99u#989898l#969796d#959595 #939493s#929292e#909190e#8e8f8e #8d8d8dt#8b8c8bh#8a8a8ae#888988 #868786g#858685r#838483e#828382a#808180t#7f807f #7d7e7dg#7c7d7cu#7b7c7ba#7a7b7ar#797a79d#787978i#777877a#767676n#757575s#747474 #737373f#727272a#717171l#6f706fl#6e6f6e.#6d6e6d #6c6d6cA#6b6c6bn#6a6b6a #696969a#686868g#676767e#666666 #656565i#646464s#636363 ")
hecho("\n#ffffffc#fefdfdo#fcfcfcm#fbfafai#f9f8f8n#f8f7f7g#f6f5f5 #f5f4f4t#f3f2f2o#f2f0f0 #f1efefa#efededn#eeebeb #eceaeae#ebe8e8n#e9e6e6d#e8e5e5 #e7e3e3a#e5e1e1n#e4e0e0d#e2dede #e1ddddt#dfdbdbh#ded9d9e#dcd8d8 #dbd6d6W#d9d4d4a#d7d2d2r#d4d0d0d#d2cecee#d0ccccn#cecaca #cbc8c8m#c9c6c6u#c7c4c4s#c5c2c2t#c2c0c0 #c0bebes#bebbbbt#bcb9b9a#b9b7b7n#b7b5b5d#b5b3b3 #b3b1b1a#b0afafg#aeadada#acababi#aaa9a9n#a7a7a7s#a5a5a5t#a3a3a3 #a1a1a1t#a0a0a0h#9e9e9ee#9d9d9d #9b9b9bm#999a99i#989898d#969796n#959595i#939493g#929292h#909190t#8e8f8e #8d8d8dt#8b8c8bi#8a8a8ad#888988e#868786s#858685.#838483\"")
cechoLink("\n\n&lt;white&gt; BACK TO RHULVOK",function() expandAlias("rhulvok") end, "back", true)
cechoLink("\n&lt;white&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhulvok1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rhulvok2$</name>
					<script>hecho("\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8s#f8f7f7a#f6f5f5y#f5f4f4,#f3f2f2 #f2f0f0\"#f1efefI#efeded #eeebebw#eceaeai#ebe8e8s#e9e6e6h#e8e5e5 #e7e3e3t#e5e1e1o#e4e0e0 #e2dedeo#e1ddddf#dfdbdbf#ded9d9e#dcd8d8r#dbd6d6 #d9d4d4m#d7d2d2y#d4d0d0 #d2ceceb#d0ccccl#cecacao#cbc8c8o#c9c6c6d#c7c4c4 #c5c2c2u#c2c0c0p#c0bebe #bebbbbi#bcb9b9n#b9b7b7 #b7b5b5r#b5b3b3i#b3b1b1t#b0afafu#aeadada#acababl#aaa9a9 #a7a7a7a#a5a5a5n#a3a3a3d#a1a1a1 #a0a0a0s#9e9e9ew#9d9d9de#9b9b9ba#999a99r#989898 #969796a#959595n#939493 #929292o#909190a#8e8f8et#8d8d8dh#8b8c8b #8a8a8ab#888988e#868786f#858685o#838483r#828382e#808180 #7f807fh#7d7e7di#7c7d7cs#7b7c7b #7a7b7aC#797a79l#787978a#777877w#767676.#757575\"")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5e#f5f4f4x#f3f2f2t#f2f0f0e#f1efefn#efededd#eeebebs#eceaea #ebe8e8a#e9e6e6 #e8e5e5h#e7e3e3a#e5e1e1n#e4e0e0d#e2dede #e1ddddo#dfdbdbu#ded9d9t#dcd8d8w#dbd6d6a#d9d4d4r#d7d2d2d#d4d0d0 #d2cecet#d0cccco#cecaca #cbc8c8y#c9c6c6o#c7c4c4u#c5c2c2,#c2c0c0 #c0bebeh#bebbbbi#bcb9b9s#b9b7b7 #b7b5b5v#b5b3b3o#b3b1b1i#b0afafc#aeadade#acabab #aaa9a9l#a7a7a7o#a5a5a5w#a3a3a3 #a1a1a1a#a0a0a0n#9e9e9ed#9d9d9d #9b9b9bh#999a99o#989898l#969796l#959595o#939493w#929292.")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5s#f5f4f4a#f3f2f2y#f2f0f0s#f1efef,#efeded #eeebeb\"#eceaeaA#ebe8e8n#e9e6e6 #e8e5e5o#e7e3e3a#e5e1e1t#e4e0e0h#e2dede #e1ddddi#dfdbdbs#ded9d9 #dcd8d8n#dbd6d6o#d9d4d4t#d7d2d2 #d4d0d0l#d2cecei#d0ccccg#cecacah#cbc8c8t#c9c6c6l#c7c4c4y#c5c2c2 #c2c0c0t#c0bebea#bebbbbk#bcb9b9e#b9b7b7n#b7b5b5 #b5b3b3f#b3b1b1o#b0afafr#aeadad #acababi#aaa9a9t#a7a7a7 #a5a5a5i#a3a3a3s#a1a1a1 #a0a0a0f#9e9e9eo#9d9d9dr#9b9b9bg#999a99e#989898d#969796 #959595i#939493n#929292 #909190b#8e8f8el#8d8d8do#8b8c8bo#8a8a8ad#888988 #868786a#858685n#838483d#828382 #808180b#7f807fo#7d7e7dn#7c7d7ce#7b7c7b,#7a7b7a #797a79V#787978a#777877l#767676o#757575r#747474i#737373e#727272.#717171 #6f706fI#6e6f6ef#6d6e6d #6c6d6cy#6b6c6bo#6a6b6au#696969 #686868s#676767w#666666e#656565a#646464r#636363 ")
hecho("\n#ffffffu#fefdfdn#fcfcfct#fbfafao#f9f8f8 #f8f7f7t#f6f5f5h#f5f4f4e#f3f2f2 #f2f0f0W#f1efefa#efededr#eeebebd#eceaeae#ebe8e8n#e9e6e6,#e8e5e5 #e7e3e3y#e5e1e1o#e4e0e0u#e2dede #e1dddds#dfdbdbh#ded9d9a#dcd8d8l#dbd6d6l#d9d4d4 #d7d2d2b#d4d0d0e#d2cece #d0ccccb#cecacao#cbc8c8u#c9c6c6n#c7c4c4d#c5c2c2 #c2c0c0t#c0bebeo#bebbbb #bcb9b9h#b9b7b7i#b7b5b5s#b5b3b3 #b3b1b1v#b0afafe#aeadadr#acababy#aaa9a9 #a7a7a7w#a5a5a5i#a3a3a3l#a1a1a1l#a0a0a0.#9e9e9e #9d9d9dD#9b9b9bo#999a99 #989898y#969796o#959595u#939493 #929292w#909190i#8e8f8es#8d8d8dh#8b8c8b #8a8a8at#888988o#868786 #858685u#838483n#828382d#808180e#7f807fr#7d7e7dt#7c7d7ca#7b7c7bk#7a7b7ae#797a79 #787978s#777877u#767676c#757575h#747474 #737373a#727272 #717171r#6f706fi#6e6f6et#6d6e6de#6c6d6c?#6b6c6b\"")

hecho("\n\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8s#f8f7f7a#f6f5f5y#f5f4f4,#f3f2f2 #f2f0f0\"#f1efefY#efedede#eeebebs#eceaea,#ebe8e8 #e9e6e6I#e8e5e5 #e7e3e3d#e5e1e1o#e4e0e0.#e2dede\"")

hecho("\n\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5s#f5f4f4a#f3f2f2y#f2f0f0s#f1efef,#efeded #eeebeb\"#eceaeaT#ebe8e8h#e9e6e6e#e8e5e5n#e7e3e3 #e5e1e1p#e4e0e0r#e2dedee#e1ddddp#dfdbdba#ded9d9r#dcd8d8e#dbd6d6 #d9d4d4y#d7d2d2o#d4d0d0u#d2cecer#d0cccc #cecacas#cbc8c8p#c9c6c6i#c7c4c4r#c5c2c2i#c2c0c0t#c0bebe,#bebbbb #bcb9b9V#b9b7b7a#b7b5b5l#b5b3b3o#b3b1b1r#b0afafi#aeadade#acabab.#aaa9a9 #a7a7a7T#a5a5a5h#a3a3a3e#a1a1a1 #a0a0a0h#9e9e9ea#9d9d9dr#9b9b9br#999a99o#989898w#969796i#959595n#939493g#929292 #909190p#8e8f8ea#8d8d8dt#8b8c8bh#8a8a8a #888988o#868786f#858685 #838483t#828382h#808180e#7f807f #7d7e7dW#7c7d7ca#7b7c7br#7a7b7ad#797a79e#787978n#777877 #767676a#757575w#747474a#737373i#727272t#717171s#6f706f #6e6f6ey#6d6e6do#6c6d6cu#6b6c6b.#6a6b6a\"")
hecho("\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8d#f8f7f7r#f6f5f5a#f5f4f4w#f3f2f2 #f2f0f0t#f1efefh#efedede#eeebeb #eceaeas#ebe8e8h#e9e6e6a#e8e5e5r#e7e3e3p#e5e1e1 #e4e0e0e#e2deded#e1ddddg#dfdbdbe#ded9d9 #dcd8d8o#dbd6d6f#d9d4d4 #d7d2d2a#d4d0d0n#d2cece #d0cccco#cecacab#cbc8c8s#c9c6c6i#c7c4c4d#c5c2c2i#c2c0c0a#c0beben#bebbbb #bcb9b9k#b9b7b7n#b7b5b5i#b5b3b3f#b3b1b1e#b0afaf #aeadade#acababt#aaa9a9c#a7a7a7h#a5a5a5e#a3a3a3d#a1a1a1 #a0a0a0i#9e9e9en#9d9d9d #9b9b9br#999a99u#989898n#969796e#959595s#939493 #929292a#909190c#8e8f8er#8d8d8do#8b8c8bs#8a8a8as#888988 #868786y#858685o#838483u#828382r#808180 #7f807fp#7d7e7da#7c7d7cl#7b7c7bm#7a7b7a,#797a79 #787978b#777877l#767676o#757575o#747474d#737373 #727272b#717171e#6f706fg#6e6f6ei#6d6e6dn#6c6d6cn#6b6c6bi#6a6b6an#696969g#686868 #676767t#666666o#656565 ")
hecho("\n#fffffft#fefdfdr#fcfcfci#fbfafac#f9f8f8k#f8f7f7l#f6f5f5e#f5f4f4 #f3f2f2f#f2f0f0r#f1efefo#efededm#eeebeb #eceaeay#ebe8e8o#e9e6e6u#e8e5e5r#e7e3e3 #e5e1e1n#e4e0e0e#e2dedew#e1dddd #dfdbdbw#ded9d9o#dcd8d8u#dbd6d6n#d9d4d4d#d7d2d2.")

hecho("\n\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8h#f8f7f7o#f6f5f5l#f5f4f4d#f3f2f2 #f2f0f0y#f1efefo#efededu#eeebebr#eceaea #ebe8e8b#e9e6e6l#e8e5e5e#e7e3e3e#e5e1e1d#e4e0e0i#e2deden#e1ddddg#dfdbdb #ded9d9p#dcd8d8a#dbd6d6l#d9d4d4m#d7d2d2 #d4d0d0a#d2ceceg#d0cccca#cecacai#cbc8c8n#c9c6c6s#c7c4c4t#c5c2c2 #c2c0c0a#c0bebe #bebbbbh#bcb9b9u#b9b7b7l#b7b5b5k#b5b3b3i#b3b1b1n#b0afafg#aeadad,#acabab #aaa9a9c#a7a7a7r#a5a5a5a#a3a3a3g#a1a1a1g#a0a0a0y#9e9e9e #9d9d9db#9b9b9be#999a99a#989898r#969796 #959595t#939493o#929292t#909190e#8e8f8em#8d8d8d #8b8c8bo#8a8a8af#888988 #868786r#858685o#838483u#828382g#808180h#7f807f #7d7e7ds#7c7d7ct#7b7c7bo#7a7b7an#797a79e#787978 #777877a#767676n#757575d#747474 #737373c#727272l#717171o#6f706fs#6e6f6ee#6d6e6d #6c6d6cy#6b6c6bo#6a6b6au#696969r#686868 #676767e#666666y#656565e#646464s#636363 ")
hecho("\n#ffffffa#fefdfds#fcfcfc #fbfafay#f9f8f8o#f8f7f7u#f6f5f5 #f5f4f4f#f3f2f2o#f2f0f0c#f1efefu#efededs#eeebeb #eceaeau#ebe8e8p#e9e6e6o#e8e5e5n#e7e3e3 #e5e1e1t#e4e0e0h#e2dedee#e1dddd #dfdbdbg#ded9d9u#dcd8d8a#dbd6d6r#d9d4d4d#d7d2d2i#d4d0d0a#d2cecen#d0cccc'#cecacas#cbc8c8 #c9c6c6s#c7c4c4p#c5c2c2i#c2c0c0r#c0bebei#bebbbbt#bcb9b9.")

hecho("\n\n#ffffff\"#fefdfdY#fcfcfco#fbfafau#f9f8f8r#f8f7f7 #f6f5f5o#f5f4f4f#f3f2f2f#f2f0f0e#f1efefr#efededi#eeebebn#eceaeag#ebe8e8 #e9e6e6o#e8e5e5f#e7e3e3 #e5e1e1b#e4e0e0l#e2dedeo#e1ddddo#dfdbdbd#ded9d9 #dcd8d8i#dbd6d6s#d9d4d4 #d7d2d2a#d4d0d0c#d2cecec#d0cccce#cecacap#cbc8c8t#c9c6c6e#c7c4c4d#c5c2c2 #c2c0c0a#c0beben#bebbbbd#bcb9b9 #b9b7b7n#b7b5b5o#b5b3b3w#b3b1b1 #b0afafy#aeadado#acababu#aaa9a9 #a7a7a7a#a5a5a5r#a3a3a3e#a1a1a1 #a0a0a0b#9e9e9eo#9d9d9du#9b9b9bn#999a99d#989898 #969796t#959595o#939493 #929292t#909190h#8e8f8ee#8d8d8d #8b8c8bW#8a8a8aa#888988r#868786d#858685e#838483n#828382'#808180s#7f807f #7d7e7dw#7c7d7ci#7b7c7bl#7a7b7al#797a79,#787978\"#777877 #767676H#757575a#747474v#737373a#727272r#717171 #6f706fs#6e6f6ep#6d6e6de#6c6d6ca#6b6c6bk#6a6b6as#696969,#686868 ")
hecho("\n#ffffffs#fefdfdt#fcfcfce#fbfafap#f9f8f8p#f8f7f7i#f6f5f5n#f5f4f4g#f3f2f2 #f2f0f0f#f1efefo#efededr#eeebebw#eceaeaa#ebe8e8r#e9e6e6d#e8e5e5 #e7e3e3f#e5e1e1r#e4e0e0o#e2dedem#e1dddd #dfdbdbt#ded9d9h#dcd8d8e#dbd6d6 #d9d4d4i#d7d2d2d#d4d0d0o#d2cecel#d0cccc #cecacat#cbc8c8o#c9c6c6 #c7c4c4R#c5c2c2h#c2c0c0u#c0bebel#bebbbbv#bcb9b9o#b9b7b7k#b7b5b5 #b5b3b3a#b3b1b1n#b0afafd#aeadad #acababp#aaa9a9l#a7a7a7a#a5a5a5c#a3a3a3e#a1a1a1s#a0a0a0 #9e9e9ea#9d9d9d #9b9b9bh#999a99e#989898a#969796v#959595y#939493 #929292h#909190a#8e8f8en#8d8d8dd#8b8c8b #8a8a8au#888988p#868786o#858685n#838483 #828382y#808180o#7f807fu#7d7e7dr#7c7d7c #7b7c7bh#7a7b7ae#797a79a#787978d#777877,#767676 #757575p#747474u#737373s#727272h#717171i#6f706fn#6e6f6eg#6d6e6d #6c6d6cy#6b6c6bo#6a6b6au#696969 #686868t#676767o#666666 ")
hecho("\n#fffffft#fefdfdh#fcfcfce#fbfafa #f9f8f8g#f8f7f7r#f6f5f5o#f5f4f4u#f3f2f2n#f2f0f0d#f1efef #efedede#eeebebf#eceaeaf#ebe8e8o#e9e6e6r#e8e5e5t#e7e3e3l#e5e1e1e#e4e0e0s#e2dedes#e1ddddl#dfdbdby#ded9d9.#dcd8d8 #dbd6d6\"#d9d4d4I#d7d2d2 #d4d0d0a#d2cecem#d0cccc #cecacat#cbc8c8h#c9c6c6e#c7c4c4 #c5c2c2W#c2c0c0a#c0beber#bebbbbd#bcb9b9e#b9b7b7n#b7b5b5'#b5b3b3s#b3b1b1 #b0afafv#aeadado#acababi#aaa9a9c#a7a7a7e#a5a5a5.#a3a3a3 #a1a1a1I#a0a0a0 #9e9e9ea#9d9d9dm#9b9b9b #999a99t#989898h#969796e#959595 #939493W#929292a#909190r#8e8f8ed#8d8d8de#8b8c8bn#8a8a8a'#888988s#868786 #858685w#838483i#828382l#808180l#7f807f.#7d7e7d #7c7d7cW#7b7c7be#7a7b7a #797a79a#787978r#777877e#767676 #757575t#747474h#737373o#727272s#717171e#6f706f #6e6f6ew#6d6e6dh#6c6d6co#6b6c6b #6a6b6aa#696969r#686868e#676767 #666666t#656565h#646464e#636363 ")
hecho("\n#ffffffw#fefdfda#fcfcfct#fbfafac#f9f8f8h#f8f7f7e#f6f5f5r#f5f4f4s#f3f2f2 #f2f0f0i#f1efefn#efeded #eeebebt#eceaeah#ebe8e8e#e9e6e6 #e8e5e5d#e7e3e3e#e5e1e1e#e4e0e0p#e2dede #e1ddddw#dfdbdbo#ded9d9o#dcd8d8d#dbd6d6.#d9d4d4 #d7d2d2I#d4d0d0 #d2cecea#d0ccccm#cecaca #cbc8c8H#c9c6c6a#c7c4c4v#c5c2c2a#c2c0c0r#c0bebe,#bebbbb #bcb9b9C#b9b7b7l#b7b5b5a#b5b3b3w#b3b1b1 #b0afafo#aeadadf#acabab #aaa9a9t#a7a7a7h#a5a5a5e#a3a3a3 #a1a1a1W#a0a0a0a#9e9e9er#9d9d9dd#9b9b9be#999a99n#989898.#969796\"")

hecho("\n\n#ffffffR#fefdfdh#fcfcfcu#fbfafal#f9f8f8v#f8f7f7o#f6f5f5k#f5f4f4 #f3f2f2l#f2f0f0u#f1efefm#efededb#eeebebe#eceaear#ebe8e8s#e9e6e6 #e8e5e5f#e7e3e3o#e5e1e1r#e4e0e0w#e2dedea#e1ddddr#dfdbdbd#ded9d9 #dcd8d8a#dbd6d6s#d9d4d4 #d7d2d2H#d4d0d0a#d2cecev#d0cccca#cecacar#cbc8c8 #c9c6c6s#c7c4c4p#c5c2c2e#c2c0c0a#c0bebek#bebbbbs#bcb9b9,#b9b7b7 #b7b5b5m#b5b3b3a#b3b1b1t#b0afafe#aeadadr#acababi#aaa9a9a#a7a7a7l#a5a5a5i#a3a3a3z#a1a1a1i#a0a0a0n#9e9e9eg#9d9d9d #9b9b9bb#999a99e#989898f#969796o#959595r#939493e#929292 #909190t#8e8f8eh#8d8d8de#8b8c8b #8a8a8ai#888988d#868786o#858685l#838483 #828382i#808180n#7f807f #7d7e7de#7c7d7ce#7b7c7br#7a7b7ai#797a79e#787978 #777877s#767676i#757575l#747474e#737373n#727272c#717171e#6f706f #6e6f6ea#6d6e6ds#6c6d6c #6b6c6bh#6a6b6ae#696969 #686868s#676767e#666666t#656565s#646464 ")
hecho("\n#ffffffe#fefdfdm#fcfcfcp#fbfafat#f9f8f8y#f8f7f7,#f6f5f5 #f5f4f4p#f3f2f2u#f2f0f0p#f1efefi#efededl#eeebebe#eceaeas#ebe8e8s#e9e6e6 #e8e5e5e#e7e3e3y#e5e1e1e#e4e0e0s#e2dede #e1ddddu#dfdbdbp#ded9d9o#dcd8d8n#dbd6d6 #d9d4d4y#d7d2d2o#d4d0d0u#d2cece.#d0cccc #cecacaT#cbc8c8h#c9c6c6e#c7c4c4 #c5c2c2s#c2c0c0h#c0bebea#bebbbbm#bcb9b9a#b9b7b7n#b7b5b5 #b5b3b3t#b3b1b1u#b0afafr#aeadadn#acababs#aaa9a9,#a7a7a7 #a5a5a5r#a3a3a3e#a1a1a1g#a0a0a0a#9e9e9er#9d9d9dd#9b9b9bi#999a99n#989898g#969796 #959595t#939493h#929292e#909190 #8e8f8eg#8d8d8dr#8b8c8be#8a8a8aa#888988t#868786,#858685 #838483s#828382p#808180i#7f807fr#7d7e7di#7c7d7ct#7b7c7bu#7a7b7aa#797a79l#787978 #777877b#767676e#757575a#747474s#737373t#727272 #717171i#6f706fn#6e6f6e #6d6e6ds#6c6d6ci#6b6c6bl#6a6b6ae#696969n#686868c#676767e#666666 ")
hecho("\n#ffffffb#fefdfde#fcfcfcf#fbfafao#f9f8f8r#f8f7f7e#f6f5f5 #f5f4f4d#f3f2f2i#f2f0f0r#f1efefe#efededc#eeebebt#eceaeai#ebe8e8n#e9e6e6g#e8e5e5 #e7e3e3h#e5e1e1i#e4e0e0s#e2dede #e1dddda#dfdbdbt#ded9d9t#dcd8d8e#dbd6d6n#d9d4d4t#d7d2d2i#d4d0d0o#d2cecen#d0cccc #cecacao#cbc8c8n#c9c6c6c#c7c4c4e#c5c2c2 #c2c0c0m#c0bebeo#bebbbbr#bcb9b9e#b9b7b7 #b7b5b5t#b5b3b3o#b3b1b1 #b0afafy#aeadado#acababu#aaa9a9.#a7a7a7 #a5a5a5\"#a3a3a3I#a1a1a1n#a0a0a0 #9e9e9et#9d9d9dh#9b9b9be#999a99s#989898e#969796 #959595b#939493i#929292n#909190d#8e8f8ei#8d8d8dn#8b8c8bg#8a8a8a #888988o#868786a#858685t#838483h#828382s#808180,#7f807f #7d7e7dy#7c7d7co#7b7c7bu#7a7b7a #797a79s#787978h#777877a#767676l#757575l#747474 #737373l#727272e#717171a#6f706fr#6e6f6en#6d6e6d #6c6d6co#6b6c6bf#6a6b6a #696969t#686868h#676767e#666666 ")
hecho("\n#ffffffW#fefdfda#fcfcfcr#fbfafad#f9f8f8e#f8f7f7n#f6f5f5'#f5f4f4s#f3f2f2 #f2f0f0p#f1efefa#efededt#eeebebh#eceaea.#ebe8e8 #e9e6e6T#e8e5e5h#e7e3e3e#e5e1e1 #e4e0e0p#e2dedea#e1ddddt#dfdbdbh#ded9d9 #dcd8d8o#dbd6d6f#d9d4d4 #d7d2d2t#d4d0d0r#d2cecea#d0ccccn#cecacaq#cbc8c8u#c9c6c6i#c7c4c4l#c5c2c2i#c2c0c0t#c0bebey#bebbbb #bcb9b9a#b9b7b7m#b7b5b5i#b5b3b3d#b3b1b1s#b0afaft#aeadad #acababD#aaa9a9e#a7a7a7n#a5a5a5d#a3a3a3a#a1a1a1r#a0a0a0a#9e9e9e'#9d9d9ds#9b9b9b #999a99a#989898n#969796c#959595i#939493e#929292n#909190t#8e8f8e #8d8d8de#8b8c8bx#8a8a8ap#888988a#868786n#858685s#838483e#828382.#808180\"")

hecho("\n\n#ffffff\"#fefdfdI#fcfcfc #fbfafag#f9f8f8u#f8f7f7a#f6f5f5r#f5f4f4d#f3f2f2 #f2f0f0t#f1efefh#efededa#eeebebt#eceaea #ebe8e8w#e9e6e6h#e8e5e5i#e7e3e3c#e5e1e1h#e4e0e0 #e2dedeh#e1dddda#dfdbdbs#ded9d9 #dcd8d8n#dbd6d6o#d9d4d4 #d7d2d2g#d4d0d0u#d2cecea#d0ccccr#cecacad#cbc8c8i#c9c6c6a#c7c4c4n#c5c2c2,#c2c0c0 #c0bebek#bebbbbe#bcb9b9e#b9b7b7p#b7b5b5e#b5b3b3r#b3b1b1,#b0afaf #aeadadn#acababo#aaa9a9r#a7a7a7 #a5a5a5m#a3a3a3a#a1a1a1s#a0a0a0t#9e9e9ee#9d9d9dr#9b9b9b.#999a99 #989898I#969796 #959595a#939493m#929292 #909190t#8e8f8eh#8d8d8de#8b8c8b #8a8a8ap#888988e#868786a#858685c#838483e#828382 #808180w#7f807fi#7d7e7dt#7c7d7ch#7b7c7bi#7a7b7an#797a79 #787978t#777877h#767676e#757575 #747474w#737373o#727272o#717171d#6f706f,#6e6f6e #6d6e6db#6c6d6cu#6b6c6bt#6a6b6a #696969I#686868 #676767a#666666m#656565 ")
hecho("\n#ffffffn#fefdfdo#fcfcfct#fbfafa #f9f8f8w#f8f7f7i#f6f5f5t#f5f4f4h#f3f2f2o#f2f0f0u#f1efeft#efeded #eeebebm#eceaeay#ebe8e8 #e9e6e6s#e8e5e5t#e7e3e3r#e5e1e1e#e4e0e0n#e2dedeg#e1ddddt#dfdbdbh#ded9d9.#dcd8d8\"#dbd6d6 #d9d4d4R#d7d2d2h#d4d0d0u#d2cecel#d0ccccv#cecacao#cbc8c8k#c9c6c6'#c7c4c4s#c5c2c2 #c2c0c0l#c0bebeo#bebbbbw#bcb9b9,#b9b7b7 #b7b5b5r#b5b3b3u#b3b1b1m#b0afafb#aeadadl#acababi#aaa9a9n#a7a7a7g#a5a5a5 #a3a3a3v#a1a1a1o#a0a0a0i#9e9e9ec#9d9d9de#9b9b9b #999a99r#989898e#969796v#959595e#939493r#929292b#909190e#8e8f8er#8d8d8da#8b8c8bt#8a8a8ae#888988s#868786 #858685t#838483h#828382r#808180o#7f807fu#7d7e7dg#7c7d7ch#7b7c7bo#7a7b7au#797a79t#787978 #777877y#767676o#757575u#747474r#737373 #727272m#717171i#6f706fn#6e6f6ed#6d6e6d,#6c6d6c #6b6c6b\"#6a6b6aI#696969 #686868w#676767a#666666l#656565k#646464 ")
hecho("\n#ffffffa#fefdfd #fcfcfcp#fbfafaa#f9f8f8t#f8f7f7h#f6f5f5 #f5f4f4o#f3f2f2f#f2f0f0 #f1efeft#efededr#eeebeba#eceaean#ebe8e8q#e9e6e6u#e8e5e5i#e7e3e3l#e5e1e1i#e4e0e0t#e2dedey#e1dddd #dfdbdba#ded9d9m#dcd8d8i#dbd6d6d#d9d4d4s#d7d2d2t#d4d0d0 #d2cecet#d0cccch#cecacae#cbc8c8 #c9c6c6 #c7c4c4t#c5c2c2u#c2c0c0m#c0bebeu#bebbbbl#bcb9b9t#b9b7b7u#b7b5b5o#b5b3b3u#b3b1b1s#b0afaf #aeadadc#acababh#aaa9a9a#a7a7a7o#a5a5a5s#a3a3a3 #a1a1a1o#a0a0a0f#9e9e9e #9d9d9dt#9b9b9bh#999a99e#989898 #969796R#959595h#939493y#929292t#909190h#8e8f8em#8d8d8d.#8b8c8b #8a8a8aL#888988i#868786s#858685t#838483e#828382n#808180 #7f807ft#7d7e7do#7c7d7c #7b7c7bt#7a7b7ah#797a79e#787978 #777877s#767676o#757575n#747474g#737373 #727272a#717171n#6f706fd#6e6f6e #6d6e6dy#6c6d6co#6b6c6bu#6a6b6a #696969w#686868i#676767l#666666l#656565 ")
hecho("\n#ffffffh#fefdfde#fcfcfca#fbfafar#f9f8f8 #f8f7f7i#f6f5f5t#f5f4f4 #f3f2f2i#f2f0f0n#f1efef #efededy#eeebebo#eceaeau#ebe8e8r#e9e6e6 #e8e5e5v#e7e3e3e#e5e1e1r#e4e0e0y#e2dede #e1ddddb#dfdbdbo#ded9d9n#dcd8d8e#dbd6d6s#d9d4d4.#d7d2d2\"")

hecho("\n\n#ffffffR#fefdfdh#fcfcfcu#fbfafal#f9f8f8v#f8f7f7o#f6f5f5k#f5f4f4 #f3f2f2r#f2f0f0e#f1efefa#efededr#eeebebs#eceaea #ebe8e8b#e9e6e6a#e8e5e5c#e7e3e3k#e5e1e1 #e4e0e0o#e2deden#e1ddddt#dfdbdbo#ded9d9 #dcd8d8h#dbd6d6i#d9d4d4s#d7d2d2 #d4d0d0h#d2cecei#d0ccccn#cecacad#cbc8c8 #c9c6c6l#c7c4c4e#c5c2c2g#c2c0c0s#c0bebe,#bebbbb #bcb9b9w#b9b7b7a#b7b5b5t#b5b3b3c#b3b1b1h#b0afafi#aeadadn#acababg#aaa9a9 #a7a7a7y#a5a5a5o#a3a3a3u#a1a1a1 #a0a0a0i#9e9e9en#9d9d9dt#9b9b9be#999a99n#989898t#969796l#959595y#939493 #929292a#909190s#8e8f8e #8d8d8dy#8b8c8bo#8a8a8au#888988 #868786k#858685n#838483e#828382e#808180l#7f807f #7d7e7db#7c7d7ce#7b7c7bf#7a7b7ao#797a79r#787978e#777877 #767676h#757575i#747474s#737373 #727272v#717171o#6f706fi#6e6f6ec#6d6e6de#6c6d6c,#6b6c6b #6a6b6ah#696969i#686868s#676767 ")
hecho("\n#ffffffw#fefdfdi#fcfcfcl#fbfafal#f9f8f8,#f8f7f7 #f6f5f5a#f5f4f4n#f3f2f2d#f2f0f0 #f1efefh#efededi#eeebebs#eceaea #ebe8e8c#e9e6e6l#e8e5e5a#e7e3e3w#e5e1e1.#e4e0e0 #e2dedeA#e1dddd #dfdbdbc#ded9d9h#dcd8d8i#dbd6d6l#d9d4d4l#d7d2d2 #d4d0d0s#d2cecep#d0ccccr#cecacae#cbc8c8a#c9c6c6d#c7c4c4s#c5c2c2 #c2c0c0w#c0bebei#bebbbbt#bcb9b9h#b9b7b7 #b7b5b5t#b5b3b3h#b3b1b1e#b0afaf #aeadadt#acababo#aaa9a9u#a7a7a7c#a5a5a5h#a3a3a3 #a1a1a1o#a0a0a0f#9e9e9e #9d9d9dH#9b9b9ba#999a99v#989898a#969796r#959595 #939493a#929292n#909190d#8e8f8e #8d8d8dt#8b8c8bh#8a8a8ae#888988 #868786r#858685e#838483v#828382e#808180r#7f807fb#7d7e7de#7c7d7cr#7b7c7ba#7a7b7at#797a79i#787978n#777877g#767676 #757575e#747474c#737373h#727272o#717171 #6f706fo#6e6f6ef#6d6e6d #6c6d6ct#6b6c6bh#6a6b6ae#696969 ")
hecho("\n#ffffffR#fefdfdh#fcfcfcy#fbfafat#f9f8f8h#f8f7f7m#f6f5f5 #f5f4f4s#f3f2f2o#f2f0f0u#f1efefn#efededd#eeebebs#eceaea #ebe8e8d#e9e6e6e#e8e5e5e#e7e3e3p#e5e1e1 #e4e0e0w#e2dedei#e1ddddt#dfdbdbh#ded9d9i#dcd8d8n#dbd6d6 #d9d4d4y#d7d2d2o#d4d0d0u#d2cecer#d0cccc #cecacab#cbc8c8r#c9c6c6e#c7c4c4a#c5c2c2s#c2c0c0t#c0bebe.#bebbbb #bcb9b9\"#b9b7b7T#b7b5b5h#b5b3b3i#b3b1b1s#b0afaf #aeadadi#acababs#aaa9a9 #a7a7a7t#a5a5a5h#a3a3a3e#a1a1a1 #a0a0a0R#9e9e9eh#9d9d9dy#9b9b9bt#999a99h#989898m#969796.#959595 #939493T#929292h#909190i#8e8f8es#8d8d8d #8b8c8bi#8a8a8as#888988 #868786t#858685h#838483e#828382 #808180p#7f807fa#7d7e7dt#7c7d7ch#7b7c7b #7a7b7ay#797a79o#787978u#777877 #767676w#757575i#747474l#737373l#727272 #717171w#6f706fa#6e6f6el#6d6e6dk#6c6d6c.#6b6c6b #6a6b6aT#696969h#686868i#676767s#666666 #656565i#646464s#636363 ")
hecho("\n#fffffft#fefdfdh#fcfcfce#fbfafa #f9f8f8p#f8f7f7a#f6f5f5t#f5f4f4h#f3f2f2 #f2f0f0o#f1efeff#efeded #eeebebt#eceaear#ebe8e8a#e9e6e6n#e8e5e5q#e7e3e3u#e5e1e1i#e4e0e0l#e2dedei#e1ddddt#dfdbdby#ded9d9 #dcd8d8w#dbd6d6h#d9d4d4e#d7d2d2r#d4d0d0e#d2cece #d0ccccy#cecacao#cbc8c8u#c9c6c6 #c7c4c4f#c5c2c2e#c2c0c0e#c0bebel#bebbbb #bcb9b9i#b9b7b7t#b7b5b5 #b5b3b3d#b3b1b1e#b0afafe#aeadadp#acabab #aaa9a9w#a7a7a7i#a5a5a5t#a3a3a3h#a1a1a1i#a0a0a0n#9e9e9e #9d9d9da#9b9b9bn#999a99d#989898 #969796a#959595r#939493o#929292u#909190n#8e8f8ed#8d8d8d #8b8c8by#8a8a8ao#888988u#868786.#858685\"#838483 #828382T#808180h#7f807fe#7d7e7d #7c7d7cv#7b7c7bo#7a7b7ai#797a79c#787978e#777877s#767676 #757575o#747474f#737373 #727272R#717171h#6f706fu#6e6f6el#6d6e6dv#6c6d6co#6b6c6bk#6a6b6a #696969a#686868n#676767d#666666 ")
hecho("\n#ffffffH#fefdfda#fcfcfcv#fbfafaa#f9f8f8r#f8f7f7 #f6f5f5i#f5f4f4n#f3f2f2t#f2f0f0e#f1efefr#efededm#eeebebi#eceaean#ebe8e8g#e9e6e6l#e8e5e5e#e7e3e3,#e5e1e1 #e4e0e0l#e2dedee#e1dddda#dfdbdbv#ded9d9i#dcd8d8n#dbd6d6g#d9d4d4 #d7d2d2y#d4d0d0o#d2ceceu#d0cccc #cecacau#cbc8c8n#c9c6c6c#c7c4c4e#c5c2c2r#c2c0c0t#c0bebea#bebbbbi#bcb9b9n#b9b7b7 #b7b5b5a#b5b3b3s#b3b1b1 #b0afaft#aeadado#acabab #aaa9a9w#a7a7a7h#a5a5a5o#a3a3a3 #a1a1a1i#a0a0a0s#9e9e9e #9d9d9dt#9b9b9bh#999a99e#989898 #969796s#959595p#939493e#929292a#909190k#8e8f8ee#8d8d8dr#8b8c8b.")

hecho("\n\n#ffffffA#fefdfd #fcfcfcs#fbfafah#f9f8f8a#f8f7f7r#f6f5f5p#f5f4f4 #f3f2f2p#f2f0f0a#f1efefi#efededn#eeebeb #eceaeab#ebe8e8l#e9e6e6o#e8e5e5s#e7e3e3s#e5e1e1o#e4e0e0m#e2dedes#e1dddd #dfdbdbu#ded9d9p#dcd8d8o#dbd6d6n#d9d4d4 #d7d2d2y#d4d0d0o#d2ceceu#d0ccccr#cecaca #cbc8c8f#c9c6c6o#c7c4c4r#c5c2c2e#c2c0c0h#c0bebee#bebbbba#bcb9b9d#b9b7b7 #b7b5b5a#b5b3b3n#b3b1b1d#b0afaf #aeadady#acababo#aaa9a9u#a7a7a7 #a5a5a5f#a3a3a3e#a1a1a1e#a0a0a0l#9e9e9e #9d9d9dt#9b9b9bh#999a99e#989898 #969796w#959595a#939493r#929292m#909190 #8e8f8et#8d8d8dr#8b8c8bi#8a8a8ac#888988k#868786l#858685e#838483 #828382o#808180f#7f807f #7d7e7db#7c7d7cl#7b7c7bo#7a7b7ao#797a79d#787978 #777877r#767676u#757575n#747474n#737373i#727272n#717171g#6f706f #6e6f6ed#6d6e6do#6c6d6cw#6b6c6bn#6a6b6a #696969y#686868o#676767u#666666r#656565 ")
hecho("\n#ffffffc#fefdfdh#fcfcfci#fbfafal#f9f8f8l#f8f7f7 #f6f5f5s#f5f4f4k#f3f2f2i#f2f0f0n#f1efef.#efeded #eeebebR#eceaeah#ebe8e8u#e9e6e6l#e8e5e5v#e7e3e3o#e5e1e1k#e4e0e0 #e2dedel#e1ddddo#dfdbdbo#ded9d9m#dcd8d8s#dbd6d6 #d9d4d4b#d7d2d2e#d4d0d0f#d2ceceo#d0ccccr#cecacae#cbc8c8 #c9c6c6y#c7c4c4o#c5c2c2u#c2c0c0 #c0bebea#bebbbbs#bcb9b9 #b9b7b7y#b7b5b5o#b5b3b3u#b3b1b1 #b0afafo#aeadadp#acababe#aaa9a9n#a7a7a7 #a5a5a5y#a3a3a3o#a1a1a1u#a0a0a0r#9e9e9e #9d9d9de#9b9b9by#999a99e#989898s#969796,#959595 #939493w#929292i#909190t#8e8f8eh#8d8d8dd#8b8c8br#8a8a8aa#888988w#868786i#858685n#838483g#828382 #808180a#7f807f #7d7e7ds#7c7d7cp#7b7c7be#7a7b7ac#797a79t#787978r#777877a#767676l#757575 #747474c#737373l#727272a#717171w#6f706f #6e6f6ef#6d6e6dr#6c6d6co#6b6c6bm#6a6b6a #696969y#686868o#676767u#666666r#656565 ")
hecho("\n#fffffff#fefdfda#fcfcfcc#fbfafae#f9f8f8.#f8f7f7 #f6f5f5\"#f5f4f4B#f3f2f2e#f2f0f0 #f1efefm#efededa#eeebebr#eceaeak#ebe8e8e#e9e6e6d#e8e5e5 #e7e3e3a#e5e1e1n#e4e0e0d#e2dede #e1ddddb#dfdbdbe#ded9d9 #dcd8d8k#dbd6d6n#d9d4d4o#d7d2d2w#d4d0d0n#d2cece #d0cccca#cecacas#cbc8c8 #c9c6c6m#c7c4c4y#c5c2c2 #c2c0c0s#c0bebee#bebbbbr#bcb9b9v#b9b7b7a#b7b5b5n#b5b3b3t#b3b1b1,#b0afaf #aeadada#acababs#aaa9a9 #a7a7a7o#a5a5a5n#a3a3a3e#a1a1a1 #a0a0a0o#9e9e9ef#9d9d9d #9b9b9bt#999a99h#989898e#969796 #959595P#939493r#929292a#909190a#8e8f8ed#8d8d8di#8b8c8b #8a8a8aa#888988n#868786-#858685K#838483i#828382a#808180r#7f807f.#7d7e7d\"")

hecho("\n\n#ffffffR#fefdfdh#fcfcfcu#fbfafal#f9f8f8v#f8f7f7o#f6f5f5k#f5f4f4 #f3f2f2r#f2f0f0e#f1efefa#efededr#eeebebs#eceaea #ebe8e8b#e9e6e6a#e8e5e5c#e7e3e3k#e5e1e1,#e4e0e0 #e2dedeg#e1ddddi#dfdbdbv#ded9d9i#dcd8d8n#dbd6d6g#d9d4d4 #d7d2d2a#d4d0d0 #d2ceceb#d0cccce#cecacal#cbc8c8l#c9c6c6o#c7c4c4w#c5c2c2i#c2c0c0n#c0bebeg#bebbbb #bcb9b9r#b9b7b7o#b7b5b5a#b5b3b3r#b3b1b1 #b0afaft#aeadadh#acababa#aaa9a9t#a7a7a7 #a5a5a5s#a3a3a3h#a1a1a1u#a0a0a0d#9e9e9ed#9d9d9de#9b9b9br#999a99s#989898 #969796t#959595h#939493e#929292 #909190v#8e8f8ee#8d8d8dr#8b8c8by#8a8a8a #888988a#868786i#858685r#838483 #828382a#808180r#7f807fo#7d7e7du#7c7d7cn#7b7c7bd#7a7b7a #797a79y#787978o#777877u#767676 #757575w#747474i#737373t#727272h#717171 #6f706fh#6e6f6ei#6d6e6ds#6c6d6c ")
hecho("\n#fffffff#fefdfde#fcfcfca#fbfafar#f9f8f8s#f8f7f7o#f6f5f5m#f5f4f4e#f3f2f2 #f2f0f0m#f1efefi#efededg#eeebebh#eceaeat#ebe8e8 #e9e6e6a#e8e5e5n#e7e3e3d#e5e1e1 #e4e0e0y#e2dedeo#e1ddddu#dfdbdb #ded9d9m#dcd8d8o#dbd6d6v#d9d4d4e#d7d2d2 #d4d0d0y#d2ceceo#d0ccccu#cecacar#cbc8c8 #c9c6c6h#c7c4c4a#c5c2c2n#c2c0c0d#c0bebe #bebbbbu#bcb9b9p#b9b7b7w#b7b5b5a#b5b3b3r#b3b1b1d#b0afaf #aeadadt#acababo#aaa9a9 #a7a7a7t#a5a5a5h#a3a3a3e#a1a1a1 #a0a0a0m#9e9e9ea#9d9d9dr#9b9b9bk#999a99i#989898n#969796g#959595,#939493 #929292o#909190n#8e8f8el#8d8d8dy#8b8c8b #8a8a8at#888988o#868786 #858685f#838483i#828382n#808180d#7f807f #7d7e7di#7c7d7ct#7b7c7b #7a7b7ac#797a79l#787978e#777877a#767676n#757575s#747474e#737373d#727272 #717171o#6f706ff#6e6f6e #6d6e6da#6c6d6cn#6b6c6by#6a6b6a #696969b#686868l#676767o#666666o#656565d#646464.#636363 ")

hecho("\n\n#ffffffA#fefdfds#fcfcfc #fbfafay#f9f8f8o#f8f7f7u#f6f5f5 #f5f4f4l#f3f2f2o#f2f0f0o#f1efefk#efeded #eeebebu#eceaeap#ebe8e8w#e9e6e6a#e8e5e5r#e7e3e3d#e5e1e1s#e4e0e0,#e2dede #e1ddddy#dfdbdbo#ded9d9u#dcd8d8 #dbd6d6f#d9d4d4i#d7d2d2n#d4d0d0d#d2cece #d0cccct#cecacah#cbc8c8a#c9c6c6t#c7c4c4 #c5c2c2R#c2c0c0h#c0bebeu#bebbbbl#bcb9b9v#b9b7b7o#b7b5b5k#b5b3b3 #b3b1b1h#b0afafa#aeadads#acabab #aaa9a9d#a7a7a7i#a5a5a5s#a3a3a3a#a1a1a1p#a0a0a0p#9e9e9ee#9d9d9da#9b9b9br#999a99e#989898d#969796 #959595a#939493n#929292d#909190 #8e8f8eo#8d8d8dn#8b8c8bl#8a8a8ay#888988 #868786H#858685a#838483v#828382a#808180r#7f807f #7d7e7dr#7c7d7ce#7b7c7bm#7a7b7aa#797a79i#787978n#777877s#767676.#757575 #747474H#737373a#727272v#717171a#6f706fr#6e6f6e #6d6e6dg#6c6d6ci#6b6c6bv#6a6b6ae#696969s#686868 #676767a#666666 ")
hecho("\n#ffffffs#fefdfdm#fcfcfci#fbfafar#f9f8f8k#f8f7f7 #f6f5f5a#f5f4f4n#f3f2f2d#f2f0f0 #f1efefl#efedede#eeebeba#eceaean#ebe8e8s#e9e6e6 #e8e5e5b#e7e3e3a#e5e1e1c#e4e0e0k#e2dede #e1dddda#dfdbdbg#ded9d9a#dcd8d8i#dbd6d6n#d9d4d4s#d7d2d2t#d4d0d0 #d2cecet#d0cccch#cecacae#cbc8c8 #c9c6c6i#c7c4c4d#c5c2c2o#c2c0c0l#c0bebe #bebbbbo#bcb9b9f#b9b7b7 #b7b5b5R#b5b3b3h#b3b1b1u#b0afafl#aeadadv#acababo#aaa9a9k#a7a7a7,#a5a5a5 #a3a3a3h#a1a1a1i#a0a0a0s#9e9e9e #9d9d9de#9b9b9by#999a99e#989898s#969796 #959595f#939493l#929292i#909190c#8e8f8ek#8d8d8de#8b8c8br#8a8a8ai#888988n#868786g#858685 #838483s#828382h#808180u#7f807ft#7d7e7d #7c7d7ca#7b7c7bs#7a7b7a #797a79h#787978e#777877 #767676f#757575o#747474c#737373u#727272s#717171e#6f706fs#6e6f6e #6d6e6do#6c6d6cn#6b6c6b #6a6b6ao#696969t#686868h#676767e#666666r#656565 ")
hecho("\n#fffffft#fefdfdh#fcfcfci#fbfafan#f9f8f8g#f8f7f7s#f6f5f5.")

hecho("\n\n#ffffffY#fefdfdo#fcfcfcu#fbfafa #f9f8f8h#f8f7f7a#f6f5f5v#f5f4f4e#f3f2f2 #f2f0f0g#f1efefa#efededi#eeebebn#eceaeae#ebe8e8d#e9e6e6 #e8e5e5t#e7e3e3h#e5e1e1e#e4e0e0 #e2dedeO#e1dddda#dfdbdbt#ded9d9h#dcd8d8 #dbd6d6o#d9d4d4f#d7d2d2 #d4d0d0T#d2cecer#d0cccca#cecacan#cbc8c8q#c9c6c6u#c7c4c4i#c5c2c2l#c2c0c0i#c0bebet#bebbbby#bcb9b9.")
cechoLink("\n\n&lt;white&gt; BACK TO RHULVOK",function() expandAlias("rhulvok") end, "back", true)
cechoLink("\n&lt;white&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhulvok2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rhulvok3$</name>
					<script>hecho("\n#ffffffR#fefdfdH#fcfcfcU#fbfafaL#f9f8f8V#f8f7f7O#f6f5f5K#f5f4f4,#f3f2f2 #f2f0f0T#f1efefH#efededE#eeebeb #eceaeaW#ebe8e8A#e9e6e6R#e8e5e5D#e7e3e3E#e5e1e1N")
hecho("\n")
hecho("\n#ffffffT#fefdfdh#fcfcfce#fbfafa #f9f8f8W#f8f7f7a#f6f5f5r#f5f4f4d#f3f2f2e#f2f0f0n#f1efef #efededt#eeebeba#eceaeak#ebe8e8e#e9e6e6s#e8e5e5 #e7e3e3t#e5e1e1h#e4e0e0e#e2dede #e1dddds#dfdbdbh#ded9d9a#dcd8d8p#dbd6d6e#d9d4d4 #d6d2d2o#d4d0d0f#d2cece #cfcbcba#cdc9c9 #cbc7c7b#c8c5c5a#c6c3c3t#c4c1c1t#c1bfbfl#bfbdbde#bdbaba #bab8b8s#b8b6b6c#b6b4b4a#b3b2b2r#b1b0b0r#afaeaee#acacacd#aaa9a9 #a8a7a7b#a5a5a5e#a3a3a3a#a1a2a1r#a0a0a0.")
hecho("\n")
hecho("\n#ffffffT#fefdfde#fcfcfce#fbfafat#f9f8f8h#f8f7f7 #f6f5f5a#f5f4f4n#f3f2f2d#f2f0f0 #f1efefc#efededl#eeebeba#eceaeaw#ebe8e8s#e9e6e6 #e8e5e5b#e7e3e3l#e5e1e1u#e4e0e0n#e2dedet#e1dddde#dfdbdbd#ded9d9 #dcd8d8b#dbd6d6u#d9d4d4t#d6d2d2 #d4d0d0h#d2cecei#cfcbcbs#cdc9c9 #cbc7c7h#c8c5c5u#c6c3c3l#c4c1c1k#c1bfbfi#bfbdbdn#bdbabag#bab8b8 #b8b6b6f#b6b4b4o#b3b2b2r#b1b0b0m#afaeae #acacacl#aaa9a9i#a8a7a7k#a5a5a5e#a3a3a3 #a1a2a1s#a0a0a0t#9e9f9eo#9d9d9dn#9b9c9be#9a9a9a,#989998 #979797t#959695h#949494e#929392 #919191b#8f908fe#8e8e8ea#8c8d8cr#8b8b8b #898a89i#888888s#868786 #858585a#838483 #828282s#808180p#7f7f7fi#7d7e7dr#7c7d7ci#7b7c7bt#7a7b7a #797a79t#787878h#777777a#757675t#747574 #737473s#727372t#717271a#707170n#6f6f6fd#6e6e6es#6d6d6d #6c6c6cv#6b6b6bi#6a6a6ag#686968i#676867l")
hecho("\n#ffffffb#fefdfde#fcfcfct#fbfafaw#f9f8f8e#f8f7f7e#f6f5f5n#f5f4f4 #f3f2f2c#f2f0f0o#f1efefr#efededr#eeebebu#eceaeap#ebe8e8t#e9e6e6e#e8e5e5d#e7e3e3 #e5e1e1a#e4e0e0n#e2deded#e1dddd #dfdbdbd#ded9d9a#dcd8d8r#dbd6d6k#d9d4d4 #d6d2d2s#d4d0d0p#d2cecei#cfcbcbr#cdc9c9i#cbc7c7t#c8c5c5s#c6c3c3 #c4c1c1l#c1bfbfo#bfbdbdo#bdbabak#bab8b8i#b8b6b6n#b6b4b4g#b3b2b2 #b1b0b0t#afaeaeo#acacac #aaa9a9u#a8a7a7n#a5a5a5d#a3a3a3o#a1a2a1 #a0a0a0t#9e9f9eh#9d9d9de#9b9c9b #9a9a9aw#989998o#979797r#959695k#949494 #929392o#919191f#8f908f #8e8e8eD#8c8d8ce#8b8b8bn#898a89d#888888a#868786r#858585a#838483'#828282s#808180 #7f7f7fa#7d7e7dn#7c7d7cc#7b7c7bi#7a7b7ae#797a79n#787878t#777777s#757675,#747574 #737473g#727372u#717271a#707170r#6f6f6fd#6e6e6ei#6d6d6da#6c6c6cn#6b6b6bs#6a6a6a,#686968 #676867a#666666n#656565d#646464 ")
hecho("\n#ffffffP#fefdfdr#fcfcfca#fbfafaa#f9f8f8d#f8f7f7i#f6f5f5.#f5f4f4 #f3f2f2T#f2f0f0h#f1efefe#efeded #eeebebW#eceaeaa#ebe8e8r#e9e6e6d#e8e5e5e#e7e3e3n#e5e1e1 #e4e0e0w#e2dedei#e1ddddl#dfdbdbl#ded9d9 #dcd8d8a#dbd6d6l#d9d4d4w#d6d2d2a#d4d0d0y#d2ceces#cfcbcb #cdc9c9p#cbc7c7u#c8c5c5t#c6c3c3 #c4c1c1h#c1bfbfi#bfbdbdm#bdbabas#bab8b8e#b8b6b6l#b6b4b4f#b3b2b2 #b1b0b0b#afaeaee#acacact#aaa9a9w#a8a7a7e#a5a5a5e#a3a3a3n#a1a2a1 #a0a0a0t#9e9f9eh#9d9d9de#9b9c9b #9a9a9ao#989998n#979797c#959695o#949494m#929392i#919191n#8f908fg#8e8e8e #8c8d8cd#8b8b8ba#898a89r#888888k#868786n#858585e#838483s#828282s#808180 #7f7f7fa#7d7e7dn#7c7d7cd#7b7c7b #7a7b7at#797a79h#787878e#777777 #757675h#747574e#737473a#727372l#717271t#707170h#6f6f6f #6e6e6eo#6d6d6df#6c6c6c #6b6b6bb#6a6a6al#686968e#676867s#666666s#656565e#646464d#636363 ")
hecho("\n#ffffffm#fefdfdo#fcfcfcs#fbfafat#f9f8f8 #f8f7f7v#f6f5f5e#f5f4f4r#f3f2f2d#f2f0f0a#f1efefn#efededt#eeebeb #eceaeal#ebe8e8a#e9e6e6n#e8e5e5d#e7e3e3s#e5e1e1 #e4e0e0o#e2dedef#e1dddd #dfdbdbD#ded9d9e#dcd8d8n#dbd6d6d#d9d4d4a#d6d2d2r#d4d0d0a#d2cece.")
hecho("\n#ffffff #fefdfd #fcfcfc #fbfafa #f9f8f8 #f8f7f7 #f6f5f5 ")
hecho("\n#ffffff.#fefdfd:#fcfcfc*#fbfafa~#f9f8f8*#f8f7f7:#f6f5f5.#f5f4f4_#f3f2f2.#f2f0f0:#f1efef*#efeded~#eeebeb*#eceaea:#ebe8e8.#e9e6e6_#e8e5e5.#e7e3e3:#e5e1e1*#e4e0e0~#e2dede*#e1dddd:#dfdbdb.#ded9d9_#dcd8d8.#dbd6d6:#d9d4d4*#d6d2d2~#d4d0d0*#d2cece:#cfcbcb.#cdc9c9_#cbc7c7.#c8c5c5:#c6c3c3*#c4c1c1~#c1bfbf*#bfbdbd:#bdbaba.#bab8b8_#b8b6b6.#b6b4b4:#b3b2b2*#b1b0b0~#afaeae*#acacac:#aaa9a9.#a8a7a7_#a5a5a5.#a3a3a3:#a1a2a1*#a0a0a0~#9e9f9e*#9d9d9d:#9b9c9b.#9a9a9a_#989998.#979797:#959695*#949494~#929392*#919191:#8f908f.#8e8e8e_#8c8d8c.#8b8b8b:#898a89*#888888~#868786*#858585:#838483.#828282_#808180.#7f7f7f:#7d7e7d*#7c7d7c~#7b7c7b*#7a7b7a:#797a79.#787878_#777777.#757675:#747574*#737473~#727372*#717271:#707170.#6f6f6f_#6e6e6e.#6d6d6d:#6c6c6c*#6b6b6b~#6a6a6a*#686968:#676867.")
hecho("\n")
hecho("\n#ffffffT#fefdfdh#fcfcfce#fbfafay#f9f8f8 #f8f7f7t#f6f5f5e#f5f4f4l#f3f2f2l#f2f0f0 #f1efefu#efededs#eeebeb,#eceaea #ebe8e8b#e9e6e6e#e8e5e5 #e7e3e3a#e5e1e1s#e4e0e0 #e2dedeR#e1ddddh#dfdbdbu#ded9d9l#dcd8d8v#dbd6d6o#d9d4d4k#d6d2d2.#d4d0d0 #d2ceceS#cfcbcbt#cdc9c9a#cbc7c7n#c8c5c5d#c6c3c3 #c4c1c1s#c1bfbft#bfbdbdr#bdbabao#bab8b8n#b8b6b6g#b6b4b4 #b3b2b2a#b1b0b0n#afaeaed#acacac #aaa9a9b#a8a7a7o#a5a5a5l#a3a3a3d#a1a2a1 #a0a0a0i#9e9f9en#9d9d9d #9b9c9bt#9a9a9ah#989998e#979797 #959695f#949494a#929392c#919191e#8f908f #8e8e8eo#8c8d8cf#8b8b8b #898a89a#888888l#868786l#858585 #838483t#828282h#808180i#7f7f7fn#7d7e7dg#7c7d7cs#7b7c7b #7a7b7at#797a79h#787878a#777777t#757675 #747574w#737473o#727372u#717271l#707170d#6f6f6f #6e6e6es#6d6d6de#6c6c6ce#6b6b6bk#6a6a6a #686968t#676867o")
hecho("\n#ffffffs#fefdfdn#fcfcfcu#fbfafaf#f9f8f8f#f8f7f7 #f6f5f5o#f5f4f4u#f3f2f2t#f2f0f0 #f1efefD#efedede#eeebebn#eceaead#ebe8e8a#e9e6e6r#e8e5e5a#e7e3e3,#e5e1e1 #e4e0e0t#e2dedeo#e1dddd #dfdbdbs#ded9d9n#dcd8d8u#dbd6d6f#d9d4d4f#d6d2d2 #d4d0d0o#d2ceceu#cfcbcbt#cdc9c9 #cbc7c7L#c8c5c5i#c6c3c3f#c4c1c1e#c1bfbf,#bfbdbd #bdbabat#bab8b8o#b8b6b6 #b6b4b4c#b3b2b2o#b1b0b0r#afaeaer#acacacu#aaa9a9p#a8a7a7t#a5a5a5 #a3a3a3w#a1a2a1h#a0a0a0a#9e9f9et#9d9d9d #9b9c9bw#9a9a9aa#989998s#979797 #959695d#949494e#929392s#919191t#8f908fi#8e8e8en#8c8d8ce#8b8b8bd#898a89 #888888t#868786o#858585 #838483b#828282e#808180 #7f7f7fc#7d7e7dl#7c7d7ce#7b7c7ba#7a7b7an#797a79 #787878a#777777n#757675d#747574 #737473p#727372u#717271r#707170e#6f6f6f!#6e6e6e #6d6d6dN#6c6c6co#6b6b6bt#6a6a6a #686968f#676867o#666666r#656565 ")
hecho("\n#ffffffr#fefdfda#fcfcfcg#fbfafae#f9f8f8,#f8f7f7 #f6f5f5n#f5f4f4o#f3f2f2t#f2f0f0 #f1efeff#efededo#eeebebr#eceaea #ebe8e8g#e9e6e6l#e8e5e5o#e7e3e3r#e5e1e1y#e4e0e0,#e2dede #e1ddddf#dfdbdbo#ded9d9r#dcd8d8 #dbd6d6T#d9d4d4r#d6d2d2a#d4d0d0n#d2ceceq#cfcbcbu#cdc9c9i#cbc7c7l#c8c5c5i#c6c3c3t#c4c1c1y#c1bfbf.#bfbdbd #bdbabaT#bab8b8r#b8b6b6a#b6b4b4n#b3b2b2q#b1b0b0u#afaeaei#acacacl#aaa9a9i#a8a7a7t#a5a5a5y#a3a3a3,#a1a2a1 #a0a0a0b#9e9f9ee#9d9d9dc#9b9c9ba#9a9a9au#989998s#979797e#959695 #949494t#929392h#919191e#8f908f #8e8e8el#8c8d8ca#8b8b8bn#898a89d#888888 #868786c#858585a#838483n#828282n#808180o#7f7f7ft#7d7e7d #7c7d7ca#7b7c7bl#7a7b7aw#797a79a#787878y#777777s#757675 #747574p#737473r#727372o#717271t#707170e#6f6f6fc#6e6e6et#6d6d6d #6c6c6ci#6b6b6bt#6a6a6as#686968e#676867l#666666f#656565,#646464 ")
hecho("\n#ffffffb#fefdfde#fcfcfcc#fbfafaa#f9f8f8u#f8f7f7s#f6f5f5e#f5f4f4 #f3f2f2t#f2f0f0h#f1efefe#efeded #eeebebp#eceaeae#ebe8e8a#e9e6e6c#e8e5e5e#e7e3e3 #e5e1e1a#e4e0e0n#e2deded#e1dddd #dfdbdbb#ded9d9e#dcd8d8a#dbd6d6u#d9d4d4t#d6d2d2y#d4d0d0 #d2ceceo#cfcbcbf#cdc9c9 #cbc7c7t#c8c5c5h#c6c3c3i#c4c1c1s#c1bfbf #bfbdbdw#bdbabao#bab8b8r#b8b6b6l#b6b4b4d#b3b2b2 #b1b0b0d#afaeaee#acacacs#aaa9a9e#a8a7a7r#a5a5a5v#a3a3a3e#a1a2a1s#a0a0a0 #9e9f9et#9d9d9do#9b9c9b #9a9a9as#989998u#979797r#959695v#949494i#929392v#919191e#8f908f #8e8e8et#8c8d8ch#8b8b8bi#898a89s#888888 #868786a#858585g#838483e#828282.#808180 #7f7f7fB#7d7e7de#7c7d7cc#7b7c7ba#7a7b7au#797a79s#787878e#777777 #757675i#747574t#737473 #727372m#717271u#707170s#6f6f6ft#6e6e6e #6d6d6db#6c6c6ce#6b6b6b #6a6a6ad#686968o#676867n#666666e#656565,#646464 ")
hecho("\n#ffffffa#fefdfdn#fcfcfcd#fbfafa #f9f8f8w#f8f7f7e#f6f5f5 #f5f4f4m#f3f2f2u#f2f0f0s#f1efeft#efeded #eeebebb#eceaeae#ebe8e8 #e9e6e6t#e8e5e5h#e7e3e3e#e5e1e1 #e4e0e0o#e2deden#e1dddde#dfdbdbs#ded9d9 #dcd8d8t#dbd6d6o#d9d4d4 #d6d2d2d#d4d0d0o#d2cece #cfcbcbi#cdc9c9t#cbc7c7,#c8c5c5 #c6c3c3n#c4c1c1o#c1bfbf #bfbdbdm#bdbabaa#bab8b8t#b8b6b6t#b6b4b4e#b3b2b2r#b1b0b0 #afaeaet#acacach#aaa9a9e#a8a7a7 #a5a5a5s#a3a3a3c#a1a2a1a#a0a0a0r#9e9f9es#9d9d9d #9b9c9ba#9a9a9an#989998d#979797 #959695b#949494r#929392o#919191k#8f908fe#8e8e8en#8c8d8c #8b8b8bb#898a89l#888888a#868786d#858585e#838483s#828282.")
hecho("\n")
hecho("\n#ffffff.#fefdfd:#fcfcfc*#fbfafa~#f9f8f8*#f8f7f7:#f6f5f5.#f5f4f4_#f3f2f2.#f2f0f0:#f1efef*#efeded~#eeebeb*#eceaea:#ebe8e8.#e9e6e6_#e8e5e5.#e7e3e3:#e5e1e1*#e4e0e0~#e2dede*#e1dddd:#dfdbdb.#ded9d9_#dcd8d8.#dbd6d6:#d9d4d4*#d6d2d2~#d4d0d0*#d2cece:#cfcbcb.#cdc9c9_#cbc7c7.#c8c5c5:#c6c3c3*#c4c1c1~#c1bfbf*#bfbdbd:#bdbaba.#bab8b8_#b8b6b6.#b6b4b4:#b3b2b2*#b1b0b0~#afaeae*#acacac:#aaa9a9.#a8a7a7_#a5a5a5.#a3a3a3:#a1a2a1*#a0a0a0~#9e9f9e*#9d9d9d:#9b9c9b.#9a9a9a_#989998.#979797:#959695*#949494~#929392*#919191:#8f908f.#8e8e8e_#8c8d8c.#8b8b8b:#898a89*#888888~#868786*#858585:#838483.#828282_#808180.#7f7f7f:#7d7e7d*#7c7d7c~#7b7c7b*#7a7b7a:#797a79.#787878_#777777.#757675:#747574*#737473~#727372*#717271:#707170.#6f6f6f_#6e6e6e.#6d6d6d:#6c6c6c*#6b6b6b~#6a6a6a*#686968:#676867.")
cechoLink("\n\n&lt;white&gt; BACK TO RHULVOK",function() expandAlias("rhulvok") end, "back", true)
cechoLink("\n&lt;white&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhulvok3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^takaros2$</name>
					<script>hecho("\n#ff0000T#ff0300A#ff0500K#ff0800A#ff0a00R#ff0d00O#ff0f00S#ff1200,#ff1400 #ff1700T#ff1900H#ff1c00E#ff1e00 #ff2100F#ff2400U#ff2600R#ff2900Y#ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 #fffa00 #fffc00 #ffff00 ")
hecho("\n#ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 #fffa00 #fffc00 ")
hecho("\n#ff0a00Y#ff0500o#ff0000u#ff0300 #ff0500d#ff0800r#ff0a00a#ff0d00w#ff0f00 #ff1200t#ff1400h#ff1700e#ff1900 #ff1c00s#ff1e00h#ff2100a#ff2400r#ff2600p#ff2900 #ff2b00e#ff2e00d#ff3000g#ff3300e#ff3500 #ff3800o#ff3a00f#ff3d00 #ff3f00a#ff4200n#ff4500 #ff4700o#ff4a00b#ff4c00s#ff4f00i#ff5100d#ff5400i#ff5600a#ff5900n#ff5b00 #ff5e00k#ff6100n#ff6300i#ff6600f#ff6800e#ff6b00 #ff6d00e#ff7000t#ff7200c#ff7500h#ff7700e#ff7a00d#ff7c00 #ff7f00i#ff8200n#ff8400 #ff8700r#ff8900u#ff8c00n#ff8f00e#ff9100s#ff9400 #ff9700a#ff9900c#ff9c00r#ff9e00o#ffa100s#ffa400s#ffa600 #ffa900y#ffab00o#ffae00u#ffb100r#ffb300 #ffb600p#ffb800a#ffbb00l#ffbe00m#ffc000,#ffc300 #ffc600b#ffc800l#ffcb00o#ffcd00o#ffd000d#ffd300 #ffd500b#ffd800e#ffda00g#ffdd00i#ffe000n#ffe200n#ffe500i#ffe700n#ffea00g#ffed00 #ffef00t#fff200o#fff500 #fff700 #fffa00 ")
hecho("\n#ff1000t#ff0a00r#ff0500i#ff0000c#ff0300k#ff0500l#ff0800e#ff0a00 #ff0d00f#ff0f00r#ff1200o#ff1400m#ff1700 #ff1900y#ff1c00o#ff1e00u#ff2100r#ff2400 #ff2600n#ff2900e#ff2b00w#ff2e00 #ff3000w#ff3300o#ff3500u#ff3800n#ff3a00d#ff3d00.#ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 ")
hecho("\n#ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 ")
hecho("\n#ff1a00Y#ff1500o#ff1000u#ff0a00 #ff0500h#ff0000o#ff0300l#ff0500d#ff0800 #ff0a00y#ff0d00o#ff0f00u#ff1200r#ff1400 #ff1700b#ff1900l#ff1c00e#ff1e00e#ff2100d#ff2400i#ff2600n#ff2900g#ff2b00 #ff2e00p#ff3000a#ff3300l#ff3500m#ff3800 #ff3a00a#ff3d00g#ff3f00a#ff4200i#ff4500n#ff4700s#ff4a00t#ff4c00 #ff4f00a#ff5100 #ff5400w#ff5600y#ff5900v#ff5b00e#ff5e00r#ff6100n#ff6300 #ff6600t#ff6800o#ff6b00t#ff6d00e#ff7000m#ff7200 #ff7500o#ff7700f#ff7a00 #ff7c00s#ff7f00m#ff8200o#ff8400k#ff8700y#ff8900 #ff8c00r#ff8f00e#ff9100d#ff9400w#ff9700o#ff9900o#ff9c00d#ff9e00 #ffa100a#ffa400n#ffa600d#ffa900 #ffab00c#ffae00l#ffb100o#ffb300s#ffb600e#ffb800 #ffbb00y#ffbe00o#ffc000u#ffc300r#ffc600 #ffc800e#ffcb00y#ffcd00e#ffd000s#ffd300 #ffd500a#ffd800s#ffda00 #ffdd00y#ffe000o#ffe200u#ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 ")
hecho("\n#ff1f00f#ff1a00o#ff1500c#ff1000u#ff0a00s#ff0500 #ff0000u#ff0300p#ff0500o#ff0800n#ff0a00 #ff0d00t#ff0f00h#ff1200e#ff1400 #ff1700g#ff1900u#ff1c00a#ff1e00r#ff2100d#ff2400i#ff2600a#ff2900n#ff2b00'#ff2e00s#ff3000 #ff3300s#ff3500p#ff3800i#ff3a00r#ff3d00i#ff3f00t#ff4200.#ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 ")
hecho("\n#ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 ")
hecho("\n#ff2a00F#ff2400r#ff1f00o#ff1a00m#ff1500 #ff1000b#ff0a00e#ff0500h#ff0000i#ff0300n#ff0500d#ff0800 #ff0a00t#ff0d00h#ff0f00e#ff1200 #ff1400i#ff1700d#ff1900o#ff1c00l#ff1e00 #ff2100a#ff2400 #ff2600f#ff2900i#ff2b00g#ff2e00u#ff3000r#ff3300e#ff3500 #ff3800s#ff3a00t#ff3d00e#ff3f00p#ff4200s#ff4500 #ff4700f#ff4a00o#ff4c00r#ff4f00t#ff5100h#ff5400,#ff5600 #ff5900t#ff5b00h#ff5e00e#ff6100 #ff6300l#ff6600i#ff6800f#ff6b00e#ff6d00 #ff7000o#ff7200f#ff7500 #ff7700a#ff7a00 #ff7c00h#ff7f00u#ff8200n#ff8400t#ff8700e#ff8900r#ff8c00 #ff8f00e#ff9100v#ff9400i#ff9700d#ff9900e#ff9c00n#ff9e00t#ffa100 #ffa400i#ffa600n#ffa900 #ffab00h#ffae00i#ffb100s#ffb300 #ffb600p#ffb800o#ffbb00s#ffbe00t#ffc000u#ffc300r#ffc600e#ffc800 #ffcb00a#ffcd00n#ffd000d#ffd300 #ffd500t#ffd800h#ffda00e#ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 ")
hecho("\n#ff2f00s#ff2a00p#ff2400e#ff1f00a#ff1a00r#ff1500 #ff1000h#ff0a00e#ff0500 #ff0000c#ff0300a#ff0500r#ff0800r#ff0a00i#ff0d00e#ff0f00s#ff1200 #ff1400i#ff1700n#ff1900 #ff1c00h#ff1e00i#ff2100s#ff2400 #ff2600l#ff2900e#ff2b00f#ff2e00t#ff3000 #ff3300h#ff3500a#ff3800n#ff3a00d#ff3d00.#ff3f00 #ff4200\"#ff4500A#ff4700 #ff4a00w#ff4c00o#ff4f00r#ff5100t#ff5400h#ff5600y#ff5900 #ff5b00b#ff5e00l#ff6100o#ff6300o#ff6600d#ff6800 #ff6b00o#ff6d00f#ff7000f#ff7200e#ff7500r#ff7700i#ff7a00n#ff7c00g#ff7f00,#ff8200\"#ff8400 #ff8700h#ff8900e#ff8c00 #ff8f00s#ff9100a#ff9400y#ff9700s#ff9900 #ff9c00b#ff9e00y#ffa100 #ffa400w#ffa600a#ffa900y#ffab00 #ffae00o#ffb100f#ffb300 #ffb600g#ffb800r#ffbb00e#ffbe00e#ffc000t#ffc300i#ffc600n#ffc800g#ffcb00,#ffcd00 #ffd000h#ffd300i#ffd500s#ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 ")
hecho("\n#ff3400g#ff2f00r#ff2a00a#ff2400v#ff1f00e#ff1a00l#ff1500l#ff1000y#ff0a00 #ff0500v#ff0000o#ff0300i#ff0500c#ff0800e#ff0a00 #ff0d00l#ff0f00e#ff1200n#ff1400d#ff1700i#ff1900n#ff1c00g#ff1e00 #ff2100t#ff2400h#ff2600e#ff2900 #ff2b00w#ff2e00o#ff3000r#ff3300d#ff3500s#ff3800 #ff3a00a#ff3d00 #ff3f00r#ff4200u#ff4500s#ff4700t#ff4a00i#ff4c00c#ff4f00 #ff5100b#ff5400r#ff5600o#ff5900g#ff5b00u#ff5e00e#ff6100.#ff6300 #ff6600\"#ff6800I#ff6b00 #ff6d00a#ff7000m#ff7200 #ff7500J#ff7700u#ff7a00d#ff7c00o#ff7f00c#ff8200.#ff8400 #ff8700I#ff8900 #ff8c00s#ff8f00p#ff9100e#ff9400a#ff9700k#ff9900 #ff9c00f#ff9e00o#ffa100r#ffa400 #ffa600T#ffa900a#ffab00k#ffae00a#ffb100r#ffb300o#ffb600s#ffb800.#ffbb00 #ffbe00I#ffc000 #ffc300w#ffc600i#ffc800l#ffcb00l#ffcd00 #ffd000s#ffd300h#ffd500o#ffd800w#ffda00 #ffdd00y#ffe000o#ffe200u#ffe500 ")
hecho("\n#ff3900h#ff3400i#ff2f00s#ff2a00 #ff2400s#ff1f00t#ff1a00r#ff1500e#ff1000n#ff0a00g#ff0500t#ff0000h#ff0300 #ff0500a#ff0800n#ff0a00d#ff0d00 #ff0f00s#ff1200a#ff1400v#ff1700a#ff1900g#ff1c00e#ff1e00r#ff2100y#ff2400.#ff2600\"#ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 ")
hecho("\n#ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 ")
hecho("\n#ff4400J#ff3e00u#ff3900d#ff3400o#ff2f00c#ff2a00'#ff2400s#ff1f00 #ff1a00k#ff1500n#ff1000u#ff0a00c#ff0500k#ff0000l#ff0300e#ff0500s#ff0800 #ff0a00c#ff0d00r#ff0f00a#ff1200c#ff1400k#ff1700 #ff1900q#ff1c00u#ff1e00i#ff2100e#ff2400t#ff2600l#ff2900y#ff2b00 #ff2e00a#ff3000s#ff3300 #ff3500h#ff3800e#ff3a00 #ff3d00g#ff3f00r#ff4200i#ff4500p#ff4700s#ff4a00 #ff4c00h#ff4f00i#ff5100s#ff5400 #ff5600s#ff5900p#ff5b00e#ff5e00a#ff6100r#ff6300 #ff6600a#ff6800n#ff6b00d#ff6d00 #ff7000g#ff7200l#ff7500a#ff7700n#ff7a00c#ff7c00e#ff7f00s#ff8200 #ff8400u#ff8700p#ff8900 #ff8c00a#ff8f00t#ff9100 #ff9400t#ff9700h#ff9900e#ff9c00 #ff9e00d#ffa100r#ffa400a#ffa600c#ffa900o#ffab00n#ffae00i#ffb100c#ffb300 #ffb600i#ffb800d#ffbb00o#ffbe00l#ffc000.#ffc300 #ffc600\"#ffc800Y#ffcb00o#ffcd00u#ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 ")
hecho("\n#ff4900w#ff4400o#ff3e00u#ff3900l#ff3400d#ff2f00 #ff2a00p#ff2400l#ff1f00e#ff1a00d#ff1500g#ff1000e#ff0a00 #ff0500t#ff0000o#ff0300 #ff0500t#ff0800h#ff0a00e#ff0d00 #ff0f00F#ff1200u#ff1400r#ff1700y#ff1900?#ff1c00\"#ff1e00 #ff2100h#ff2400e#ff2600 #ff2900a#ff2b00s#ff2e00k#ff3000s#ff3300,#ff3500 #ff3800a#ff3a00m#ff3d00u#ff3f00s#ff4200e#ff4500m#ff4700e#ff4a00n#ff4c00t#ff4f00 #ff5100t#ff5400o#ff5600u#ff5900c#ff5b00h#ff5e00i#ff6100n#ff6300g#ff6600 #ff6800h#ff6b00i#ff6d00s#ff7000 #ff7200v#ff7500o#ff7700i#ff7a00c#ff7c00e#ff7f00.#ff8200 #ff8400W#ff8700i#ff8900t#ff8c00h#ff8f00o#ff9100u#ff9400t#ff9700 #ff9900w#ff9c00a#ff9e00r#ffa100n#ffa400i#ffa600n#ffa900g#ffab00 #ffae00h#ffb100e#ffb300 #ffb600l#ffb800u#ffbb00n#ffbe00g#ffc000e#ffc300s#ffc600 #ffc800f#ffcb00o#ffcd00r#ffd000w#ffd300a#ffd500r#ffd800d#ffda00 ")
hecho("\n#ff4e00a#ff4900n#ff4400d#ff3e00 #ff3900g#ff3400r#ff2f00a#ff2a00b#ff2400s#ff1f00 #ff1a00y#ff1500o#ff1000u#ff0a00r#ff0500 #ff0000h#ff0300a#ff0500n#ff0800d#ff0a00,#ff0d00 #ff0f00s#ff1200t#ff1400a#ff1700r#ff1900i#ff1c00n#ff1e00g#ff2100 #ff2400a#ff2600t#ff2900 #ff2b00t#ff2e00h#ff3000e#ff3300 #ff3500b#ff3800a#ff3a00r#ff3d00e#ff3f00l#ff4200y#ff4500-#ff4700c#ff4a00l#ff4c00o#ff4f00t#ff5100t#ff5400e#ff5600d#ff5900 #ff5b00g#ff5e00a#ff6100s#ff6300h#ff6600 #ff6800o#ff6b00n#ff6d00 #ff7000y#ff7200o#ff7500u#ff7700r#ff7a00 #ff7c00p#ff7f00a#ff8200l#ff8400m#ff8700.#ff8900 #ff8c00H#ff8f00e#ff9100 #ff9400s#ff9700l#ff9900i#ff9c00c#ff9e00e#ffa100s#ffa400 #ffa600h#ffa900i#ffab00s#ffae00 #ffb100o#ffb300w#ffb600n#ffb800 #ffbb00a#ffbe00n#ffc000d#ffc300 #ffc600g#ffc800r#ffcb00a#ffcd00s#ffd000p#ffd300s#ffd500 #ffd800 ")
hecho("\n#ff5300y#ff4e00o#ff4900u#ff4400r#ff3e00 #ff3900h#ff3400a#ff2f00n#ff2a00d#ff2400,#ff1f00 #ff1a00l#ff1500e#ff1000t#ff0a00t#ff0500i#ff0000n#ff0300g#ff0500 #ff0800h#ff0a00i#ff0d00s#ff0f00 #ff1200b#ff1400l#ff1700o#ff1900o#ff1c00d#ff1e00 #ff2100m#ff2400i#ff2600n#ff2900g#ff2b00l#ff2e00e#ff3000 #ff3300w#ff3500i#ff3800t#ff3a00h#ff3d00 #ff3f00y#ff4200o#ff4500u#ff4700r#ff4a00s#ff4c00 #ff4f00a#ff5100n#ff5400d#ff5600 #ff5900f#ff5b00a#ff5e00l#ff6100l#ff6300,#ff6600 #ff6800s#ff6b00t#ff6d00e#ff7000a#ff7200m#ff7500i#ff7700n#ff7a00g#ff7c00,#ff7f00 #ff8200t#ff8400o#ff8700 #ff8900t#ff8c00h#ff8f00e#ff9100 #ff9400f#ff9700o#ff9900o#ff9c00t#ff9e00 #ffa100o#ffa400f#ffa600 #ffa900t#ffab00h#ffae00e#ffb100 #ffb300i#ffb600d#ffb800o#ffbb00l#ffbe00.#ffc000 #ffc300\"#ffc600B#ffc800l#ffcb00o#ffcd00o#ffd000d#ffd300 #ffd500 ")
hecho("\n#ff5800c#ff5300a#ff4e00l#ff4900l#ff4400s#ff3e00 #ff3900t#ff3400o#ff2f00 #ff2a00b#ff2400l#ff1f00o#ff1a00o#ff1500d#ff1000!#ff0a00\"#ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 ")
hecho("\n#ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 ")
hecho("\n#ff6300J#ff5e00u#ff5800d#ff5300o#ff4e00c#ff4900 #ff4400p#ff3e00a#ff3900u#ff3400s#ff2f00e#ff2a00s#ff2400 #ff1f00s#ff1a00u#ff1500d#ff1000d#ff0a00e#ff0500n#ff0000l#ff0300y#ff0500 #ff0800i#ff0a00n#ff0d00 #ff0f00h#ff1200i#ff1400s#ff1700 #ff1900s#ff1c00p#ff1e00e#ff2100e#ff2400c#ff2600h#ff2900 #ff2b00a#ff2e00n#ff3000d#ff3300 #ff3500c#ff3800o#ff3a00c#ff3d00k#ff3f00s#ff4200 #ff4500h#ff4700i#ff4a00s#ff4c00 #ff4f00h#ff5100e#ff5400a#ff5600d#ff5900 #ff5b00t#ff5e00o#ff6100 #ff6300o#ff6600n#ff6800e#ff6b00 #ff6d00s#ff7000i#ff7200d#ff7500e#ff7700,#ff7a00 #ff7c00a#ff7f00 #ff8200g#ff8400r#ff8700i#ff8900n#ff8c00 #ff8f00s#ff9100t#ff9400r#ff9700e#ff9900t#ff9c00c#ff9e00h#ffa100i#ffa400n#ffa600g#ffa900 #ffab00o#ffae00v#ffb100e#ffb300r#ffb600 #ffb800h#ffbb00i#ffbe00s#ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 ")
hecho("\n#ff6800r#ff6300u#ff5e00g#ff5800g#ff5300e#ff4e00d#ff4900 #ff4400f#ff3e00e#ff3900a#ff3400t#ff2f00u#ff2a00r#ff2400e#ff1f00s#ff1a00.#ff1500 #ff1000S#ff0a00o#ff0500o#ff0000n#ff0300 #ff0500s#ff0800h#ff0a00a#ff0d00r#ff0f00p#ff1200,#ff1400 #ff1700a#ff1900u#ff1c00d#ff1e00i#ff2100b#ff2400l#ff2600e#ff2900 #ff2b00g#ff2e00u#ff3000s#ff3300t#ff3500s#ff3800 #ff3a00r#ff3d00i#ff3f00p#ff4200 #ff4500t#ff4700h#ff4a00r#ff4c00o#ff4f00u#ff5100g#ff5400h#ff5600 #ff5900t#ff5b00h#ff5e00e#ff6100 #ff6300a#ff6600i#ff6800r#ff6b00 #ff6d00a#ff7000s#ff7200 #ff7500a#ff7700 #ff7a00l#ff7c00a#ff7f00r#ff8200g#ff8400e#ff8700 #ff8900r#ff8c00e#ff8f00p#ff9100t#ff9400i#ff9700l#ff9900e#ff9c00 #ff9e00h#ffa100u#ffa400r#ffa600t#ffa900l#ffab00e#ffae00s#ffb100 #ffb300d#ffb600o#ffb800w#ffbb00n#ffbe00w#ffc000a#ffc300r#ffc600d#ffc800 #ffcb00 ")
hecho("\n#ff6d00f#ff6800r#ff6300o#ff5e00m#ff5800 #ff5300t#ff4e00h#ff4900e#ff4400 #ff3e00s#ff3900k#ff3400i#ff2f00e#ff2a00s#ff2400,#ff1f00 #ff1a00a#ff1500 #ff1000p#ff0a00r#ff0500i#ff0000m#ff0300a#ff0500l#ff0800 #ff0a00s#ff0d00h#ff0f00r#ff1200i#ff1400e#ff1700k#ff1900 #ff1c00e#ff1e00c#ff2100h#ff2400o#ff2600i#ff2900n#ff2b00g#ff2e00 #ff3000t#ff3300h#ff3500r#ff3800o#ff3a00u#ff3d00g#ff3f00h#ff4200 #ff4500t#ff4700h#ff4a00e#ff4c00 #ff4f00a#ff5100i#ff5400r#ff5600 #ff5900b#ff5b00e#ff5e00h#ff6100i#ff6300n#ff6600d#ff6800 #ff6b00i#ff6d00t#ff7000.#ff7200 #ff7500Y#ff7700o#ff7a00u#ff7c00 #ff7f00r#ff8200e#ff8400a#ff8700l#ff8900i#ff8c00z#ff8f00e#ff9100 #ff9400w#ff9700i#ff9900t#ff9c00h#ff9e00 #ffa100s#ffa400o#ffa600m#ffa900e#ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 ")
hecho("\n#ff7200c#ff6d00o#ff6800n#ff6300s#ff5e00t#ff5800e#ff5300r#ff4e00n#ff4900a#ff4400t#ff3e00i#ff3900o#ff3400n#ff2f00,#ff2a00 #ff2400a#ff1f00s#ff1a00 #ff1500i#ff1000t#ff0a00 #ff0500s#ff0000t#ff0300r#ff0500e#ff0800a#ff0a00k#ff0d00s#ff0f00 #ff1200e#ff1400v#ff1700e#ff1900r#ff1c00-#ff1e00n#ff2100e#ff2400a#ff2600r#ff2900e#ff2b00r#ff2e00,#ff3000 #ff3300t#ff3500h#ff3800a#ff3a00t#ff3d00 #ff3f00t#ff4200h#ff4500i#ff4700s#ff4a00 #ff4c00i#ff4f00s#ff5100 #ff5400t#ff5600h#ff5900e#ff5b00 #ff5e00F#ff6100u#ff6300r#ff6600y#ff6800 #ff6b00h#ff6d00i#ff7000m#ff7200s#ff7500e#ff7700l#ff7a00f#ff7c00.#ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 ")
hecho("\n#ff7800 #ff7200 #ff6d00 #ff6800 #ff6300 #ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 ")
hecho("\n#ff7d00T#ff7800a#ff7200k#ff6d00a#ff6800r#ff6300o#ff5e00s#ff5800 #ff5300a#ff4e00l#ff4900i#ff4400g#ff3e00h#ff3900t#ff3400s#ff2f00 #ff2a00a#ff2400t#ff1f00o#ff1a00p#ff1500 #ff1000h#ff0a00i#ff0500s#ff0000 #ff0300i#ff0500d#ff0800o#ff0a00l#ff0d00,#ff0f00 #ff1200h#ff1400i#ff1700s#ff1900 #ff1c00m#ff1e00o#ff2100m#ff2400e#ff2600n#ff2900t#ff2b00u#ff2e00m#ff3000 #ff3300c#ff3500a#ff3800r#ff3a00r#ff3d00y#ff3f00i#ff4200n#ff4500g#ff4700 #ff4a00a#ff4c00 #ff4f00b#ff5100l#ff5400a#ff5600s#ff5900t#ff5b00 #ff5e00o#ff6100f#ff6300 #ff6600h#ff6800o#ff6b00t#ff6d00 #ff7000a#ff7200i#ff7500r#ff7700 #ff7a00d#ff7c00i#ff7f00r#ff8200e#ff8400c#ff8700t#ff8900l#ff8c00y#ff8f00 #ff9100t#ff9400o#ff9700 #ff9900y#ff9c00o#ff9e00u#ffa100r#ffa400 #ffa600b#ffa900o#ffab00d#ffae00y#ffb100.#ffb300 #ffb600W#ffb800h#ffbb00e#ffbe00n#ffc000 ")
hecho("\n#ff8200y#ff7d00o#ff7800u#ff7200 #ff6d00h#ff6800a#ff6300v#ff5e00e#ff5800 #ff5300c#ff4e00l#ff4900e#ff4400a#ff3e00r#ff3900e#ff3400d#ff2f00 #ff2a00t#ff2400h#ff1f00e#ff1a00 #ff1500d#ff1000u#ff0a00s#ff0500t#ff0000 #ff0300f#ff0500r#ff0800o#ff0a00m#ff0d00 #ff0f00y#ff1200o#ff1400u#ff1700r#ff1900 #ff1c00e#ff1e00y#ff2100e#ff2400s#ff2600 #ff2900y#ff2b00o#ff2e00u#ff3000 #ff3300f#ff3500i#ff3800n#ff3a00d#ff3d00 #ff3f00t#ff4200h#ff4500e#ff4700 #ff4a00w#ff4c00y#ff4f00v#ff5100e#ff5400r#ff5600n#ff5900 #ff5b00l#ff5e00o#ff6100o#ff6300m#ff6600i#ff6800n#ff6b00g#ff6d00 #ff7000o#ff7200v#ff7500e#ff7700r#ff7a00 #ff7c00y#ff7f00o#ff8200u#ff8400,#ff8700 #ff8900h#ff8c00i#ff8f00s#ff9100 #ff9400s#ff9700p#ff9900i#ff9c00k#ff9e00e#ffa100d#ffa400 #ffa600t#ffa900a#ffab00i#ffae00l#ffb100 #ffb300a#ffb600n#ffb800d#ffbb00 #ffbe00 ")
hecho("\n#ff8700v#ff8200i#ff7d00c#ff7800i#ff7200o#ff6d00u#ff6800s#ff6300 #ff5e00c#ff5800l#ff5300a#ff4e00w#ff4900s#ff4400 #ff3e00l#ff3900a#ff3400s#ff2f00h#ff2a00i#ff2400n#ff1f00g#ff1a00 #ff1500i#ff1000n#ff0a00 #ff0500y#ff0000o#ff0300u#ff0500r#ff0800 #ff0a00d#ff0d00i#ff0f00r#ff1200e#ff1400c#ff1700t#ff1900i#ff1c00o#ff1e00n#ff2100.#ff2400 #ff2600H#ff2900e#ff2b00 #ff2e00l#ff3000e#ff3300a#ff3500n#ff3800s#ff3a00 #ff3d00f#ff3f00o#ff4200r#ff4500w#ff4700a#ff4a00r#ff4c00d#ff4f00,#ff5100 #ff5400a#ff5600 #ff5900m#ff5b00o#ff5e00t#ff6100i#ff6300o#ff6600n#ff6800 #ff6b00f#ff6d00u#ff7000l#ff7200l#ff7500 #ff7700o#ff7a00f#ff7c00 #ff7f00s#ff8200e#ff8400r#ff8700p#ff8900e#ff8c00n#ff8f00t#ff9100i#ff9400n#ff9700e#ff9900 #ff9c00g#ff9e00r#ffa100a#ffa400c#ffa600e#ffa900,#ffab00 #ffae00a#ffb100n#ffb300d#ffb600 #ffb800 #ffbb00 ")
hecho("\n#ff8d00t#ff8700e#ff8200s#ff7d00t#ff7800s#ff7200 #ff6d00t#ff6800h#ff6300e#ff5e00 #ff5800a#ff5300i#ff4e00r#ff4900 #ff4400a#ff3e00r#ff3900o#ff3400u#ff2f00n#ff2a00d#ff2400 #ff1f00y#ff1a00o#ff1500u#ff1000 #ff0a00w#ff0500i#ff0000t#ff0300h#ff0500 #ff0800a#ff0a00 #ff0d00q#ff0f00u#ff1200i#ff1400c#ff1700k#ff1900 #ff1c00i#ff1e00n#ff2100h#ff2400a#ff2600l#ff2900e#ff2b00.#ff2e00 #ff3000\"#ff3300W#ff3500h#ff3800y#ff3a00 #ff3d00d#ff3f00o#ff4200 #ff4500y#ff4700o#ff4a00u#ff4c00 #ff4f00s#ff5100e#ff5400e#ff5600k#ff5900 #ff5b00t#ff5e00o#ff6100 #ff6300w#ff6600a#ff6800l#ff6b00k#ff6d00 #ff7000m#ff7200y#ff7500 #ff7700p#ff7a00a#ff7c00t#ff7f00h#ff8200,#ff8400 #ff8700m#ff8900o#ff8c00r#ff8f00t#ff9100a#ff9400l#ff9700?#ff9900\"#ff9c00 #ff9e00T#ffa100h#ffa400e#ffa600 #ffa900w#ffab00o#ffae00r#ffb100d#ffb300s#ffb600 #ffb800 ")
hecho("\n#ff9200r#ff8d00u#ff8700s#ff8200h#ff7d00 #ff7800i#ff7200n#ff6d00t#ff6800o#ff6300 #ff5e00y#ff5800o#ff5300u#ff4e00r#ff4900 #ff4400h#ff3e00e#ff3900a#ff3400d#ff2f00,#ff2a00 #ff2400a#ff1f00n#ff1a00 #ff1500o#ff1000v#ff0a00e#ff0500r#ff0000w#ff0300h#ff0500e#ff0800l#ff0a00m#ff0d00i#ff0f00n#ff1200g#ff1400 #ff1700c#ff1900a#ff1c00c#ff1e00o#ff2100p#ff2400h#ff2600o#ff2900n#ff2b00y#ff2e00 #ff3000o#ff3300f#ff3500 #ff3800r#ff3a00o#ff3d00a#ff3f00r#ff4200s#ff4500 #ff4700a#ff4a00n#ff4c00d#ff4f00 #ff5100t#ff5400u#ff5600m#ff5900u#ff5b00l#ff5e00t#ff6100u#ff6300o#ff6600u#ff6800s#ff6b00 #ff6d00w#ff7000i#ff7200n#ff7500d#ff7700s#ff7a00.#ff7c00 #ff7f00\"#ff8200D#ff8400o#ff8700 #ff8900y#ff8c00o#ff8f00u#ff9100 #ff9400w#ff9700i#ff9900s#ff9c00h#ff9e00 #ffa100f#ffa400o#ffa600r#ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 ")
hecho("\n#ff9700p#ff9200o#ff8d00w#ff8700e#ff8200r#ff7d00?#ff7800 #ff7200I#ff6d00t#ff6800 #ff6300i#ff5e00s#ff5800 #ff5300n#ff4e00o#ff4900t#ff4400 #ff3e00f#ff3900o#ff3400r#ff2f00 #ff2a00t#ff2400h#ff1f00e#ff1a00 #ff1500w#ff1000e#ff0a00a#ff0500k#ff0000!#ff0300\"#ff0500 #ff0800H#ff0a00e#ff0d00 #ff0f00l#ff1200u#ff1400n#ff1700g#ff1900e#ff1c00s#ff1e00 #ff2100f#ff2400o#ff2600r#ff2900w#ff2b00a#ff2e00r#ff3000d#ff3300 #ff3500a#ff3800g#ff3a00a#ff3d00i#ff3f00n#ff4200,#ff4500 #ff4700c#ff4a00l#ff4c00a#ff4f00w#ff5100-#ff5400t#ff5600i#ff5900p#ff5b00p#ff5e00e#ff6100d#ff6300 #ff6600w#ff6800i#ff6b00n#ff6d00g#ff7000s#ff7200 #ff7500c#ff7700o#ff7a00m#ff7c00i#ff7f00n#ff8200g#ff8400 #ff8700w#ff8900i#ff8c00t#ff8f00h#ff9100i#ff9400n#ff9700 #ff9900i#ff9c00n#ff9e00c#ffa100h#ffa400e#ffa600s#ffa900 #ffab00o#ffae00f#ffb100 #ffb300 ")
hecho("\n#ff9c00g#ff9700o#ff9200u#ff8d00g#ff8700i#ff8200n#ff7d00g#ff7800 #ff7200y#ff6d00o#ff6800u#ff6300r#ff5e00 #ff5800s#ff5300h#ff4e00o#ff4900u#ff4400l#ff3e00d#ff3900e#ff3400r#ff2f00s#ff2a00,#ff2400 #ff1f00a#ff1a00n#ff1500d#ff1000 #ff0a00e#ff0500x#ff0000h#ff0300a#ff0500l#ff0800e#ff0a00s#ff0d00 #ff0f00h#ff1200o#ff1400t#ff1700,#ff1900 #ff1c00r#ff1e00a#ff2100n#ff2400k#ff2600 #ff2900b#ff2b00r#ff2e00e#ff3000a#ff3300t#ff3500h#ff3800 #ff3a00i#ff3d00n#ff3f00t#ff4200o#ff4500 #ff4700y#ff4a00o#ff4c00u#ff4f00r#ff5100 #ff5400f#ff5600a#ff5900c#ff5b00e#ff5e00,#ff6100 #ff6300a#ff6600s#ff6800 #ff6b00i#ff6d00f#ff7000 #ff7200t#ff7500e#ff7700s#ff7a00t#ff7c00i#ff7f00n#ff8200g#ff8400 #ff8700y#ff8900o#ff8c00u#ff8f00r#ff9100 #ff9400f#ff9700o#ff9900r#ff9c00t#ff9e00i#ffa100t#ffa400u#ffa600d#ffa900e#ffab00.#ffae00 #ffb100 ")
hecho("\n#ffa100T#ff9c00h#ff9700a#ff9200t#ff8d00 #ff8700h#ff8200o#ff7d00t#ff7800 #ff7200a#ff6d00i#ff6800r#ff6300 #ff5e00s#ff5800w#ff5300i#ff4e00r#ff4900l#ff4400s#ff3e00 #ff3900a#ff3400n#ff2f00d#ff2a00 #ff2400e#ff1f00d#ff1a00d#ff1500i#ff1000e#ff0a00s#ff0500 #ff0000w#ff0300i#ff0500t#ff0800h#ff0a00i#ff0d00n#ff0f00 #ff1200y#ff1400o#ff1700u#ff1900,#ff1c00 #ff1e00s#ff2100e#ff2400e#ff2600k#ff2900i#ff2b00n#ff2e00g#ff3000 #ff3300o#ff3500u#ff3800t#ff3a00 #ff3d00a#ff3f00n#ff4200y#ff4500 #ff4700i#ff4a00n#ff4c00s#ff4f00t#ff5100a#ff5400n#ff5600c#ff5900e#ff5b00 #ff5e00o#ff6100f#ff6300 #ff6600w#ff6800e#ff6b00a#ff6d00k#ff7000n#ff7200e#ff7500s#ff7700s#ff7a00 #ff7c00o#ff7f00r#ff8200 #ff8400i#ff8700n#ff8900d#ff8c00e#ff8f00c#ff9100i#ff9400s#ff9700i#ff9900o#ff9c00n#ff9e00 #ffa100a#ffa400n#ffa600d#ffa900 #ffab00 #ffae00 ")
hecho("\n#ffa700b#ffa100u#ff9c00r#ff9700n#ff9200i#ff8d00n#ff8700g#ff8200 #ff7d00t#ff7800h#ff7200e#ff6d00m#ff6800 #ff6300a#ff5e00w#ff5800a#ff5300y#ff4e00.#ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 ")
hecho("\n#ffac00 #ffa700 #ffa100 #ff9c00 #ff9700 #ff9200 #ff8d00 #ff8700 #ff8200 #ff7d00 #ff7800 #ff7200 #ff6d00 #ff6800 #ff6300 #ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 ")
hecho("\n#ffb100\"#ffac00Y#ffa700o#ffa100u#ff9c00 #ff9700h#ff9200a#ff8d00v#ff8700e#ff8200 #ff7d00p#ff7800o#ff7200t#ff6d00e#ff6800n#ff6300t#ff5e00i#ff5800a#ff5300l#ff4e00,#ff4900 #ff4400V#ff3e00a#ff3900l#ff3400o#ff2f00r#ff2a00i#ff2400e#ff1f00!#ff1a00\"#ff1500 #ff1000c#ff0a00r#ff0500o#ff0000w#ff0300s#ff0500 #ff0800J#ff0a00u#ff0d00d#ff0f00o#ff1200c#ff1400 #ff1700w#ff1900i#ff1c00t#ff1e00h#ff2100 #ff2400s#ff2600a#ff2900v#ff2b00a#ff2e00g#ff3000e#ff3300 #ff3500d#ff3800e#ff3a00l#ff3d00i#ff3f00g#ff4200h#ff4500t#ff4700,#ff4a00 #ff4c00a#ff4f00n#ff5100d#ff5400 #ff5600h#ff5900e#ff5b00 #ff5e00r#ff6100a#ff6300i#ff6600s#ff6800e#ff6b00s#ff6d00 #ff7000h#ff7200i#ff7500s#ff7700 #ff7a00s#ff7c00p#ff7f00e#ff8200a#ff8400r#ff8700 #ff8900i#ff8c00n#ff8f00 #ff9100a#ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 ")
hecho("\n#ffb600h#ffb100u#ffac00n#ffa700t#ffa100e#ff9c00r#ff9700'#ff9200s#ff8d00 #ff8700s#ff8200a#ff7d00l#ff7800u#ff7200t#ff6d00e#ff6800.#ff6300 #ff5e00\"#ff5800L#ff5300e#ff4e00t#ff4900 #ff4400y#ff3e00o#ff3900u#ff3400r#ff2f00 #ff2a00f#ff2400u#ff1f00r#ff1a00y#ff1500 #ff1000r#ff0a00u#ff0500l#ff0000e#ff0300 #ff0500y#ff0800o#ff0a00u#ff0d00.#ff0f00 #ff1200B#ff1400e#ff1700 #ff1900v#ff1c00i#ff1e00c#ff2100i#ff2400o#ff2600u#ff2900s#ff2b00!#ff2e00 #ff3000Y#ff3300o#ff3500u#ff3800 #ff3a00a#ff3d00r#ff3f00e#ff4200 #ff4500o#ff4700f#ff4a00 #ff4c00t#ff4f00h#ff5100e#ff5400 #ff5600P#ff5900r#ff5b00a#ff5e00a#ff6100d#ff6300i#ff6600!#ff6800\"#ff6b00 #ff6d00T#ff7000a#ff7200k#ff7500a#ff7700r#ff7a00o#ff7c00s#ff7f00 #ff8200s#ff8400i#ff8700t#ff8900s#ff8c00 #ff8f00b#ff9100a#ff9400c#ff9700k#ff9900 #ff9c00o#ff9e00n#ffa100 #ffa400 ")
hecho("\n#ffbb00t#ffb600h#ffb100e#ffac00 #ffa700i#ffa100d#ff9c00o#ff9700l#ff9200 #ff8d00a#ff8700n#ff8200d#ff7d00 #ff7800f#ff7200o#ff6d00l#ff6800d#ff6300s#ff5e00 #ff5800h#ff5300i#ff4e00s#ff4900 #ff4400g#ff3e00i#ff3900a#ff3400n#ff2f00t#ff2a00,#ff2400 #ff1f00s#ff1a00p#ff1500e#ff1000c#ff0a00t#ff0500r#ff0000a#ff0300l#ff0500 #ff0800w#ff0a00i#ff0d00n#ff0f00g#ff1200s#ff1400,#ff1700 #ff1900h#ff1c00i#ff1e00s#ff2100 #ff2400d#ff2600a#ff2900r#ff2b00k#ff2e00 #ff3000e#ff3300y#ff3500e#ff3800s#ff3a00 #ff3d00g#ff3f00l#ff4200e#ff4500a#ff4700m#ff4a00i#ff4c00n#ff4f00g#ff5100 #ff5400w#ff5600i#ff5900t#ff5b00h#ff5e00 #ff6100c#ff6300r#ff6600u#ff6800e#ff6b00l#ff6d00 #ff7000s#ff7200a#ff7500t#ff7700i#ff7a00s#ff7c00f#ff7f00a#ff8200c#ff8400t#ff8700i#ff8900o#ff8c00n#ff8f00.#ff9100 #ff9400Y#ff9700o#ff9900u#ff9c00r#ff9e00 #ffa100 ")
hecho("\n#ffc100s#ffbb00t#ffb600a#ffb100n#ffac00c#ffa700e#ffa100 #ff9c00r#ff9700e#ff9200l#ff8d00a#ff8700x#ff8200e#ff7d00s#ff7800 #ff7200s#ff6d00o#ff6800m#ff6300e#ff5e00w#ff5800h#ff5300a#ff4e00t#ff4900,#ff4400 #ff3e00c#ff3900o#ff3400n#ff2f00f#ff2a00i#ff2400d#ff1f00e#ff1a00n#ff1500t#ff1000 #ff0a00t#ff0500h#ff0000a#ff0300t#ff0500 #ff0800y#ff0a00o#ff0d00u#ff0f00 #ff1200h#ff1400a#ff1700v#ff1900e#ff1c00 #ff1e00p#ff2100a#ff2400s#ff2600s#ff2900e#ff2b00d#ff2e00 #ff3000t#ff3300h#ff3500e#ff3800 #ff3a00t#ff3d00e#ff3f00s#ff4200t#ff4500 #ff4700o#ff4a00f#ff4c00 #ff4f00t#ff5100h#ff5400e#ff5600 #ff5900F#ff5b00u#ff5e00r#ff6100y#ff6300.#ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 ")
hecho("\n#ffc600 #ffc100 #ffbb00 #ffb600 #ffb100 #ffac00 #ffa700 #ffa100 #ff9c00 #ff9700 #ff9200 #ff8d00 #ff8700 #ff8200 #ff7d00 #ff7800 #ff7200 #ff6d00 #ff6800 #ff6300 #ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 ")
hecho("\n#ffcb00T#ffc600a#ffc100k#ffbb00a#ffb600r#ffb100o#ffac00s#ffa700 #ffa100r#ff9c00e#ff9700a#ff9200r#ff8d00s#ff8700 #ff8200a#ff7d00n#ff7800d#ff7200 #ff6d00f#ff6800l#ff6300a#ff5e00p#ff5800s#ff5300 #ff4e00h#ff4900i#ff4400s#ff3e00 #ff3900p#ff3400o#ff2f00w#ff2a00e#ff2400r#ff1f00f#ff1a00u#ff1500l#ff1000 #ff0a00w#ff0500i#ff0000n#ff0300g#ff0500s#ff0800 #ff0a00o#ff0d00n#ff0f00c#ff1200e#ff1400,#ff1700 #ff1900t#ff1c00w#ff1e00i#ff2100c#ff2400e#ff2600,#ff2900 #ff2b00e#ff2e00a#ff3000c#ff3300h#ff3500 #ff3800p#ff3a00o#ff3d00w#ff3f00e#ff4200r#ff4500f#ff4700u#ff4a00l#ff4c00 #ff4f00m#ff5100o#ff5400t#ff5600i#ff5900o#ff5b00n#ff5e00 #ff6100f#ff6300o#ff6600r#ff6800c#ff6b00i#ff6d00n#ff7000g#ff7200 #ff7500a#ff7700 #ff7a00s#ff7c00u#ff7f00p#ff8200e#ff8400r#ff8700n#ff8900a#ff8c00t#ff8f00u#ff9100r#ff9400a#ff9700l#ff9900 ")
hecho("\n#ffd000f#ffcb00o#ffc600g#ffc100 #ffbb00t#ffb600o#ffb100 #ffac00s#ffa700w#ffa100i#ff9c00r#ff9700l#ff9200 #ff8d00a#ff8700r#ff8200o#ff7d00u#ff7800n#ff7200d#ff6d00 #ff6800y#ff6300o#ff5e00u#ff5800r#ff5300 #ff4e00b#ff4900o#ff4400d#ff3e00y#ff3900.#ff3400 #ff2f00H#ff2a00e#ff2400 #ff1f00p#ff1a00u#ff1500s#ff1000h#ff0a00e#ff0500s#ff0000 #ff0300o#ff0500f#ff0800f#ff0a00 #ff0d00h#ff0f00i#ff1200s#ff1400 #ff1700i#ff1900d#ff1c00o#ff1e00l#ff2100 #ff2400a#ff2600n#ff2900d#ff2b00 #ff2e00t#ff3000a#ff3300k#ff3500e#ff3800s#ff3a00 #ff3d00f#ff3f00l#ff4200i#ff4500g#ff4700h#ff4a00t#ff4c00 #ff4f00a#ff5100g#ff5400a#ff5600i#ff5900n#ff5b00,#ff5e00 #ff6100n#ff6300e#ff6600a#ff6800r#ff6b00l#ff6d00y#ff7000 #ff7200d#ff7500i#ff7700s#ff7a00a#ff7c00p#ff7f00p#ff8200e#ff8400a#ff8700r#ff8900i#ff8c00n#ff8f00g#ff9100 #ff9400 #ff9700 ")
hecho("\n#ffd500i#ffd000n#ffcb00t#ffc600o#ffc100 #ffbb00t#ffb600h#ffb100e#ffac00 #ffa700s#ffa100k#ff9c00y#ff9700.#ff9200 #ff8d00\"#ff8700T#ff8200a#ff7d00k#ff7800a#ff7200r#ff6d00o#ff6800s#ff6300 #ff5e00w#ff5800i#ff5300l#ff4e00l#ff4900 #ff4400g#ff3e00i#ff3900v#ff3400e#ff2f00 #ff2a00y#ff2400o#ff1f00u#ff1a00 #ff1500D#ff1000e#ff0a00n#ff0500d#ff0000a#ff0300r#ff0500a#ff0800'#ff0a00s#ff0d00 #ff0f00s#ff1200t#ff1400r#ff1700e#ff1900n#ff1c00g#ff1e00t#ff2100h#ff2400,#ff2600 #ff2900V#ff2b00a#ff2e00l#ff3000o#ff3300r#ff3500i#ff3800e#ff3a00!#ff3d00\"#ff3f00 #ff4200A#ff4500n#ff4700d#ff4a00 #ff4c00a#ff4f00t#ff5100 #ff5400J#ff5600u#ff5900d#ff5b00o#ff5e00c#ff6100'#ff6300s#ff6600 #ff6800w#ff6b00o#ff6d00r#ff7000d#ff7200s#ff7500,#ff7700 #ff7a00t#ff7c00h#ff7f00e#ff8200 #ff8400W#ff8700y#ff8900v#ff8c00e#ff8f00r#ff9100n#ff9400 ")
hecho("\n#ffdb00s#ffd500t#ffd000o#ffcb00o#ffc600p#ffc100s#ffbb00 #ffb600a#ffb100g#ffac00a#ffa700i#ffa100n#ff9c00.#ff9700 #ff9200I#ff8d00n#ff8700 #ff8200s#ff7d00e#ff7800c#ff7200o#ff6d00n#ff6800d#ff6300s#ff5e00 #ff5800h#ff5300i#ff4e00s#ff4900 #ff4400v#ff3e00i#ff3900c#ff3400i#ff2f00o#ff2a00u#ff2400s#ff1f00 #ff1a00t#ff1500a#ff1000l#ff0a00o#ff0500n#ff0000s#ff0300 #ff0500h#ff0800o#ff0a00o#ff0d00k#ff0f00 #ff1200i#ff1400n#ff1700 #ff1900y#ff1c00o#ff1e00u#ff2100r#ff2400 #ff2600s#ff2900h#ff2b00o#ff2e00u#ff3000l#ff3300d#ff3500e#ff3800r#ff3a00s#ff3d00 #ff3f00a#ff4200n#ff4500d#ff4700 #ff4a00b#ff4c00o#ff4f00l#ff5100t#ff5400s#ff5600 #ff5900o#ff5b00f#ff5e00 #ff6100p#ff6300a#ff6600i#ff6800n#ff6b00 #ff6d00s#ff7000h#ff7200o#ff7500o#ff7700t#ff7a00 #ff7c00t#ff7f00h#ff8200r#ff8400o#ff8700u#ff8900g#ff8c00h#ff8f00 #ff9100 ")
hecho("\n#ffe000y#ffdb00o#ffd500u#ffd000r#ffcb00 #ffc600b#ffc100o#ffbb00d#ffb600y#ffb100.#ffac00 #ffa700Y#ffa100o#ff9c00u#ff9700 #ff9200s#ff8d00c#ff8700r#ff8200e#ff7d00a#ff7800m#ff7200 #ff6d00-#ff6800 #ff6300b#ff5e00o#ff5800t#ff5300h#ff4e00 #ff4900i#ff4400n#ff3e00 #ff3900p#ff3400a#ff2f00i#ff2a00n#ff2400 #ff1f00a#ff1a00n#ff1500d#ff1000 #ff0a00t#ff0500r#ff0000i#ff0300u#ff0500m#ff0800p#ff0a00h#ff0d00 #ff0f00-#ff1200 #ff1400a#ff1700n#ff1900d#ff1c00 #ff1e00a#ff2100s#ff2400 #ff2600T#ff2900a#ff2b00k#ff2e00a#ff3000r#ff3300o#ff3500s#ff3800 #ff3a00l#ff3d00i#ff3f00f#ff4200t#ff4500s#ff4700 #ff4a00y#ff4c00o#ff4f00u#ff5100 #ff5400i#ff5600n#ff5900t#ff5b00o#ff5e00 #ff6100t#ff6300h#ff6600e#ff6800 #ff6b00s#ff6d00k#ff7000i#ff7200e#ff7500s#ff7700 #ff7a00h#ff7c00e#ff7f00 #ff8200r#ff8400o#ff8700a#ff8900r#ff8c00s#ff8f00 ")
hecho("\n#ffe500w#ffe000i#ffdb00t#ffd500h#ffd000 #ffcb00y#ffc600o#ffc100u#ffbb00.#ffb600 #ffb100T#ffac00h#ffa700e#ffa100 #ff9c00f#ff9700e#ff9200e#ff8d00l#ff8700i#ff8200n#ff7d00g#ff7800 #ff7200o#ff6d00f#ff6800 #ff6300a#ff5e00i#ff5800r#ff5300 #ff4e00r#ff4900u#ff4400s#ff3e00h#ff3900i#ff3400n#ff2f00g#ff2a00 #ff2400p#ff1f00a#ff1a00s#ff1500t#ff1000,#ff0a00 #ff0500o#ff0000f#ff0300 #ff0500r#ff0800u#ff0a00l#ff0d00i#ff0f00n#ff1200g#ff1400 #ff1700t#ff1900h#ff1c00e#ff1e00 #ff2100g#ff2400r#ff2600o#ff2900u#ff2b00n#ff2e00d#ff3000 #ff3300b#ff3500e#ff3800l#ff3a00o#ff3d00w#ff3f00,#ff4200 #ff4500o#ff4700f#ff4a00 #ff4c00k#ff4f00n#ff5100o#ff5400w#ff5600i#ff5900n#ff5b00g#ff5e00 #ff6100e#ff6300a#ff6600c#ff6800h#ff6b00 #ff6d00a#ff7000n#ff7200d#ff7500 #ff7700e#ff7a00v#ff7c00e#ff7f00r#ff8200y#ff8400 #ff8700 #ff8900 #ff8c00 ")
hecho("\n#ffea00c#ffe500r#ffe000e#ffdb00a#ffd500t#ffd000u#ffcb00r#ffc600e#ffc100 #ffbb00b#ffb600e#ffb100l#ffac00o#ffa700w#ffa100 #ff9c00f#ff9700e#ff9200a#ff8d00r#ff8700s#ff8200 #ff7d00y#ff7800o#ff7200u#ff6d00r#ff6800 #ff6300v#ff5e00e#ff5800r#ff5300y#ff4e00 #ff4900s#ff4400h#ff3e00a#ff3900d#ff3400o#ff2f00w#ff2a00 #ff2400-#ff1f00 #ff1a00t#ff1500h#ff1000a#ff0a00t#ff0500 #ff0000i#ff0300s#ff0500 #ff0800t#ff0a00h#ff0d00e#ff0f00 #ff1200l#ff1400a#ff1700s#ff1900t#ff1c00 #ff1e00s#ff2100e#ff2400n#ff2600s#ff2900a#ff2b00t#ff2e00i#ff3000o#ff3300n#ff3500 #ff3800t#ff3a00o#ff3d00 #ff3f00f#ff4200a#ff4500d#ff4700e#ff4a00.#ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 ")
hecho("\n#ffef00 #ffea00 #ffe500 #ffe000 #ffdb00 #ffd500 #ffd000 #ffcb00 #ffc600 #ffc100 #ffbb00 #ffb600 #ffb100 #ffac00 #ffa700 #ffa100 #ff9c00 #ff9700 #ff9200 #ff8d00 #ff8700 #ff8200 #ff7d00 #ff7800 #ff7200 #ff6d00 #ff6800 #ff6300 #ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 ")
hecho("\n#fff500Y#ffef00o#ffea00u#ffe500 #ffe000h#ffdb00a#ffd500v#ffd000e#ffcb00 #ffc600g#ffc100a#ffbb00i#ffb600n#ffb100e#ffac00d#ffa700 #ffa100t#ff9c00h#ff9700e#ff9200 #ff8d00O#ff8700a#ff8200t#ff7d00h#ff7800 #ff7200o#ff6d00f#ff6800 #ff6300t#ff5e00h#ff5800e#ff5300 #ff4e00P#ff4900r#ff4400i#ff3e00m#ff3900e#ff3400v#ff2f00a#ff2a00l#ff2400.#ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 ")
cechoLink("\n\n&lt;red&gt; BACK TO TAKAROS",function() expandAlias("takaros") end, "back", true)
cechoLink("\n&lt;red&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^takaros2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^takaros3$</name>
					<script>hecho("\n#ff0000T#ff0300A#ff0500K#ff0800A#ff0a00R#ff0d00O#ff0f00S#ff1200,#ff1400 #ff1700T#ff1900H#ff1c00E#ff1e00 #ff2100F#ff2400U#ff2600R#ff2900Y#ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 #fffa00 #fffc00 #ffff00 ")
hecho("\n#ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 #fffa00 #fffc00 ")
hecho("\n#ff0a00T#ff0500h#ff0000e#ff0300 #ff0500F#ff0800u#ff0a00r#ff0d00y#ff0f00 #ff1200t#ff1400a#ff1700k#ff1900e#ff1c00s#ff1e00 #ff2100t#ff2400h#ff2600e#ff2900 #ff2b00f#ff2e00o#ff3000r#ff3300m#ff3500 #ff3800o#ff3a00f#ff3d00 #ff3f00t#ff4200h#ff4500e#ff4700 #ff4a00p#ff4c00o#ff4f00w#ff5100e#ff5400r#ff5600f#ff5900u#ff5b00l#ff5e00 #ff6100w#ff6300y#ff6600v#ff6800e#ff6b00r#ff6d00n#ff7000.#ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 #fffa00 ")
hecho("\n#ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 #ffef00 #fff200 #fff500 #fff700 ")
hecho("\n#ff1500T#ff1000e#ff0a00e#ff0500t#ff0000h#ff0300,#ff0500 #ff0800t#ff0a00a#ff0d00l#ff0f00o#ff1200n#ff1400s#ff1700,#ff1900 #ff1c00a#ff1e00n#ff2100d#ff2400 #ff2600f#ff2900i#ff2b00e#ff2e00r#ff3000y#ff3300 #ff3500b#ff3800r#ff3a00e#ff3d00a#ff3f00t#ff4200h#ff4500 #ff4700m#ff4a00a#ff4c00k#ff4f00e#ff5100 #ff5400t#ff5600h#ff5900e#ff5b00 #ff5e00w#ff6100y#ff6300v#ff6600e#ff6800r#ff6b00n#ff6d00 #ff7000s#ff7200p#ff7500i#ff7700r#ff7a00i#ff7c00t#ff7f00 #ff8200a#ff8400 #ff8700f#ff8900o#ff8c00r#ff8f00m#ff9100i#ff9400d#ff9700a#ff9900b#ff9c00l#ff9e00e#ffa100,#ffa400 #ffa600p#ffa900r#ffab00i#ffae00m#ffb100a#ffb300l#ffb600,#ffb800 #ffbb00a#ffbe00n#ffc000d#ffc300 #ffc600t#ffc800e#ffcb00m#ffcd00p#ffd000e#ffd300s#ffd500t#ffd800u#ffda00o#ffdd00u#ffe000s#ffe200 #ffe500a#ffe700l#ffea00l#ffed00y#ffef00.#fff200 #fff500 ")
hecho("\n#ff1a00H#ff1500e#ff1000 #ff0a00r#ff0500e#ff0000p#ff0300r#ff0500e#ff0800s#ff0a00e#ff0d00n#ff0f00t#ff1200s#ff1400 #ff1700t#ff1900h#ff1c00e#ff1e00 #ff2100r#ff2400a#ff2600w#ff2900 #ff2b00p#ff2e00o#ff3000w#ff3300e#ff3500r#ff3800 #ff3a00o#ff3d00f#ff3f00 #ff4200t#ff4500h#ff4700e#ff4a00 #ff4c00h#ff4f00u#ff5100n#ff5400t#ff5600e#ff5900r#ff5b00 #ff5e00i#ff6100n#ff6300 #ff6600t#ff6800h#ff6b00e#ff6d00 #ff7000R#ff7200h#ff7500y#ff7700t#ff7a00h#ff7c00m#ff7f00,#ff8200 #ff8400a#ff8700 #ff8900f#ff8c00o#ff8f00r#ff9100c#ff9400e#ff9700 #ff9900o#ff9c00f#ff9e00 #ffa100d#ffa400e#ffa600s#ffa900t#ffab00r#ffae00u#ffb100c#ffb300t#ffb600i#ffb800o#ffbb00n#ffbe00 #ffc000t#ffc300h#ffc600a#ffc800t#ffcb00 #ffcd00r#ffd000e#ffd300v#ffd500e#ffd800l#ffda00s#ffdd00 #ffe000i#ffe200n#ffe500 #ffe700b#ffea00l#ffed00o#ffef00o#fff200d")
hecho("\n#ff1f00a#ff1a00n#ff1500d#ff1000 #ff0a00f#ff0500o#ff0000r#ff0300t#ff0500i#ff0800t#ff0a00u#ff0d00d#ff0f00e#ff1200.#ff1400 #ff1700H#ff1900e#ff1c00 #ff1e00i#ff2100s#ff2400 #ff2600n#ff2900o#ff2b00t#ff2e00 #ff3000f#ff3300o#ff3500r#ff3800 #ff3a00t#ff3d00h#ff3f00e#ff4200 #ff4500w#ff4700e#ff4a00a#ff4c00k#ff4f00 #ff5100m#ff5400i#ff5600n#ff5900d#ff5b00e#ff5e00d#ff6100,#ff6300 #ff6600h#ff6800e#ff6b00 #ff6d00i#ff7000s#ff7200 #ff7500n#ff7700o#ff7a00t#ff7c00 #ff7f00f#ff8200o#ff8400r#ff8700 #ff8900t#ff8c00h#ff8f00e#ff9100 #ff9400i#ff9700n#ff9900d#ff9c00e#ff9e00c#ffa100i#ffa400s#ffa600i#ffa900v#ffab00e#ffae00 #ffb100-#ffb300 #ffb600m#ffb800i#ffbb00n#ffbe00d#ffc000,#ffc300 #ffc600b#ffc800o#ffcb00d#ffcd00y#ffd000,#ffd300 #ffd500a#ffd800n#ffda00d#ffdd00 #ffe000s#ffe200p#ffe500i#ffe700r#ffea00i#ffed00t#ffef00 ")
hecho("\n#ff2400m#ff1f00u#ff1a00s#ff1500t#ff1000 #ff0a00h#ff0500a#ff0000v#ff0300e#ff0500 #ff0800t#ff0a00h#ff0d00e#ff0f00 #ff1200w#ff1400i#ff1700l#ff1900l#ff1c00p#ff1e00o#ff2100w#ff2400e#ff2600r#ff2900 #ff2b00t#ff2e00o#ff3000 #ff3300w#ff3500i#ff3800t#ff3a00h#ff3d00s#ff3f00t#ff4200a#ff4500n#ff4700d#ff4a00 #ff4c00h#ff4f00i#ff5100s#ff5400 #ff5600t#ff5900a#ff5b00l#ff5e00o#ff6100n#ff6300s#ff6600 #ff6800a#ff6b00n#ff6d00d#ff7000 #ff7200f#ff7500l#ff7700a#ff7a00m#ff7c00e#ff7f00 #ff8200o#ff8400r#ff8700 #ff8900t#ff8c00h#ff8f00e#ff9100y#ff9400 #ff9700w#ff9900i#ff9c00l#ff9e00l#ffa100 #ffa400b#ffa600e#ffa900 #ffab00d#ffae00e#ffb100s#ffb300t#ffb600r#ffb800o#ffbb00y#ffbe00e#ffc000d#ffc300.#ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 #ffed00 ")
hecho("\n#ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 #ffea00 ")
hecho("\n#ff2f00.#ff2a00:#ff2400*#ff1f00~#ff1a00*#ff1500:#ff1000.#ff0a00_#ff0500.#ff0000:#ff0300*#ff0500~#ff0800*#ff0a00:#ff0d00.#ff0f00_#ff1200.#ff1400:#ff1700*#ff1900~#ff1c00*#ff1e00:#ff2100.#ff2400_#ff2600.#ff2900:#ff2b00*#ff2e00~#ff3000*#ff3300:#ff3500.#ff3800_#ff3a00.#ff3d00:#ff3f00*#ff4200~#ff4500*#ff4700:#ff4a00.#ff4c00_#ff4f00.#ff5100:#ff5400*#ff5600~#ff5900*#ff5b00:#ff5e00.#ff6100_#ff6300.#ff6600:#ff6800*#ff6b00~#ff6d00*#ff7000:#ff7200.#ff7500_#ff7700.#ff7a00:#ff7c00*#ff7f00~#ff8200*#ff8400:#ff8700.#ff8900_#ff8c00.#ff8f00:#ff9100*#ff9400~#ff9700*#ff9900:#ff9c00.#ff9e00_#ffa100.#ffa400:#ffa600*#ffa900~#ffab00*#ffae00:#ffb100.#ffb300_#ffb600.#ffb800:#ffbb00*#ffbe00~#ffc000*#ffc300:#ffc600.#ffc800_#ffcb00.#ffcd00:#ffd000*#ffd300~#ffd500*#ffd800:#ffda00.#ffdd00 #ffe000 #ffe200 #ffe500 #ffe700 ")
hecho("\n#ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 #ffda00 #ffdd00 #ffe000 #ffe200 #ffe500 ")
hecho("\n#ff3900I#ff3400 #ff2f00t#ff2a00e#ff2400l#ff1f00l#ff1a00 #ff1500y#ff1000o#ff0a00u#ff0500 #ff0000f#ff0300i#ff0500n#ff0800a#ff0a00l#ff0d00l#ff0f00y#ff1200 #ff1400o#ff1700f#ff1900 #ff1c00T#ff1e00a#ff2100k#ff2400a#ff2600r#ff2900o#ff2b00s#ff2e00,#ff3000 #ff3300b#ff3500e#ff3800c#ff3a00a#ff3d00u#ff3f00s#ff4200e#ff4500 #ff4700h#ff4a00i#ff4c00s#ff4f00 #ff5100t#ff5400e#ff5600a#ff5900c#ff5b00h#ff5e00i#ff6100n#ff6300g#ff6600 #ff6800i#ff6b00s#ff6d00 #ff7000d#ff7200a#ff7500n#ff7700g#ff7a00e#ff7c00r#ff7f00o#ff8200u#ff8400s#ff8700 #ff8900a#ff8c00n#ff8f00d#ff9100 #ff9400e#ff9700a#ff9900s#ff9c00i#ff9e00l#ffa100y#ffa400 #ffa600b#ffa900r#ffab00e#ffae00e#ffb100d#ffb300s#ffb600 #ffb800f#ffbb00o#ffbe00o#ffc000l#ffc300i#ffc600s#ffc800h#ffcb00 #ffcd00n#ffd000o#ffd300t#ffd500i#ffd800o#ffda00n#ffdd00s#ffe000.#ffe200 ")
hecho("\n#ff3e00H#ff3900e#ff3400 #ff2f00t#ff2a00e#ff2400a#ff1f00c#ff1a00h#ff1500e#ff1000s#ff0a00 #ff0500u#ff0000s#ff0300 #ff0500o#ff0800f#ff0a00 #ff0d00F#ff0f00u#ff1200r#ff1400y#ff1700.#ff1900 #ff1c00H#ff1e00e#ff2100 #ff2400d#ff2600e#ff2900m#ff2b00a#ff2e00n#ff3000d#ff3300s#ff3500 #ff3800w#ff3a00e#ff3d00 #ff3f00b#ff4200e#ff4500 #ff4700p#ff4a00e#ff4c00e#ff4f00r#ff5100l#ff5400e#ff5600s#ff5900s#ff5b00 #ff5e00a#ff6100n#ff6300d#ff6600 #ff6800t#ff6b00e#ff6d00r#ff7000r#ff7200i#ff7500b#ff7700l#ff7a00e#ff7c00 #ff7f00i#ff8200n#ff8400 #ff8700o#ff8900u#ff8c00r#ff8f00 #ff9100w#ff9400r#ff9700a#ff9900t#ff9c00h#ff9e00 #ffa100a#ffa400n#ffa600d#ffa900 #ffab00r#ffae00u#ffb100i#ffb300n#ffb600 #ffb800o#ffbb00f#ffbe00 #ffc000t#ffc300h#ffc600o#ffc800s#ffcb00e#ffcd00 #ffd000t#ffd300h#ffd500i#ffd800n#ffda00g#ffdd00s#ffe000 ")
hecho("\n#ff4400t#ff3e00h#ff3900a#ff3400t#ff2f00 #ff2a00s#ff2400t#ff1f00a#ff1a00n#ff1500d#ff1000 #ff0a00a#ff0500g#ff0000a#ff0300i#ff0500n#ff0800s#ff0a00t#ff0d00 #ff0f00u#ff1200s#ff1400,#ff1700 #ff1900t#ff1c00h#ff1e00a#ff2100t#ff2400 #ff2600t#ff2900h#ff2b00r#ff2e00e#ff3000a#ff3300t#ff3500e#ff3800n#ff3a00 #ff3d00o#ff3f00u#ff4200r#ff4500 #ff4700w#ff4a00a#ff4c00y#ff4f00,#ff5100 #ff5400o#ff5600u#ff5900r#ff5b00 #ff5e00w#ff6100o#ff6300r#ff6600l#ff6800d#ff6b00.#ff6d00 #ff7000T#ff7200h#ff7500a#ff7700t#ff7a00 #ff7c00t#ff7f00h#ff8200e#ff8400r#ff8700e#ff8900 #ff8c00i#ff8f00s#ff9100 #ff9400a#ff9700 #ff9900t#ff9c00i#ff9e00m#ffa100e#ffa400 #ffa600f#ffa900o#ffab00r#ffae00 #ffb100s#ffb300a#ffb600v#ffb800a#ffbb00g#ffbe00e#ffc000r#ffc300y#ffc600,#ffc800 #ffcb00h#ffcd00e#ffd000e#ffd300d#ffd500l#ffd800e#ffda00s#ffdd00s")
hecho("\n#ff4900s#ff4400l#ff3e00a#ff3900u#ff3400g#ff2f00h#ff2a00t#ff2400e#ff1f00r#ff1a00 #ff1500a#ff1000n#ff0a00d#ff0500 #ff0000d#ff0300e#ff0500s#ff0800t#ff0a00r#ff0d00u#ff0f00c#ff1200t#ff1400i#ff1700o#ff1900n#ff1c00,#ff1e00 #ff2100f#ff2400l#ff2600a#ff2900m#ff2b00e#ff2e00s#ff3000 #ff3300a#ff3500n#ff3800d#ff3a00 #ff3d00a#ff3f00s#ff4200h#ff4500 #ff4700f#ff4a00o#ff4c00r#ff4f00 #ff5100a#ff5400l#ff5600l#ff5900 #ff5b00t#ff5e00h#ff6100i#ff6300n#ff6600g#ff6800s#ff6b00 #ff6d00b#ff7000e#ff7200f#ff7500o#ff7700r#ff7a00e#ff7c00 #ff7f00u#ff8200s#ff8400.#ff8700 #ff8900B#ff8c00u#ff8f00t#ff9100 #ff9400n#ff9700e#ff9900v#ff9c00e#ff9e00r#ffa100 #ffa400f#ffa600o#ffa900r#ffab00g#ffae00e#ffb100t#ffb300 #ffb600G#ffb800r#ffbb00i#ffbe00a#ffc000s#ffc300h#ffc600.#ffc800 #ffcb00O#ffcd00u#ffd000r#ffd300 #ffd500 #ffd800 #ffda00 ")
hecho("\n#ff4e00F#ff4900u#ff4400r#ff3e00y#ff3900 #ff3400i#ff2f00s#ff2a00 #ff2400a#ff1f00 #ff1a00m#ff1500e#ff1000a#ff0a00n#ff0500i#ff0000n#ff0300g#ff0500f#ff0800u#ff0a00l#ff0d00 #ff0f00t#ff1200h#ff1400i#ff1700n#ff1900g#ff1c00.#ff1e00 #ff2100I#ff2400t#ff2600 #ff2900i#ff2b00s#ff2e00 #ff3000n#ff3300o#ff3500t#ff3800 #ff3a00o#ff3d00u#ff3f00r#ff4200 #ff4500o#ff4700w#ff4a00n#ff4c00,#ff4f00 #ff5100i#ff5400t#ff5600 #ff5900i#ff5b00s#ff5e00 #ff6100n#ff6300o#ff6600t#ff6800 #ff6b00a#ff6d00 #ff7000p#ff7200e#ff7500t#ff7700t#ff7a00y#ff7c00 #ff7f00r#ff8200a#ff8400l#ff8700l#ff8900y#ff8c00i#ff8f00n#ff9100g#ff9400 #ff9700c#ff9900r#ff9c00y#ff9e00 #ffa100t#ffa400o#ffa600 #ffa900b#ffab00e#ffae00 #ffb100i#ffb300n#ffb600v#ffb800o#ffbb00k#ffbe00e#ffc000d#ffc300 #ffc600b#ffc800y#ffcb00 #ffcd00 #ffd000 #ffd300 #ffd500 #ffd800 ")
hecho("\n#ff5300o#ff4e00u#ff4900t#ff4400s#ff3e00i#ff3900d#ff3400e#ff2f00r#ff2a00s#ff2400 #ff1f00o#ff1a00r#ff1500 #ff1000i#ff0a00n#ff0500d#ff0000i#ff0300v#ff0500i#ff0800d#ff0a00u#ff0d00a#ff0f00l#ff1200s#ff1400.#ff1700 #ff1900T#ff1c00h#ff1e00e#ff2100 #ff2400F#ff2600u#ff2900r#ff2b00y#ff2e00 #ff3000o#ff3300f#ff3500 #ff3800D#ff3a00u#ff3d00i#ff3f00r#ff4200a#ff4500n#ff4700 #ff4a00i#ff4c00s#ff4f00 #ff5100t#ff5400h#ff5600e#ff5900 #ff5b00F#ff5e00u#ff6100r#ff6300y#ff6600 #ff6800o#ff6b00f#ff6d00 #ff7000D#ff7200e#ff7500n#ff7700d#ff7a00a#ff7c00r#ff7f00a#ff8200,#ff8400 #ff8700t#ff8900h#ff8c00e#ff8f00 #ff9100F#ff9400u#ff9700r#ff9900y#ff9c00 #ff9e00o#ffa100f#ffa400 #ffa600a#ffa900l#ffab00l#ffae00 #ffb100t#ffb300h#ffb600i#ffb800n#ffbb00g#ffbe00s#ffc000 #ffc300t#ffc600h#ffc800a#ffcb00t#ffcd00 #ffd000 #ffd300 #ffd500 ")
hecho("\n#ff5800c#ff5300a#ff4e00n#ff4900n#ff4400o#ff3e00t#ff3900 #ff3400d#ff2f00e#ff2a00f#ff2400e#ff1f00n#ff1a00d#ff1500 #ff1000t#ff0a00h#ff0500e#ff0000m#ff0300s#ff0500e#ff0800l#ff0a00v#ff0d00e#ff0f00s#ff1200 #ff1400f#ff1700r#ff1900o#ff1c00m#ff1e00 #ff2100t#ff2400h#ff2600e#ff2900 #ff2b00c#ff2e00o#ff3000r#ff3300r#ff3500u#ff3800p#ff3a00t#ff3d00i#ff3f00o#ff4200n#ff4500 #ff4700a#ff4a00n#ff4c00d#ff4f00 #ff5100d#ff5400e#ff5600s#ff5900t#ff5b00r#ff5e00u#ff6100c#ff6300t#ff6600i#ff6800o#ff6b00n#ff6d00 #ff7000w#ff7200r#ff7500o#ff7700u#ff7a00g#ff7c00h#ff7f00t#ff8200 #ff8400b#ff8700y#ff8900 #ff8c00t#ff8f00h#ff9100o#ff9400s#ff9700e#ff9900 #ff9c00t#ff9e00h#ffa100i#ffa400n#ffa600g#ffa900s#ffab00 #ffae00t#ffb100h#ffb300a#ffb600t#ffb800 #ffbb00s#ffbe00t#ffc000a#ffc300n#ffc600d#ffc800 #ffcb00 #ffcd00 #ffd000 #ffd300 ")
hecho("\n#ff5e00a#ff5800g#ff5300a#ff4e00i#ff4900n#ff4400s#ff3e00t#ff3900 #ff3400u#ff2f00s#ff2a00.#ff2400 #ff1f00T#ff1a00h#ff1500e#ff1000 #ff0a00F#ff0500u#ff0000r#ff0300y#ff0500 #ff0800o#ff0a00f#ff0d00 #ff0f00L#ff1200i#ff1400f#ff1700e#ff1900,#ff1c00 #ff1e00t#ff2100o#ff2400o#ff2600 #ff2900o#ff2b00f#ff2e00t#ff3000e#ff3300n#ff3500 #ff3800m#ff3a00a#ff3d00d#ff3f00e#ff4200 #ff4500u#ff4700n#ff4a00c#ff4c00l#ff4f00e#ff5100a#ff5400n#ff5600,#ff5900 #ff5b00m#ff5e00a#ff6100d#ff6300e#ff6600 #ff6800t#ff6b00o#ff6d00 #ff7000y#ff7200e#ff7500a#ff7700r#ff7a00n#ff7c00 #ff7f00f#ff8200o#ff8400r#ff8700 #ff8900a#ff8c00 #ff8f00p#ff9100u#ff9400r#ff9700i#ff9900t#ff9c00y#ff9e00 #ffa100i#ffa400t#ffa600 #ffa900c#ffab00a#ffae00n#ffb100n#ffb300o#ffb600t#ffb800 #ffbb00g#ffbe00r#ffc000a#ffc300n#ffc600t#ffc800 #ffcb00 #ffcd00 #ffd000 ")
hecho("\n#ff6300i#ff5e00t#ff5800s#ff5300e#ff4e00l#ff4900f#ff4400.#ff3e00 #ff3900O#ff3400u#ff2f00r#ff2a00 #ff2400F#ff1f00u#ff1a00r#ff1500y#ff1000 #ff0a00i#ff0500s#ff0000 #ff0300s#ff0500a#ff0800c#ff0a00r#ff0d00e#ff0f00d#ff1200,#ff1400 #ff1700w#ff1900e#ff1c00 #ff1e00m#ff2100u#ff2400s#ff2600t#ff2900 #ff2b00b#ff2e00e#ff3000 #ff3300c#ff3500a#ff3800r#ff3a00e#ff3d00f#ff3f00u#ff4200l#ff4500 #ff4700W#ff4a00h#ff4c00o#ff4f00 #ff5100i#ff5400s#ff5600 #ff5900a#ff5b00l#ff5e00l#ff6100o#ff6300w#ff6600e#ff6800d#ff6b00 #ff6d00t#ff7000o#ff7200 #ff7500h#ff7700a#ff7a00v#ff7c00e#ff7f00 #ff8200a#ff8400 #ff8700c#ff8900l#ff8c00a#ff8f00i#ff9100m#ff9400 #ff9700o#ff9900n#ff9c00 #ff9e00t#ffa100h#ffa400o#ffa600s#ffa900e#ffab00 #ffae00w#ffb100h#ffb300o#ffb600 #ffb800k#ffbb00e#ffbe00e#ffc000p#ffc300 #ffc600i#ffc800t#ffcb00.#ffcd00 ")
hecho("\n#ff6800 #ff6300 #ff5e00 #ff5800 #ff5300 #ff4e00 #ff4900 #ff4400 #ff3e00 #ff3900 #ff3400 #ff2f00 #ff2a00 #ff2400 #ff1f00 #ff1a00 #ff1500 #ff1000 #ff0a00 #ff0500 #ff0000 #ff0300 #ff0500 #ff0800 #ff0a00 #ff0d00 #ff0f00 #ff1200 #ff1400 #ff1700 #ff1900 #ff1c00 #ff1e00 #ff2100 #ff2400 #ff2600 #ff2900 #ff2b00 #ff2e00 #ff3000 #ff3300 #ff3500 #ff3800 #ff3a00 #ff3d00 #ff3f00 #ff4200 #ff4500 #ff4700 #ff4a00 #ff4c00 #ff4f00 #ff5100 #ff5400 #ff5600 #ff5900 #ff5b00 #ff5e00 #ff6100 #ff6300 #ff6600 #ff6800 #ff6b00 #ff6d00 #ff7000 #ff7200 #ff7500 #ff7700 #ff7a00 #ff7c00 #ff7f00 #ff8200 #ff8400 #ff8700 #ff8900 #ff8c00 #ff8f00 #ff9100 #ff9400 #ff9700 #ff9900 #ff9c00 #ff9e00 #ffa100 #ffa400 #ffa600 #ffa900 #ffab00 #ffae00 #ffb100 #ffb300 #ffb600 #ffb800 #ffbb00 #ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 #ffcb00 ")
hecho("\n#ff6d00.#ff6800:#ff6300*#ff5e00~#ff5800*#ff5300:#ff4e00.#ff4900_#ff4400.#ff3e00:#ff3900*#ff3400~#ff2f00*#ff2a00:#ff2400.#ff1f00_#ff1a00.#ff1500:#ff1000*#ff0a00~#ff0500*#ff0000:#ff0300.#ff0500_#ff0800.#ff0a00:#ff0d00*#ff0f00~#ff1200*#ff1400:#ff1700.#ff1900_#ff1c00.#ff1e00:#ff2100*#ff2400~#ff2600*#ff2900:#ff2b00.#ff2e00_#ff3000.#ff3300:#ff3500*#ff3800~#ff3a00*#ff3d00:#ff3f00.#ff4200_#ff4500.#ff4700:#ff4a00*#ff4c00~#ff4f00*#ff5100:#ff5400.#ff5600_#ff5900.#ff5b00:#ff5e00*#ff6100~#ff6300*#ff6600:#ff6800.#ff6b00_#ff6d00.#ff7000:#ff7200*#ff7500~#ff7700*#ff7a00:#ff7c00.#ff7f00_#ff8200.#ff8400:#ff8700*#ff8900~#ff8c00*#ff8f00:#ff9100.#ff9400_#ff9700.#ff9900:#ff9c00*#ff9e00~#ffa100*#ffa400:#ffa600.#ffa900_#ffab00.#ffae00:#ffb100*#ffb300~#ffb600*#ffb800:#ffbb00.#ffbe00 #ffc000 #ffc300 #ffc600 #ffc800 ")
cechoLink("\n\n&lt;red&gt; BACK TO TAKAROS",function() expandAlias("takaros") end, "back", true)
cechoLink("\n&lt;red&gt; BACK TO GUARDIANS",function() expandAlias("guardians") end, "back", true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^takaros3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^govon$</name>
					<script>hecho("\n#6b9f8dD#6ca08fU#6ca291R#6da394D#6ea496A#6fa598L#6fa79aI#70a89cS")
hecho("\n\n#6b9f8dY#6ca08fo#6ca291u#6da394 #6ea496g#6fa598r#6fa79ae#70a89ce#71a99et#71aaa1 #72aca3G#73ada5o#74aea7v#74afa9o#75b1acn#76b2ae #77b3b0w#77b4b2i#78b6b4t#79b7b6h#79b8b9 #7ab9bba#7bbbbd #7cbcbfs#7cbdc1i#7dbec4n#7ec0c6c#7ec1c8e#7fc2car#80c4cce#81c5ce #81c6d1s#82c7d3m#83c9d5i#83cad7l#84cbd9e#85ccdb.")
hecho("\n\n#6b9f8dG#6ca08fo#6ca291v#6da394o#6ea496n#6fa598 #6fa79as#70a89ca#71a99ey#71aaa1s#72aca3 #73ada5t#74aea7o#74afa9 #75b1acy#76b2aeo#77b3b0u#77b4b2,#78b6b4 #79b7b6\"#79b8b9M#7ab9bbm#7bbbbdm#7cbcbf.#7cbdc1 #7dbec4T#7ec0c6h#7ec1c8i#7fc2cas#80c4cc #81c5ceo#81c6d1n#82c7d3e#83c9d5'#83cad7s#84cbd9 #85ccdbp#86cedee#86cfe0o#87d0e2p#88d1e4l#89d3e6e#89d4e9 #8ad5eba#8bd6edr#8bd8efe#8cd9f1 #8ddaf3t#8edbf6i#8eddf8m#8fdefae#90daf9l#91d6f9e#92d2f8s#93cdf7s#94c9f6,#95c5f6 #96c1f5a#97bdf4n#98b9f3c#99b4f3i#9ab0f2e#9bacf1n#9ba8f0t#9ca4f0.#9da0ef #9e9beeW#9f97eee#a093ed #a18fecw#a28bebe#a387eba#a482eat#a57ee9h#a67ae8e#a776e8r#a872e7 #a96ee6t#aa69e5h#ab65e5e#ac61e4 #ad5de3e#ae59e2l#af55e2e#b050e1m#b14ce0e#b248e0n#b244dft#b340des#b43cdd ")
hecho("\n#6b9f8de#6ca08ff#6ca291f#6da394o#6ea496r#6fa598t#6fa79al#70a89ce#71a99es#71aaa1s#72aca3l#73ada5y#74aea7.#74afa9\"")
hecho("\n\n#6b9f8dG#6ca08fo#6ca291v#6da394o#6ea496n#6fa598 #6fa79al#70a89co#71a99ew#71aaa1e#72aca3r#73ada5s#74aea7 #74afa9i#75b1act#76b2aes#77b3b0 #77b4b2h#78b6b4e#79b7b6a#79b8b9d#7ab9bb,#7bbbbd #7cbcbfr#7cbdc1e#7dbec4g#7ec0c6a#7ec1c8r#7fc2cad#80c4cci#81c5cen#81c6d1g#82c7d3 #83c9d5y#83cad7o#84cbd9u#85ccdb #86cedei#86cfe0n#87d0e2 #88d1e4s#89d3e6i#89d4e9l#8ad5ebe#8bd6edn#8bd8efc#8cd9f1e#8ddaf3 #8edbf6f#8eddf8r#8fdefao#90daf9m#91d6f9 #92d2f8a#93cdf7 #94c9f6c#95c5f6r#96c1f5a#97bdf4g#98b9f3g#99b4f3y#9ab0f2 #9bacf1c#9ba8f0o#9ca4f0u#9da0efn#9e9beet#9f97eee#a093edn#a18feca#a28bebn#a387ebc#a482eae#a57ee9 #a67ae8b#a776e8e#a872e7f#a96ee6o#aa69e5r#ab65e5e#ac61e4 #ad5de3l#ae59e2o#af55e2o#b050e1k#b14ce0i#b248e0n#b244dfg#b340de #b43cddo#b537ddu#b633dct#b72fdbw#b82bdaa#b927dar#ba23d9d#bb1ed8 ")
hecho("\n#6b9f8da#6ca08fc#6ca291r#6da394o#6ea496s#6fa598s#6fa79a #70a89cD#71a99ee#71aaa1n#72aca3d#73ada5a#74aea7r#74afa9a#75b1ac #76b2aeo#77b3b0n#77b4b2c#78b6b4e#79b7b6 #79b8b9m#7ab9bbo#7bbbbdr#7cbcbfe#7cbdc1 #7dbec4w#7ec0c6i#7ec1c8t#7fc2cah#80c4cc #81c5cea#81c6d1 #82c7d3r#83c9d5u#83cad7m#84cbd9b#85ccdbl#86cedei#86cfe0n#87d0e2g#88d1e4 #89d3e6s#89d4e9i#8ad5ebg#8bd6edh#8bd8ef.")
hecho("\n\n#6b9f8dG#6ca08fo#6ca291v#6da394o#6ea496n#6fa598 #6fa79as#70a89ca#71a99ey#71aaa1s#72aca3 #73ada5t#74aea7o#74afa9 #75b1acy#76b2aeo#77b3b0u#77b4b2,#78b6b4 #79b7b6\"#79b8b9T#7ab9bbh#7bbbbdi#7cbcbfs#7cbdc1 #7dbec4o#7ec0c6n#7ec1c8e#7fc2ca #80c4cci#81c5ces#81c6d1 #82c7d3o#83c9d5f#83cad7 #84cbd9D#85ccdbe#86ceden#86cfe0d#87d0e2a#88d1e4r#89d3e6a#89d4e9 #8ad5eba#8bd6edn#8bd8efd#8cd9f1 #8ddaf3s#8edbf6o#8eddf8 #8fdefas#90daf9h#91d6f9a#92d2f8l#93cdf7l#94c9f6 #95c5f6y#96c1f5o#97bdf4u#98b9f3 #99b4f3b#9ab0f2e#9bacf1 #9ba8f0l#9ca4f0i#9da0eft#9e9beet#9f97eel#a093ede#a18fec #a28bebo#a387ebn#a482eae#a57ee9.#a67ae8 #a776e8Y#a872e7o#a96ee6u#aa69e5 #ab65e5h#ac61e4a#ad5de3v#ae59e2e#af55e2 #b050e1p#b14ce0r#b248e0o#b244dfv#b340dee#b43cddn#b537dd #b633dcy#b72fdbo#b82bdau#b927dar#ba23d9s#bb1ed8e#bc1ad7l#bd16d7f#be12d6 ")
hecho("\n#6b9f8dt#6ca08fo#6ca291 #6da394t#6ea496h#6fa598e#6fa79a #70a89ca#71a99en#71aaa1c#72aca3i#73ada5e#74aea7n#74afa9t#75b1acs#76b2ae.#77b3b0\"")
hecho("\n\n#6b9f8dG#6ca08fo#6ca291v#6da394o#6ea496n#6fa598 #6fa79ap#70a89cl#71a99ea#71aaa1c#72aca3e#73ada5s#74aea7 #74afa9a#75b1ac #76b2aeh#77b3b0e#77b4b2a#78b6b4v#79b7b6y#79b8b9 #7ab9bbh#7bbbbda#7cbcbfn#7cbdc1d#7dbec4 #7ec0c6u#7ec1c8p#7fc2cao#80c4ccn#81c5ce #81c6d1y#82c7d3o#83c9d5u#83cad7,#84cbd9 #85ccdbi#86cedet#86cfe0s#87d0e2 #88d1e4h#89d3e6o#89d4e9l#8ad5ebl#8bd6edo#8bd8efw#8cd9f1 #8ddaf3e#8edbf6y#8eddf8e#8fdefas#90daf9 #91d6f9r#92d2f8e#93cdf7g#94c9f6a#95c5f6r#96c1f5d#97bdf4i#98b9f3n#99b4f3g#9ab0f2 #9bacf1y#9ba8f0o#9ca4f0u#9da0ef #9e9beeo#9f97een#a093edc#a18fece#a28beb #a387ebm#a482eao#a57ee9r#a67ae8e#a776e8 #a872e7a#a96ee6s#aa69e5 #ab65e5t#ac61e4h#ad5de3e#ae59e2 #af55e2s#b050e1t#b14ce0r#b248e0e#b244dfn#b340deg#b43cddt#b537ddh#b633dc #b72fdbo#b82bdaf#b927da #ba23d9t#bb1ed8h#bc1ad7e#bd16d7 ")
hecho("\n#6b9f8dD#6ca08fu#6ca291r#6da394d#6ea496a#6fa598l#6fa79ai#70a89cs#71a99e #71aaa1f#72aca3l#73ada5o#74aea7w#74afa9s#75b1ac #76b2aet#77b3b0h#77b4b2r#78b6b4o#79b7b6u#79b8b9g#7ab9bbh#7bbbbd #7cbcbfy#7cbdc1o#7dbec4u#7ec0c6.")
hecho("\n\n#6b9f8dG#6ca08fo#6ca291v#6da394o#6ea496n#6fa598 #6fa79as#70a89ca#71a99ey#71aaa1s#72aca3 #73ada5t#74aea7o#74afa9 #75b1acy#76b2aeo#77b3b0u#77b4b2,#78b6b4 #79b7b6\"#79b8b9Y#7ab9bbo#7bbbbdu#7cbcbfr#7cbdc1 #7dbec4h#7ec0c6i#7ec1c8d#7fc2cae#80c4cc #81c5ces#81c6d1h#82c7d3a#83c9d5l#83cad7l#84cbd9 #85ccdbb#86cedee#86cfe0 #87d0e2a#88d1e4s#89d3e6 #89d4e9t#8ad5ebh#8bd6ede#8bd8ef #8cd9f1s#8ddaf3t#8edbf6o#8eddf8n#8fdefae#90daf9 #91d6f9o#92d2f8f#93cdf7 #94c9f6t#95c5f6h#96c1f5e#97bdf4 #98b9f3o#99b4f3l#9ab0f2d#9bacf1 #9ba8f0e#9ca4f0a#9da0efr#9e9beet#9f97eeh#a093ed.#a18fec\"")
hecho("\n\n#6b9f8dY#6ca08fo#6ca291u#6da394 #6ea496h#6fa598a#6fa79av#70a89ce#71a99e #71aaa1g#72aca3a#73ada5i#74aea7n#74afa9e#75b1acd#76b2ae #77b3b0t#77b4b2h#78b6b4e#79b7b6 #79b8b9O#7ab9bba#7bbbbdt#7cbcbfh#7cbdc1 #7dbec4o#7ec0c6f#7ec1c8 #7fc2cat#80c4cch#81c5cee#81c6d1 #82c7d3D#83c9d5u#83cad7r#84cbd9d#85ccdba#86cedel#86cfe0i#87d0e2s#88d1e4.")

</script>
					<command></command>
					<packageName></packageName>
					<regex>^govon$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^guardians$</name>
					<script>hecho("\n#78eb41 #7be740 #7de43e #80e03d #83dd3c #85d93b #88d539 #8bd238_#8dce37_#90ca36_#93c734_#95c333_#98c032_#9bbc30_#9eb82f #a0b52e_#a3b12d #a6ae2b #a8aa2a #aba629 #aea327_#b09f26 #b39b25_#b69824_#b89422_#bb9121_#be8d20_#c0891f_#c3861d #c6821c #c87e1b #cb7b19 #ce7718_#d07417_#d37016_#d66c14_#d96913_#db6512 #de6210_#e15e0f #e35a0e #e6570d #e9530b #eb4f0a_#ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308_#d65609_#d25909_#cd5c0a_#c95f0a_#c4620b #c0660b #bb690c_#b76c0c_#b26f0d_#ad720e_#a9750e_#a4780f #a07b0f_#9b7e10_#978110_#928411_#8e8711_#898a12 #858d12 #809013 #7c9313 #779614 #739914 #6e9c15 #6a9f15 #65a216 #60a517 #5ca817_#57ab18 #53af18 #4eb219 #4ab519_#45b81a #41bb1a #3cbe1b_#38c11b_#33c41c_#2fc71c_#2aca1d_#26cd1d #21d01e ")
hecho("\n#71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740 #7de43e|#80e03d_#83dd3c_#85d93b #88d539 #8bd238 #8dce37_#90ca36_#93c734|#95c333 #98c032|#9bbc30 #9eb82f #a0b52e|#a3b12d #a6ae2b|#a8aa2a #aba629 #aea327_#b09f26_#b39b25_#b69824_#b89422|#bb9121 #be8d20 #c0891f/#c3861d #c6821c_#c87e1b_#cb7b19_#ce7718_#d07417|#d37016 #d66c14|#d96913 #db6512 #de6210|#e15e0f #e35a0e|#e6570d #e9530b #eb4f0a/#ee4c09\\")hecho("#f14808 #f34506 #f64105 #f14406|#ed4706 #e84a07 #e44d07_#df5008_#db5308 #d65609\\")hecho("#d25909|#cd5c0a #c95f0a #c4620b_#c0660b_#bb690c #b76c0c\\")hecho("#b26f0d_#ad720e #a9750e #a4780f #a07b0f_#9b7e10|#978110 #928411 #8e8711 #898a12/#858d12\\")hecho("#809013 #7c9313 #779614 #739914|#6e9c15 #6a9f15\\")hecho("#65a216 #60a517|#5ca817 #57ab18|#53af18/#4eb219 #4ab519_#45b81a_#41bb1a_#3cbe1b_#38c11b|#33c41c ")
hecho("\n#69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740|#7de43e #80e03d|#83dd3c #85d93b #88d539|#8bd238 #8dce37|#90ca36_#93c734_#95c333|#98c032 #9bbc30|#9eb82f #a0b52e|#a3b12d_#a6ae2b_#a8aa2a #aba629 #aea327 #b09f26 #b39b25|#b69824 #b89422|#bb9121 #be8d20 #c0891f_#c3861d_#c6821c|#c87e1b #cb7b19|#ce7718 #d07417 #d37016|#d66c14 #d96913|#db6512 #de6210/#e15e0f #e35a0e #e6570d\\")hecho("#e9530b #eb4f0a #ee4c09|#f14808 #f34506|#f64105_#f14406_#ed4706)#e84a07 #e44d07|#df5008 #db5308|#d65609 #d25909 #cd5c0a|#c95f0a #c4620b|#c0660b|#bb690c #b76c0c|#b26f0d #ad720e #a9750e #a4780f #a07b0f/#9b7e10 #978110 #928411\\")hecho("#8e8711 #898a12 #858d12|#809013 #7c9313 #779614\\")hecho("#739914|#6e9c15 #6a9f15|#65a216 #60a517(#5ca817_#57ab18_#53af18_#4eb219 #4ab519 #45b81a ")
hecho("\n#62e438 #64e539 #65e53a #67e63a #69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f|#74ea40 #76ea40|#78eb41 #7be740 #7de43e|#80e03d #83dd3c #85d93b_#88d539_#8bd238 #8dce37 #90ca36|#93c734 #95c333 #98c032_#9bbc30_#9eb82f|#a0b52e #a3b12d #a6ae2b #a8aa2a|#aba629 #aea327|#b09f26 #b39b25|#b69824_#b89422 #bb9121|#be8d20 #c0891f|#c3861d #c6821c #c87e1b|#cb7b19 #ce7718|#d07417/#d37016 #d66c14/#d96913\\")hecho("#db6512 #de6210\\")hecho("#e15e0f #e35a0e|#e6570d #e9530b #eb4f0a_#ee4c09 #f14808 #f34506/#f64105|#f14406 #ed4706|#e84a07 #e44d07 #df5008|#db5308 #d65609|#d25909|#cd5c0a #c95f0a|#c4620b #c0660b #bb690c #b76c0c/#b26f0d #ad720e/#a9750e\\")hecho("#a4780f #a07b0f\\")hecho("#9b7e10 #978110|#928411 #8e8711.#898a12 #858d12`#809013 #7c9313|#779614\\")hecho("#739914_#6e9c15_#6a9f15_#65a216 #60a517\\")hecho("#5ca817 #57ab18 ")
hecho("\n#5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539 #65e53a #67e63a #69e63b #6be73c|#6de83d #6fe83d|#71e93e #72e93f #74ea40|#76ea40 #78eb41|#7be740 #7de43e #80e03d|#83dd3c #85d93b|#88d539 #8bd238|#8dce37_#90ca36_#93c734_#95c333_#98c032 #9bbc30 #9eb82f|#a0b52e #a3b12d|#a6ae2b_#a8aa2a_#aba629|#aea327 #b09f26|#b39b25 #b69824|#b89422_#bb9121_#be8d20|#c0891f #c3861d/#c6821c #c87e1b_#cb7b19_#ce7718_#d07417_#d37016 #d66c14\\")hecho("#d96913|#db6512 #de6210|#e15e0f #e35a0e\\")hecho("#e6570d #e9530b\\")hecho("#eb4f0a|#ee4c09 #f14808|#f34506_#f64105_#f14406|#ed4706 #e84a07|#e44d07|#df5008 #db5308|#d65609_#d25909 #cd5c0a/#c95f0a #c4620b_#c0660b_#bb690c_#b76c0c_#b26f0d #ad720e\\")hecho("#a9750e|#a4780f #a07b0f|#9b7e10\\")hecho("#978110 #928411 #8e8711|#898a12_#858d12_#809013_#7c9313_#779614)#739914 #6e9c15|#6a9f15 ")
hecho("\n#53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539|#65e53a_#67e63a|#69e63b #6be73c #6de83d|#6fe83d_#71e93e|#72e93f #74ea40 #76ea40|#78eb41_#7be740|#7de43e_#80e03d_#83dd3c_#85d93b_#88d539_#8bd238_#8dce37|#90ca36 #93c734 #95c333\\")hecho("#98c032_#9bbc30_#9eb82f_#a0b52e_#a3b12d_#a6ae2b|#a8aa2a\\")hecho("#aba629_#aea327_#b09f26_#b39b25_#b69824/#b89422_#bb9121/#be8d20_#c0891f_#c3861d_#c6821c #c87e1b\\")hecho("#cb7b19_#ce7718\\")hecho("#d07417_#d37016|#d66c14_#d96913_#db6512\\")hecho("#de6210_#e15e0f\\")hecho("#e35a0e_#e6570d_#e9530b_#eb4f0a_#ee4c09_#f14808/#f34506_#f64105_#f14406_#ed4706_#e84a07_#e44d07/#df5008_#db5308/#d65609 #d25909 #cd5c0a #c95f0a #c4620b\\")hecho("#c0660b_#bb690c\\")hecho("#b76c0c_#b26f0d|#ad720e #a9750e\\")hecho("#a4780f_#a07b0f|#9b7e10_#978110_#928411_#8e8711_#898a12_#858d12/#809013 #7c9313 ")
hecho("\n#4cdd2f #4dde30 #4fde31 #51df31 #53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539 #65e53a #67e63a #69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740 #7de43e #80e03d #83dd3c #85d93b #88d539 #8bd238 #8dce37 #90ca36 #93c734 #95c333 #98c032 #9bbc30 #9eb82f #a0b52e #a3b12d #a6ae2b #a8aa2a #aba629 #aea327/#b09f26 #b39b25_#b69824_#b89422 #bb9121\\")hecho("#be8d20|#c0891f #c3861d #c6821c_#c87e1b_#cb7b19_#ce7718_#d07417|#d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308 #d65609 #d25909 #cd5c0a #c95f0a #c4620b #c0660b #bb690c #b76c0c #b26f0d #ad720e #a9750e #a4780f #a07b0f #9b7e10 #978110 #928411 #8e8711 ")
hecho("\n#44db2c #46db2d #48dc2e #4add2e #4cdd2f #4dde30 #4fde31 #51df31 #53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539 #65e53a #67e63a #69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740 #7de43e #80e03d #83dd3c #85d93b #88d539 #8bd238 #8dce37 #90ca36 #93c734 #95c333 #98c032 #9bbc30 #9eb82f #a0b52e|#a3b12d #a6ae2b|#a8aa2a #aba629 #aea327|#b09f26 #b39b25|#b69824 #b89422|#bb9121_#be8d20_#c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308 #d65609 #d25909 #cd5c0a #c95f0a #c4620b #c0660b #bb690c #b76c0c #b26f0d #ad720e #a9750e #a4780f #a07b0f ")
hecho("\n#3dd929 #3fd92a #40da2b #42da2b #44db2c #46db2d #48dc2e #4add2e #4cdd2f #4dde30 #4fde31 #51df31 #53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539 #65e53a #67e63a #69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740 #7de43e #80e03d #83dd3c #85d93b #88d539 #8bd238 #8dce37 #90ca36 #93c734 #95c333|#98c032 #9bbc30|#9eb82f #a0b52e #a3b12d|#a6ae2b #a8aa2a|#aba629 #aea327 #b09f26_#b39b25_#b69824|#b89422 #bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308 #d65609 #d25909 #cd5c0a #c95f0a #c4620b #c0660b #bb690c #b76c0c #b26f0d ")
hecho("\n#35d626 #37d727 #39d728 #3bd828 #3dd929 #3fd92a #40da2b #42da2b #44db2c #46db2d #48dc2e #4add2e #4cdd2f #4dde30 #4fde31 #51df31 #53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236 #5ee337 #60e437 #62e438 #64e539 #65e53a #67e63a #69e63b #6be73c #6de83d #6fe83d #71e93e #72e93f #74ea40 #76ea40 #78eb41 #7be740 #7de43e #80e03d #83dd3c #85d93b #88d539 #8bd238|#8dce37 #90ca36|#93c734_#95c333_#98c032|#9bbc30 #9eb82f|#a0b52e #a3b12d|#a6ae2b #a8aa2a #aba629 #aea327 #b09f26 #b39b25 #b69824 #b89422 #bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308 #d65609 #d25909 #cd5c0a #c95f0a #c4620b ")
hecho("\n#2ed423 #30d524 #32d525 #34d625 #35d626 #37d727 #39d728 #3bd828 #3dd929 #3fd92a #40da2b #42da2b #44db2c #46db2d #48dc2e #4add2e #4cdd2f #4dde30 #4fde31 #51df31 #53e032 #55e033 #57e134 #59e134 #5ae235 #5ce236_#5ee337_#60e437_#62e438_#64e539_#65e53a #67e63a #69e63b_#6be73c_#6de83d_#6fe83d_#71e93e_#72e93f_#74ea40 #76ea40_#78eb41 #7be740 #7de43e #80e03d_#83dd3c\\")hecho("#85d93b_#88d539_#8bd238_#8dce37_#90ca36/#93c734|#95c333_#98c032|#9bbc30 #9eb82f #a0b52e #a3b12d #a6ae2b #a8aa2a #aba629 #aea327_#b09f26_#b39b25_#b69824_#b89422_#bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 #e44d07 #df5008 #db5308 #d65609 ")
hecho("\n#27d220 #28d221 #2ad322 #2cd322 #2ed423 #30d524 #32d525 #34d625 #35d626 #37d727 #39d728 #3bd828 #3dd929 #3fd92a #40da2b #42da2b #44db2c #46db2d #48dc2e #4add2e #4cdd2f #4dde30 #4fde31 #51df31 #53e032|#55e033 #57e134 #59e134_#5ae235_#5ce236 #5ee337\\")hecho("#60e437|#62e438 #64e539 #65e53a_#67e63a_#69e63b_#6be73c_#6de83d|#6fe83d #71e93e\\")hecho("#72e93f #74ea40|#76ea40 #78eb41|#7be740 #7de43e #80e03d_#83dd3c_#85d93b #88d539\\")hecho("#8bd238 #8dce37 #90ca36 #93c734/#95c333\\")hecho("#98c032 #9bbc30 #9eb82f #a0b52e|#a3b12d #a6ae2b #a8aa2a_#aba629_#aea327 #b09f26\\")hecho("#b39b25 #b69824 #b89422 #bb9121 #be8d20 #c0891f/#c3861d\\")hecho("#c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 #f64105 #f14406 #ed4706 #e84a07 ")
hecho("\n#26cd1d #21d01e #23d11f #25d11f #27d220 #28d221 #2ad322 #2cd322 #2ed423 #30d524 #32d525 #34d625 #35d626 #37d727 #39d728 #3bd828 #3dd929 #3fd92a #40da2b #42da2b #44db2c #46db2d #48dc2e #4add2e #4cdd2f|#4dde30 #4fde31|#51df31 #53e032 #55e033|#57e134 #59e134|#5ae235 #5ce236|#5ee337_#60e437_#62e438 #64e539 #65e53a|#67e63a #69e63b #6be73c\\")hecho("#6de83d|#6fe83d #71e93e|#72e93f #74ea40|#76ea40 #78eb41 #7be740|#7de43e #80e03d|#83dd3c #85d93b/#88d539 #8bd238 #8dce37\\")hecho("#90ca36 #93c734 #95c333|#98c032 #9bbc30|#9eb82f_#a0b52e_#a3b12d)#a6ae2b #a8aa2a|#aba629 #aea327 #b09f26 #b39b25/#b69824 #b89422 #bb9121\\")hecho("#be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b #eb4f0a #ee4c09 #f14808 #f34506 ")
hecho("\n#38c11b #33c41c #2fc71c #2aca1d #26cd1d #21d01e #23d11f #25d11f #27d220 #28d221 #2ad322 #2cd322 #2ed423 #30d524 #32d525 #34d625 #35d626 #37d727 #39d728 #3bd828 #3dd929 #3fd92a #40da2b #42da2b #44db2c|#46db2d #48dc2e|#4add2e #4cdd2f #4dde30|#4fde31 #51df31|#53e032 #55e033 #57e134_#59e134_#5ae235|#5ce236 #5ee337|#60e437 #62e438.#64e539 #65e53a`#67e63a #69e63b|#6be73c #6de83d|#6fe83d #71e93e #72e93f|#74ea40 #76ea40|#78eb41/#7be740 #7de43e/#80e03d\\")hecho("#83dd3c #85d93b\\")hecho("#88d539 #8bd238|#8dce37 #90ca36 #93c734_#95c333 #98c032 #9bbc30/#9eb82f #a0b52e #a3b12d #a6ae2b/#a8aa2a #aba629/#aea327\\")hecho("#b09f26 #b39b25\\")hecho("#b69824 #b89422 #bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 #e15e0f #e35a0e #e6570d #e9530b ")
hecho("\n#4ab519 #45b81a #41bb1a #3cbe1b #38c11b #33c41c #2fc71c #2aca1d #26cd1d #21d01e #23d11f #25d11f #27d220 #28d221 #2ad322 #2cd322 #2ed423 #30d524 #32d525 #34d625 #35d626 #37d727 #39d728 #3bd828 #3dd929|#3fd92a #40da2b|#42da2b_#44db2c_#46db2d|#48dc2e #4add2e|#4cdd2f #4dde30|#4fde31_#51df31_#53e032_#55e033_#57e134|#59e134 #5ae235|#5ce236\\")hecho("#5ee337 #60e437 #62e438|#64e539 #65e53a|#67e63a_#69e63b_#6be73c|#6de83d #6fe83d/#71e93e #72e93f_#74ea40_#76ea40_#78eb41_#7be740 #7de43e\\")hecho("#80e03d|#83dd3c #85d93b|#88d539 #8bd238\\")hecho("#8dce37 #90ca36\\")hecho("#93c734 #95c333 #98c032/#9bbc30 #9eb82f_#a0b52e_#a3b12d_#a6ae2b_#a8aa2a #aba629\\")hecho("#aea327 #b09f26 #b39b25 #b69824 #b89422 #bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 #d66c14 #d96913 #db6512 #de6210 ")
hecho("\n#5ca817 #57ab18 #53af18 #4eb219 #4ab519 #45b81a #41bb1a #3cbe1b #38c11b #33c41c #2fc71c #2aca1d #26cd1d #21d01e #23d11f #25d11f #27d220 #28d221 #2ad322 #2cd322 #2ed423 #30d524 #32d525 #34d625 #35d626|#37d727_#39d728_#3bd828_#3dd929_#3fd92a_#40da2b/#42da2b|#44db2c_#46db2d_#48dc2e_#4add2e_#4cdd2f_#4dde30_#4fde31|#51df31_#53e032|#55e033 #57e134\\")hecho("#59e134_#5ae235|#5ce236_#5ee337_#60e437_#62e438_#64e539_#65e53a/#67e63a_#69e63b/#6be73c #6de83d #6fe83d #71e93e #72e93f\\")hecho("#74ea40_#76ea40\\")hecho("#78eb41_#7be740|#7de43e #80e03d #83dd3c\\")hecho("#85d93b_#88d539\\")hecho("#8bd238/#8dce37_#90ca36/#93c734 #95c333 #98c032 #9bbc30 #9eb82f\\")hecho("#a0b52e_#a3b12d\\")hecho("#a6ae2b #a8aa2a #aba629 #aea327 #b09f26 #b39b25 #b69824 #b89422 #bb9121 #be8d20 #c0891f #c3861d #c6821c #c87e1b #cb7b19 #ce7718 #d07417 #d37016 ")
echo("\n")
cechoLink("\n &lt;white&gt;~ THE WARDEN",  function() expandAlias("rhulvok") end, "The Warden", true)cecho("   ")cechoLink("&lt;violet_red&gt;~ THE SEER",  function() expandAlias("srahda") end, "The Seer", true)cecho("       ")cechoLink("&lt;navy_blue&gt;~ THE SHADOW",  function() expandAlias("vo'acha") end, "The Shadow", true)cecho("     ")cechoLink("&lt;forest_green&gt;~ THE BROODMOTHER",  function() expandAlias("kree-sa") end, "The Broodmother", true)cecho("   ")cechoLink("&lt;salmon&gt;~ THE KEEPER",  function() expandAlias("griash") end, "The Keeper", true)cecho("   ")cechoLink("&lt;ansiLightRed&gt;~ THE FURY",  function() expandAlias("takaros") end, "The Fury", true)
cechoLink("\n &lt;white&gt;* Rhulvok",  function() expandAlias("rhulvok3") end, "Rhulvok", true)cecho("      ")cechoLink("&lt;violet_red&gt;* Srahda",  function() expandAlias("srahda3") end, "Srahda", true)cecho("         ")cechoLink("&lt;navy_blue&gt;* Vo'acha",  function() expandAlias("vo'acha3") end, "Vo'acha", true)cecho("        ")cechoLink("&lt;forest_green&gt;* Kree-sa",  function() expandAlias("kree-sa3") end, "Kree-Sa", true)cecho("           ")cechoLink("&lt;salmon&gt;* Griash",  function() expandAlias("griash3") end, "Griash", true)cecho("       ")cechoLink("&lt;ansiLightRed&gt;* Takaros", function() expandAlias("takaros3") end, "Takaros", true)
cechoLink("\n &lt;white&gt;* Havar",  function() expandAlias("rhulvok1") end, "Havar", true)cecho("        ")cechoLink("&lt;violet_red&gt;* Vras",  function() expandAlias("srahda1") end, "Vras", true)cecho("           ")cechoLink("&lt;navy_blue&gt;* Miazi",  function() expandAlias("vo'acha1") end, "Miazi", true)cecho("          ")cechoLink("&lt;forest_green&gt;* Narra",  function() expandAlias("kree-sa1") end, "Narra", true)cecho("             ")cechoLink("&lt;salmon&gt;* Gortuk",  function() cecho("\n&lt;white&gt;Nothing to see here, sorry!") end, "Gortuk", true)cecho("       ")cechoLink("&lt;ansiLightRed&gt;* Judoc", function() cecho("\n&lt;white&gt;Nothing to see here, sorry!") end, "Judoc", true)
cechoLink("\n &lt;white&gt;* Tranquility",  function() expandAlias("rhulvok2") end, "Tranquility", true)cecho("  ")cechoLink("&lt;violet_red&gt;* Elder Shaman",  function() expandAlias("srahda2") end, "Elder Shaman", true)cecho("   ")cechoLink("&lt;navy_blue&gt;* Forestwalker",  function() expandAlias("vo'acha2") end, "Forestwalker", true)cecho("   ")cechoLink("&lt;forest_green&gt;* Nature's Blade",  function() expandAlias("kree-sa2") end, "Nature's Blade", true)cecho("    ")cechoLink("&lt;salmon&gt;* Rhythm",  function() expandAlias("griash2") end, "Rhythm", true)cecho("       ")cechoLink("&lt;ansiLightRed&gt;* Primeval", function() expandAlias("takaros2") end, "Primeval", true)
cechoLink("\n\n                                 &lt;white&gt; T     &lt;violet_red&gt;I     &lt;navy_blue&gt;A     &lt;forest_green&gt;R     &lt;salmon&gt;N     &lt;ansiLightRed&gt;A    ", function() expandAlias("tiarna") end, "Tiarna", true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^guardians$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rhulvok$</name>
					<script>cecho("\n&lt;white&gt;                   _.--\"\"\"\"--.._                        _____ ")
cecho("\n&lt;white&gt;               _.\"\"    .'       `-._                   |  __ \\")
cecho("\n&lt;white&gt;             .\";      ;           ; `-.                | |__) |")
cecho("\n&lt;white&gt;            / /     .'           ;     `.              |  _  /")
cecho("\n&lt;white&gt;           / ;     ;             ;       \\             | | \\ \\")
cecho("\n&lt;white&gt;          ; :      :             :     `-.\\            |_|  \\_\\")
cecho("\n&lt;white&gt;          ; ;      :              `.      `;            _    _")
cecho("\n&lt;white&gt;          : :      :                \\      :           | |  | |")
cecho("\n&lt;white&gt;          : \\      `:                \\   `.;           | |__| |  ")
cecho("\n&lt;white&gt;           \\ \\      `;                ;    ;           |  __  |")
cecho("\n&lt;white&gt;            \\ : .'   ;                |   ;            | |  | |  ")
cecho("\n&lt;white&gt;             `&gt;'     :              `.;   )            |_|  |_|")
cecho("\n&lt;white&gt;             / _.'               `.  ;/ _(              _    _  ")
cecho("\n&lt;white&gt;            ;,'     ;    `.        `.;    `-.          | |  | |")
cecho("\n&lt;white&gt;           ;' .'   :    `. `.       / \\, \\ \\ \\         | |  | |  ")
cecho("\n&lt;white&gt;           :,'     :      `. `. \\  ; ::\\_/_/_/::       | |  | |")
cecho("\n&lt;white&gt;         .-=:.-\"  -,-   \"-.,=-.\\ ;.; :::; ; ;::        | |__| |")
cecho("\n&lt;white&gt;         |(`.`     :       .')| \\: `.  :::::::          \\____/")
cecho("\n&lt;white&gt;          \\/      :       \\//   ;   \\                    _")
cecho("\n&lt;white&gt;           :      .:.       :  _/     ;                 | |")
cecho("\n&lt;white&gt; /         ;                ;  ;      |                 | |")
cecho("\n&lt;white&gt;'          :    _     _    ;  /       ;              /| | |")
cecho("\n&lt;white&gt;            `.  \\;   ;/  .' .'       /              /:| | |____")
cecho("\n&lt;white&gt;              !  :   :  !_.'        /           .--::/  |______|")
cecho("\n&lt;white&gt;__             `.:   :.'/\\         ;      ____.':|:|/   _      _")
cecho("\n&lt;white&gt;:|\\              \\ _ /  | :       :   ___/|:::|:'\"\"\"   \\ \\    / /")
cecho("\n&lt;white&gt; |:\\             ;\"^\"   | !       :__/|::|/\"\"\"\"         \\ \\  / /  ")  cechoLink(" &lt;light_gray&gt;* Rhulvok",  function() expandAlias("rhulvok3") end, "Rhulvok", true)
cecho("\n&lt;white&gt; \\::\\_____     .-'      | ;       |::|/\"\"                \\ \\/ /")
cecho("\n&lt;white&gt;  \\:|::::|\\   / / /    / /       /\"\"\"                     \\  /")
cecho("\n&lt;white&gt;   \\|::::|:`--\\_\\_\\__.'-|       ;                          \\/     ")  cechoLink(" &lt;light_gray&gt;* Havar",  function() expandAlias("rhulvok1") end, "Havar", true)
cecho("\n&lt;white&gt;     \"\"\"\" \\::::::::::::/      .'                          ____")
cecho("\n&lt;white&gt;           \"\"\"\"\'\"\"\"\".-'      (                           / __ \\")
cecho("\n&lt;white&gt;    __,------.__.--/ , ,  , |/--._                      | |  | |  ")  cechoLink(" &lt;light_gray&gt;* Tranquility",  function() expandAlias("rhulvok2") end, "Tranquility", true)
cecho("\n&lt;white&gt;   /              :\\|  |  |v'     \_                     | |  | |")
cecho("\n&lt;white&gt;  |\              :::v-;v-'::       \\                    | |__| |")
cecho("\n&lt;white&gt;  \\:\\              :::::::::         \\                   \\____/     ")cechoLink("&lt;light_gray&gt; BACK",function() expandAlias("guardians") end, "back", true)
cecho("\n&lt;white&gt;   \\|`-.                             /|                  _  _")
cecho("\n&lt;white&gt;     `: \\          ____         ____/:/                 | |/ /")
cecho("\n&lt;white&gt;       \\|:-.______/|::|\\       /|:::|/                  | ' /")
cecho("\n&lt;white&gt;        |::|:::::|:/\"\"\"\\\\_____/:/\"\"\"\"                   |  &lt;")
cecho("\n&lt;white&gt;        `-:|:::::|/     \\|::::|/                        | . \\")
cecho("\n&lt;white&gt;           `\"\"\"\"\"'       `\"\"\"\"'                         |_|\\_\\")
cecho("\n&lt;white&gt;     _______ _    _ ______   _          _      _____  _____  ______ _   _")
cecho("\n&lt;white&gt;    |__   __| |  | |  ____| \\ \\        / /\\   |  __ \\|  __ \\|  ____| \\ | |")
cecho("\n&lt;white&gt;       | |  | |__| | |__     \\ \\  /\\  / /  \\  | |__) | |  | | |__  |  \\| |")
cecho("\n&lt;white&gt;       | |  |  __  |  __|     \\ \\/  \\/ / /\\ \\ |  _  /| |  | |  __| | . ` |")
cecho("\n&lt;white&gt;       | |  | |  | | |____     \\  /\\  / ____ \\| | \\ \\| |__| | |____| |\\  |")
cecho("\n&lt;white&gt;       |_|  |_|  |_|______|     \\/  \\/_/    \\_\\_|  \\_\\_____/|______|_| \\_|")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhulvok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^vo'acha$</name>
					<script>cecho("\n&lt;medium_blue&gt; __      ______  _          _____ _    _                                       ")
cecho("\n&lt;medium_blue&gt; \\ \\    / / __ \\( )   /\\   / ____| |  | |   /\\                                 ")
cecho("\n&lt;medium_blue&gt;  \\ \\  / / |  | |/   /  \\ | |    | |__| |  /  \\                                ")
cecho("\n&lt;medium_blue&gt;   \\ \\/ /| |  | |   / /\\ \\| |    |  __  | / /\\ \\                               ")
cecho("\n&lt;medium_blue&gt;    \\  / | |__| |  / ____ \\ |____| |  | |/ ____ \\                              ")
cecho("\n&lt;medium_blue&gt;     \\/___\\____/  /_/____\\_\\_____|_| _|_/_/    \\_\\   _____   ______          __")
cecho("\n&lt;medium_blue&gt;     |__   __| |  | |  ____|  / ____| |  | |   /\\   |  __ \\ / __ \\ \\        / /")
cecho("\n&lt;medium_blue&gt;        | |  | |__| | |__    | (___ | |__| |  /  \\  | |  | | |  | \\ \\  /\\  / / ")
cecho("\n&lt;medium_blue&gt;        | |  |  __  |  __|    \\___ \\|  __  | / /\\ \\ | |  | | |  | |\\ \\/  \\/ /  ")
cecho("\n&lt;medium_blue&gt;        | |  | |  | | |____   ____) | |  | |/ ____ \\| |__| | |__| | \\  /\\  /   ")
cecho("\n&lt;medium_blue&gt;        |_|  |_|  |_|______| |_____/|_|  |_/_/    \\_\\_____/ \\____/   \\/  \\/    ")
cecho("&lt;navy_blue&gt;\n                             _,..,,,_")
cecho("&lt;navy_blue&gt;\n                        '``````^~\"-,_`\"-,_")
cecho("&lt;navy_blue&gt;\n          .-~c~-.                    `~:. ^-.")
cecho("&lt;navy_blue&gt;\n      `~~~-.c    ;                      `:.  `-,     _.-~~^^~:.")
cecho("&lt;navy_blue&gt;\n            `.   ;      _,--~~~~-._       `:.   ~. .~          `.")
cecho("&lt;navy_blue&gt;\n             .` ;'   .:`           `:       `:.   `    _.:-,.    `.")
cecho("&lt;navy_blue&gt;\n           .' .:   :'    _.-~^~-.    `.       `..'   .:      `.    '")
cecho("&lt;navy_blue&gt;\n          :  .' _:'   .-'        `.    :.     .:   .'`.        :    ;")
cecho("&lt;navy_blue&gt;\n          :  `-'   .:'             `.    `^~~^`   .:.  `.      ;    ;")
cecho("&lt;navy_blue&gt;\n           `-.__,-~                  ~-.        ,' ':    '.__.`    :'")
cecho("&lt;navy_blue&gt;\n                                        ~--..--'     ':.         .:'")
cecho("&lt;navy_blue&gt;\n                                                        ':..___.:' ")
cecho("&lt;navy_blue&gt;\n      ")cechoLink(" &lt;medium_blue&gt;* Vo'acha",  function() expandAlias("vo'acha3") end, "Vo'acha", true)cecho("          ")cechoLink(" &lt;medium_blue&gt;* Miazi",  function() expandAlias("vo'acha1") end, "Miazi", true)cecho("          ")cechoLink(" &lt;medium_blue&gt;* Forestwalker",  function() expandAlias("vo'acha2") end, "Forestwalker", true)cecho("          ")cechoLink("&lt;medium_blue&gt; BACK",function() expandAlias("guardians") end, "back", true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^vo'acha$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^kree-sa$</name>
					<script>cecho("&lt;forest_green&gt;\n__________________________________________________________________________________________________")
cecho("&lt;forest_green&gt;\n!\\/        !        \\/         ./                                                    ||")
cecho("&lt;forest_green&gt;\n!/\\        !        |\\       ./                                                      ||")
cecho("&lt;forest_green&gt;\n!  \\       !       /  \\    ./                                                        ||")
cecho("&lt;forest_green&gt;\n!   \\______!______|    \\ ,/ _  _______  ______ ______      _____                     ||")
cecho("&lt;forest_green&gt;\n!   /\\     !    ./    ,/   | |/ /  __ \\|  ____|  ____|    / ____|  /\\                ||")
cecho("&lt;forest_green&gt;\n! /   \\    !    |   ,/     | ' /| |__) | |__  | |__ _____| (___   /  \\               ||")
cecho("&lt;forest_green&gt;\n!/     \\___!____|  ,/      |  &lt; |  _  /|  __| |  __|______\\___ \\ / /\\ \\              ||")
cecho("&lt;forest_green&gt;\n!     / \\ _!__ *\\,/        | . \\| | \\ \\| |____| |____     ____) / ____ \\             ||")
cecho("&lt;forest_green&gt;\n!    !   \\ !  \\,/          |_|\\_\\_|  \\_\\______|______|   |_____/_/    \\_\\            ||")
cecho("&lt;forest_green&gt;\n!    !  | \\! ,/                                                                _ /\\  ||  /\\ _")
cecho("&lt;forest_green&gt;\n!----------K/                                                                 / X  \\.--./  X \\")
cecho("&lt;forest_green&gt;\n!    ! ,!  /|      ,___________________________________________              /_/ \\/`    `\\/ \\_\\")
cecho("&lt;forest_green&gt;\n!    !/   / |      |\\'-._(   /                                 |            /|(`-/\\_/)(\\_/\\-`)|\\")
cecho("&lt;forest_green&gt;\n!   / \\  /  |      | \\  .'-._\\   ")cechoLink("&lt;lime_green&gt;* Kree-sa",  function() expandAlias("kree-sa3") end, "Kree-sa", true)cecho("&lt;forest_green&gt;                ,   ,|           ( |` (_(.oOOo.)_) `| )")
cecho("&lt;forest_green&gt;\n!\\./   \\/   |      |-.\\'    .-;                         .'\\`-' |           ` |  `//\\(  )/\\\\`  | `")
cecho("&lt;forest_green&gt;\n!/\\    /    |      |   \\  .' (   ")cechoLink("&lt;lime_green&gt;* Narra",  function() expandAlias("kree-sa1") end, "Narra", true)cecho("&lt;forest_green&gt;             _.'   \\   |             (  // ()\\/() \\\\  )")
cecho("&lt;forest_green&gt;\n!  \\  /    .o.     |.--.\\'   _)                   ;-;       \\._|              ` (   \\   /   ) `")
cecho("&lt;forest_green&gt;\n!   \\/     :O:     |    ` _\\(_)/_")cechoLink("&lt;lime_green&gt;* Nature's Blade",  function() expandAlias("kree-sa2") end, "Nature's Blade", true)cecho("&lt;forest_green&gt;  \\ `'-,_,-'\\ |                 \\         /  ")
cecho("&lt;forest_green&gt;\n!   /       \"      |______ /(O)\\  _________________/____)_`-._\\|                  `       `    ")
cecho("&lt;forest_green&gt;\n!  /                                                       ")cechoLink("&lt;lime_green&gt; BACK",function() expandAlias("guardians") end, "back", true)
cecho("&lt;forest_green&gt;\n! /")
cecho("&lt;forest_green&gt;\n!/")
cecho("&lt;forest_green&gt;\n!")
cecho("&lt;forest_green&gt;\n _______ _    _ _____   ____  _____   ____   ____  _____  __  __  ____ _______ _    _ _____ _____  ")
cecho("&lt;forest_green&gt;\n|__   __| |  | |  ___| |  _ \\|  __ \\ / __ \\ / __ \\|  __ \\|  \\/  |/ __ \\__   __| |  | |  ___|  __ \\")
cecho("&lt;forest_green&gt;\n   | |  | |__| | |_    | |_) | |__) | |  | | |  | | |  | | \\  / | |  | | | |  | |__| | |_  | |__) |")
cecho("&lt;forest_green&gt;\n   | |  |  __  |  _|   |  _ &lt;|  _  /| |  | | |  | | |  | | |\\/| | |  | | | |  |  __  |  _| |  _  / ")
cecho("&lt;forest_green&gt;\n   | |  | |  | | |___  | |_) | | \\ \\| |__| | |__| | |__| | |  | | |__| | | |  | |  | | |___| | \\ \\")
cecho("&lt;forest_green&gt;\n   |_|  |_|  |_|_____| |____/|_|  \\_\\\\____/ \\____/|_____/|_|  |_|\\____/  |_|  |_|  |_|_____|_|  \\_\\")</script>
					<command></command>
					<packageName></packageName>
					<regex>^kree-sa$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^srahda$</name>
					<script>
cecho("&lt;violet_red&gt;\n  /                        _.--._ _.---.__")
cecho("&lt;violet_red&gt;\n /                       .'  .-.'__.-----.\\")
cecho("&lt;violet_red&gt;\nJ                       /    `-'(__--'")
cecho("&lt;violet_red&gt;\n|                     .'       `. _ `--._")
cecho("&lt;violet_red&gt;\n|                    /            .`--'''`")
cecho("&lt;violet_red&gt;\n|                   /           .'   ")
cecho("&lt;violet_red&gt;\n|                _.'-.         J    ")
cecho("&lt;violet_red&gt;\nL               /    J         F       _____ _____            _    _ _____                    ")
cecho("&lt;violet_red&gt;\nJ             .'     F        J       / ____|  __ \\     /\\   | |  | |  __ \\   /\\              ")
cecho("&lt;violet_red&gt;\n L           /      /         /-.    | (___ | |__) |   /  \\  | |__| | |  | | /  \\             ")
cecho("&lt;violet_red&gt;\nJ           /      /         /   \\    \\___ \\|  _  /   / /\\ \\ |  __  | |  | |/ /\\ \\            ")
cecho("&lt;violet_red&gt;\n|          /      /         J    |    ____) | | \\ \\  / ____ \\| |  | | |__| / ____ \\           ")
cecho("&lt;violet_red&gt;\n|         /      /          /   /    |_____/|_|__\\_\\/_/_ __\\_\\_|  |_|_____/_/__ _\\_\\__ _____  ")
cecho("&lt;violet_red&gt;\n|        /   /  /          J   /         |__   __| |  | |  ____|  / ____|  ____|  ____|  __ \\ ")
cecho("&lt;violet_red&gt;\n|       /   /  /           /-'/             | |  | |__| | |__    | (___ | |__  | |__  | |__) |")
cecho("&lt;violet_red&gt;\n|      /   / -'           /  /              | |  |  __  |  __|    \\___ \\|  __| |  __| |  _  / ")
cecho("&lt;violet_red&gt;\n|     J   / /            / .'               | |  | |  | | |____   ____) | |____| |____| | \\ \\ ")
cecho("&lt;violet_red&gt;\n|     / -'-'   /        /-'                 |_|  |_|  |_|______| |_____/|______|______|_|  \\_\\")
cecho("&lt;violet_red&gt;\nL    (/|      |        /            ")
cecho("&lt;violet_red&gt;\nJ     /.'   ) | _.--  /             ")cechoLink(" &lt;deep_pink&gt;* Srahda",  function() expandAlias("srahda3") end, "Srahda", true)
cecho("&lt;violet_red&gt;\n L   //     &lt; \\/   (  |             ")
cecho("&lt;violet_red&gt;\n J  //       `.\\    `.`.            ")cechoLink(" &lt;deep_pink&gt;* Vras",  function() expandAlias("srahda1") end, "Vras", true)
cecho("&lt;violet_red&gt;\n  \\//     ___/_\\ `-.__`.`._.----''  ")
cecho("&lt;violet_red&gt;\n   `.----'      )|`.\\)  `-))\\-')    ")cechoLink(" &lt;deep_pink&gt;* Elder Shaman",  function() expandAlias("srahda2") end, "Elder Shaman", true)
cecho("&lt;violet_red&gt;\n                '   )     ')/       ")
cecho("&lt;violet_red&gt;\n                           '                                                            ")cechoLink("&lt;deep_pink&gt; BACK",function() expandAlias("guardians") end, "back", true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^srahda$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^griash$</name>
					<script>cecho("\n&lt;misty_rose&gt;   _____ _____  _____           _____ _    _                          ")
cecho("\n&lt;misty_rose&gt;  / ____|  __ \\|_   _|   /\\    / ____| |  | |                         ")
cecho("\n&lt;misty_rose&gt; | |  __| |__) | | |    /  \\  | (___ | |__| |                         ")
cecho("\n&lt;misty_rose&gt; | | |_ |  _  /  | |   / /\\ \\  \\___ \\|  __  |                         ")
cecho("\n&lt;misty_rose&gt; | |__| | | \\ \\ _| |_ / ____ \\ ____) | |  | |                         ")
cecho("\n&lt;misty_rose&gt;  \\_____|_|__\\_\\_____/_/___ \\_\\_____/|_|_ |_|___ _____  ______ _____  ")
cecho("\n&lt;misty_rose&gt;     |__   __| |  | |  ____| | |/ /  ____|  ____|  __ \\|  ____|  __ \\ ")
cecho("\n&lt;misty_rose&gt;        | |  | |__| | |__    | ' /| |__  | |__  | |__) | |__  | |__) |")
cecho("\n&lt;misty_rose&gt;        | |  |  __  |  __|   |  &lt; |  __| |  __| |  ___/|  __| |  _  / ")
cecho("\n&lt;misty_rose&gt;        | |  | |  | | |____  | . \\| |____| |____| |    | |____| | \\ \\ ")
cecho("\n&lt;misty_rose&gt;        |_|  |_|  |_|______| |_|\\_\\______|______|_|    |______|_|  \\_\\")
cecho("\n&lt;salmon&gt;                            ..,co88oc.oo8888cc,..")
cecho("\n&lt;salmon&gt;     o8o.               ..,o8889689ooo888o\"88888888oooc..")
cecho("\n&lt;salmon&gt;   .88888             .o888896888\".88888888o'?888888888889ooo....")
cecho("\n&lt;salmon&gt;   a888P          ..c6888969\"\"..,\"o888888888o.?8888888888\"\".ooo8888oo.")
cecho("\n&lt;salmon&gt;   088P        ..atc88889\"\".,oo8o.86888888888o 88988889\",o888888888888.")
cecho("\n&lt;salmon&gt;   888t  ...coo688889\"\'.ooo88o88b.\'86988988889 8688888\'o8888896989^888o")
cecho("\n&lt;salmon&gt;    888888888888\"..ooo888968888888  \"9o688888' \"888988 8888868888\'o88888")
cecho("\n&lt;salmon&gt;     \"\"G8889\"\"\'ooo888888888888889 .d8o9889\"\"\'   \"8688o.\"88888988\"o888888o .")
cecho("\n&lt;salmon&gt;              o8888\'\"\"\"\"\"\"\"\"\"\"\'   o8688\"          88868. 888888.68988888\"o8o.")
cecho("\n&lt;salmon&gt;              88888o.              \"8888ooo.        \'8888. 88888.8898888o\"888o.")
cecho("\n&lt;salmon&gt;              \"888888\'               \"888888\'          \'\"\"8o\"8888.8869888oo8888o .")
cecho("\n&lt;salmon&gt;         . :.:::::::::::.: .     . :.::::::::.: .   . : ::.:.\"8888 \"888888888888o")
cecho("\n&lt;salmon&gt;                                    ")cechoLink("&lt;misty_rose&gt;* Griash",  function() expandAlias("griash3") end, "Griash", true)cecho("&lt;salmon&gt;               :..8888,. \"88888888888.")
cecho("\n&lt;salmon&gt;                                                           .:o888.o8o.  \"866o9888o")
cecho("\n&lt;salmon&gt;                                    ")cechoLink("&lt;misty_rose&gt;* Gortuk",  function() expandAlias("griash1") end, "Gortuk", true)cecho("&lt;salmon&gt;                :888.o8888.  \"88.\"89\".")
cecho("\n&lt;salmon&gt;                                                           . 89  888888    \"88\":.")
cecho("\n&lt;salmon&gt;                                    ")cechoLink("&lt;misty_rose&gt;* Rhythm",  function() expandAlias("griash2") end, "Rhythm", true)cecho("&lt;salmon&gt;               :.     \'8888o")
cecho("\n&lt;salmon&gt;                                                            .       \"8888..")
cecho("\n&lt;salmon&gt;                                     ")cechoLink("&lt;misty_rose&gt; BACK",function() expandAlias("guardians") end, "back", true)cecho("&lt;salmon&gt;                           888888o.")
cecho("\n&lt;salmon&gt;                                                                       \"888889,")
cecho("\n&lt;salmon&gt;                                                                . : :.:::::::.: :.")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^griash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^takaros$</name>
					<script>cecho("\n&lt;orange_red&gt;  _______       _  __          _____   ____   _____       ")
cecho("\n&lt;orange_red&gt; |__   __|/\\   | |/ /    /\\   |  __ \\ / __ \\ / ____|      ")
cecho("\n&lt;orange_red&gt;    | |  /  \\  | ' /    /  \\  | |__) | |  | | (___        ")
cecho("\n&lt;orange_red&gt;    | | / /\\ \\ |  &lt;    / /\\ \\ |  _  /| |  | |\\___ \\       ")
cecho("\n&lt;orange_red&gt;    | |/ ____ \\| . \\  / ____ \\| | \\ \\| |__| |____) |      ")
cecho("\n&lt;orange_red&gt;    |_/_/____\\_\\_|\\_\\/_/___ \\_\\_|__\\_\\\\____/|_____/     __")
cecho("\n&lt;orange_red&gt;     |__   __| |  | |  ____| |  ____| |  | |  __ \\ \\   / /")
cecho("\n&lt;orange_red&gt;        | |  | |__| | |__    | |__  | |  | | |__) \\ \\_/ / ")
cecho("\n&lt;orange_red&gt;        | |  |  __  |  __|   |  __| | |  | |  _  / \\   /  ")
cecho("\n&lt;orange_red&gt;        | |  | |  | | |____  | |    | |__| | | \\ \\  | |   ")
cecho("\n&lt;orange_red&gt;        |_|  |_|  |_|______| |_|     \\____/|_|  \\_\\ |_|   ")
cecho("&lt;red&gt;\n                                 (`-.                                        ")
cecho("&lt;red&gt;\n                                  \\  `                                       ")
cecho("&lt;red&gt;\n     /)         ,   '--.           \\    `                                    ")
cecho("&lt;red&gt;\n    //     , '          \\/          \\   `   `                                ")
cecho("&lt;red&gt;\n   //    ,'              ./         /\\    \\&gt;- `   ,----------.               ")
cecho("&lt;red&gt;\n  ( \\  ,'    .-.-._        /      ,' /\\    \\   . `            `.             ")
cecho("&lt;red&gt;\n   \\ \\'     /.--. .)       ./   ,'  /  \\     .      `           `.           ")
cecho("&lt;red&gt;\n    \\     -{/    \\ .)        / /   / ,' \\       `     `-----.     \\          ")
cecho("&lt;red&gt;\n    &lt;\\      )     ).:)       ./   /,' ,' \\        `.  /\\)    `.    \\         ")
cecho("&lt;red&gt;\n     &gt;^,  //     /..:)       /   //--'    \\         `(         )    )        ")
cecho("&lt;red&gt;\n      | ,'/     /. .:)      /   (/         \\          \\       /    /         ")
cecho("&lt;red&gt;\n      ( |(_    (...::)     (                \\       .-.\\     /   ,'          ")
cecho("&lt;red&gt;\n      (O| /     \\:.::)                      /\\    ,'   \\)   /  ,'            ")
cecho("&lt;red&gt;\n       \\|/      /`.:::)                   ,/  \\  /         (  /              ")
cecho("&lt;red&gt;\n               /  /`,.:)                ,'/    )/           \\ \\              ")
cecho("&lt;red&gt;\n             ,' ,'.'  `:&gt;-._._________,&lt;;'    (/            (,'              ")
cecho("&lt;red&gt;\n           ,'  /  |     `^-^--^--^-^-^-'                                     ")
cecho("&lt;red&gt;\n .--------'   /   |                                                          ")
cecho("&lt;red&gt;\n(       .----'    |                                                          ")
cecho("&lt;red&gt;\n \\ &lt;`.  \\         |    ")cechoLink("&lt;orange_red&gt;* Takaros",  function() expandAlias("takaros3") end, "Takaros", true)cecho("&lt;red&gt;                                             ")
cecho("&lt;red&gt;\n  \\ \\ `. \\        |                                                          ")
cecho("&lt;red&gt;\n   \\ \\  `.`.      |    ")cechoLink("&lt;orange_red&gt;* Judoc",  function() expandAlias("takaros1") end, "Judoc", true)cecho("&lt;red&gt;                                               ")
cecho("&lt;red&gt;\n    \\ \\   `.`.    |                                                          ")
cecho("&lt;red&gt;\n     \\ \\    `.`.  |    ")cechoLink("&lt;orange_red&gt;* Primeval",  function() expandAlias("takaros2") end, "Primeval", true)cecho("&lt;red&gt;                                            ")
cecho("&lt;red&gt;\n      \\ \\     `.`.|                                                          ")
cecho("&lt;red&gt;\n       \\ \\      `.`.                                                         ")
cecho("&lt;red&gt;\n        \\ \\     ,^-'                                                         ")
cecho("&lt;red&gt;\n         \\ \\    |                                                            ")
cecho("&lt;red&gt;\n          `.`.  |                                                            ")
cecho("&lt;red&gt;\n             .`.|       ")cechoLink("&lt;orange_red&gt; BACK",function() expandAlias("guardians") end, "back", true)
cecho("&lt;red&gt;\n              `._&gt;")




</script>
					<command></command>
					<packageName></packageName>
					<regex>^takaros$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^(griash1|takaros1)$</name>
					<script>cecho("\n&lt;white&gt;Nothing to see here, sorry!")</script>
					<command></command>
					<packageName></packageName>
					<regex>^(griash1|takaros1)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^taktest$</name>
					<script>cecho("&lt;red&gt;\n                                        ,   ,                                ")
cecho("&lt;red&gt;\n                                        $,  $,     ,                         ")
cecho("&lt;red&gt;\n                                        \"ss.$ss. .s'                         ")
cecho("&lt;red&gt;\n                                ,     .ss$$$$$$$$$$s,                        ")
cecho("&lt;red&gt;\n                                $. s$$$$$$$$$$$$$$`$$Ss                      ")
cecho("&lt;red&gt;\n                                \"$$$$$$$$$$$$$$$$$$o$$$       ,              ")
cecho("&lt;red&gt;\n                               s$$$$$$$$$$$$$$$$$$$$$$$$s,  ,s               ")
cecho("&lt;red&gt;\n                              s$$$$$$$$$\"$$$$$$\"\"\"\"$$$$$$\"$$$$$,             ")
cecho("&lt;red&gt;\n                              s$$$$$$$$$$s\"\"$$$$ssssss\"$$$$$$$$\"             ")
cecho("&lt;red&gt;\n                             s$$$$$$$$$$'         `\"\"\"ss\"$\"$s\"\"              ")
cecho("&lt;red&gt;\n                             s$$$$$$$$$$,              `\"\"\"\"\"$  .s$$s        ")
cecho("&lt;red&gt;\n                             s$$$$$$$$$$$$s,...               `s$$'  `       ")
cecho("&lt;red&gt;\n                         `ssss$$$$$$$$$$$$$$$$$$$$####s.     .$$\"$.   , s-   ")
cecho("&lt;red&gt;\n                           `\"\"\"\"$$$$$$$$$$$$$$$$$$$$#####$$$$$$\"     $.$'    ")
cecho("&lt;red&gt;\n                                 \"$$$$$$$$$$$$$$$$$$$$$####s\"\"     .$$$|     ")
cecho("&lt;red&gt;\n                                   \"$$$$$$$$$$$$$$$$$$$$$$$$##s    .$$\" $    ")
cecho("&lt;red&gt;\n                                   $$\"\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"   `    ")
cecho("&lt;red&gt;\n                                  $$\"  \"$\"$$$$$$$$$$$$$$$$$$$$S\"\"\"\"\'         ")
cecho("&lt;red&gt;\n                             ,   ,\"     '  $$$$$$$$$$$$$$$$####s             ")
cecho("&lt;red&gt;\n                             $.          .s$$$$$$$$$$$$$$$$$####\"            ")
cecho("&lt;red&gt;\n                 ,           \"$s.   ..ssS$$$$$$$$$$$$$$$$$$$####\"            ")
cecho("&lt;red&gt;\n                 $           .$$$S$$$$$$$$$$$$$$$$$$$$$$$$#####\"             ")
cecho("&lt;red&gt;\n                 Ss     ..sS$$$$$$$$$$$$$$$$$$$$$$$$$$$######\"\"              ")
cecho("&lt;red&gt;\n                  \"$$sS$$$$$$$$$$$$$$$$$$$$$$$$$$$########\"                  ")
cecho("&lt;red&gt;\n           ,      s$$$$$$$$$$$$$$$$$$$$$$$$#########\"\"'                      ")
cecho("&lt;red&gt;\n           $    s$$$$$$$$$$$$$$$$$$$$$#######\"\"'      s'         ,           ")
cecho("&lt;red&gt;\n           $$..$$$$$$$$$$$$$$$$$$######\"'       ....,$$....    ,$            ")
cecho("&lt;red&gt;\n            \"$$$$$$$$$$$$$$$######\"' ,     .sS$$$$$$$$$$$$$$$$s$$            ")
cecho("&lt;red&gt;\n              $$$$$$$$$$$$#####\"     $, .s$$$$$$$$$$$$$$$$$$$$$$$$s.         ")
cecho("&lt;red&gt;\n   )          $$$$$$$$$$$#####'      `$$$$$$$$$###########$$$$$$$$$$$.       ")
cecho("&lt;red&gt;\n  ((          $$$$$$$$$$$#####       $$$$$$$$###\"       \"####$$$$$$$$$$      ")
cecho("&lt;red&gt;\n  ) \         $$$$$$$$$$$$####.     $$$$$$###\"             \"###$$$$$$$$$   s'")
cecho("&lt;red&gt;\n (   )        $$$$$$$$$$$$$####.   $$$$$###\"                ####$$$$$$$$s$$' ")
cecho("&lt;red&gt;\n )  ( (       $$\"$$$$$$$$$$$#####.$$$$$###'                .###$$$$$$$$$$\"   ")
cecho("&lt;red&gt;\n (  )  )   _,$\"   $$$$$$$$$$$$######.$$##'                .###$$$$$$$$$$     ")
cecho("&lt;red&gt;\n ) (  ( \.         \"$$$$$$$$$$$$$#######,,,.          ..####$$$$$$$$$$$\"     ")
cecho("&lt;red&gt;\n(   )$ )  )        ,$$$$$$$$$$$$$$$$$$####################$$$$$$$$$$$\"       ")
cecho("&lt;red&gt;\n(   ($$  ( \     _sS\"  `\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$S$$,       ")
cecho("&lt;red&gt;\n )  )$$$s ) )  .      .   `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"'  `$$      ")
cecho("&lt;red&gt;\n  (   $$$Ss/  .$,    .$,,s$$$$$$##S$$$$$$$$$$$$$$$$$$$$$$$$S\"\"        '      ")
cecho("&lt;red&gt;\n    \)_$$$$$$$$$$$$$$$$$$$$$$$##\"  $$        `$$.        `$$.                ")
cecho("&lt;red&gt;\n        `\"S$$$$$$$$$$$$$$$$$#\"      $          `$          `$                ")
cecho("&lt;red&gt;\n            `\"\"\"\"\"\"\"\"\"\"\"\"\"\'         '           '           '")</script>
					<command></command>
					<packageName></packageName>
					<regex>^taktest$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^tiarna$</name>
					<script>cecho("\n              &lt;violet_red&gt;Shaman! You have served us since the                     &lt;forest_green&gt;You are but one creature, and you wish to")
cecho("\n              &lt;violet_red&gt;days of the Sky-Darkener! You have                        &lt;forest_green&gt;stand against the tide? Are you foolish,")
cecho("\n              &lt;violet_red&gt;sworn us your oaths! Now, fulfill                      &lt;green&gt; __  &lt;forest_green&gt;or brave? To rush ahead is to die, and")
cecho("\n              &lt;violet_red&gt;them, and swear the oath of Tiarna                     &lt;green&gt; |'`.  &lt;forest_green&gt;Tiarna an-Kiar must remain. Swear to")
cecho("\n              &lt;violet_red&gt;an-Kiar. Swear: You will act with                      &lt;green&gt; |.\\ |  &lt;forest_green&gt;me: You will strike when the moment")
cecho("\n              &lt;violet_red&gt;wisdom in all things, for&lt;orchid&gt;  .---+               &lt;green&gt;          `.\\|       &lt;light_coral&gt;,-''---| &lt;forest_green&gt;is right, for Dendara")
cecho("\n              &lt;violet_red&gt;Dendara is unknowable.&lt;orchid&gt;    | , /      &lt;saddle_brown&gt; _:--------------------&lt;green&gt;:&lt;light_coral&gt;      | _,- ,' &lt;forest_green&gt;is patient.")
cecho("\n                                        &lt;orchid&gt;|/ / &lt;saddle_brown&gt;_.---''_.--------------------.`-----,&lt;light_coral&gt;'..''")
cecho("\n&lt;navy_blue&gt;We cannot afford to let live those     &lt;orchid&gt; ;&lt;saddle_brown&gt;'-''_.---''                       `-----.`---. &lt;salmon&gt;Tiarna an-Kiar cannot hesitate.")
cecho("\n&lt;navy_blue&gt;who would destroy us. Above all else,&lt;saddle_brown&gt;,-',--''&lt;dark_green&gt;_____ ___    _    ____  _   _    _   &lt;saddle_brown&gt;`---.`-. &lt;salmon&gt;Tiarna an-Kiar must act, or")
cecho("\n&lt;navy_blue&gt;we must survive. Swear: you will  &lt;saddle_brown&gt;,-',-'    &lt;dark_green&gt;|_   _|_ _|  / \\  |  _ \\| \\ | |  / \\&lt;saddle_brown&gt;       `-.`-. &lt;salmon&gt;be destroyed. Swear it:")
cecho("\n&lt;navy_blue&gt;destroy the enemies of nature,  &lt;saddle_brown&gt; / ,'         &lt;dark_green&gt;| |  | |  / _ \\ | |_) |  \\| | / _ \\&lt;saddle_brown&gt;         `. \\&lt;salmon&gt;You will act swiftly and")
cecho("\n&lt;navy_blue&gt;for Dendara is merciless.&lt;ansiLightBlue&gt;+----.&lt;saddle_brown&gt; / /           &lt;dark_green&gt;| |  | | / ___ \\|  _ &lt;| |\\  |/ ___ \\&lt;saddle_brown&gt;          \\ \\&lt;salmon&gt;decisively, for Dendara")
cecho("\n                         &lt;ansiLightBlue&gt;\\ '-. &lt;saddle_brown&gt;/ /            &lt;dark_green&gt;|_| |___/_/   \\_\\_| \\_\\_| \\_/_/   \\_\\&lt;saddle_brown&gt;          \\ \\ &lt;salmon&gt;is brutal.")
cecho("\n                          &lt;ansiLightBlue&gt;\\___` &lt;saddle_brown&gt;(             &lt;dark_green&gt;_    _   _       _  _ ___    _    ____      &lt;saddle_brown&gt;    ) )&lt;ansiRed&gt;_")
cecho("\n                               &lt;saddle_brown&gt;\\ \\           &lt;dark_green&gt;/ \\  | \\ | |     | |/ /_ _|  / \\  |  _ \\&lt;saddle_brown&gt;        / /&lt;ansiRed&gt;`. `.")
cecho("\n             &lt;white&gt;More than anything,&lt;saddle_brown&gt;\\ \\         &lt;dark_green&gt;/ _ \\ |  \\| |_____| ' / | |  / _ \\ | |_) |&lt;saddle_brown&gt;      / /&lt;ansiRed&gt; \\ ` |")
cecho("\n             &lt;white&gt;Tiarna an-Kiar must &lt;saddle_brown&gt;\\ `.      &lt;dark_green&gt;/ ___ \\| |\\  |_____| . \\ | | / ___ \\|  _ &lt; &lt;saddle_brown&gt;    ,' / &lt;ansiRed&gt;  `-\\|")
cecho("\n         &lt;white&gt;stand ready to intercede.&lt;saddle_brown&gt;`-.'-.  &lt;dark_green&gt;/_/   \\_\\_| \\_|     |_|\\_\\___/_/   \\_\\_| \\_\\&lt;saddle_brown&gt; ,-',-'&lt;ansiRed&gt;       \\")
cecho("\n        &lt;white&gt;Tiarna an-Kiar must shoulder &lt;saddle_brown&gt;`-.`---.                                     _.--',-'  &lt;ansiLightRed&gt;Those who would stand")
cecho("\n      &lt;white&gt;everything, for you exist between &lt;saddle_brown&gt;`---.`-----.                       _.---''_.--'   &lt;ansiLightRed&gt;against Dendara are a rot,")
cecho("\n       &lt;white&gt;realms. And so, you must swear:   ,--/;&lt;saddle_brown&gt;-----.`--------------------''_.---'&lt;lime_green&gt;:\\..   &lt;ansiLightRed&gt;a sickness to the wilds! Swear")
cecho("\n              &lt;white&gt;You will endure,          / ,' /      &lt;saddle_brown&gt;`--------------------''     &lt;lime_green&gt; \\ `.`.  &lt;ansiLightRed&gt;now! You will scour away the")
cecho("\n           &lt;white&gt;for Dendara is eternal.      |/._/                                     &lt;lime_green&gt;`---. &lt;ansiLightRed&gt;filth and disease, for Dendara")
cecho("\n                                        '                                                     &lt;ansiLightRed&gt;must be cleansed!")
cecho("\n                                &lt;green&gt;And finally, swear to Me: You will give your life to Dendara,")
cecho("\n                                                &lt;green&gt;for you are Tiarna an-Kiar.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tiarna$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Wayfarer Identify</name>
				<script></script>
				<command></command>
				<packageName>Wayfarer Identify</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Wayfarer Identify</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Identify</name>
						<script>if matches[2] ~= nil then
  identify_target = matches[2]
end

send("wayfare identify")
 </script>
						<command></command>
						<packageName></packageName>
						<regex>^ident(?:\s?(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Wayfarers Scent (Bloodscan)</name>
						<script>send("wayfare bloodscan")</script>
						<command></command>
						<packageName></packageName>
						<regex>^wscent$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>stars_database</name>
				<script></script>
				<command></command>
				<packageName>stars_database</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Stars Database</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Stars Index</name>
						<script>hecho("\n           #e8e499 #e0e299 #d7df98 #cfdd98 #c7db98 #bed898 #b6d697 #aed497_#a5d197_#9dcf96 #95cd96 #8cca96_#84c896_#7cc695 #73c395_#6bc195_#63bf94_#5abc94 #52ba94 #4ab893 #41b593_#39b393 #31b193_#28ae92_#20ac92_#20aa92_#1fa891_#1fa691 #1ea491 #1ea291 #1da090_#1d9e90_#1c9c90_#1c9a8f_#1b988f_#1b968f #1a948f #1a918e #198f8e_#198d8e_#188b8e_#18898d #17878d #17858d #16838c_#16818c_#157f8c_#157d8c_#147b8b_#14798b #14778a_#147588 #157387 #157185 #156f84 #156d83_#156b81 #156980 #16677e_#16657d #16637b_#16617a_#165f79_#165d77 #175b76_#175974 #175773 #175572 #175370 #17516f #184f6d #184d6c #184b6a #184969 ")
hecho("\n           #e8e499 #e0e299_#d7df98/#cfdd98\\")hecho("#c7db98_#bed898 #b6d697|#aed497 #a5d197 #9dcf96\\")hecho("#95cd96/#8cca96 #84c896 #7cc695|#73c395 #6bc195_#63bf94_#5abc94|#52ba94 #4ab893|#41b593 #39b393|#31b193 #28ae92_#20ac92_#20aa92\\")hecho("#1fa891 #1fa691\\")hecho("#1ea491 #1ea291/#1da090 #1d9e90/#1c9c90 #1c9a8f_#1b988f_#1b968f|#1a948f #1a918e/#198f8e_#198d8e\\")hecho("#188b8e #18898d\\")hecho("#17878d #17858d/#16838c #16818c/#157f8c #157d8c_#147b8b_#14798b|#14778a #147588|#157387 #157185 #156f84|#156d83 #156b81\\")hecho("#156980|#16677e #16657d|#16637b #16617a_#165f79_#165d77|#175b76 #175974|#175773 #175572 #175370 #17516f #184f6d_#184d6c/#184b6a\\")hecho("#184969_")
hecho("\n           #e8e499 #e0e299&gt;#d7df98 #cfdd98 #c7db98&lt;#bed898 #b6d697|#aed497 #a5d197|#9dcf96\\")hecho("#95cd96/#8cca96|#84c896 #7cc695|#73c395 #6bc195_#63bf94|#5abc94 #52ba94|#4ab893|#41b593 #39b393|#31b193 #28ae92_#20ac92|#20aa92 #1fa891\\")hecho("#1fa691 #1ea491V#1ea291 #1da090/#1d9e90\\")hecho("#1c9c90_#1c9a8f_#1b988f #1b968f\\")hecho("#1a948f/#1a918e #198f8e_#198d8e #188b8e\\")hecho("#18898d #17878dV#17858d #16838c/#16818c|#157f8c #157d8c_#147b8b|#14798b|#14778a #147588|#157387_#157185_#156f84|#156d83 #156b81.#156980`#16677e #16657d|#16637b #16617a_#165f79|#165d77|#175b76 #175974|#175773_#175572_#175370 #17516f #184f6d&gt;#184d6c #184b6a #184969&lt;")
hecho("\n           #e8e499 #e0e299 #d7df98\\")hecho("#cfdd98/#c7db98 #bed898 #b6d697|#aed497_#a5d197|#9dcf96 #95cd96 #8cca96|#84c896_#7cc695|#73c395_#6bc195_#63bf94_#5abc94\\")hecho("#52ba94_#4ab893_#41b593/#39b393|#31b193_#28ae92_#20ac92_#20aa92|#1fa891 #1fa691\\")hecho("#1ea491_#1ea291/#1da090 #1d9e90|#1c9c90_#1c9a8f_#1b988f_#1b968f/#1a948f_#1a918e/#198f8e #198d8e\\")hecho("#188b8e_#18898d\\")hecho("#17878d_#17858d/#16838c #16818c|#157f8c_#157d8c_#147b8b_#14798b|#14778a_#147588_#157387_#157185_#156f84|#156d83_#156b81|#156980\\")hecho("#16677e_#16657d|#16637b_#16617a_#165f79_#165d77|#175b76_#175974_#175773_#175572_#175370|#17516f #184f6d #184d6c\\")hecho("#184b6a/#184969 ")
hecho("\n           #e8e499 #e0e299 #d7df98 #cfdd98 #c7db98 #bed898 #b6d697 #aed497 #a5d197 #9dcf96 #95cd96 #8cca96 #84c896 #7cc695 #73c395 #6bc195 #63bf94T#5abc94h#52ba94e#4ab893 #41b593R#39b393i#31b193n#28ae92g#20ac92 #20aa92o#1fa891f#1fa691 #1ea491S#1ea291t#1da090a#1d9e90t#1c9c90u#1c9a8fe#1b988fs#1b968f #1a948fA#1a918er#198f8eo#198d8eu#188b8en#18898dd#17878d #17858dt#16838ch#16818ce#157f8c #157d8cH#147b8be#14798ba#14778av#147588e#157387n#157185s#156f84 #156d83 #156b81 ")

cecho("\n\n  &lt;white&gt;+----------------------------------------------------------------------------------------------+")
cecho("\n  &lt;white&gt;|                                  ")cechoLink("&lt;dim_grey&gt;THE OLD MEJEVSAVELNEL",function()expandAlias("oldstars")end,"Old Mejevsavelnel",true)cecho("&lt;white&gt;                                       |")
cecho("\n  &lt;white&gt;+------------------------------+---------------------------+-----------------------------------+")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;magenta&gt;EURIMINES", function() expandAlias("star eurimines") end, "Eurimines", true) cecho("&lt;ansi_magenta&gt;, the Tortoise      &lt;white&gt;| ")cechoLink("&lt;magenta&gt;SARCOSTA", function() expandAlias("star sarcosta") end, "Sarcosta", true) cecho("&lt;ansi_magenta&gt;, the Sea Snake   &lt;white&gt;| ")cechoLink("&lt;magenta&gt;ULENYNE", function() expandAlias("star ulenyne") end, "Ulenyne", true) cecho("&lt;ansi_magenta&gt;, the Charioteer           &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;magenta&gt;ARTOS", function() expandAlias("star artos") end, "Artos", true) cecho("&lt;ansi_magenta&gt;, the Sage              &lt;white&gt;| ")cechoLink("&lt;magenta&gt;DHYA", function() expandAlias("star dhya") end, "Dhya", true) cecho("&lt;ansi_magenta&gt;, the Thief           &lt;white&gt;| ")cechoLink("&lt;magenta&gt;GEH", function() expandAlias("star geh") end, "Geh", true) cecho("&lt;ansi_magenta&gt;, the Cleaver                  &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;magenta&gt;CTHALUT", function() expandAlias("star cthalut") end, "Cthalut", true) cecho("&lt;ansi_magenta&gt;, the Archer          &lt;white&gt;| ")cechoLink("&lt;ansi_magenta&gt;The &lt;magenta&gt;TRIUNE", function() expandAlias("star triune") end, "Triune", true) cecho("&lt;ansi_magenta&gt; of the Tree    &lt;white&gt;| ")cechoLink("&lt;magenta&gt;SHEINE", function() expandAlias("star sheine") end, "Sheine", true) cecho("&lt;ansi_magenta&gt;, the Wolf                  &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;magenta&gt;IZU-ARI", function() expandAlias("star izu-ari") end, "Izu-Ari", true) cecho("&lt;ansi_magenta&gt;, the Gambler         &lt;white&gt;| ")cechoLink("&lt;magenta&gt;VEITHADROS", function() expandAlias("star veithadros") end, "Veithadros", true) cecho("&lt;ansi_magenta&gt;, the Hopeful   &lt;white&gt;| ")cechoLink("&lt;magenta&gt;JAIFRYN", function() expandAlias("star jaifryn") end, "Jaifryn", true) cecho("&lt;ansi_magenta&gt;, the Sphinx               &lt;white&gt;|")
cecho("\n  &lt;white&gt;+------------------------------+---------------------------+-----------------------------------+")
cecho("\n\n  &lt;white&gt;+----------------------------------------------------------------------------------------------+")
cecho("\n  &lt;white&gt;|                                  THE NEW MEJEVSAVELNEL                                       |")
cecho("\n  &lt;white&gt;+------------------------------+---------------------------+-----------------------------------+")
cecho("\n  &lt;white&gt;| &lt;ansi_green&gt;")
cechoLink("&lt;green&gt;POSITIVE STARS", function() expandAlias("stars3") end, "Positive Stars", true) cecho("               &lt;white&gt;| ")
cechoLink("&lt;yellow&gt;PRIME STARS", function() expandAlias("stars1") end, "Prime Stars", true)cecho("               &lt;white&gt;| ")
cechoLink("&lt;red&gt;NEGATIVE STARS", function() expandAlias("stars2") end, "Negative Stars", true)cecho("                    &lt;white&gt;|")
cecho("\n  &lt;white&gt;+------------------------------+---------------------------+-----------------------------------+")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;ALITHEIA", function() expandAlias("star alitheia") end, "Alitheia", true) cecho("&lt;ansi_green&gt;, the Southern Sword &lt;white&gt;| ")cechoLink("&lt;yellow&gt;LYRANA", function() expandAlias("star lyrana") end, "Lyrana", true) cecho("&lt;ansi_yellow&gt;, the Praying Child &lt;white&gt;| ")cechoLink("&lt;red&gt;AIDIEN", function() expandAlias("star aidien") end, "Aidien", true) cecho("&lt;ansi_red&gt;, the Drowner               &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;PORANNAS", function() expandAlias("star porannas") end, "Porannas", true) cecho("&lt;ansi_green&gt;, the Ankyrean Rebel &lt;white&gt;| ")cechoLink("&lt;yellow&gt;LYPI", function() expandAlias("star lypi") end, "Lypi", true) cecho("&lt;ansi_yellow&gt;, the Shroud          &lt;white&gt;| ")cechoLink("&lt;red&gt;SCIPTER", function() expandAlias("star scipter") end, "Scipter", true) cecho("&lt;ansi_red&gt;, the Green Reaper         &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;MELOT", function() expandAlias("star melot") end, "Melot", true) cecho("&lt;ansi_green&gt;, the Champion          &lt;white&gt;| ")cechoLink("&lt;yellow&gt;ARTOS", function() expandAlias("star artos") end, "Artos", true) cecho("&lt;ansi_yellow&gt;, the Shapeshifter   &lt;white&gt;| ")cechoLink("&lt;red&gt;AGORRA", function() expandAlias("star agorra") end, "Agorra", true) cecho("&lt;ansi_red&gt;, the Marketplace           &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;ULGAR", function() expandAlias("star ulgar") end, "Ulgar", true) cecho("&lt;ansi_green&gt;, First of the Trolls   &lt;white&gt;| ")cechoLink("&lt;yellow&gt;VAYUA", function() expandAlias("star vayua") end, "Vayua", true) cecho("&lt;ansi_yellow&gt;, the Hero           &lt;white&gt;| ")cechoLink("&lt;red&gt;SVASTUSEL", function() expandAlias("star svastusel") end, "Svastusel", true) cecho("&lt;ansi_red&gt;, the Mute               &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;DROBIA", function() expandAlias("star drobia") end, "Drobia", true) cecho("&lt;ansi_green&gt;, the Gears            &lt;white&gt;| ")cechoLink("&lt;yellow&gt;ALYSIDA", function() expandAlias("star alysida") end, "Alysida", true) cecho("&lt;ansi_yellow&gt;, the Whip         &lt;white&gt;| ")cechoLink("&lt;red&gt;MOCIRN", function() expandAlias("star mocirn") end, "Mocirn", true) cecho("&lt;ansi_red&gt;, the River                 &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;GULBEDIM", function() expandAlias("star gulbedim") end, "Gulbedim", true) cecho("&lt;ansi_green&gt;, the Paranoid       &lt;white&gt;| ")cechoLink("&lt;yellow&gt;SUKULA", function() expandAlias("star sukula") end, "Sukula", true) cecho("&lt;ansi_yellow&gt;, the Xorani Spirit &lt;white&gt;| ")cechoLink("&lt;red&gt;THARABAR &amp; SHENNA", function() expandAlias("star tharabar &amp; shenna") end, "Tharabar &amp; Shenna", true) cecho("&lt;ansi_red&gt;, the Protectors &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;KEYO &amp; SHIRI", function() expandAlias("star keyo &amp; shiri") end, "Keyo &amp; Shiri", true) cecho("&lt;ansi_green&gt;, the Lovers     &lt;white&gt;| ")cechoLink("&lt;yellow&gt;CTHALUT", function() expandAlias("star cthalut") end, "Cthalut", true) cecho("&lt;ansi_yellow&gt;, the Archer       &lt;white&gt;| ")cechoLink("&lt;red&gt;PERIPLEKO", function() expandAlias("star peripleko") end, "Peripleko", true) cecho("&lt;ansi_red&gt;, the Navigator          &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;ELINDES", function() expandAlias("star elindes") end, "Elindes", true) cecho("&lt;ansi_green&gt;, the Radiant Flower  &lt;white&gt;| ")cechoLink("&lt;yellow&gt;VERDANTIA", function() expandAlias("star verdantia") end, "Verdantia", true) cecho("&lt;ansi_yellow&gt;, the Tree       &lt;white&gt;| ")cechoLink("&lt;red&gt;FIONSHI", function() expandAlias("star fionshi") end, "Fionshi", true) cecho("&lt;ansi_red&gt;, the Wandering            &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;EJA KODOSA", function() expandAlias("star eja kodosa") end, "Eja Kodosa", true) cecho("&lt;ansi_green&gt;, the Tome of Ages &lt;white&gt;| ")cechoLink("&lt;yellow&gt;TREYES", function() expandAlias("star treyes") end, "Treyes", true) cecho("&lt;ansi_yellow&gt;, the Candles       &lt;white&gt;| ")cechoLink("&lt;red&gt;EDAMIL", function() expandAlias("star edamil") end, "Edamil", true) cecho("&lt;ansi_red&gt;, the Trickster             &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;AVERROES", function() expandAlias("star averroes") end, "Averroes", true) cecho("&lt;ansi_green&gt;, the Wise           &lt;white&gt;| ")cechoLink("&lt;yellow&gt;SEKHTET", function() expandAlias("star sekhtet") end, "Sekhtet", true) cecho("&lt;ansi_yellow&gt;, the Martyr       &lt;white&gt;| ")cechoLink("&lt;red&gt;UMBRAEL", function() expandAlias("star umbrael") end, "Umbrael", true) cecho("&lt;ansi_red&gt;, the Cloak                &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;LOSKIOU", function() expandAlias("star loskiou") end, "Loskiou", true) cecho("&lt;ansi_green&gt;, the Selfless        &lt;white&gt;| ")cechoLink("&lt;yellow&gt;IZU-ARI", function() expandAlias("star izu-ari") end, "Izu-Ari", true) cecho("&lt;ansi_yellow&gt;, the Gambler      &lt;white&gt;| ")cechoLink("&lt;red&gt;ONTESME", function() expandAlias("star ontesme") end, "Ontesme", true) cecho("&lt;ansi_red&gt;, the Tormented            &lt;white&gt;|")
cecho("\n  &lt;white&gt;| ")cechoLink("&lt;green&gt;AZIMEL", function() expandAlias("star azimel") end, "Azimel", true) cecho("&lt;ansi_green&gt;, the Storm Shepherd   &lt;white&gt;| ")cechoLink("&lt;yellow&gt;SHENEBRE", function() expandAlias("star shenebre") end, "Shenebre", true) cecho("&lt;ansi_yellow&gt;, the Beast       &lt;white&gt;| ")cechoLink("&lt;red&gt;LILDEGRAVRA", function() expandAlias("star lildegravra") end, "Lildegravra", true) cecho("&lt;ansi_red&gt;, the Tyrant           &lt;white&gt;|")
cecho("\n  &lt;white&gt;+------------------------------+---------------------------+-----------------------------------+")</script>
						<command></command>
						<packageName></packageName>
						<regex>^stars$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Old Mejevsavelnel</name>
						<script>cecho("\n\n&lt;white&gt; The Ring of Stars in the Heavens")
cecho("\n&lt;ansi_magenta&gt; -------------------------------------------------------------------")

cecho("\n\n&lt;dim_grey&gt; For many moons, the stars have stood in the heavens as honored dead.")
cecho("\n&lt;dim_grey&gt; Their light shines on us as a symbol of their strength, their bravery,")
cecho("\n&lt;dim_grey&gt; and sometimes their folly.")

cecho("\n\n&lt;dim_grey&gt; Chief among these constellations is The Mejevsavelnel, from the Kalsu")
cecho("\n&lt;dim_grey&gt; words meaning Ring of Statues around the Heavens. These thirteen")
cecho("\n&lt;dim_grey&gt; constellations ring the heavens. Many ancient astrologers and")
cecho("\n&lt;dim_grey&gt; astronomers based predictions on which of these constellations was")
cecho("\n&lt;dim_grey&gt; highest in the heavens.")

cecho("\n\n&lt;ansi_magenta&gt; Eurimines&lt;dim_grey&gt;, the Tortoise")
cecho("\n&lt;ansi_magenta&gt; Sarcosta&lt;dim_grey&gt;, the Sea Snake")
cecho("\n&lt;ansi_magenta&gt; Ulenyne&lt;dim_grey&gt;, the Charioteer")
cecho("\n&lt;ansi_magenta&gt; Artos&lt;dim_grey&gt;, the Sage")
cecho("\n&lt;ansi_magenta&gt; Dhya&lt;dim_grey&gt;, the Thief")
cecho("\n&lt;ansi_magenta&gt; Geh&lt;dim_grey&gt;, the Cleaver")
cecho("\n&lt;ansi_magenta&gt; Cthalut&lt;dim_grey&gt;, the Archer")
cecho("\n&lt;dim_grey&gt; The &lt;ansi_magenta&gt;Triune&lt;dim_grey&gt; of the Tree")
cecho("\n&lt;ansi_magenta&gt; Sheine&lt;dim_grey&gt;, the Wolf")
cecho("\n&lt;ansi_magenta&gt; Izu-Ari&lt;dim_grey&gt;, the Gambler")
cecho("\n&lt;ansi_magenta&gt; Veithadros&lt;dim_grey&gt;, the Hopeful")
cecho("\n&lt;ansi_magenta&gt; Jaifryn&lt;dim_grey&gt;, the Sphinx")

cecho("\n&lt;dim_grey&gt; ")
cecho("\n&lt;ansi_magenta&gt; The star of Lanos - Missing for many years")

cecho("\n\n&lt;dim_grey&gt; The last constellation, and the most recent, was the star of Lanos. It")
cecho("\n&lt;dim_grey&gt; was placed there as a symbol of Lanos' determination to save Aetolia")
cecho("\n&lt;dim_grey&gt; from the hordes of Shadow Creatures.")

cecho("\n\n&lt;dim_grey&gt; The star was last seen when Severn tricked mortals into closing the rift")
cecho("\n&lt;dim_grey&gt; between our plane and the Shadow Plane. It has not been seen since.")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^oldstars$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Prime Stars</name>
						<script>cecho("&lt;white&gt;\n x-----------------------------------------------x")
cecho("&lt;white&gt;\n |   &lt;pink&gt;PRIME            EFFECTS           MONTH    &lt;white&gt;|")
cecho("&lt;white&gt;\n |   &lt;pink&gt;STARS     &lt;MediumSpringGreen&gt;Str   Dex   Con   Int             &lt;white&gt;|")
cecho("&lt;white&gt;\n | --------- *-----*-----*-----*-----* &lt;turquoise&gt;Variach   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Lyrana", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;LYRANA, &lt;white&gt;the Praying Child")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears in our night skies    |                   |")
cecho("&lt;white&gt;\n as seven stars, forming a curved line above a    |      &lt;cyan&gt;+     +&lt;white&gt;      |")
cecho("&lt;white&gt;\n triangle, representing the outline of a          |                   |")
cecho("&lt;white&gt;\n kneeling child in prayer.                        |  &lt;cyan&gt;+&lt;white&gt;             &lt;cyan&gt;+&lt;white&gt;  |")
cecho("&lt;white&gt;\n                                                  |         &lt;yellow&gt;*&lt;white&gt;         |")
cecho("&lt;white&gt;\n Lyrana, it is said, was a young girl who lived   |                   |")
cecho("&lt;white&gt;\n some years ago. At the time of the War of        |       &lt;yellow&gt;*  *&lt;white&gt;        |")
cecho("&lt;white&gt;\n Change, she was among the girls sent as envoys   |                   |")
cecho("&lt;white&gt;\n to the warring generals, who pleaded for the     |                   |")
cecho("&lt;white&gt;\n ceasing of hostilities. Bad timing, or perhaps   x-------------------x")
cecho("&lt;white&gt;\n fate caused the children to find themselves in")
cecho("&lt;white&gt;\n the middle of the battling armies as they continued to slaughter each")
cecho("&lt;white&gt;\n other. The last to survive, Lyrana stood praying on the battlefield in")
cecho("&lt;white&gt;\n the midst of the dead or dying soldiers, until she rose up to the")
cecho("&lt;white&gt;\n heavens to take her place among the stars.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under the influence of the Praying Child, your strength will be")
cecho("&lt;white&gt;\n decreased, but you will feel more intelligent.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n                        === &lt;yellow&gt;The Praying Child&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Ashtan wars were bloody and desperate; the City walls were sacked")
cecho("&lt;white&gt;\n and rebuilt daily as brutal battles took place around the outlying")
cecho("&lt;white&gt;\n defenses. A small group of villages and settlements bordering the City,")
cecho("&lt;white&gt;\n at the foothills of the Tarean mountains and looking out onto the")
cecho("&lt;white&gt;\n Sapphire Ocean were left largely untouched by the conflict until the")
cecho("&lt;white&gt;\n Ashtanite army saw potential there for materials.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Armies of workers flooded into the villages to chop wood and mine for")
cecho("&lt;white&gt;\n ores, drawing attention from the Enorians who swiftly sent troops to")
cecho("&lt;white&gt;\n take what had quickly become a strategic position. The villagers lived a")
cecho("&lt;white&gt;\n quiet life, unaffected by the big City. The pillaging of their raw")
cecho("&lt;white&gt;\n materials and the occupation by hordes of dwarf and orc workers had left")
cecho("&lt;white&gt;\n the people of the villages destitute. Now they sat in the middle of two")
cecho("&lt;white&gt;\n armies and foresaw their annihilation.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In a desperate attempt to appeal to the better natures of the two sides,")
cecho("&lt;white&gt;\n the villagers sent their children with a plea to each general to")
cecho("&lt;white&gt;\n consider the cost of the battle that lay ahead. The children set out on")
cecho("&lt;white&gt;\n a misty dawn. Their path would take them to both encampments and then on")
cecho("&lt;white&gt;\n to the forests where they would be safe. With the mists to cover their")
cecho("&lt;white&gt;\n approaches, both armies broke camp early and advanced with stealth. The")
cecho("&lt;white&gt;\n children found themselves between two charging armies and were cut down")
cecho("&lt;white&gt;\n without notice from either side.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n The battle was bloody and brutal, with both sides suffering heavy")
cecho("&lt;white&gt;\n losses. The Paladin General, surveying his close victory, caught sight")
cecho("&lt;white&gt;\n of a small child, kneeling in prayer. As he approached, he saw the")
cecho("&lt;white&gt;\n bodies of children lying in the stinking carnage, clutching their toys")
cecho("&lt;white&gt;\n and meager possessions, faces cast as though the death creeping in to")
cecho("&lt;white&gt;\n their wounds had been their last witness.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The child was a little girl, Lyrana, her pure white gown untouched by")
cecho("&lt;white&gt;\n the blood that bubbled all around, her face an image of pure hope and")
cecho("&lt;white&gt;\n innocence and her prayer a simple plea for peace. The general lifted")
cecho("&lt;white&gt;\n Lyrana's face toward his and the simple mantra stopped, her face lost")
cecho("&lt;white&gt;\n its glow and her spirit rose to the heavens.")
send(" ")
end, "Lyrana", true)
cecho("&lt;white&gt;    | -1  |     |     | +1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Severin   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Lypi", function()
cecho("&lt;yellow&gt;\n LYPI, &lt;white&gt;Qeddwyn's Sorrow or the Shroud")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Lypi appears as a tall arch of five faint        |         &lt;blue&gt;.&lt;white&gt;         |")
cecho("&lt;white&gt;\n stars, seeming to stand above the city of        |                   |")
cecho("&lt;white&gt;\n Spinesreach as a shroud.                         |                   |")
cecho("&lt;white&gt;\n                                                  |     &lt;blue&gt;.&lt;white&gt;       &lt;blue&gt;.&lt;white&gt;     |")
cecho("&lt;white&gt;\n Legends say this constellation stands in the     |                   |")
cecho("&lt;white&gt;\n skies as a shroud over Spinesreach, a reminder   |                   |")
cecho("&lt;white&gt;\n of the sorrow of Qeddwyn, the last surviving     |                   |")
cecho("&lt;white&gt;\n Ankyrean after the fall of the Order, as the     |    &lt;blue&gt;.&lt;white&gt;         &lt;blue&gt;.&lt;white&gt;    |")
cecho("&lt;white&gt;\n God Severn wove the Grand Artifice around the    |                   |")
cecho("&lt;white&gt;\n city of Spinesreach.                             x-------------------x")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under this constellation's effect, you will feel much stronger")
cecho("&lt;white&gt;\n but with weaker constitution.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Shroud&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Lord Severn had told Qeddwyn the scholar several times over that the Age")
cecho("&lt;white&gt;\n of the Ankyreans had passed, and the Third Epoch was at hand. Yet")
cecho("&lt;white&gt;\n Qeddwyn found the ending of his proud legacy fundamentally impossible,")
cecho("&lt;white&gt;\n and could not truly believe his Patron until he saw it for himself - a")
cecho("&lt;white&gt;\n true empiricist, even to this day. Thus it was that Qeddwyn witnessed")
cecho("&lt;white&gt;\n the brilliant, purifying Flame that ended his Order. Qeddwyn was the")
cecho("&lt;white&gt;\n first to find the bodies of his friends charred by their own")
cecho("&lt;white&gt;\n incantation.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n His sorrow was so great that even the Divine had pity and granted him")
cecho("&lt;white&gt;\n forgetfulness for a time, a blessed peace from the savages of grief. The")
cecho("&lt;white&gt;\n heaviness of heart that was lifted that day did not simply vanish,")
cecho("&lt;white&gt;\n however: so epic was Qeddwyn's sorrow that simple amnesia could not")
cecho("&lt;white&gt;\n erase its burden. Instead, the grief was transformed and is destined to")
cecho("&lt;white&gt;\n forever hang over Spinesreach, mourning the loss of the Ankyreans.")
send(" ")
end, "Lypi", true)
cecho("&lt;white&gt;      | +1  |     | -1  |     | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Ios       &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Artos", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;ARTOS, &lt;white&gt;the Sage or the Shapeshifter")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Viewed as a pair of bright stars twinkling in    |                   |")
cecho("&lt;white&gt;\n unison, representing the two piercing eyes of    |                   |")
cecho("&lt;white&gt;\n Artos.                                           |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Ancient is the story of Artos. A very famous     |      &lt;yellow&gt;*     *&lt;white&gt;      |")
cecho("&lt;white&gt;\n sage in his day, he was also in secret a         |                   |")
cecho("&lt;white&gt;\n shapeshifter, and used his powers to teach       |                   |")
cecho("&lt;white&gt;\n order and light in the name of Lanos, God of     |                   |")
cecho("&lt;white&gt;\n Truth. Seeing this as a great affront, the God   |                   |")
cecho("&lt;white&gt;\n Severn appeared to him in disguise, a trick      x-------------------x")
cecho("&lt;white&gt;\n Artos was quick to recognise. Enraged by this,")
cecho("&lt;white&gt;\n Severn proceeded to cast him out into the heavens as far as He could,")
cecho("&lt;white&gt;\n where Artos' eyes can still be seen to this day, observing us all from")
cecho("&lt;white&gt;\n above.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n One of the few surviving constellations of the old Mejevsavelnel,")
cecho("&lt;white&gt;\n while under the influence of Artos you will feel less agile, but")
cecho("&lt;white&gt;\n considerably more intelligent.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n &lt;yellow&gt;Artos &lt;white&gt;- A group of two stars, known as the eyes of Artos")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n A very famous sage, Artos was renowned for his amazing perception.")
cecho("&lt;white&gt;\n Always savvy to the motivations and tricks of others, Artos had a secret")
cecho("&lt;white&gt;\n of his own.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n As the Gods would have it, Artos had the ability to shapeshift into any")
cecho("&lt;white&gt;\n form he wished. Though this might not be seen as infuriating to a God")
cecho("&lt;white&gt;\n such as Severn, in fact it was, for Artos worshipped Lanos only. That")
cecho("&lt;white&gt;\n Artos would use this ability for good, and to teach order and light to")
cecho("&lt;white&gt;\n the world, Severn saw as a waste.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Severn went to Artos disguised, and began to question him when Artos")
cecho("&lt;white&gt;\n immediately recognized who the God was. Enraged, Severn picked him up")
cecho("&lt;white&gt;\n and tossed him as far as he could into the heavens, where his eyes peer")
cecho("&lt;white&gt;\n down on us today.")
cecho("&lt;white&gt;\n                         === &lt;yellow&gt;The Shapeshifter&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n A very famous sage, Artos was renowned for his amazing perception.")
cecho("&lt;white&gt;\n Always savvy to the motivations and tricks of others, Artos had a secret")
cecho("&lt;white&gt;\n of his own. As the Gods would have it, Artos had the ability to change")
cecho("&lt;white&gt;\n his shape into any form he wished. Though this might not be normally")
cecho("&lt;white&gt;\n seen as infuriating to a God such as Severn, in fact it was, for Artos")
cecho("&lt;white&gt;\n worshipped Lanos only.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n That Artos would use his ability for good, and to teach order and light")
cecho("&lt;white&gt;\n to the world, Severn saw as a waste. Severn went to Artos disguised and")
cecho("&lt;white&gt;\n began to question him, hoping to fool him into darker deeds, but Artos")
cecho("&lt;white&gt;\n immediately recognized whom the God was. Enraged, Severn picked him up")
cecho("&lt;white&gt;\n and tossed him as far as he could into the heavens, where his eyes peer")
cecho("&lt;white&gt;\n down on us today, the rest of his form lost due to its inconstancy.")
send(" ")
end, "Artos", true)
cecho("&lt;white&gt;     |     | -1  |     | +1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Arios     &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Vayua", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;VAYUA&lt;white&gt;, the Theran or the Hero")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Visible in the sky as five stars in a straight   |                &lt;cyan&gt;+&lt;white&gt;  |")
cecho("&lt;white&gt;\n line with a sixth and seventh flanking the       |                   |")
cecho("&lt;white&gt;\n second star of the five, representing a sword.   |            &lt;cyan&gt;+&lt;white&gt;      |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Stories tell of Vayua, a citizen from the lost   |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n village of Thera, which in order to protect      | &lt;cyan&gt;+&lt;white&gt;                 |")
cecho("&lt;white&gt;\n his fellow citizens and his only daughter        |    &lt;cyan&gt;+&lt;white&gt;              |")
cecho("&lt;white&gt;\n threw himself before a vile creature in a        |       &lt;cyan&gt;+&lt;white&gt;           |")
cecho("&lt;white&gt;\n display of selfless heroism, with nothing to     |&lt;cyan&gt;+&lt;white&gt;                  |")
cecho("&lt;white&gt;\n help him but his sword. The battle was won,      x-------------------x")
cecho("&lt;white&gt;\n but at a terrible price, for although the")
cecho("&lt;white&gt;\n villagers were saved, the wounds he suffered were too many, and he")
cecho("&lt;white&gt;\n soon perished. The Gods, noticing his sacrifice, elevated him to the")
cecho("&lt;white&gt;\n heavens, where his sword still shines to lighten many dark nights.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Those affected by this constellation will feel weaker, but at the same")
cecho("&lt;white&gt;\n time with higher constitution.")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Hero&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The village of Thera was a prosperous community, and the people there")
cecho("&lt;white&gt;\n led contented lives. It came as a sudden shock, then, that goblin")
cecho("&lt;white&gt;\n soldiers and warriors should invade their town. But the Therans were not")
cecho("&lt;white&gt;\n completely pacifistic, and fought valiantly to defend their homes. The")
cecho("&lt;white&gt;\n goblins were driven off, but not before successfully stealing a young")
cecho("&lt;white&gt;\n girl, Leine, from her home, to take with them back to Azdun and enslave")
cecho("&lt;white&gt;\n for their cruel purposes.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Horrified and enraged, Leine\'s father Vayua organized a group of brave")
cecho("&lt;white&gt;\n Therans to invade Azdun with him. They dashed swiftly into the")
cecho("&lt;white&gt;\n underground fortress, laying waste to the disorganized soldiers they")
cecho("&lt;white&gt;\n came across, and cut down the goblin army with their righteous strikes.")
cecho("&lt;white&gt;\n They found Leine and unshackled her, and Vayua and his companions were")
cecho("&lt;white&gt;\n greatly relieved. On their way out of the Azdun dungeon, a vampire")
cecho("&lt;white&gt;\n sprang from the shadows. Shouting for his comrades to leave as the")
cecho("&lt;white&gt;\n vampire chased the group, Vayua waited until they had all ascended the")
cecho("&lt;white&gt;\n well, guarding the exit. Then the undead creature and the brave Theran")
cecho("&lt;white&gt;\n dove at each other.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In the courtyard of a ruined castle, the fleeing Therans came to a halt")
cecho("&lt;white&gt;\n when they heard the immortal cry of a defeated vampire, and cheered.")
cecho("&lt;white&gt;\n They waited for Vayua to emerge from the well but, after several minutes")
cecho("&lt;white&gt;\n without a sign of him, began to worry. They travelled back down and, to")
cecho("&lt;white&gt;\n their horror, found him with a deep gash in his abdomen and cuts and")
cecho("&lt;white&gt;\n scratches all over him.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Breathing slowly, he beckoned his party take him home. He was carried by")
cecho("&lt;white&gt;\n the largest of the company, with Leine holding his hand the entire walk")
cecho("&lt;white&gt;\n back to Thera. They stepped through the gates, and Vayua smiled, and")
cecho("&lt;white&gt;\n passed away. Leine wept, and Thera wept with her, and the Gods felt")
cecho("&lt;white&gt;\n their pain. Lord Arion was struck by the bravery and valor of the mortal")
cecho("&lt;white&gt;\n Vayua and gently guided his soul to the celestial reaches of the sky,")
cecho("&lt;white&gt;\n ever to watch over his people.")
send(" ")
end, "Vayua", true)
cecho("&lt;white&gt;     | -1  |     | +1  |     | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Chakros   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Alysida", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;ALYSIDA, &lt;white&gt;the Whip")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as a sloping line of six stars, the      |                   |")
cecho("&lt;white&gt;\n last of which is a hazy red star, forming a      | &lt;cyan&gt;+&lt;white&gt;                 |")
cecho("&lt;white&gt;\n curving whip of stars, tipped with red.          |                   |")
cecho("&lt;white&gt;\n                                                  |  &lt;cyan&gt;+&lt;white&gt;                |")
cecho("&lt;white&gt;\n The dark Goddess, Chakrasul, enjoyed using Her   |                   |")
cecho("&lt;white&gt;\n whip Alysida to torture others, considering it   |    &lt;cyan&gt;+&lt;white&gt;              |")
cecho("&lt;white&gt;\n the ultimate instrument of corruption. But       |                   |")
cecho("&lt;white&gt;\n still the pain She inflicted with it served      |        &lt;cyan&gt;+&lt;white&gt;        &lt;red&gt;.&lt;white&gt; |")
cecho("&lt;white&gt;\n only to temper the will of the mortal who        |             &lt;cyan&gt;+&lt;white&gt;     |")
cecho("&lt;white&gt;\n would one day transcend his old form to become   x-------------------x")
cecho("&lt;white&gt;\n Rahn, God of Fire.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While Alysida stands highest in the heavens, all will feel less")
cecho("&lt;white&gt;\n dexterous, but with a higher constitution.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Whip  &lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Many had fallen to Alysida, the Whip of Corruption. Its barbed tip,")
cecho("&lt;white&gt;\n reinforced with shards of metal and glass, was said to be a constant")
cecho("&lt;white&gt;\n dark red from the blood of its victims. Its touch, whether gentle or")
cecho("&lt;white&gt;\n biting, was said to drain the willpower from those who came before it.")
cecho("&lt;white&gt;\n And when its Mistress wielded it, She could break any living being and")
cecho("&lt;white&gt;\n make them grovel before Her.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Thus, as Chakrasul looked over Her instruments of torture while deciding")
cecho("&lt;white&gt;\n how best to corrupt the soul of the mortal who would become Rahn, she")
cecho("&lt;white&gt;\n decided that Alysida was the perfect choice. Picking it up and tossing")
cecho("&lt;white&gt;\n it from hand to hand, She strode over to his supine form and scourged")
cecho("&lt;white&gt;\n his flesh with this instrument of despair. Instantly though, She could")
cecho("&lt;white&gt;\n feel that though She tore his flesh asunder, his spirit remained intact.")
cecho("&lt;white&gt;\n Blow after blow only seemed to strengthen his resolve and forge his")
cecho("&lt;white&gt;\n spirit into a more perfect form.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n For many days She continued, trying to find the weakness in his soul")
cecho("&lt;white&gt;\n that Alysida might strike and begin to process of unravelling; but none")
cecho("&lt;white&gt;\n could She find. Her anger grew and Her patience waned, and soon She saw")
cecho("&lt;white&gt;\n the futility of the Whip. She threw it out of the volcano, high into the")
cecho("&lt;white&gt;\n heavens, where it still soars today, its bloody tip visible.")
send(" ")
end, "Alysida", true)
cecho("&lt;white&gt;   |     | -1  | +1  |     | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Khepary   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Sukula", function()
cecho("&lt;yellow&gt;\n SUKULA, &lt;white&gt;the Xorani Spirit or the Family")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Viewed as a ring of six bright stars, which      |                   |")
cecho("&lt;white&gt;\n surround a pale nebula, representing the         |                   |")
cecho("&lt;white&gt;\n glowing heart of a Mother, encircled by her      |       &lt;yellow&gt;*    *&lt;white&gt;      |")
cecho("&lt;white&gt;\n six Children.                                    |       &lt;pink&gt; ~  ~       &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |    &lt;yellow&gt;*&lt;pink&gt; ~ ~ ~ ~      &lt;white&gt;|")
cecho("&lt;white&gt;\n The lizard-like Xorani possess ancient lore,     |      &lt;pink&gt; ~ ~ ~  &lt;yellow&gt;*    &lt;white&gt;|")
cecho("&lt;white&gt;\n in which they regard Sukula as an example of     |      &lt;pink&gt;  ~ ~        &lt;white&gt;|")
cecho("&lt;white&gt;\n the strength and love shared by all families,    |      &lt;yellow&gt;*    *       &lt;white&gt;|")
cecho("&lt;white&gt;\n the very basis of the Xoran race.                |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n While under its influence, you will feel")
cecho("&lt;white&gt;\n stronger but with less dexterity.")
cecho("\n")
cecho("&lt;white&gt;\n                       === &lt;yellow&gt;The Xorani Spirit &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The origins of the Xorani race are shrouded in lore and legend, but")
cecho("&lt;white&gt;\n their exodus from the valley of Scidve brought with it belief systems")
cecho("&lt;white&gt;\n that have bled into those we are familiar with today. Amongst these was")
cecho("&lt;white&gt;\n the belief that the spirit crystalizes into a star when it leaves the")
cecho("&lt;white&gt;\n mortal frame, and the star shines all the brighter if the spirit is")
cecho("&lt;white&gt;\n invested with deep love, like the love that exists between mother and")
cecho("&lt;white&gt;\n child. Xorani astrologers used the particular constellation of Sukula as")
cecho("&lt;white&gt;\n an example of the power of spirit and the sanctity of the family,")
cecho("&lt;white&gt;\n attributing the arrangement to a mother reflecting her love through the")
cecho("&lt;white&gt;\n children who surround her.")
send(" ")
end, "Sukula", true)
cecho("&lt;white&gt;    | +1  | -1  |     |     | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Midsummer &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Cthalut", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;CTHALUT, &lt;white&gt;the Archer")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be seen as seven stars in a loose group,     |                   |")
cecho("&lt;white&gt;\n the brightest three in a vertical crescent,      |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n representing the shape of an archer.             |           &lt;blue&gt;*&lt;white&gt;       |")
cecho("&lt;white&gt;\n                                                  |      &lt;cyan&gt;+&lt;white&gt;            |")
cecho("&lt;white&gt;\n Legends say that Cthalut believed himself such   |             &lt;blue&gt;*&lt;white&gt;     |")
cecho("&lt;white&gt;\n an outstanding archer, that he once attempted    |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n to hit the sun, while standing under a clear     |           &lt;blue&gt;*&lt;white&gt;       |")
cecho("&lt;white&gt;\n night's sky, in which obviously the sun would    |                   |")
cecho("&lt;white&gt;\n not be visible. The arrow he shot sailed         |     &lt;cyan&gt;+&lt;white&gt;             |")
cecho("&lt;white&gt;\n around the earth, and some while later came      x-------------------x")
cecho("&lt;white&gt;\n back, wreathed in flames from the sun's heat.")
cecho("&lt;white&gt;\n And so the first shooting star was created... While this constellation")
cecho("&lt;white&gt;\n rests highest in the heavens, it is said meteor showers are a common")
cecho("&lt;white&gt;\n sight.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Another surviving constellation of the old Mejevsavelnel, while under")
cecho("&lt;white&gt;\n the effect of Cthalut you will feel more dexterous, but somewhat less")
cecho("&lt;white&gt;\n intelligent.")
cecho("\n")
cecho("&lt;white&gt;\n &lt;yellow&gt;Cthalut, &lt;white&gt;the archer - A group of 7 stars, in the shape of an archer")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The bow of Cthalut was so powerful, he claimed he could hit anything. On")
cecho("&lt;white&gt;\n a clear night, he attempted to hit the sun, which was clearly not")
cecho("&lt;white&gt;\n visible. He shot an arrow, which flew around the world. It came back")
cecho("&lt;white&gt;\n into view in the night sky, flaming with the heat of the sun, the first")
cecho("&lt;white&gt;\n shooting star. Meteor showers are prominent around this constellation")
cecho("&lt;white&gt;\n each year.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Archer&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Cthalut was one of the greatest archers ever to take arrow in hand. The")
cecho("&lt;white&gt;\n bow of Cthalut was so powerful that he claimed he could hit anything.")
cecho("&lt;white&gt;\n One clear night, with the moon and stars visible in all their splendour")
cecho("&lt;white&gt;\n but the sun of course nowhere to be seen, some of Cthalut's fellows were")
cecho("&lt;white&gt;\n bragging about their own archery skills. One by one their arrows struck")
cecho("&lt;white&gt;\n darting rabbits and distant trees, but all the while Cthalut watched in")
cecho("&lt;white&gt;\n unimpressed silence. Finally, his comrades spurred him to make a")
cecho("&lt;white&gt;\n legendary boast: he would hit the sun itself with an arrow from his bow.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n With the other archers watching in wonder, he shot an arrow with all of")
cecho("&lt;white&gt;\n his strength, and it flew around the world. When it came back into view")
cecho("&lt;white&gt;\n in the night sky, it was flaming with the heat of the sun, the first")
cecho("&lt;white&gt;\n shooting star. The Gods placed Cthalut in the heavens at the end of his")
cecho("&lt;white&gt;\n allotted time, his bow eternally aimed at the sun. And when stars shoot")
cecho("&lt;white&gt;\n through the night sky, those who are wise know that they are Cthalut's")
cecho("&lt;white&gt;\n arrows, continuing in their flight after striking the sun.")
send(" ")
end, "Chthalut", true)
cecho("&lt;white&gt;   |     | +1  |     | -1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Lleian    &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Verdantia", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;VERDANTIA, &lt;white&gt;the Severed or the Brokenhearted Tree")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears as a line of six      |  &lt;yellow&gt;*&lt;white&gt;                |")
cecho("&lt;white&gt;\n stars, the first bright, and each successive     |                   |")
cecho("&lt;white&gt;\n star noticeably darker than the one before,      |    &lt;yellow&gt;*&lt;white&gt;              |")
cecho("&lt;white&gt;\n representing the soul of a tree, fading away     |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n in despair.                                      |                   |")
cecho("&lt;white&gt;\n                                                  |          &lt;cyan&gt;+&lt;white&gt;        |")
cecho("&lt;white&gt;\n When the living trees of the Morgun reach an     |              &lt;blue&gt;.&lt;white&gt;    |")
cecho("&lt;white&gt;\n ancient age, they become attuned to their own    |                   |")
cecho("&lt;white&gt;\n dark dryad, which lives inside the tree as       |                &lt;blue&gt;.&lt;white&gt;  |")
cecho("&lt;white&gt;\n their spirit, caring for them, feeling for       x-------------------x")
cecho("&lt;white&gt;\n them, and which then choose a nayar as a mate,")
cecho("&lt;white&gt;\n who serve as protectors to the tree's power.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n It's said that when Nala, a dark dryad, severed the link with her tree")
cecho("&lt;white&gt;\n and nayar to pursue a career as a minstrel, the ancient tree wasn't")
cecho("&lt;white&gt;\n able to live on with the pain; its soul faded away, until the other")
cecho("&lt;white&gt;\n dryads decided to offer what was left of it to the heavens, to find at")
cecho("&lt;white&gt;\n last some solace.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under its effect, you'll feel your dexterity increasing, but")
cecho("&lt;white&gt;\n your constitution will be diminished.")
cecho("\n")
cecho("&lt;white&gt;\n                    === &lt;yellow&gt;The Broken-hearted Tree &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Nala was a dark dryad of surpassing musical talent. In her life among")
cecho("&lt;white&gt;\n the dryads of Morgun Forest, although she was comfortable and enjoyed")
cecho("&lt;white&gt;\n her companionship with her nayar and tree, she was ultimately")
cecho("&lt;white&gt;\n unfulfilled. She craved an audience, she craved development of her")
cecho("&lt;white&gt;\n talent - the Muse had called her as if by name, and she could not")
cecho("&lt;white&gt;\n refuse.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Of her family and friends, and certainly her nayar, none could truly")
cecho("&lt;white&gt;\n understand, nor could they pretend to. They had all they could want from")
cecho("&lt;white&gt;\n their loved ones - what more is there than happiness? Telling herself it")
cecho("&lt;white&gt;\n was only a phase that she must wait through, Nala suppressed her desires")
cecho("&lt;white&gt;\n for a time, simply playing music for the amusement of those around her.")
cecho("&lt;white&gt;\n Yet as she grew more and more discontent, she came to realize that in")
cecho("&lt;white&gt;\n her life, a pursuit of art was compelling her soul in a way unmatched by")
cecho("&lt;white&gt;\n anything else she had experienced. And in that moment of realization,")
cecho("&lt;white&gt;\n her decision was made.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Though it had never before been attempted, though her methods remain")
cecho("&lt;white&gt;\n unknown, Nala severed her link with the tree, and thereby her link with")
cecho("&lt;white&gt;\n her family, her nayar, and everyone she had ever known. The experience")
cecho("&lt;white&gt;\n gave her the intimacy with loss and grief she had sought for her art,")
cecho("&lt;white&gt;\n more intensely than she had bargained for. Thereafter, Nala traveled the")
cecho("&lt;white&gt;\n world to improve her talents to where they are today. But back in the")
cecho("&lt;white&gt;\n dryad grove, all was not well.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n The tree, in shock and interminable grief, was dying. Spiritually, the")
cecho("&lt;white&gt;\n dryads could feel its severed link with Nala like a stump, dripping sap")
cecho("&lt;white&gt;\n with every touch of the breeze. It could not understand, was struck dumb")
cecho("&lt;white&gt;\n by the volume of its loss. They called to the Gods, they called to the")
cecho("&lt;white&gt;\n very essence of the wilds, for mercy on this creature, for healing. And")
cecho("&lt;white&gt;\n Lady Lleis came to the tree and gently took the severed branch of its")
cecho("&lt;white&gt;\n soul, putting it amidst the stars where it may one day recover from its")
cecho("&lt;white&gt;\n sorrow. Some say her nayar still visits the tree in the sky from time to")
cecho("&lt;white&gt;\n time.")
send(" ")
end, "Verdantia", true)
cecho("&lt;white&gt; |     | +1  | -1  |     | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Lanosian  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Treyes", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;TREYES, &lt;white&gt;the Candles")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as three blazing stars, topping three    |                   |")
cecho("&lt;white&gt;\n parallel columns of two dull stars each,         |                   |")
cecho("&lt;white&gt;\n representing the three sacred candles of the     |         &lt;yellow&gt;*&lt;white&gt;         |")
cecho("&lt;white&gt;\n Luminary fellowship and the Triad.               |   &lt;yellow&gt;*&lt;blue&gt;     .     &lt;yellow&gt;*&lt;white&gt;   |")
cecho("&lt;white&gt;\n                                                  |   &lt;blue&gt;.     .     .&lt;white&gt;   |")
cecho("&lt;white&gt;\n When the Cabalist guild was formed, its          |   &lt;blue&gt;.           .&lt;white&gt;   |")
cecho("&lt;white&gt;\n members were refused entrance into the Chaos     |                   |")
cecho("&lt;white&gt;\n Plane by Golgotha, the Emperor of Darkness,      |                   |")
cecho("&lt;white&gt;\n until a bargain was struck. In exchange for      |                   |")
cecho("&lt;white&gt;\n two guardian angels, willingly sacrificed by     x-------------------x")
cecho("&lt;white&gt;\n the priests they protected, and that would be")
cecho("&lt;white&gt;\n bound as brides for the Emperor, the cabalists were granted the safe")
cecho("&lt;white&gt;\n passage they sought.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Treyes represents the sacred candles gifted to the Luminaries by the")
cecho("&lt;white&gt;\n Triad of Angels many years later, which were instrumental in helping")
cecho("&lt;white&gt;\n them finally rescue those two long imprisoned angels from the Chaos")
cecho("&lt;white&gt;\n Plane.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under the effect of this constellation, you will feel much")
cecho("&lt;white&gt;\n stronger, but also less intelligent.")
cecho("\n")
cecho("&lt;white&gt;\n                      === &lt;yellow&gt;The Candles &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n On a dark day, two gullible priests were persuaded to betray their")
cecho("&lt;white&gt;\n guardian angels, gifting the angels to chaotic demons. The demons meant")
cecho("&lt;white&gt;\n to wed the holy beings, stripping them of their Divine purpose and")
cecho("&lt;white&gt;\n light. The demon plot succeeded until the Triad of Angels, three of the")
cecho("&lt;white&gt;\n most powerful archangels, appeared to members of the Guild of")
cecho("&lt;white&gt;\n Luminaries.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Luminaries had been distraught, trying to find a way to both punish")
cecho("&lt;white&gt;\n the mortals for their grievous sin against the spirit plane and release")
cecho("&lt;white&gt;\n the angelic beings from their cruel captivity. It was the appearance of")
cecho("&lt;white&gt;\n the Triad that gave the Luminaries what they required - the Three")
cecho("&lt;white&gt;\n Candles. The candles burned for light and fire and would surely be")
cecho("&lt;white&gt;\n strong enough to be used in a ceremony to free the enslaved guardians.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Guildmaster and her fellows traveled to the Chaos Plane to perform")
cecho("&lt;white&gt;\n the ritual, guided by the Triad from afar. The holy candles saved the")
cecho("&lt;white&gt;\n guardian angels and restored them to their rightful place on the spirit")
cecho("&lt;white&gt;\n plane. Anyone who looks upon this constellation is reminded of the")
cecho("&lt;white&gt;\n perseverance of light and the sacred bond that was broken and reformed")
cecho("&lt;white&gt;\n with the spirit plane through the Triad's grace.")
end, "Treyes", true)
cecho("&lt;white&gt;    | +1  |     |     | -1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Niuran    &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Sekhtet", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;SEKHTET, &lt;white&gt;the Martyr or the Aakhut")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation is seen in the night skies    |        &lt;yellow&gt;* * &lt;white&gt;       |")
cecho("&lt;white&gt;\n as seven stars in a tall, thin X shape, with     |                   |")
cecho("&lt;white&gt;\n two additional bright stars next to each other   |      &lt;yellow&gt; +   +&lt;white&gt;       |")
cecho("&lt;white&gt;\n in the upper part of the X, forming the body     |                   |")
cecho("&lt;white&gt;\n of Sekhtet, with a silver band around her        |      &lt;yellow&gt;   +&lt;white&gt;         |")
cecho("&lt;white&gt;\n forehead.                                        |                   |")
cecho("&lt;white&gt;\n                                                  |      &lt;yellow&gt; +   +&lt;white&gt;       |")
cecho("&lt;white&gt;\n Having served Niuri, the Goddess of Mystery as   |                   |")
cecho("&lt;white&gt;\n Her high priestess for all her life, Sekhtet     |      &lt;cyan&gt;+     +&lt;white&gt;      |")
cecho("&lt;white&gt;\n died sacrificing herself to elemental earth to   x-------------------x")
cecho("&lt;white&gt;\n save the foundations of her Matron's desert")
cecho("&lt;white&gt;\n temple from total ruin, although she couldn't totally prevent the")
cecho("&lt;white&gt;\n destruction of the Akhenades.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While affected by this constellation, you'll fell with a worse")
cecho("&lt;white&gt;\n constitution, but higher intelligence.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Martyr &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Sekhtet began life a sage with a keen perception and a glorious destiny.")
cecho("&lt;white&gt;\n As she wandered the sands of the Mhojave desert during the Death of")
cecho("&lt;white&gt;\n Truth in the year 90 of this age, the ankh symbol she wore attracted")
cecho("&lt;white&gt;\n mists of violet that arose from the cursed Mirror on Polyargos. Inspired")
cecho("&lt;white&gt;\n by this essence, Sekhtet parted the sands to the south and began a rite")
cecho("&lt;white&gt;\n that resulted in the manifestation of Lady Niuri. From that moment,")
cecho("&lt;white&gt;\n Sekhtet was the Goddess's Aakhut, servant and high priestess. But fate")
cecho("&lt;white&gt;\n was to decree that servitude short-lived.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n After only a quarter-century, Sekhtet sensed that an imbalance of the")
cecho("&lt;white&gt;\n physical elements, caused by a tainted ritual that summoned the earth")
cecho("&lt;white&gt;\n elemental Fordrock, had the power to remove Niuri's anchor from the")
cecho("&lt;white&gt;\n Mortal plane. In secrecy from her Matron, she ensconced herself in the")
cecho("&lt;white&gt;\n foundation of the Akhenades temple and wove spell after spell, hiding")
cecho("&lt;white&gt;\n Niuri's master shrine from the possibility of harm and protecting the")
cecho("&lt;white&gt;\n precious library of Mystery, knowing full well that she would perish in")
cecho("&lt;white&gt;\n the process. And indeed, after Niuri defeated Fordrock in the Tarea")
cecho("&lt;white&gt;\n Mountains, She returned to the desert to find Sekhtet's body,")
cecho("&lt;white&gt;\n irrevocably slain by elemental stone.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In anguish She abandoned Akhenades to the sands of time. But through")
cecho("&lt;white&gt;\n guidance in the form of letters penned with visions of the future,")
cecho("&lt;white&gt;\n Sekhtet helped the Order of Mystery lead the Goddess through Her")
cecho("&lt;white&gt;\n transformation, resulting eventually in the foundation of Her new temple")
cecho("&lt;white&gt;\n at Kentorakro. Her essence once again stable, Niuri raised Sekhtet's")
cecho("&lt;white&gt;\n body into the sky, giving her a place of honor in the constellations of")
cecho("&lt;white&gt;\n the night.")
send(" ")
end, "Sekhtet", true)
cecho("&lt;white&gt;   |     |     | -1  | +1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Slyphian  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Izu-Ari", function()
cecho("&lt;yellow&gt; IZU-ARI, &lt;white&gt;the Gambler or the Sovereign")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be seen as a single golden star,             |                   |")
cecho("&lt;white&gt;\n representing Izu-Ari's last gold sovereign.      |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n According to legend, Izu-Ari was once a rich     |                   |")
cecho("&lt;white&gt;\n and powerful man, with one deadly fault: he      |         &lt;yellow&gt;+&lt;white&gt;         |")
cecho("&lt;white&gt;\n couldn't resist a bet. When others bet he        |                   |")
cecho("&lt;white&gt;\n wouldn't be able to win a million gold in one    |                   |")
cecho("&lt;white&gt;\n week, he took that bet, and gambled day and      |                   |")
cecho("&lt;white&gt;\n night in order to gather the amount. When he     |                   |")
cecho("&lt;white&gt;\n had only one gold sovereign to go, he            x-------------------x")
cecho("&lt;white&gt;\n collapsed, dying of thirst and hunger just as")
cecho("&lt;white&gt;\n the ball settled into his number, making him win the bet. He was")
cecho("&lt;white&gt;\n placed in the heavens as a warning, perhaps. It's said it's ill luck")
cecho("&lt;white&gt;\n to gamble while this constellation is prominent in the sky.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The last of the surviving constellations which belonged to the old")
cecho("&lt;white&gt;\n Mejevsavelnel, while under the effect of Izu-Ari you will feel your")
cecho("&lt;white&gt;\n constitution increased, but your intelligence diminished.")
cecho("\n")
cecho("&lt;white&gt;\n &lt;yellow&gt;Izu-Ari, &lt;white&gt;the gambler - A single star, representing a gold sovereign")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n A rich and powerful man, Izu-Ari could never resist a bet. His last bet")
cecho("&lt;white&gt;\n cost him his life, however. It was proposed that he could never win a")
cecho("&lt;white&gt;\n million gold in one week. He took the bet, playing the tables night and")
cecho("&lt;white&gt;\n day. When he finally reached 999,999 gold, he keeled over from thirst")
cecho("&lt;white&gt;\n and hunger and as his breath ran out, the ball settled into his number.")
cecho("&lt;white&gt;\n He had won the bet. The time during which this constellation is")
cecho("&lt;white&gt;\n prominent would be an unlucky time to gamble.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n                          === &lt;yellow&gt;The Gambler&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Izu-Ari was an amazing gambler. A rival once bet him that he couldn't")
cecho("&lt;white&gt;\n win one million gold sovereigns in a single day. Unable to resist, he")
cecho("&lt;white&gt;\n took to the tables. Night ended and daylight passed, and he played")
cecho("&lt;white&gt;\n without pause. He was but a lone sovereign short of the unprecedented")
cecho("&lt;white&gt;\n feat when hunger and thirst took their toll on him, and he breathed his")
cecho("&lt;white&gt;\n last strained breath. He fell out of his chair and died, just as the")
cecho("&lt;white&gt;\n roulette ball settled onto his number at the turning of the symbolic")
cecho("&lt;white&gt;\n hourglass.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Though it cannot be said whether it was out of amusement or sympathy,")
cecho("&lt;white&gt;\n the millionth sovereign of Izu-Ari's lucrative day was lifted into the")
cecho("&lt;white&gt;\n heavens to be forever commemorated.")
send(" ")
end, "Izu-Ari", true)
cecho("&lt;white&gt;   |     |     | +1  | -1  | --------- |")
cecho("&lt;white&gt;\n | --------- +-----+-----+-----+-----+ &lt;turquoise&gt;Haernos   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Shenebre", function()
cecho("&lt;white&gt;\n &lt;yellow&gt;SHENEBRE, the Beast")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation is visible as a group of      |                   |")
cecho("&lt;white&gt;\n five bright stars in a distorted pentagon,       |                   |")
cecho("&lt;white&gt;\n forming the hulking body of the Beast.           |        &lt;yellow&gt; +&lt;white&gt;         |")
cecho("&lt;white&gt;\n                                                  |  &lt;yellow&gt; +            &lt;white&gt;   |")
cecho("&lt;white&gt;\n The Crypt Beast, after plaguing the village of   |               &lt;yellow&gt; +&lt;white&gt;  |")
cecho("&lt;white&gt;\n Thera for innumerable years was finally freed,   |                   |")
cecho("&lt;white&gt;\n when the village was retaken and destroyed by    |                   |")
cecho("&lt;white&gt;\n the awakened trees of the Morgun Forest. The     |  &lt;cyan&gt;+        +   &lt;white&gt;    |")
cecho("&lt;white&gt;\n Gods took pity on the creature, which had lain   |                   |")
cecho("&lt;white&gt;\n in torment for such a long time, and allowed     x-------------------x")
cecho("&lt;white&gt;\n it passage into the heavens, where it could")
cecho("&lt;white&gt;\n rage in freedom, at last.")
cecho("\n")
cecho("&lt;white&gt;\n While Shenebre is prominent in the heavens, you will feel weaker but")
cecho("&lt;white&gt;\n more agile.")
cecho("&lt;white&gt;\n                           === &lt;yellow&gt;The Beast &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Thera was a peaceful village, but in its crypt lurked a Beast of")
cecho("&lt;white&gt;\n insatiable appetite and unending torment. Tortured by hunger,")
cecho("&lt;white&gt;\n loneliness, and all the vices that can drive a creature to insanity, he")
cecho("&lt;white&gt;\n was without remorse or knowledge of his actions. He slew many innocents")
cecho("&lt;white&gt;\n in his pain, and though many brave souls drove him back to his lair,")
cecho("&lt;white&gt;\n never could the wounds they inflicted prevent him from further")
cecho("&lt;white&gt;\n destruction.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n When the Morgan Forest reclaimed Thera in its vines and roots, the")
cecho("&lt;white&gt;\n villagers fled for their lives. The Beast, however, remained, unable to")
cecho("&lt;white&gt;\n comprehend the transition his home was undergoing. The shrubs and bushes")
cecho("&lt;white&gt;\n attempted to rid their new home of the Beast, but his thick hide dulled")
cecho("&lt;white&gt;\n their attacks into mere annoyance. Bushes are not terribly intelligent")
cecho("&lt;white&gt;\n and, although they were making no progress, they continued to try and")
cecho("&lt;white&gt;\n defeat the Beast.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n For days, for weeks, the shrubs stabbed their thorns at him, preventing")
cecho("&lt;white&gt;\n his movement and driving him to rage. Under constant stabbing by tiny")
cecho("&lt;white&gt;\n thorns, tormented by hunger, his food source having fled to southern")
cecho("&lt;white&gt;\n villages, the Beast was a pitiable sight indeed. He seemed doomed to die")
cecho("&lt;white&gt;\n from slow starvation, all the while tortured by ignorant plants. His")
cecho("&lt;white&gt;\n bellowed moans of pain and anguish drifted over the valleys and")
cecho("&lt;white&gt;\n eventually reached the ears of Lord Haern.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Beast was indeed a creature of the Hunt, gifted by Lord Haern ages")
cecho("&lt;white&gt;\n ago in the ways of tooth and claw. To see His creation suffer so, to die")
cecho("&lt;white&gt;\n a death so ignoble, moved His heart. Though it was time for the Beast to")
cecho("&lt;white&gt;\n leave Thera, he could not be allowed to roam Sapience without the")
cecho("&lt;white&gt;\n confines of his crypt, now inaccessible. Lord Haern instead lifted His")
cecho("&lt;white&gt;\n creature up and allowed him to enter the night sky, where the Beast now")
cecho("&lt;white&gt;\n hunts eternally. As a final parting gift, the Beast was granted the name")
cecho("&lt;white&gt;\n Shenebre, to forever honor his grace and severity.")
send(" ")
end, "Shenebre", true)
cecho("&lt;white&gt;  | -1  | +1  |     |     | --------- |")
cecho("&lt;white&gt;\n |           *-----*-----*-----*-----* &lt;turquoise&gt;Variach   &lt;white&gt;|")
cecho("&lt;white&gt;\n x-----------------------------------------------x")
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^stars1$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Positive Stars</name>
						<script>cecho("&lt;white&gt;\n x--------------------------------------------------------x")
cecho("&lt;white&gt;\n |   &lt;pink&gt;POSITIVE            EFFECTS            OBSERVATIONS  &lt;white&gt;|")
cecho("&lt;white&gt;\n |    &lt;pink&gt;STARS       &lt;MediumSpringGreen&gt;Hea   Man   End   Wil    &lt;pink&gt;(29 day cycle) &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ *-----*-----*-----*-----* --------------- |")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Alitheia", function()
cecho("&lt;white&gt;\n &lt;green&gt;ALITHEIA, &lt;white&gt;the Southern Sword")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Seen as a vertical line of three bright stars,   |    &lt;yellow&gt;*         *    &lt;white&gt;|")
cecho("&lt;white&gt;\n the topmost star itself the center of a short    |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n horizontal line of three stars, forming the      |                   |")
cecho("&lt;white&gt;\n outline of a sword, pointing eternally towards   |                   |")
cecho("&lt;white&gt;\n the city of Enorian.                             |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Legends speak of the great warrior priestess     |                   |")
cecho("&lt;white&gt;\n Alitheia, a servant Lanos, who was honoured in   |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n the heavens for her years of service to the      |                   |")
cecho("&lt;white&gt;\n God of Truth, by having her sword become a       x-------------------x")
cecho("&lt;white&gt;\n constellation destined to guide all towards")
cecho("&lt;white&gt;\n the City of Light.")
cecho("\n")
cecho("&lt;white&gt;\n This constellation will allow you to be less tired, by increasing your")
cecho("&lt;white&gt;\n reserves of endurance.")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Southern Sword&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n The warrior-priestess Alitheia was a devoted servant of Lord Lanos for")
cecho("&lt;white&gt;\n many years, counselling countless confused souls on the meaning and")
cecho("&lt;white&gt;\n importance of the myriad facets of Truth. So dedicated was she to her")
cecho("&lt;white&gt;\n cause that she was renowned for taking on any challenger, brandishing")
cecho("&lt;white&gt;\n her sword with a veracity matched only by her tenacious pursuit of")
cecho("&lt;white&gt;\n philosophy.")
cecho("\n")
cecho("&lt;white&gt;\n She fought with unrivaled honor, and when she spoke, there could be no")
cecho("&lt;white&gt;\n doubt of her wisdom. When Lord Lanos entered the Shadow Realm, Alitheia")
cecho("&lt;white&gt;\n prayed that the city of Shallam (now Enorian) might be protected from")
cecho("&lt;white&gt;\n those who might attack her or her knowledge of the Truth while Lord")
cecho("&lt;white&gt;\n Lanos was otherwise occupied.")
cecho("\n")
cecho("&lt;white&gt;\n Convinced His absence was a temporary, indeed short-lived, necessity,")
cecho("&lt;white&gt;\n Alitheia remained at His shrine in prayer for days and would not accept")
cecho("&lt;white&gt;\n food or water. When her worried Ordermates came to check on her")
cecho("&lt;white&gt;\n condition, however, she was gone; and in the night sky blazed her sword,")
cecho("&lt;white&gt;\n daring the night to try and obscure the brilliance of Enorian.")
send(" ")
end, "Alitheia", true)
cecho("&lt;white&gt;     |     |     | +5% |     |  &lt;turquoise&gt;1 Haernos 151  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Porannas", function()
cecho("&lt;white&gt;\n &lt;green&gt;PORANNAS, &lt;white&gt;the Ankyrean Rebel or the Scales")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as four stars in a diamond pattern,      |                   |")
cecho("&lt;white&gt;\n representing a set of scales, held in absolute   |                   |")
cecho("&lt;white&gt;\n balance.                                         |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n It is said Porannas was the name of an ancient   |  &lt;cyan&gt;+             +  &lt;white&gt;|")
cecho("&lt;white&gt;\n Ankyrean scholar, executed by his own people     |                   |")
cecho("&lt;white&gt;\n for preaching his belief that Ankyreans and      |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n rellyw alike, the common folks, should be        |                   |")
cecho("&lt;white&gt;\n treated as equals.                               |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Ankyrean Rebel&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n A young and idealistic Ankyrean, Porannas believed with all his heart")
cecho("&lt;white&gt;\n that the Ankyrean Order did not deserve to reign over the lesser")
cecho("&lt;white&gt;\n \"rellyw\" races. He spoke out against his brethren, and though they")
cecho("&lt;white&gt;\n imprisoned and soon thereafter executed him, his memory lived on in the")
cecho("&lt;white&gt;\n hearts of the rellyw and in the constellation that they named for him.")
send(" ")
end, "Porannas", true)
cecho("&lt;white&gt;     |     |     |     |     |  &lt;turquoise&gt;5 Variach 152  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Melot", function()
cecho("&lt;white&gt;\n &lt;green&gt;MELOT,&lt;white&gt; the Warrior or the Champion")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation can be seen as seven stars    |                   |")
cecho("&lt;white&gt;\n in an inverted T-shape, representing the form    |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n of Melot, standing victorious over her foes.     |                   |")
cecho("&lt;white&gt;\n                                                  |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n The tale of Melot speaks of an accomplished      |                   |")
cecho("&lt;white&gt;\n warrior, whom after defeating her hundredth foe  |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n in battle, and as she lay dying, was raised by   |                   |")
cecho("&lt;white&gt;\n the God of Valor, Arion, to the heavens, as      |   &lt;cyan&gt;+   +   +   +   &lt;white&gt;|")
cecho("&lt;white&gt;\n tribute for her accomplishments.                 |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Champion&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Without equal in battle, the great warrior Melot constantly sought")
cecho("&lt;white&gt;\n challenges against which she could test herself. At last, she boasted")
cecho("&lt;white&gt;\n that she could fight one hundred men and women at once, and that all her")
cecho("&lt;white&gt;\n possessions would go to the survivors if they could best her. At the end")
cecho("&lt;white&gt;\n of the battle, Melot lay gravely wounded, but her foes all lay slain.")
cecho("&lt;white&gt;\n Out of respect for her strength, Arion raised the dying warrior into the")
cecho("&lt;white&gt;\n heavens.")
send(" ")
end, "Melot", true)
cecho("&lt;white&gt;        |     |     |     |     |  &lt;turquoise&gt;9 Severin 152  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Ulgar", function()
cecho("&lt;white&gt;\n &lt;green&gt;ULGAR, &lt;white&gt;the First Troll")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears in the night sky as five pale,           |                   |")
cecho("&lt;white&gt;\n greenish stars in a wide swath, forming up the   |       &lt;MediumSpringGreen&gt;  .         &lt;white&gt;|")
cecho("&lt;white&gt;\n hulking form of Ulgar, the first troll.          |                   |")
cecho("&lt;white&gt;\n                                                  |     &lt;MediumSpringGreen&gt;.             &lt;white&gt;|")
cecho("&lt;white&gt;\n Formerly a wise and intelligent man tricked by   |             &lt;MediumSpringGreen&gt;.     &lt;white&gt;|")
cecho("&lt;white&gt;\n a corrupt Goddess into becoming a thoughtless    |    &lt;MediumSpringGreen&gt;.              &lt;white&gt;|")
cecho("&lt;white&gt;\n mountain of strength, it was when the God        |                   |")
cecho("&lt;white&gt;\n Arion restored enough of his mind that Ulgar     |            &lt;MediumSpringGreen&gt;.      &lt;white&gt;|")
cecho("&lt;white&gt;\n finally became the father of all Trolls. Now     |                   |")
cecho("&lt;white&gt;\n resting in the heavens, he will forever watch    x-------------------x")
cecho("&lt;white&gt;\n over his progeny from the sky.")
cecho("\n")
cecho("&lt;white&gt;\n While this constellation is high in the sky, all aetolians will feel")
cecho("&lt;white&gt;\n their overall health increased.")
cecho("\n")
cecho("&lt;white&gt;\n                     === &lt;green&gt;The First of the Trolls&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n When the Divine came together to form sentient life, there were many")
cecho("&lt;white&gt;\n experiments performed. There were the Tsol'aa, formed from the life that")
cecho("&lt;white&gt;\n grew upon the earth and gifted with its patience. There were the")
cecho("&lt;white&gt;\n Atavians, drawn from the essence of what we now call clouds. Corruption")
cecho("&lt;white&gt;\n too played its part, as the wisest of all mortals, Ulgar, was seduced")
cecho("&lt;white&gt;\n into foregoing his wisdom for strength. Thus was the first of the Trolls")
cecho("&lt;white&gt;\n created.")
cecho("\n")
cecho("&lt;white&gt;\n He was the pale green of spring soil, with loyalty unfaltering and")
cecho("&lt;white&gt;\n strength unstoppable. His many children would eventually be responsible")
cecho("&lt;white&gt;\n for the Trolls that populate the world today, and upon the day of his")
cecho("&lt;white&gt;\n death, they gathered to pray for his safe passage to the realms beyond.")
cecho("&lt;white&gt;\n He passed indeed, and they returned to their many homes in mourning.")
cecho("\n")
cecho("&lt;white&gt;\n They were relieved, however, to discover in the following evening that a")
cecho("&lt;white&gt;\n new formation in the stars had appeared - a constellation that filled")
cecho("&lt;white&gt;\n them, and fills their progeny still, with a sense of pride and security.")
send(" ")
end, "Ulgar", true)
cecho("&lt;white&gt;        | +5% |     |     |     | &lt;turquoise&gt;13 Ios 152      &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Drobia", function()
cecho("&lt;white&gt;\n &lt;green&gt;DROBIA, &lt;white&gt;the Gears")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation shows itself as fourteen      |                   |")
cecho("&lt;white&gt;\n stars, grouped into three rough circles          | &lt;cyan&gt; +  +       +  +  &lt;white&gt;|")
cecho("&lt;white&gt;\n touching one another, forming the shape of       |                   |")
cecho("&lt;white&gt;\n three turning gears.                             |&lt;cyan&gt;+      +   +      +&lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Reputedly a trio of three massive gears,         |  &lt;cyan&gt;+  +       +  +  &lt;white&gt;|")
cecho("&lt;white&gt;\n crafted by the Kelki machinists of the closed    |                   |")
cecho("&lt;white&gt;\n underwater city of Kelsys, the gears of Drobia   |       &lt;cyan&gt;+   +       &lt;white&gt;|")
cecho("&lt;white&gt;\n are thought to be able to guide travellers       |                   |")
cecho("&lt;white&gt;\n unerringly towards Kelsys.                       x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;green&gt;The Gears&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Deep beneath the churning surface of the ocean, a civilization lay")
cecho("&lt;white&gt;\n hidden for countless years. Evolved from a medley of sea-creatures")
cecho("&lt;white&gt;\n through the experimentations of Lady Slyphe, the race that came to be")
cecho("&lt;white&gt;\n known as the Kelki built the city of Kelsys and guarded it, keeping it")
cecho("&lt;white&gt;\n safe and away from outsiders.")
cecho("\n")
cecho("&lt;white&gt;\n Tired of the stagnation and overcautiousness displayed by the city and")
cecho("&lt;white&gt;\n its inhabitants, the Goddess Slyphe decided to reveal the city, allowing")
cecho("&lt;white&gt;\n outsiders to intrude for better or for worse. As She did so, three of")
cecho("&lt;white&gt;\n the gears of the Kelki floated up to the night sky, gently coming to a")
cecho("&lt;white&gt;\n halt in their final resting place directly above the city far below.")
cecho("&lt;white&gt;\n Their heavenly forms continue to turn to this day, driven by some")
cecho("&lt;white&gt;\n unknown power, guiding any who wish to find the Hidden City.")
send(" ")
end, "Drobia", true)
cecho("&lt;white&gt;       |     |     |     |     | &lt;turquoise&gt;17 Arios 152    &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Gulbedim", function()
cecho("&lt;white&gt;\n &lt;green&gt;GULBEDIM,&lt;white&gt; the Hexer")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be viewed as eight dim stars, forming a      |       &lt;cyan&gt;+           &lt;white&gt;|")
cecho("&lt;white&gt;\n misshapen oval, and representing the scowling    |    &lt;cyan&gt;+              &lt;white&gt;|")
cecho("&lt;white&gt;\n countenance of Gulbedim.                         |            &lt;cyan&gt;+      &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n It is said the Gulbedim, a skilled user of       |    &lt;cyan&gt;+              &lt;white&gt;|")
cecho("&lt;white&gt;\n cantrips and spells, found no other purpose      |            &lt;cyan&gt;+      &lt;white&gt;|")
cecho("&lt;white&gt;\n for her skills than to cast hexes on those       |      &lt;cyan&gt;+            &lt;white&gt;|")
cecho("&lt;white&gt;\n poor unfortunates whom she believed had          |              &lt;cyan&gt;+    &lt;white&gt;|")
cecho("&lt;white&gt;\n somehow caused her harm. It was only when she    |          &lt;cyan&gt;+        &lt;white&gt;|")
cecho("&lt;white&gt;\n met someone more powerful then herself, that     x-------------------x")
cecho("&lt;white&gt;\n she was finally punished. A greater witch")
cecho("&lt;white&gt;\n after paralysing her, proceeded to fling her into the firmament, so")
cecho("&lt;white&gt;\n that for all time she would watch her \"enemies\" go unpunished.")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Paranoid&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Gulbedim was never very happy. As a young Grook, she resented her")
cecho("&lt;white&gt;\n parents for every wish they did not grant her, and finally she hopped")
cecho("&lt;white&gt;\n away to learn the ways of magic. She was taught by a great witch whose")
cecho("&lt;white&gt;\n name has been forgotten, and showed herself to be an eager pupil. In but")
cecho("&lt;white&gt;\n a few years, barely a scrap of an adult, she returned home to her")
cecho("&lt;white&gt;\n parents and took her full revenge upon them for their 'miserly")
cecho("&lt;white&gt;\n authoritarian ways'.")
cecho("\n")
cecho("&lt;white&gt;\n Her mentor had not taught her the ways of death and torture, but hexes")
cecho("&lt;white&gt;\n brought her joy - her parents were unable to speak or move their fingers")
cecho("&lt;white&gt;\n correctly, due to her passionate hex. They were the first victims of her")
cecho("&lt;white&gt;\n unfortunate paranoia - many people, animals, and even plants would")
cecho("&lt;white&gt;\n suffer under Gulbedim's magical talents, if she believed they were")
cecho("&lt;white&gt;\n trying to harm or discomfort her in any way.")
cecho("\n")
cecho("&lt;white&gt;\n Word of this magical brat eventually came back to her teacher and,")
cecho("&lt;white&gt;\n embarrassed at her own folly, this great witch went to her pupil. She")
cecho("&lt;white&gt;\n tried to explain rationally, tried to persuade, tried to coerce.")
cecho("&lt;white&gt;\n Finally, with a weary sigh, the witch saw there was no hope for")
cecho("&lt;white&gt;\n Gulbedim. The girl was filled with an irrational hatred and fear,")
cecho("&lt;white&gt;\n without source or reason. The teacher weaved a complex curse upon the")
cecho("&lt;white&gt;\n adolescent Grook, a hex that would preserve her life (perhaps")
cecho("&lt;white&gt;\n eternally), but only allow her to move after she had watched the last of")
cecho("&lt;white&gt;\n her hated enemies perish.")
cecho("\n")
cecho("&lt;white&gt;\n Perhaps it was Lady Khepri that interpreted this hex to mean that")
cecho("&lt;white&gt;\n Gulbedim should be lifted into the stars to watch all of Sapience until")
cecho("&lt;white&gt;\n the end comes, but there she waits. Some now think that the mentor")
cecho("&lt;white&gt;\n should have just fed the girl a bit of prickly ash.")
send(" ")
end, "Gulbedim", true)
cecho("&lt;white&gt;     |     |     |     |     | &lt;turquoise&gt;21 Chakros 152  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Keyo &amp; Shiri", function()
cecho("&lt;white&gt;\n &lt;green&gt;KEYO &amp; SHIRI,&lt;white&gt; the Lovers")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears in the night sky      |                   |")
cecho("&lt;white&gt;\n as a V-shaped form, with three stars forming     |   &lt;cyan&gt; +         +    &lt;white&gt;|")
cecho("&lt;white&gt;\n each side, representing the lovers' forever      |                   |")
cecho("&lt;white&gt;\n entwining hands.                                 |                   |")
cecho("&lt;white&gt;\n                                                  |    &lt;cyan&gt; +       +     &lt;white&gt;|")
cecho("&lt;white&gt;\n Legends speak of the true nature of the love     |                   |")
cecho("&lt;white&gt;\n Keyo and Shiri shared. So overwhelming, in       |                   |")
cecho("&lt;white&gt;\n fact, that not even the hatred their families    |       &lt;cyan&gt; + +        &lt;white&gt;|")
cecho("&lt;white&gt;\n and friends felt for each other was enough to    |                   |")
cecho("&lt;white&gt;\n keep them apart. As such a pure love could       x-------------------x")
cecho("&lt;white&gt;\n only be Divine in itself, their souls ascended")
cecho("&lt;white&gt;\n to the stars.")
cecho("\n")
cecho("&lt;white&gt;\n While this constellation remains prominent in the skies, you will feel")
cecho("&lt;white&gt;\n your willpower increased.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;green&gt;The Lovers&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n A young girl of Ashtan, Shiri would run around the city during her")
cecho("&lt;white&gt;\n childhood, as carefree as any little girl. One eventful morning, at the")
cecho("&lt;white&gt;\n gates of the city, she found a pile of rags discarded there. Upon")
cecho("&lt;white&gt;\n further inspection, she noticed that the rags were actually torn")
cecho("&lt;white&gt;\n clothes, worn by an unconscious boy who seemed to be close to her age.")
cecho("&lt;white&gt;\n She quickly ran home and alerted her father, whom she led back to the")
cecho("&lt;white&gt;\n boy.")
cecho("\n")
cecho("&lt;white&gt;\n The father carried the unconscious child home, and Shiri's mother nursed")
cecho("&lt;white&gt;\n him back to health. Shiri's father, meanwhile, was calling for a city")
cecho("&lt;white&gt;\n meeting to discuss the nature of the foundling. A woman named Erinkha,")
cecho("&lt;white&gt;\n well known for her compassion as well as her ability to lead, stood and")
cecho("&lt;white&gt;\n offered to take the boy into her charge. For reasons unknown, Shiri's")
cecho("&lt;white&gt;\n family was at odds with Erinkha and her kinsmen. But the rest of the")
cecho("&lt;white&gt;\n city agreed that it was a good decision, and the boy was handed over to")
cecho("&lt;white&gt;\n Erinkha and lived with her.")
cecho("\n")
cecho("&lt;white&gt;\n He had no memory of where he was from, nor could he glean any")
cecho("&lt;white&gt;\n information about himself. Erinkha named him Keyo. Keyo and Shiri grew")
cecho("&lt;white&gt;\n up together with other Ashtani children, and became close friends and")
cecho("&lt;white&gt;\n confidants. When Shiri started to mature, she was noticed by older boys,")
cecho("&lt;white&gt;\n who began to court her. Keyo, too, tried to court Shiri, and Shiri's")
cecho("&lt;white&gt;\n father was pleased when Shiri dismissed Keyo, assuming that he was only")
cecho("&lt;white&gt;\n joking. Crestfallen, Keyo went home, where Erinkha comforted him.")
cecho("\n")
cecho("&lt;white&gt;\n As time passed, they grew apart. Shiri became promiscuous, developing a")
cecho("&lt;white&gt;\n reputation that Keyo had heard about, one he pretended to ignore as he")
cecho("&lt;white&gt;\n found his own woman and settled with her. Circumstances with the")
cecho("&lt;white&gt;\n organizations they were involved in put Keyo and Shiri together on a lot")
cecho("&lt;white&gt;\n of projects, and their friendship was rekindled after several years.")
cecho("\n")
cecho("&lt;white&gt;\n Shiri's ephemeral relationships continued, much to Keyo's disgust and")
cecho("&lt;white&gt;\n dismay, but he supported his friend and whatever made her happy.")
cecho("&lt;white&gt;\n Finally, Shiri found a steady relationship and settled down. Concealing")
cecho("&lt;white&gt;\n his envy, Keyo expressed relief that she had given up her flirtatious")
cecho("&lt;white&gt;\n lifestyle. But it was then that he understood his true feelings for")
cecho("&lt;white&gt;\n Shiri.")
cecho("\n")
cecho("&lt;white&gt;\n And when her new man suddenly disappeared, it was Keyo that Shiri looked")
cecho("&lt;white&gt;\n to for comfort. When the man finally returned and utterly rejected")
cecho("&lt;white&gt;\n Shiri, which took everyone by surprise, Shiri fell apart. Keyo took it")
cecho("&lt;white&gt;\n upon himself to console her and constantly quell her thoughts of")
cecho("&lt;white&gt;\n suicide. Wiping away her tears, Keyo was taken by surprise when, upon a")
cecho("&lt;white&gt;\n whim, Shiri suddenly kissed him.")
cecho("\n")
cecho("&lt;white&gt;\n At once, he blurted out all his feelings for her. To his greater")
cecho("&lt;white&gt;\n surprise, she felt similarly. This time, when he courted her, she")
cecho("&lt;white&gt;\n accepted. News spread to their families, and both sides were equally")
cecho("&lt;white&gt;\n furious. Erinkha berated Keyo, and Shiri's family gave her vicious")
cecho("&lt;white&gt;\n stares and snide remarks. Their love became secretive, and they were")
cecho("&lt;white&gt;\n forced to have hidden liaisons. The bitterness between the families")
cecho("&lt;white&gt;\n escalated into a feud. If Keyo's family saw Shiri in the steet, or vice")
cecho("&lt;white&gt;\n versa, stones were thrown and insults shouted.")
cecho("\n")
cecho("&lt;white&gt;\n But still their relationship endured, and when Keyo had enough money,")
cecho("&lt;white&gt;\n the two of them were married, and even though only their close friends,")
cecho("&lt;white&gt;\n none of their relatives, attended the humble wedding, their families")
cecho("&lt;white&gt;\n slowly began to accept the choices their children made. Their mortal")
cecho("&lt;white&gt;\n hearts were swayed by the love between the Ashtani girl and foundling")
cecho("&lt;white&gt;\n boy. The Gods were so moved by this unbridled display of pure love,")
cecho("&lt;white&gt;\n emotion that not even the greatest of adversity could stifle, that they")
cecho("&lt;white&gt;\n lifted Keyo and Shiri into the starry heavens so that their love could")
cecho("&lt;white&gt;\n live on eternally.")
send(" ")
end, "Keyo &amp; Shiri", true)
cecho("&lt;white&gt; |     |     |     | +5% | &lt;turquoise&gt;25 Khepary 152  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Elindes", function()
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Radiant Flower&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Pleased by her years of devotion to the studies of the heavens, Lady")
cecho("&lt;white&gt;\n Slyphe wished to grant the beautiful astrologer, Elenina, a gift. Not")
cecho("&lt;white&gt;\n satisfied with the usual boon or favor, She pondered idea after idea,")
cecho("&lt;white&gt;\n searching for the perfect one.")
cecho("\n")
cecho("&lt;white&gt;\n Finally, Her attention was drawn to the silver pendant worn around")
cecho("&lt;white&gt;\n Elenina's neck at all times, depicting a flower with six petals. Through")
cecho("&lt;white&gt;\n Her Divine will, the flower of metal was transformed into the")
cecho("&lt;white&gt;\n constellation Elindes, and placed gently in the sky to serve as a")
cecho("&lt;white&gt;\n reminder to all of the dedication of the Kalebb astrologer.")
send(" ")
end, "Elindes", true)
cecho("&lt;white&gt;      |     |     |     |     |  &lt;turquoise&gt;4 Lleian 152   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- &lt;white&gt;|")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Eja Kodosa", function()
cecho("&lt;white&gt;\n &lt;green&gt;EJA KODOSA,&lt;white&gt; the Tome of Ages")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears as six stars in       |                   |")
cecho("&lt;white&gt;\n three vertically-aligned pairs, the center       |   &lt;cyan&gt;+           +   &lt;white&gt;|")
cecho("&lt;white&gt;\n pair lower than the others, forming the shape    |   &lt;cyan&gt;      +         &lt;white&gt;|")
cecho("&lt;white&gt;\n of an open book.                                 |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n From the oldest legends, we learn of a           |   &lt;cyan&gt;+           +   &lt;white&gt;|")
cecho("&lt;white&gt;\n mysterious tome, where Varian, the Creator of    |   &lt;cyan&gt;      +         &lt;white&gt;|")
cecho("&lt;white&gt;\n All is said to record every detail of His        |                   |")
cecho("&lt;white&gt;\n creation, past, present and future. This         |                   |")
cecho("&lt;white&gt;\n mighty tome is reportedly crafted from His       x-------------------x")
cecho("&lt;white&gt;\n very essence, and was known to those of the")
cecho("&lt;white&gt;\n First Mortal Epoch as Eja Kodosa.")
end, "Eja Kodosa", true)
cecho("&lt;white&gt;   |     |     |     |     |  &lt;turquoise&gt;8 Lanosian 152&lt;white&gt; &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- |")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Averroes", function()
cecho("&lt;white&gt;\n &lt;green&gt;AVERROES,&lt;white&gt; the Wise")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Visible as a collection of twelve stars          |&lt;cyan&gt;            +      &lt;white&gt;|")
cecho("&lt;white&gt;\n arranged in outward spirals, representing the    | &lt;cyan&gt;   +              &lt;white&gt;|")
cecho("&lt;white&gt;\n endless wisdom of Averroes, the Wise, as it      |&lt;cyan&gt;         +     +   &lt;white&gt;|")
cecho("&lt;white&gt;\n spreads outwards to all.                         | &lt;cyan&gt;     +    +       &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |          &lt;yellow&gt;*        &lt;white&gt;|")
cecho("&lt;white&gt;\n For many years residing in the city of Enorian,  |&lt;cyan&gt; +     +       +   &lt;white&gt;|")
cecho("&lt;white&gt;\n Averroes, the Prophet was known as a kind,       |      &lt;cyan&gt;     +       &lt;white&gt;|")
cecho("&lt;white&gt;\n knowledgeable soul who spent his lifetime        |                   |")
cecho("&lt;white&gt;\n spreading his seemingly endless knowledge to     |   &lt;cyan&gt;   +            &lt;white&gt;|")
cecho("&lt;white&gt;\n generations of aetolians, so earning the right   x-------------------x")
cecho("&lt;white&gt;\n to grace the heavens.")
cecho("\n")
cecho("&lt;white&gt;\n While affected by this constellation, you'll feel more able to cast")
cecho("&lt;white&gt;\n spells, by having your mana reserves increased.")
cecho("\n")
cecho("&lt;white&gt;\n                             === &lt;green&gt;The Wise&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Residing in the city then known as Shallam for as long as anyone can")
cecho("&lt;white&gt;\n remember, the prophet Averroes lived a relatively quiet life, always")
cecho("&lt;white&gt;\n with his doors open wide to the public. Serving as a teacher to novices")
cecho("&lt;white&gt;\n and veterans alike, he never turned anyone away who sought his")
cecho("&lt;white&gt;\n knowledge, which he was more than happy to share.")
cecho("\n")
cecho("&lt;white&gt;\n Loved by the people, who constantly brought him the seashells he so")
cecho("&lt;white&gt;\n adored, Averroes led an interesting and pleasant existence. When the")
cecho("&lt;white&gt;\n darkness came and Amairgen had Averroes poisoned, the prayers of the")
cecho("&lt;white&gt;\n people of Enorian lifted the sage's soul into the heavens to be forever")
cecho("&lt;white&gt;\n immortalized.")
send(" ")
end, "Averroes", true)
cecho("&lt;white&gt;     |     | +5% |     |     | &lt;turquoise&gt;12 Niuran 152   &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- |")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Loskiou", function()
cecho("&lt;white&gt;\n &lt;green&gt;LOSKIOU,&lt;white&gt; the Giver or the Selfless")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Seen as a single bright star of simple, pure     |                   |")
cecho("&lt;white&gt;\n white hue, representing the soul of Loskiou,     |                   |")
cecho("&lt;white&gt;\n shining selflessly over all mortals.             |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n All the days of her life, Loskiou would show     |         &lt;white&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n her generosity by giving a gift to all,          |                   |")
cecho("&lt;white&gt;\n stranger and friend alike. When the time came    |                   |")
cecho("&lt;white&gt;\n for her to die, the Underking offered to give    |                   |")
cecho("&lt;white&gt;\n her a gift of her own. When she answered all     |                   |")
cecho("&lt;white&gt;\n she wanted was to still be able to offer         x-------------------x")
cecho("&lt;white&gt;\n something to everyone, even in death, the")
cecho("&lt;white&gt;\n Underking elevated her to the heavens, where she's now able to shine")
cecho("&lt;white&gt;\n down and give light to all who need her.")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Selfless&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n In some parts of Sapience, it is believed that our actions in this life")
cecho("&lt;white&gt;\n determine the Underking's pronouncement upon us after we have passed")
cecho("&lt;white&gt;\n away. Imagine then, a simple Mhun woman by the name of Loskiou, who")
cecho("&lt;white&gt;\n lived each day with the goal of improving others' lives, even by the")
cecho("&lt;white&gt;\n tiniest bit.")
cecho("\n")
cecho("&lt;white&gt;\n She set herself the task of giving a gift to someone, anyone, before the")
cecho("&lt;white&gt;\n sun set each day. Furthermore, she decided that each gift must be needed")
cecho("&lt;white&gt;\n by the person to whom she gave it, and so much of her days were filled")
cecho("&lt;white&gt;\n with divining the needs of others and (of course) meeting them, even by")
cecho("&lt;white&gt;\n the tiniest margin.")
cecho("\n")
cecho("&lt;white&gt;\n It is perhaps miraculous that we remember her name today, as she was")
cecho("&lt;white&gt;\n never particularly well known for her deeds. She died at an old age,")
cecho("&lt;white&gt;\n happy but unrecognized. When she appeared before the Underking, He was")
cecho("&lt;white&gt;\n surprised. Small kindnesses, given in sincerity, had forged her soul")
cecho("&lt;white&gt;\n into something new, something more deserving of reward than He had seen.")
cecho("\n")
cecho("&lt;white&gt;\n And so, though she could not speak selfishly, He granted her the wish")
cecho("&lt;white&gt;\n she would not put to words. She achieved her heart's desire and was")
cecho("&lt;white&gt;\n allowed to give even in death, as the Underking raised her spirit to")
cecho("&lt;white&gt;\n give light to the entire world.")
send(" ")
end, "Loskiou", true)
cecho("&lt;white&gt;      |     |     |     |     | &lt;turquoise&gt;16 Slyphian 152 &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ +-----+-----+-----+-----+ --------------- |")
cecho("&lt;white&gt;\n | ")cechoLink("&lt;yellow&gt;Azimel", function()
cecho("&lt;white&gt;\n &lt;green&gt;AZIMEL,&lt;white&gt; the Storm Shepherd")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appearing in the night skies as eleven stars     |                   |")
cecho("&lt;white&gt;\n in the shape of a two-pronged fork, three        |      &lt;yellow&gt;*     *      &lt;white&gt;|")
cecho("&lt;white&gt;\n stars on each prong and five on the central      |      &lt;cyan&gt;+     +      &lt;white&gt;|")
cecho("&lt;white&gt;\n stem, with the central and the tips on each      |       &lt;cyan&gt;+   +       &lt;white&gt;|")
cecho("&lt;white&gt;\n prong the brightest, representing Azimel's       |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n two-pronged fork.                                |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n Legend says that Azimel, an atavian scholar      |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n of some renown, grew tired of the unreliable     |        &lt;yellow&gt;*          &lt;white&gt;|")
cecho("&lt;white&gt;\n nature of the weather while flying, and so       x-------------------x")
cecho("&lt;white&gt;\n crafted a magnificent instrument, with the")
cecho("&lt;white&gt;\n appearance of a two-pronged fork, with which he was able to divert the")
cecho("&lt;white&gt;\n clouds themselves and so control the path of storms.")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Storm Shepherd&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n In the valley where they await the fulfillment of the prophecies of")
cecho("&lt;white&gt;\n Kalebb, there once lived not an astronomer but a simple Atavian of")
cecho("&lt;white&gt;\n brilliant intelligence but short patience. He came to the Valley on a")
cecho("&lt;white&gt;\n beautiful day in Chakros, looking for a place to fly freely. He")
cecho("&lt;white&gt;\n instantly adored the grassy Putoran hills and built his house such that")
cecho("&lt;white&gt;\n he could easily fly out and watch the youth of the valley cavort in")
cecho("&lt;white&gt;\n play.")
cecho("\n")
cecho("&lt;white&gt;\n Just a few months later, however, just as he was getting settled into")
cecho("&lt;white&gt;\n his new abode, the storms began. In those days, fall and winter in the")
cecho("&lt;white&gt;\n Putoran hills were terribly stormy times - for months, you could not see")
cecho("&lt;white&gt;\n the sky because of the thick clouds and constantly falling snows and")
cecho("&lt;white&gt;\n rains. This irritated Azimel greatly, and as he was unwilling to move")
cecho("&lt;white&gt;\n his house or live half the year indoors, he began inventing.")
cecho("\n")
cecho("&lt;white&gt;\n He read a great many Ankyrean books about weather patterns and prayed")
cecho("&lt;white&gt;\n not infrequently to the Sky Sovereign. What and how exactly he built it")
cecho("&lt;white&gt;\n we cannot now know, but it was called the Fork of Azimel and with it, he")
cecho("&lt;white&gt;\n diverted storms from his beloved valley. The fork now rests in the")
cecho("&lt;white&gt;\n firmament, as perhaps it always did, guiding the storm clouds away from")
cecho("&lt;white&gt;\n the playgrounds of the Kalebb youth and bearing its creator's name.")
send(" ")
end, "Azimel", true)
cecho("&lt;white&gt;       |     |     |     |     | &lt;turquoise&gt;20 Haernos 152  &lt;white&gt;|")
cecho("&lt;white&gt;\n | ------------ *-----*-----*-----*-----* --------------- |")
cecho("&lt;white&gt;\n x--------------------------------------------------------x")</script>
						<command></command>
						<packageName></packageName>
						<regex>^stars3$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Negative Stars</name>
						<script> cecho("\n&lt;white&gt; x-----------------------------------------------------------x")
 cecho("\n&lt;white&gt; |    &lt;pink&gt;NEGATIVE              EFFECTS            OBSERVATIONS  &lt;white&gt;|")
 cecho("\n&lt;white&gt; |     &lt;pink&gt;STARS         &lt;MediumSpringGreen&gt;Hea   Man   End   Wil    &lt;pink&gt;(23 day cycle) &lt;white&gt;|")
 cecho("\n&lt;white&gt; | --------------- *-----*-----*-----*-----* --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Aidien", function()
 cecho("\n&lt;white&gt; &lt;red&gt;AIDIEN, &lt;white&gt;the Fishtail or the Drowner")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as five stars in an X-shape, one side-pair  |                   |")
 cecho("\n&lt;white&gt; closer together than the other, representing a   |      &lt;cyan&gt;+     +      &lt;white&gt;|")
 cecho("\n&lt;white&gt; fish's tail.                                     |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt; Legends say Aidien was so entranced by having    |                   |")
 cecho("\n&lt;white&gt; seen a mermaid, that he pursued her into the     |         &lt;cyan&gt;+         &lt;white&gt;|")
 cecho("\n&lt;white&gt; deep ocean, swimming ever deeper after her       |                   |")
 cecho("\n&lt;white&gt; elusive figure. As his strength abandoned him,   |       &lt;cyan&gt;+   +       &lt;white&gt;|")
 cecho("\n&lt;white&gt; and he began to drown, his last sight was her    |                   |")
 cecho("\n&lt;white&gt; fading fish's tail, transforming his drowned     x-------------------x")
 cecho("\n&lt;white&gt; body into something much stranger.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; While under the effect of this constellation, you will feel much less")
 cecho("\n&lt;white&gt; healthier.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                           === &lt;red&gt;The Drowner&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Living most of his life in a small cabin on the edge of Enorian, a young")
 cecho("\n&lt;white&gt; peasant named Aidien would wander by the seaside, collecting shells and")
 cecho("\n&lt;white&gt; various oddities along the beach as he reflected on the meetings and")
 cecho("\n&lt;white&gt; decisions of his life. As fate would have it, one day beside the sea a")
 cecho("\n&lt;white&gt; siren mermaid found her way up through the depths and saw him there,")
 cecho("\n&lt;white&gt; drawn momentarily by his chiseled looks.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At this moment, perchance, Aidien turned his face to the surf, only to")
 cecho("\n&lt;white&gt; see an elusive beauty rising up from the crashing waves. Stumbling")
 cecho("\n&lt;white&gt; almost blindly toward her, Aiden called out to her softly, drawing")
 cecho("\n&lt;white&gt; himself though the water. Though she dove beneath the water, she did not")
 cecho("\n&lt;white&gt; break the spell, and Aidien plunged beneath the surface after her,")
 cecho("\n&lt;white&gt; vainly pawing his way down deep in the water.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; But all was for naught, for the radiant mermaid was disappearing in the")
 cecho("\n&lt;white&gt; depths, and Aidien was out of breath. A last fleeting glimmer of her")
 cecho("\n&lt;white&gt; tail slicing through the water was burned into his mind as his life")
 cecho("\n&lt;white&gt; slipped away, and in death that is what his body became as the waves")
 cecho("\n&lt;white&gt; reflected it into the skies.")
 cecho("\n&lt;white&gt; ")
 send(" ")
 end, "Aidien", true)
 cecho("          | -5% |     |     |     | &lt;turquoise&gt; 1 Variach 152&lt;white&gt;  |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Scipter", function()
 cecho("\n&lt;white&gt; &lt;red&gt; SCIPTER, &lt;white&gt;the Green Reaper")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be seen as five stars in a diagonal line,    |           &lt;green&gt; *      &lt;white&gt;|")
 cecho("\n&lt;white&gt; with three more in a curved arc extending out    |                   |")
 cecho("\n&lt;white&gt; from one end of the line, the last one glowing   |                &lt;cyan&gt;+  &lt;white&gt;|")
 cecho("\n&lt;white&gt; green, representing the scythe of Scipter, the   |                   |")
 cecho("\n&lt;white&gt; Green Reaper.                                    |       &lt;cyan&gt; +   +      &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |&lt;cyan&gt;      +            &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends claim Scipter was once a Druid, who      |&lt;cyan&gt;    +              &lt;white&gt;|")
 cecho("\n&lt;white&gt; eventually abandoned their ways and took it      |&lt;cyan&gt;  +                &lt;white&gt;|")
 cecho("\n&lt;white&gt; upon himself to gather hundreds of people        |&lt;cyan&gt;+                  &lt;white&gt;|")
 cecho("\n&lt;white&gt; around him, to clear the northern reaches of     x-------------------x")
 cecho("\n&lt;white&gt; the Morgun Forest of their forestal life, to")
 cecho("\n&lt;white&gt; found the village of Thera in its place.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                         === &lt;red&gt;The Green Reaper&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; A desperate group of travelers approached the shady-looking man that")
 cecho("\n&lt;white&gt; lingered beneath the boughs. Or rather, he waited for them to approach.")
 cecho("\n&lt;white&gt; He had waited years, priming his contacts and leaving word in the")
 cecho("\n&lt;white&gt; appropriate villages with their dissatisfied minorities. Sharpening his")
 cecho("\n&lt;white&gt; scythe. He was known as the Green Reaper, a rogue that was once a Druid")
 cecho("\n&lt;white&gt; and yet retained some small affinity with nature, which he used")
 cecho("\n&lt;white&gt; exclusively for its destruction.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This raggedy band was the first of the silent exodus that had begun")
 cecho("\n&lt;white&gt; throughout Aetolia - his carefully orchestrated plan had begun. Without")
 cecho("\n&lt;white&gt; fuss, without fanfare or notice of the general populace, hundreds")
 cecho("\n&lt;white&gt; gathered over the span of a few nights. A few rebellious youths from")
 cecho("\n&lt;white&gt; this town, a handful of bitter minorities from over yonder, etcetera.")
 cecho("\n&lt;white&gt; They camped with Scipter, and listened to his wisdom, for they had been")
 cecho("\n&lt;white&gt; led by his carefully sown hints and trails left throughout the")
 cecho("\n&lt;white&gt; continent. He spoke of evils housed within man-eating plants, of their")
 cecho("\n&lt;white&gt; necessary destruction, of a place of peace and nurtured quiet.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They approached the Morgun, as it was called then, as an enormous mob in")
 cecho("\n&lt;white&gt; the dark of midnight. Into the trees, Scipter vanished. The mob waited,")
 cecho("\n&lt;white&gt; but as Scipter did not re-appear, they muttered amongst themselves. The")
 cecho("\n&lt;white&gt; Morgun rustled hungrily, and the villagers cried out, believing")
 cecho("\n&lt;white&gt; themselves betrayed. Yet before their shouts of dismay could fully rise")
 cecho("\n&lt;white&gt; from their throats, the singing of a blade rang from the trees. A")
 cecho("\n&lt;white&gt; raspberry branch fell, lifeless, to their feet. Scipter had seduced the")
 cecho("\n&lt;white&gt; Morgun shrubberies, and for a few moments, they lay still, as if basking")
 cecho("\n&lt;white&gt; in the moonlight.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The villagers rushed in, with what weapons they had gathered, and hacked")
 cecho("\n&lt;white&gt; as best they could. Of course, the Morgun woke from its trance and many")
 cecho("\n&lt;white&gt; lives were lost that night, but soon enough, the spirit of the hungry")
 cecho("\n&lt;white&gt; forest had (temporarily) been tamed. To forever glorify the \"struggle")
 cecho("\n&lt;white&gt; against evil\" and further justify their slaughter, the Therans (as they")
 cecho("\n&lt;white&gt; would come to be called) re-named the Morgun to the Black Forest.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Scipter lived the rest of his days in Thera as the mayor, though he")
 cecho("\n&lt;white&gt; spent a great deal of their budget unnecessarily \"pruning\" the so-called")
 cecho("\n&lt;white&gt; Black Forest. After the night of Thera's founding, however, his scythe")
 cecho("\n&lt;white&gt; was lost, and with it, the title of Green Reaper. It is this scythe that")
 cecho("\n&lt;white&gt; now carves through the skies, perhaps embittered by the return of the")
 cecho("\n&lt;white&gt; Morgun.")
 send(" ")
 end, "Scipter", true)
 cecho("         |     |     |     |     | &lt;turquoise&gt;24 Variach 152&lt;white&gt;  |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Agorra", function()
 cecho("\n&lt;white&gt; &lt;red&gt;AGORRA, &lt;white&gt;the Marketplace")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation appears as eight stars in     |                   |")
 cecho("\n&lt;white&gt; an upside-down \"U\" shape, forming a great        |       &lt;cyan&gt;+&lt;white&gt;   &lt;cyan&gt;+&lt;white&gt;       |")
 cecho("\n&lt;white&gt; archway of stars, which would lead to a          |     &lt;cyan&gt;+&lt;white&gt;       &lt;cyan&gt;+&lt;white&gt;     |")
 cecho("\n&lt;white&gt; legendary marketplace.                           |                   |")
 cecho("\n&lt;white&gt;                                                  |    &lt;cyan&gt;+&lt;white&gt;         &lt;cyan&gt;+&lt;white&gt;    |")
 cecho("\n&lt;white&gt; Ancient tales speak of a great contest of the    |                   |")
 cecho("\n&lt;white&gt; Gods, which happened long ago, while the world   |                   |")
 cecho("\n&lt;white&gt; was still young. It's said the Gods wished to    |    &lt;cyan&gt;+&lt;white&gt;         &lt;cyan&gt;+&lt;white&gt;    |")
 cecho("\n&lt;white&gt; know who among Them could build the best         |                   |")
 cecho("\n&lt;white&gt; dwelling place for the life They had created,    x-------------------x")
 cecho("\n&lt;white&gt; and so the largest cities in the world were")
 cecho("\n&lt;white&gt; crafted in those times.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Severn, the Artificer, also joined that contest, and created the city")
 cecho("\n&lt;white&gt; of Hashan, and in it, a grand marketplace, which He proudly named")
 cecho("\n&lt;white&gt; Agorra. However, when He lost the contest to Haern's forests, which")
 cecho("\n&lt;white&gt; were considered the most beautiful creation, and also a home to all")
 cecho("\n&lt;white&gt; the wild creatures the Hunter favored, Severn strode in anger towards")
 cecho("\n&lt;white&gt; Hashan and destroyed it, stone by stone, and the great market of")
 cecho("\n&lt;white&gt; Agorra along with it.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                         ===&lt;red&gt; The Marketplace&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; There are many stories of Hashan's destruction. Perhaps all of them are")
 cecho("\n&lt;white&gt; true, but this is one. When a God dreams, it is a grand thing indeed.")
 cecho("\n&lt;white&gt; The Lord of Artifice conceived of the grandest marketplace ever seen by")
 cecho("\n&lt;white&gt; mortal eye - for aeons it would stretch, beginning in Hashan. It would")
 cecho("\n&lt;white&gt; be filled with fruits that drip juices of youth, glittering jewels")
 cecho("\n&lt;white&gt; plucked from children's laughter, and cloths from isles that would not")
 cecho("\n&lt;white&gt; exist for a thousand Ages hence. Concubines without guilt, winged")
 cecho("\n&lt;white&gt; horrors to call your own, and even your own soul; all would be for sale,")
 cecho("\n&lt;white&gt; and it would be a grand thing indeed.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He dreamed, and He schemed, and He named this place Agorra. But the")
 cecho("\n&lt;white&gt; Celestine determined that there would be a contest in the Garden, and")
 cecho("\n&lt;white&gt; the Lord of Artifice chuckled. He would win the contest, as He always")
 cecho("\n&lt;white&gt; did, and so He tried half-heartedly. Even half of a heart Divine is")
 cecho("\n&lt;white&gt; heart enough for thousands, but Severn was obsessed with Agorra. When He")
 cecho("\n&lt;white&gt; looked up from the beginnings of His precious marketplace, Severn found")
 cecho("\n&lt;white&gt; that He had lost.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The honor deserved had been taken from Him, for Haern was victorious.")
 cecho("\n&lt;white&gt; The Lord of the Hunt and all His forests had a great roaring laugh at")
 cecho("\n&lt;white&gt; that one, and even the butterflies smirked, self-satisfied. The God of")
 cecho("\n&lt;white&gt; Artifice was enraged. The souls of the Ankyri whimper of His schemes,")
 cecho("\n&lt;white&gt; and surely that is His talent. Yet His wrath was something else entirely")
 cecho("\n&lt;white&gt; - in His self-loathing at having lost to His rival, Severn destroyed not")
 cecho("\n&lt;white&gt; only Agorra's beginnings and Hashan, but its future.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He could not bring Himself to destroy His beloved creation completely,")
 cecho("\n&lt;white&gt; but sent it from Himself as one would an undeserved lover. He plucked")
 cecho("\n&lt;white&gt; Agorra from its seat then, now, and forever, and gently blew it into the")
 cecho("\n&lt;white&gt; stars, where it remains for us to marvel at our loss.")
 send(" ")
 end, "Agorra", true)
 cecho("          |     |     |     |     | &lt;turquoise&gt;22 Severin 152&lt;white&gt;  |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Svastusel", function()
 cecho("\n&lt;white&gt; &lt;red&gt;SVASTUSEL, &lt;white&gt;the Mute")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be seen as three stars, contained within a   |                   |")
 cecho("\n&lt;white&gt; larger oval of four, forming Svastusel's         |                   |")
 cecho("\n&lt;white&gt; silent visage.                                   |    &lt;cyan&gt;+         +    &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;yellow&gt;  *   *       &lt;white&gt;|")
 cecho("\n&lt;white&gt; It is said Svastusel, while born unable to       |                   |")
 cecho("\n&lt;white&gt; utter a single word, was capable of crafting     |  &lt;cyan&gt; +           +   &lt;white&gt;|")
 cecho("\n&lt;white&gt; the most beautiful poems, amazing plays, and     |    &lt;yellow&gt;     *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; soothing angry mobs with nothing but a look.     |                   |")
 cecho("\n&lt;white&gt; Having spent his whole life as an accomplished   |                   |")
 cecho("\n&lt;white&gt; diplomat and artist, at the moment of his        x-------------------x")
 cecho("\n&lt;white&gt; death the Goddess Iosyne rewarded him by")
 cecho("\n&lt;white&gt; elevating him to the firmament, so that his genius would not be lost.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; When this constellation is prominent in the night sky, you will feel")
 cecho("\n&lt;white&gt; your endurance slightly diminished.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                             === &lt;red&gt;The Mute&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; When a woman is diseased during pregnancy, many things may happen to the")
 cecho("\n&lt;white&gt; child within, even if it survives. Svastusel was lucky to have merely")
 cecho("\n&lt;white&gt; his voice stripped from him, when one thinks of the alternatives. Even")
 cecho("\n&lt;white&gt; as a small child, Svastusel understood this and rather than pity")
 cecho("\n&lt;white&gt; himself, he took to what arts he could.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Though he could not sing, he wrote. Though his arguments logical and")
 cecho("\n&lt;white&gt; sound could not be heard, they could be read. As he grew, he learned to")
 cecho("\n&lt;white&gt; understand his silence as a blessing. In expressing himself in writing,")
 cecho("\n&lt;white&gt; he was afforded more time to re-think his statements, more allowance in")
 cecho("\n&lt;white&gt; proofreading his artistry. He pitied those who had to speak, for what is")
 cecho("\n&lt;white&gt; spoken can never be undone in the way a letter can be burned.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In time Svastusel became known as a trustworthy diplomat and his")
 cecho("\n&lt;white&gt; personal poetry was sought after by the ladies and gentlemen of")
 cecho("\n&lt;white&gt; refinement and style. Where there is talent, however, there is danger.")
 cecho("\n&lt;white&gt; It is said by some that Svastusel wrote a beautiful play of a spurned")
 cecho("\n&lt;white&gt; lover that offended a Sultan, who then set a bounty on the playwright.")
 cecho("\n&lt;white&gt; It is held by others that Svastusel's diplomacy could not save him from")
 cecho("\n&lt;white&gt; the many assassins in noble employ. However it came about, as the knife")
 cecho("\n&lt;white&gt; slid into his back, Svastusel prayed, for he could not scream. Lady")
 cecho("\n&lt;white&gt; Iosyne came to his aid and with Her help, rather than death the artist")
 cecho("\n&lt;white&gt; found a place among the stars.")
 
 send(" ")
 end, "Svastusel", true)
 cecho("       |     |     | -5% |     | &lt;turquoise&gt;20 Ios 152&lt;white&gt;      |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Mocirn", function()
 cecho("\n&lt;white&gt; &lt;red&gt;MOCIRN, &lt;white&gt;the River")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation appears as six blue-toned     |                   |")
 cecho("\n&lt;white&gt; stars, outlining a long rectangle with two       |             &lt;blue&gt;.     &lt;white&gt;|")
 cecho("\n&lt;white&gt; yellowish stars within it, representing the      |                   |")
 cecho("\n&lt;white&gt; river Mocirn, sparkling with gold.               |           &lt;yellow&gt;*    &lt;blue&gt;.  &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;blue&gt;.      .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say the river Mocirn was once the        | &lt;blue&gt;.     &lt;yellow&gt;*           &lt;white&gt;|")
 cecho("\n&lt;white&gt; border that divided two warring tribes, each     |                   |")
 cecho("\n&lt;white&gt; fighting the other the gold which could be       |    &lt;blue&gt;.              &lt;white&gt;|")
 cecho("\n&lt;white&gt; found in the river's depths. It was only after   |                   |")
 cecho("\n&lt;white&gt; a shaman asked the river spirits to take the     x-------------------x")
 cecho("\n&lt;white&gt; water along a new path, that the two tribes")
 cecho("\n&lt;white&gt; finally found peace.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The River&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In the old days, the Mitrine were a nomadic people of many tribes and")
 cecho("\n&lt;white&gt; beliefs. Sometimes they were allies and sometimes they clashed, for")
 cecho("\n&lt;white&gt; reasons noble or petty. One such conflict arose when two tribes")
 cecho("\n&lt;white&gt; discovered gold in a riverbed near their tents. Perhaps one had a better")
 cecho("\n&lt;white&gt; claim to ownership than the other, or perhaps they each discovered the")
 cecho("\n&lt;white&gt; gold simultaneously and independently.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This was the start of the Long War, when all Mitrine tribes became")
 cecho("\n&lt;white&gt; embroiled in this claim to wealth and power. Both sides took heavy")
 cecho("\n&lt;white&gt; casualties for many years, and loud was the weeping of the Mitrine")
 cecho("\n&lt;white&gt; children. Finally, a shaman from one of the sides took it upon himself")
 cecho("\n&lt;white&gt; to approach the river spirits. He waded into the stream, now stained and")
 cecho("\n&lt;white&gt; choked with the bodies of fallen warriors, and pleaded that they might")
 cecho("\n&lt;white&gt; take the river far away. The shaman asked the river, as a favor, to go")
 cecho("\n&lt;white&gt; elsewhere and leave them in peace. And so it did.")
 send(" ")
 end, "Mocirn", true)
 cecho("          |     |     |     |     | &lt;turquoise&gt;18 Arios 152&lt;white&gt;    |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Tharabar&amp;Shenna", function()
 cecho("\n&lt;white&gt; &lt;red&gt;THARABAR and SHENNA, &lt;white&gt;the Noble Protectors")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation can be seen as two very       |                   |")
 cecho("\n&lt;white&gt; close stars, surrounded by several smaller,      |                   |")
 cecho("\n&lt;white&gt; darker ones, representing two bright souls       |       &lt;blue&gt;.  .        &lt;white&gt;|")
 cecho("\n&lt;white&gt; guarding the weaker ones surrounding them.       |    &lt;blue&gt;.        .     &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |   &lt;blue&gt;.   &lt;yellow&gt;* *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; It is said Tharabar and Shenna were two          |     &lt;blue&gt;       .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; exemplary paladins, who eventually gave their    |     &lt;blue&gt;.   .         &lt;white&gt;|")
 cecho("\n&lt;white&gt; own lives in protection of the innocent.         |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                      === &lt;red&gt;The Noble Protectors&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Although they lived long before Syvelium, Tharabar and Shenna were two")
 cecho("\n&lt;white&gt; very valorous and good-hearted warriors, and also a couple united in")
 cecho("\n&lt;white&gt; love. They made their living by guarding caravans and small groups of")
 cecho("\n&lt;white&gt; travellers, protecting them from the evil that roamed their land, always")
 cecho("\n&lt;white&gt; asking only for sustenance as their payment.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They were two of the first that lived the lives of the true Paladin,")
 cecho("\n&lt;white&gt; though this name was yet unknown: chivalrous, honorable, and loyal,")
 cecho("\n&lt;white&gt; always serving the good and protecting the innocent. They died in an")
 cecho("\n&lt;white&gt; assault by orcs upon a monastery that offered shelter to the travelers,")
 cecho("\n&lt;white&gt; but through their enormous effort, the orcs were driven back, and the")
 cecho("\n&lt;white&gt; monks and their proteges in the monastery survived.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; It is said that when their bodies were found, surrounded by dozens of")
 cecho("\n&lt;white&gt; their enemies, they were lying with smiles upon their faces, holding")
 cecho("\n&lt;white&gt; hands. They were buried side by side in the gardens of the monastery,")
 cecho("\n&lt;white&gt; and a stone was planted on their grave, telling the story of their")
 cecho("\n&lt;white&gt; valorous lives and love. The monks came to their resting place each dusk")
 cecho("\n&lt;white&gt; to sing about their efforts and to praise their deeds to all who would")
 cecho("\n&lt;white&gt; listen.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; One night, an ominous glow appeared above the stone. Suddenly, two")
 cecho("\n&lt;white&gt; brilliant balls of light arose from the graves up to the skies, and thus")
 cecho("\n&lt;white&gt; they formed their constellation, as if they were protecting the smaller")
 cecho("\n&lt;white&gt; and darker stars from anything that might threaten them - or, some say,")
 cecho("\n&lt;white&gt; as if they lay once again amidst the bodies of their foes.")
 send(" ")
 end, "Tharabar &amp; Shenna", true)
 cecho(" |     |     |     |     | &lt;turquoise&gt;16 Chakros 152&lt;white&gt;  |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Peripleko", function()
 cecho("\n&lt;white&gt; &lt;red&gt;PERIPLEKO, &lt;white&gt;the Pride of the Lost or the Navigator")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Appears as a triangle of brightly glowing        |                   |")
 cecho("\n&lt;white&gt; stars, shining as an arrow, which points         |         &lt;yellow&gt;*         &lt;white&gt;|")
 cecho("\n&lt;white&gt; eternally towards the north.                     |                   |")
 cecho("\n&lt;white&gt;                                                  |      &lt;yellow&gt; *   *       &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say Peripleko was a great navigator,     |                   |")
 cecho("\n&lt;white&gt; at a time the world was still largely            |     &lt;yellow&gt;*       *     &lt;white&gt;|")
 cecho("\n&lt;white&gt; uncharted. He sought after fame by exploring     |        &lt;yellow&gt; *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; all known lands, and then bringing his           |                   |")
 cecho("\n&lt;white&gt; findings home.                                   |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; There came a time, however, when his")
 cecho("\n&lt;white&gt; explorations proved a bit too perilous. While in the middle of a")
 cecho("\n&lt;white&gt; snowstorm, he became lost, and eventually after climbing for hours,")
 cecho("\n&lt;white&gt; came upon an unknown place to him, the fabled Garden of the Gods.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Finding a hooded figure inside, he asked for passage so that he could")
 cecho("\n&lt;white&gt; chart one more land for his books. His pride wouldn't allow him to")
 cecho("\n&lt;white&gt; admit he was lost, however, so he proceeded to invent a new name for")
 cecho("\n&lt;white&gt; the place. This was promptly \"rewarded\" by the figure inside, which")
 cecho("\n&lt;white&gt; turned out to be Lord Severn, in disguise, who transformed him into a")
 cecho("\n&lt;white&gt; navigational guide to others.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; While under the effect of this constellation, you will feel your")
 cecho("\n&lt;white&gt; willpower diminished.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Navigator&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In the early days of the Ankyrean age, there lived a simple man by the")
 cecho("\n&lt;white&gt; name of Peripleko. During those times, the world was still largely")
 cecho("\n&lt;white&gt; unknown, and the opportunity was there to make a name for oneself with")
 cecho("\n&lt;white&gt; new discoveries. Peripleko saw the scholastic achievement of those")
 cecho("\n&lt;white&gt; around him, and endeavored to map the known world, chronicling his")
 cecho("\n&lt;white&gt; journey.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He set out from Spinesreach with his goal in mind, and soon he")
 cecho("\n&lt;white&gt; encountered a hooded traveler. \"Greetings,\" the traveler said. \"What do")
 cecho("\n&lt;white&gt; you seek?\" Peripleko thought for a moment, replying, \"To learn the ways")
 cecho("\n&lt;white&gt; of the world and take them back to my homeland.\" The traveler chuckled,")
 cecho("\n&lt;white&gt; \"You do not seek fame and glory?\" This struck Peripleko, and he paused")
 cecho("\n&lt;white&gt; in contemplation. \"Fame and glory,\" he thought, \"I could make a real")
 cecho("\n&lt;white&gt; name for myself if I made that my goal instead of simply wishing to")
 cecho("\n&lt;white&gt; contribute!\" And so, bidding the traveler goodbye, he struck out, making")
 cecho("\n&lt;white&gt; elegant maps and writing eloquent novels of his travels.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Encountering the Dakhota Hills, he came upon a blizzard. Carefully")
 cecho("\n&lt;white&gt; protecting his works, he set into the swirling eddies of snow to see")
 cecho("\n&lt;white&gt; where it would lead. Eventually, he came upon a steep cliff, floating")
 cecho("\n&lt;white&gt; above the ground, and he ascended it. He came to a massive gate, through")
 cecho("\n&lt;white&gt; which he could see the most marvelous of paradises spread out before")
 cecho("\n&lt;white&gt; him. He could also see the traveler he had met earlier in his journey.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; \"Greetings!\" he called out. \"Pray sir, open the gates that I might map")
 cecho("\n&lt;white&gt; this place for my homeland.\" The traveler remained unmoved. Peripleko")
 cecho("\n&lt;white&gt; tried again, \"Come now, sir, do you not know who I am? I am the great")
 cecho("\n&lt;white&gt; Peripleko, navigator of Sapience!\" The traveler chuckled, \"Do you know")
 cecho("\n&lt;white&gt; where you are?\" Peripleko thought for a moment, and his pride would not")
 cecho("\n&lt;white&gt; allow him to speak the truth. \"Aye sir,\" he bragged, \"I am in the great")
 cecho("\n&lt;white&gt; Atavian land of Arcadia, obviously, for we are floating in mid-air.\" The")
 cecho("\n&lt;white&gt; traveler did not answer. \"Surely, you are aware of this, sir, for you")
 cecho("\n&lt;white&gt; are already inside,\" he continued.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Still, the traveler did not speak. Instead, the gates slowly swung open,")
 cecho("\n&lt;white&gt; and Peripleko stepped eagerly inside, his quill ready against a clean")
 cecho("\n&lt;white&gt; sheet of papyrus. As he stepped past the gates, he felt a strange")
 cecho("\n&lt;white&gt; sensation overcome him. The traveler laughed, finally, and pulled back")
 cecho("\n&lt;white&gt; his cloak. Peripleko stared, for as the cloak left the traveller's head,")
 cecho("\n&lt;white&gt; it was revealed that the traveller was Severn, Lord of Artifice.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Peripleko fell to his knees in supplication to the Divine presence, the")
 cecho("\n&lt;white&gt; only thing he could will himself to do. The God laughed at him.")
 cecho("\n&lt;white&gt; \"Navigator of Sapience indeed. You seek fame and glory? I shall grant it")
 cecho("\n&lt;white&gt; to you!\" The dark, shadowed essence of Severn shot from His hand,")
 cecho("\n&lt;white&gt; enveloping Peripleko and thrusting him into the sky. His placement in")
 cecho("\n&lt;white&gt; the firmament now marks the northern directional.")
 send(" ")
 end, "Peripleko", true)
 cecho("       |     |     |     | -5% | &lt;turquoise&gt;14 Khepary 152&lt;white&gt;  |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Fionshi", function()
 cecho("\n&lt;white&gt; &lt;red&gt;FIONSHI, &lt;white&gt;the Wandering or the Hopeful")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as six stars in a small, tight cluster      |                   |")
 cecho("\n&lt;white&gt; and two off to one side, describing Fionshi's    |                   |")
 cecho("\n&lt;white&gt; broad-sailed ship and her narrow wake.           |     &lt;cyan&gt; +            &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt; Fionshi's ship, the 'Essence of the Sea', was    |   &lt;cyan&gt;+  +  +         &lt;white&gt;|")
 cecho("\n&lt;white&gt; highly sought by every sailor. Her last          |    &lt;cyan&gt; + +           &lt;white&gt;|")
 cecho("\n&lt;white&gt; journey, however, has yet to end, as her         |          &lt;blue&gt;  .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; captain sails forever on in our skies.           |               &lt;blue&gt;.   &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Wandering &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The port of Ashtan has long been a thriving business, and once, the")
 cecho("\n&lt;white&gt; Essence of the Sea was the very symbol of its success. Every few months,")
 cecho("\n&lt;white&gt; the grand bow of the Essence of the Sea would sail into port, her sails")
 cecho("\n&lt;white&gt; seemingly wide as the horizon and just as full of potential.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The frigate's captain was Fionshi, a Kelki of undisputed honor, courage,")
 cecho("\n&lt;white&gt; and resilience. They say he defeated a kraken using his ship as a")
 cecho("\n&lt;white&gt; weapon, and they say he never lost a sailor out at sea, save for")
 cecho("\n&lt;white&gt; stowaways and mutineers. He took no lover but instead cared for the")
 cecho("\n&lt;white&gt; Essence as if she was his wife, and for many years, they traded")
 cecho("\n&lt;white&gt; together, exploring every nook of the coast of Sapience along the way.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; It became known on a fine day in Khepary that the Essence was to leave")
 cecho("\n&lt;white&gt; Ashtan's port for new continents. It was murmured in taverns on those")
 cecho("\n&lt;white&gt; long summer evenings, it was shouted by the dockworkers, and though the")
 cecho("\n&lt;white&gt; town crier said not a word, Ashtan was abruptly full with eager sailors.")
 cecho("\n&lt;white&gt; The Overseer of Ashtan had commissioned an exploration and Fionshi was")
 cecho("\n&lt;white&gt; to be the captain. From those sailors that answered his rumored call,")
 cecho("\n&lt;white&gt; Fionshi chose the finest fifty from among them to tend to his beloved")
 cecho("\n&lt;white&gt; Essence.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They waved from port in farewell, half their pay from the Overseer")
 cecho("\n&lt;white&gt; already divided among the crew. They have not been seen on Sapience")
 cecho("\n&lt;white&gt; since that day, but it is said that the continent they found was not of")
 cecho("\n&lt;white&gt; the same realm as the sun. Perhaps they cannot return, or perhaps the")
 cecho("\n&lt;white&gt; wonders there ensure they do not wish to leave, but even now you can see")
 cecho("\n&lt;white&gt; the Essence of the Sea sailing through the night sky in pursuit of new")
 cecho("\n&lt;white&gt; discoveries.")
 send(" ")
 end, "Fionshi", true)
 cecho("         |     |     |     |     | &lt;turquoise&gt;12 Midsummer 152&lt;white&gt;|")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Edamil", function()
 cecho("\n&lt;white&gt; &lt;red&gt;EDAMIL, &lt;white&gt;the Trickster")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation is seen as a semicircle of    |                   |")
 cecho("\n&lt;white&gt; four stars, enclosing a single, bright star,     |                   |")
 cecho("\n&lt;white&gt; which represents the hand of Edamil, as he       |        &lt;cyan&gt;+          &lt;white&gt;|")
 cecho("\n&lt;white&gt; reaches out to try to grasp a star.              |     &lt;cyan&gt;+      +      &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; Tales tell us that Edamil found himself          |        &lt;yellow&gt;*     &lt;cyan&gt;+    &lt;white&gt;|")
 cecho("\n&lt;white&gt; trapped in the skies, as an act of Divine        |                   |")
 cecho("\n&lt;white&gt; mischief.                                        |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Trickster ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Widely regarded as a nuisance, and just as widely hailed as a brilliant")
 cecho("\n&lt;white&gt; purveyor of jokes and humor, Edamil was a renowned maker of mischief.")
 cecho("\n&lt;white&gt; Not to be outdone, Khepri tricked the trickster into attempting to steal")
 cecho("\n&lt;white&gt; the stars from the sky. When Edamil accepted Khepri's invitation, She")
 cecho("\n&lt;white&gt; trapped her in the nighttime sky. She remains there still with a grin,")
 cecho("\n&lt;white&gt; always attempting to capture a star.")
 
 send(" ")
 end, "Edamil", true)
 cecho("          |     |     |     |     | &lt;turquoise&gt;10 Lleian 152&lt;white&gt;   |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Umbrael", function()
 cecho("\n&lt;white&gt; &lt;red&gt;UMBRAEL, &lt;white&gt;the Cloak")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as a square of four stars, with darkness    |                   |")
 cecho("\n&lt;white&gt; inside it obscuring any stars behind,            |                   |")
 cecho("\n&lt;white&gt; representing the shape of a four-cornered        |         &lt;cyan&gt;+         &lt;white&gt;|")
 cecho("\n&lt;white&gt; cloak, which conceals all behind it.             |     &lt;cyan&gt;+             &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |             &lt;cyan&gt;+     &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say this cloak was presented by the      |                   |")
 cecho("\n&lt;white&gt; Syssin in dedication to Lord Severn, prior to    |       &lt;cyan&gt;+           &lt;white&gt;|")
 cecho("\n&lt;white&gt; the fall of the Ankyreans, not knowing that      |                   |")
 cecho("\n&lt;white&gt; later on He would use it to help bringing        |                   |")
 cecho("\n&lt;white&gt; about the Grand Artifice.                        x-------------------x")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This constellation will make you feel less able to perform magical")
 cecho("\n&lt;white&gt; feats, by depleting your mana.")
cecho("\n&lt;white&gt;  ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The Cloak &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At the commencement of the Grand Artifice, Severn summoned all of His")
 cecho("\n&lt;white&gt; essence to draw a cloak of artifice across the land, to change that")
 cecho("\n&lt;white&gt; which had been created by Varian. Though they did not know what the")
 cecho("\n&lt;white&gt; gravity of their actions, the Syssin Defenders of the Ankyreans had been")
 cecho("\n&lt;white&gt; commissioned to weave this cloak for their Patron so that He might use")
 cecho("\n&lt;white&gt; it in His plan.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Temporarily forsaking their duties as protectors of the Reach, they sat")
 cecho("\n&lt;white&gt; within the Spire of Artifice to create this mthical garment. The")
 cecho("\n&lt;white&gt; Champion of the Five Spires sat in one corner with three of his most")
 cecho("\n&lt;white&gt; trusted comrades around him. The Syssin stretched out a wide swath of")
 cecho("\n&lt;white&gt; blue fabric that they had brought, not sure of what to do next.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Severn, in the form of a raven, swooped down from the high reaches of")
 cecho("\n&lt;white&gt; the Spire and dropped in the palm of each a spindle of shimmering twine")
 cecho("\n&lt;white&gt; from his black talons. The loyal Syssin began to weave in these magic")
 cecho("\n&lt;white&gt; fibers to the plain cloth, and the square of dark blue grew more")
 cecho("\n&lt;white&gt; strange, its weave ever shifting from bright to dark, illuminating to")
 cecho("\n&lt;white&gt; concealing.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The Syssin worked for hours, stitching in shapes of serpents among")
 cecho("\n&lt;white&gt; detailed and swirling patterns. Finally the cloak was complete. At the")
cecho("\n&lt;white&gt; moment the last stitch had been set, Severn appeared again to the")
 cecho("\n&lt;white&gt; Syssin, this time in his shadowed mortal form. He silently received the")
 cecho("\n&lt;white&gt; cloak and began what is now recorded as the Grand Artifice. The Syssin")
 cecho("\n&lt;white&gt; were left in the room alone and confused. This task had not been")
 cecho("\n&lt;white&gt; explained and never would be, for Severn's shame overwhelmed Him.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The Syssin would forget this job they had done as the cloak they had")
cecho("\n&lt;white&gt; made passed over them, but Severn did not wish for Sapience to lose its")
cecho("\n&lt;white&gt; collective memory of the gorgeous work. After he swept it across the")
 cecho("\n&lt;white&gt; continent, changing everything under its soft shadow, He flung it into")
 cecho("\n&lt;white&gt; the sky, both proud of its workmanship and with a heavy heart for what")
 cecho("\n&lt;white&gt; He had to do. The cloak remains suspended amongst the stars, obscuring")
 cecho("\n&lt;white&gt; the bright points of light behind it with its heavy matter.")
 send(" ")
 end, "Umbrael", true)
 cecho("         |     | -5% |     |     | &lt;turquoise&gt; 8 Lanosian 152&lt;white&gt; |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Ontesme", function()
 cecho("\n&lt;white&gt; &lt;red&gt;ONTESME, &lt;white&gt;the Tormented")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Appears as six pale stars, running generally     |                   |")
 cecho("\n&lt;white&gt; in a horizontal line, representing the body of   |                   |")
 cecho("\n&lt;white&gt; Ontesme at rest.                                 |                   |")
 cecho("\n&lt;white&gt;                                                  | &lt;blue&gt;            .     &lt;white&gt;|")
 cecho("\n&lt;white&gt; The tale of Ontesme is a sad one, for it is      | &lt;blue&gt;.     .  .      . &lt;white&gt;|")
 cecho("\n&lt;white&gt; said that although she had the appearance of a   | &lt;blue&gt;   .              &lt;white&gt;|")
 cecho("\n&lt;white&gt; normal girl, she was cursed by possessing the    |                   |")
 cecho("\n&lt;white&gt; spirits of two beings. This greatly disrupted    |                   |")
 cecho("\n&lt;white&gt; whatever peaceful life she might have had in     |                   |")
 cecho("\n&lt;white&gt; her home village, for the beast inside her       x-------------------x")
 cecho("\n&lt;white&gt; never ceased trying to overcome her humanity.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Tormented &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Ontesme was not unusual for village girl, well loved by her family and")
 cecho("\n&lt;white&gt; known as a great lover of flowers and song. She dreamed of being wife to")
 cecho("\n&lt;white&gt; a farmer and reaping great harvests in the fall. Yet we cannot know Who")
 cecho("\n&lt;white&gt; or what was to blame for her plight. She was overtaken on the birthday")
 cecho("\n&lt;white&gt; of her thirteenth year: two spirits resided within her, and perhaps")
 cecho("\n&lt;white&gt; awoken by the growing of their hostess's body, they woke with frightful")
 cecho("\n&lt;white&gt; hunger. We cannot know the identity of these spirits for certain; the")
 cecho("\n&lt;white&gt; girl could only communicate her pain, while the two battled for")
 cecho("\n&lt;white&gt; possession of her very being.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At times, she snarled, as would an animal, clawing at members of her")
 cecho("\n&lt;white&gt; family with feral rage. At others, she laughed in a manner most unsuited")
 cecho("\n&lt;white&gt; to young throats: deep, throaty, and piercing in its icy contempt. As")
 cecho("\n&lt;white&gt; the little Ontesme vacillated between evil chuckles, howls, and shrieks")
 cecho("\n&lt;white&gt; of pain, it became obvious that her future was not to remain in the")
 cecho("\n&lt;white&gt; village. The village elders threw her into captivity, unwilling to kill")
 cecho("\n&lt;white&gt; the girl that was so charming in years past. Though they passed food and")
 cecho("\n&lt;white&gt; water through the bars, she would not eat, but became distorted in form.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Her skin grew pale, her lips black, and her very presence frightening.")
 cecho("\n&lt;white&gt; Within days her batterings at the cell door grew astonishingly strong,")
 cecho("\n&lt;white&gt; and still the elders hesitated. And so it was that Ontesme savagely")
 cecho("\n&lt;white&gt; ripped through the very walls of her cell, no longer recognizable as the")
 cecho("\n&lt;white&gt; girl they had loved. She killed many of those in her village before she")
 cecho("\n&lt;white&gt; could be stopped. In death, her body returned to a visage of innocence")
 cecho("\n&lt;white&gt; and was lifted to the night sky where she may rest easy, relieved of her")
 cecho("\n&lt;white&gt; burden.")
 send(" ")
 end, "Ontesme", true)
 cecho("         |     |     |     |     | &lt;turquoise&gt; 6 Niuran 152&lt;white&gt;   |")
 cecho("\n&lt;white&gt; | --------------- +-----+-----+-----+-----+ --------------- |")
 cecho("\n&lt;white&gt; | ")cechoLink("&lt;yellow&gt;Lildegravra", function()
 cecho("\n&lt;white&gt; &lt;red&gt;LILDEGRAVRA, &lt;white&gt;the Dragon or the Tyrant")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be viewed as eight bright, white stars in    |      &lt;cyan&gt; +           &lt;white&gt;|")
 cecho("\n&lt;white&gt; a wandering line, with two more stars above it,  |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; forming Lildegravra's prowling profile, with a   |            &lt;cyan&gt;+      &lt;white&gt;|")
 cecho("\n&lt;white&gt; single outstretched wing.                        |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;white&gt;*   *  *      &lt;white&gt;|")
 cecho("\n&lt;white&gt; Ancient legends tell of a fearsome dragon who    |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; once roamed the lands named Lildegravra, its     |  &lt;white&gt;*            *   &lt;white&gt;|")
 cecho("\n&lt;white&gt; hide a flawless, brilliant white. The dragon     |  &lt;white&gt; *         *     &lt;white&gt;|")
 cecho("\n&lt;white&gt; sought to become dominant over all of the        |          &lt;white&gt;      *  &lt;white&gt;|")
 cecho("\n&lt;white&gt; Aetolian skies, but its disdain for its          x-------------------x")
 cecho("\n&lt;white&gt; distant cousins, the wyverns, proved to be")
 cecho("\n&lt;white&gt; ultimately its undoing.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The Tyrant &lt;white&gt; ===")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; There was a time, when the oldest Ankyrean was yet unborn, when dragons")
 cecho("\n&lt;white&gt; were rulers of the land - or, more precisely, of the sky. One could")
 cecho("\n&lt;white&gt; hardly feel the sun on one's cheek, for the blue above was eternally")
 cecho("\n&lt;white&gt; shadowed by enormous bodies in motion - living, loving, fighting, and")
 cecho("\n&lt;white&gt; learning. The dragons paid no heed to other races of the land, including")
 cecho("\n&lt;white&gt; animals, humanoids, and wyverns.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The greatest (and most arrogant) of the dragons was Lildegravra, a")
 cecho("\n&lt;white&gt; glorious mountain of snowy scales and ivory wings large enough to cast a")
 cecho("\n&lt;white&gt; shadow upon all of Ulangi. Lildegravra enjoyed the hunting of wyverns")
 cecho("\n&lt;white&gt; for sport, filling the seas with their discarded remains even when it")
 cecho("\n&lt;white&gt; did not hunger. When Lildegravra growled, the stars trembled and the")
 cecho("\n&lt;white&gt; clouds wept. Lildegravra sought dominion over the entirety of Aetolia,")
 cecho("\n&lt;white&gt; which should have been easy. All dragons bowed low in terror, and to its")
 cecho("\n&lt;white&gt; mind, that was all that mattered.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; But as Lildegravra spread its wings to shadow the lands and proclaim its")
 cecho("\n&lt;white&gt; dominance, the wyverns attacked as one, a beautiful formation streaking")
 cecho("\n&lt;white&gt; through the skies to bring down the white tyrant. They managed to sever")
 cecho("\n&lt;white&gt; its wing, and it fell from the sky, unable to hold its bulk airborne.")
 cecho("\n&lt;white&gt; Lildegravra, shamed in its defeat, retreated to live amongst the stars")
 cecho("\n&lt;white&gt; themselves.")
 send(" ")
 end, "Lildegavra", true)
 cecho("     |     |     |     |     | &lt;turquoise&gt; 4 Slyphian 152&lt;white&gt; |")
 cecho("\n&lt;white&gt; | --------------- *-----*-----*-----*-----* --------------- |")
 cecho("\n&lt;white&gt; x-----------------------------------------------------------x")</script>
						<command></command>
						<packageName></packageName>
						<regex>^stars2$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Old Mejevsavelnel</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Eurimines</name>
							<script>cecho("\n&lt;magenta&gt; EURIMINES, &lt;dim_gray&gt;the Tortoise")

cecho("\n\n&lt;ansi_magenta&gt; Eurimines: &lt;dim_gray&gt;a group of six stars, four in an arch, one beneath, and one")
cecho("\n&lt;dim_gray&gt; off to one side.")

cecho("\n\n&lt;dim_gray&gt; Long ago in a lost era of history, there was a maiden fair set to live")
cecho("\n&lt;dim_gray&gt; upon a secluded island far far out to sea. Great heroes set out to cross")
cecho("\n&lt;dim_gray&gt; the dangerous waters to rescue her from her exile. They boasted to each")
cecho("\n&lt;dim_gray&gt; other of their abilities, each avowing that his warbeast would carry him")
cecho("\n&lt;dim_gray&gt; swiftly to the prize.")

cecho("\n\n&lt;dim_gray&gt; One hero, Cordosei, stood apart from the others. While they summoned")
cecho("\n&lt;dim_gray&gt; their great stallions, elephants, and ur-wolves, Cordosei summoned an")
cecho("\n&lt;dim_gray&gt; ancient tortoise. The tortoise was Eurimines, of course. The other")
cecho("\n&lt;dim_gray&gt; heroes derided Cordosei for his choice as they took to the ocean swells.")
cecho("\n&lt;dim_gray&gt; They were soon lost to sight for distance, but one by one they faltered.")
cecho("\n&lt;dim_gray&gt; The warbeasts could not bear their burdens overlong in the rough seas,")
cecho("\n&lt;dim_gray&gt; and they were consigned to the watery deeps.")

cecho("\n\n&lt;dim_gray&gt; For five days Cordosei rode the steady Eurimines, who would not be")
cecho("\n&lt;dim_gray&gt; deterred. He landed on the maiden's island and took her in his arms. She")
cecho("\n&lt;dim_gray&gt; had no laughter for the choice of steed, only gratitude and wonder, for")
cecho("\n&lt;dim_gray&gt; she thought she would die alone on that island. Five nights more did")
cecho("\n&lt;dim_gray&gt; they return, and when Eurimines deposited them upon the continent's")
cecho("\n&lt;dim_gray&gt; shore, the maiden did drop to her knees in gladness.")

cecho("\n\n&lt;dim_gray&gt; She pledged herself to Cordosei for all time, but she wisely honored the")
cecho("\n&lt;dim_gray&gt; tortoise as well. She called upon the Gods to honor the beast, and")
cecho("\n&lt;dim_gray&gt; Cordosei joined the song and prayer. It is said that all three lived")
cecho("\n&lt;dim_gray&gt; many decades more, and that the couple was at the turtle's side when it")
cecho("\n&lt;dim_gray&gt; died. They prayed and sang again of joy and grief intermingled, and as")
cecho("\n&lt;dim_gray&gt; they stood vigil the body of Eurimines rose up into the heavens. So it")
cecho("\n&lt;dim_gray&gt; is told, and Eurimines remains there to this day, and all days, as far")
cecho("\n&lt;dim_gray&gt; as I can say.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star eurimines$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Sarcosta</name>
							<script>cecho("\n&lt;magenta&gt; SARCOSTA, &lt;dim_gray&gt;the Sea Snake")

cecho("\n\n&lt;ansi_magenta&gt; Sarcosta, the sea snake - &lt;dim_gray&gt;11 stars stretched out in oscillating shape.")

cecho("\n\n&lt;dim_gray&gt; The mighty Sarcosta was a foul beast, hunted by mortals for many years.")
cecho("\n&lt;dim_gray&gt; Constantly she would disrupt trade, and plunge sailors to their death.")
cecho("\n&lt;dim_gray&gt; It was said her foul attitude was legendary, and that even cursing her")
cecho("\n&lt;dim_gray&gt; name on the decks of a ship was all that was required to summon the")
cecho("\n&lt;dim_gray&gt; ship's doom.")

cecho("\n\n&lt;dim_gray&gt; Imagine the surprise of all when she fell deeply in love with a young")
cecho("\n&lt;dim_gray&gt; Xorani. The Xorani, Atris by name, was a profound singer whose voice")
cecho("\n&lt;dim_gray&gt; touched the heavens, and softened even the hardest of hearts. Atris was")
cecho("\n&lt;dim_gray&gt; taking a long sea journey along the southern coast when a storm fell")
cecho("\n&lt;dim_gray&gt; upon the ship. To inspire the crew to safety, Atris began to sing a")
cecho("\n&lt;dim_gray&gt; beautiful song to liven their spirits and praise them for their work.")

cecho("\n\n&lt;dim_gray&gt; The sailors were not the only ones listening, however. Sarcosta heard")
cecho("\n&lt;dim_gray&gt; the song and was instantly enraptured. She swam quickly, her form")
cecho("\n&lt;dim_gray&gt; undulating in the tides, and soon came to the ship. Watching the singer,")
cecho("\n&lt;dim_gray&gt; she wished him to be her own, and so she struck out of the water and")
cecho("\n&lt;dim_gray&gt; wrapped her coils around him.")

cecho("\n\n&lt;dim_gray&gt; Pulling him quickly back into the water, she swam deep to horde her")
cecho("\n&lt;dim_gray&gt; prize. But when she did, she noticed the music had stopped. She had gone")
cecho("\n&lt;dim_gray&gt; too far for the poor Xoran. Her love lost, she became enraged, and")
cecho("\n&lt;dim_gray&gt; surfaces to scream out her anguish.")

cecho("\n\n&lt;dim_gray&gt; As she screamed, the storm raged more fiercely, drowning out her cries.")
cecho("\n&lt;dim_gray&gt; Desperate no one heard her pain, she began to thrash wildly, pulling the")
cecho("\n&lt;dim_gray&gt; waves up around her, and intensifying the storm.")

cecho("\n\n&lt;dim_gray&gt; It is not known what happened then, except that her rage matched the")
cecho("\n&lt;dim_gray&gt; fury of the storm. And so the Gods took pity on her, and put her in the")
cecho("\n&lt;dim_gray&gt; heavens. All was not lost for Atris, however, for he also was placed in")
cecho("\n&lt;dim_gray&gt; the heavens, though not with the thirteen.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star sarcosta$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Ulenyne</name>
							<script>cecho("&lt;magenta&gt;\n ULENYNE, &lt;dim_gray&gt;the Charioteer")

cecho("\n\n&lt;ansi_magenta&gt; Ulenyne, the charioteer - &lt;dim_gray&gt;7 stars, in the shape of a horse.")

cecho("\n\n&lt;dim_gray&gt; The greatest goat racer of the First Mortal Epoch, it is rumored that")
cecho("\n&lt;dim_gray&gt; Ulenyne once tied with Arion on his mighty steed during a race. He was a")
cecho("\n&lt;dim_gray&gt; mere farmboy, but his skill with the chariot and his goats was")
cecho("\n&lt;dim_gray&gt; unmatched.")

cecho("\n\n&lt;dim_gray&gt; Those who watched his final race reported that the goats seem to have")
cecho("\n&lt;dim_gray&gt; changed; their faces elongated and their legs lengthened and their tails")
cecho("\n&lt;dim_gray&gt; grew to float in the breeze. From these goats were descended the first")
cecho("\n&lt;dim_gray&gt; mortal horses, beautiful, fierce and lightning-quick.")

cecho("\n\n&lt;dim_gray&gt; At his final race, he did not stop at the finish; instead he continued")
cecho("\n&lt;dim_gray&gt; and rode straight to the heavens where his mighty steed remains to this")
cecho("\n&lt;dim_gray&gt; day.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star ulenyne$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Artos</name>
							<script>cecho("\n&lt;magenta&gt; ARTOS, &lt;dim_gray&gt;the Sage")

cecho("\n\n&lt;ansi_magenta&gt; Artos - &lt;dim_gray&gt;A group of two stars, known as the eyes of Artos")

cecho("\n\n&lt;dim_gray&gt; A very famous sage, Artos was renowned for his amazing perception.")
cecho("\n&lt;dim_gray&gt; Always savvy to the motivations and tricks of others, Artos had a secret")
cecho("\n&lt;dim_gray&gt; of his own.")

cecho("\n\n&lt;dim_gray&gt; As the Gods would have it, Artos had the ability to shapeshift into any")
cecho("\n&lt;dim_gray&gt; form he wished. Though this might not be seen as infuriating to a God")
cecho("\n&lt;dim_gray&gt; such as Severn, in fact it was, for Artos worshipped Lanos only. That")
cecho("\n&lt;dim_gray&gt; Artos would use this ability for good, and to teach order and light to")
cecho("\n&lt;dim_gray&gt; the world, Severn saw as a waste.")

cecho("\n\n&lt;dim_gray&gt; Severn went to Artos disguised, and began to question him when Artos")
cecho("\n&lt;dim_gray&gt; immediately recognized who the God was. Enraged, Severn picked him up")
cecho("\n&lt;dim_gray&gt; and tossed him as far as he could into the heavens, where his eyes peer")
cecho("\n&lt;dim_gray&gt; down on us today.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star artos$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Dhya</name>
							<script>cecho("\n&lt;magenta&gt; DHYA, &lt;dim_gray&gt;the Thief")

cecho("\n\n&lt;ansi_magenta&gt; Dhya - &lt;dim_gray&gt;A group of 11 stars, in the form of two hands stretched upwards,")
cecho("\n&lt;dim_gray&gt; and a cloud of gems above them.")

cecho("\n\n&lt;dim_gray&gt; Dhya was the most famous thief of all time. The pinnacle (and downfall)")
cecho("\n&lt;dim_gray&gt; of his career came when he snuck into the Shallam Palace and pilfered")
cecho("\n&lt;dim_gray&gt; all the jewels of the city. The guards caught on slightly too late, and")
cecho("\n&lt;dim_gray&gt; they pursued him to the rooftops. Just as he was about to jump over the")
cecho("\n&lt;dim_gray&gt; Shallam walls to safety, he slipped and all the jewels flew into the")
cecho("\n&lt;dim_gray&gt; air. He fell to his death, and the jewels of Shallam were scattered to")
cecho("\n&lt;dim_gray&gt; peasants who were watching on. The Gods took pity on he for his skill at")
cecho("\n&lt;dim_gray&gt; stealth was great, and honoured him in the sky.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star dhya$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Geh</name>
							<script>cecho("\n&lt;magenta&gt; GEH,&lt;dim_gray&gt; the Cleaver")

cecho("\n\n&lt;ansi_magenta&gt; Geh, the Cleaver -&lt;dim_gray&gt; A group of 5 stars in the shape of a battleaxe")

cecho("\n\n&lt;dim_gray&gt; Geh was known as the strongest of the mortals, and with his battleaxe he")
cecho("\n&lt;dim_gray&gt; could cleave anything into two. It is said that he was once cutting wood")
cecho("\n&lt;dim_gray&gt; when a lovely dryad entered the clearing where he stood. With her, he")
cecho("\n&lt;dim_gray&gt; was enraptured, and as he took a swing with his axe, it went off course.")

cecho("\n\n&lt;dim_gray&gt; The battleaxe torn asunder the earth itself, and thus was formed the")
cecho("\n&lt;dim_gray&gt; Pash Valley. When Geh died, the Gods raised he and his battleaxe into")
cecho("\n&lt;dim_gray&gt; the skies.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star geh$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Cthalut</name>
							<script>cecho("\n&lt;magenta&gt; CTHALUT, &lt;dim_gray&gt;the Archer")

cecho("\n\n&lt;ansi_magenta&gt; Cthalut, the archer - &lt;dim_gray&gt;A group of 7 stars, in the shape of an archer")

cecho("\n\n&lt;dim_gray&gt; The bow of Cthalut was so powerful, he claimed he could hit anything. On")
cecho("\n&lt;dim_gray&gt; a clear night, he attempted to hit the sun, which was clearly not")
cecho("\n&lt;dim_gray&gt; visible. He shot an arrow, which flew around the world. It came back")
cecho("\n&lt;dim_gray&gt; into view in the night sky, flaming with the heat of the sun, the first")
cecho("\n&lt;dim_gray&gt; shooting star. Meteor showers are prominent around this constellation")
cecho("\n&lt;dim_gray&gt; each year.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star cthalut$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Triune</name>
							<script>cecho("\n &lt;dim_gray&gt;The &lt;magenta&gt;TRIUNE &lt;dim_gray&gt;of the Tree")

cecho("\n\n&lt;ansi_magenta&gt; The Triune - &lt;dim_gray&gt;A group of three stars in a triangle")

cecho("\n\n&lt;dim_gray&gt; A small town, under attack by beasts, called for someone to protect")
cecho("\n&lt;dim_gray&gt; them. When no one would come, their lead priest devised a rite that")
cecho("\n&lt;dim_gray&gt; would transform two people into one enormous tree with the power to")
cecho("\n&lt;dim_gray&gt; drive evil away from the village. The priest's most devoted acolyte")
cecho("\n&lt;dim_gray&gt; volunteered, as did the priest's wife, who had secretly loved the")
cecho("\n&lt;dim_gray&gt; acolyte from the beginning. Those two entwined to form the tree, and to")
cecho("\n&lt;dim_gray&gt; fight the beasts away.")

cecho("\n\n&lt;dim_gray&gt; But when the defense was successful and complete, there was no way to")
cecho("\n&lt;dim_gray&gt; turn the lovers back. The stood as a large tree in the center of town,")
cecho("\n&lt;dim_gray&gt; and their roots grew down deep as they lost all signs of mortality. The")
cecho("\n&lt;dim_gray&gt; priest in grief for his wife lay down beside the tree and died, his body")
cecho("\n&lt;dim_gray&gt; absorbed by the tree as well.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star triune$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Sheine</name>
							<script>cecho("\n&lt;magenta&gt; SHEINE, &lt;dim_gray&gt;the Wolf")

cecho("\n\n&lt;ansi_magenta&gt; Sheine, the wolf -&lt;dim_gray&gt; 7 stars in the form of a wolf")

cecho("\n\n&lt;dim_gray&gt; Sheine was the daughter of a Druid and an Occultist but cursed: she was")
cecho("\n&lt;dim_gray&gt; born in wolf form. Having a rational, sentient brain but no way to")
cecho("\n&lt;dim_gray&gt; communicate, Sheine was plagued by torment. When her forestal home was")
cecho("\n&lt;dim_gray&gt; burned by wildfire, she had no way to express her pain other than to")
cecho("\n&lt;dim_gray&gt; howl. Her howl still rings across the land, echoing in each mortal's")
cecho("\n&lt;dim_gray&gt; ears once a week.")</script>
							<command></command>
							<packageName></packageName>
							<regex>^star sheine$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Izu-Ari</name>
							<script>cecho("\n&lt;magenta&gt; IZU-ARI, &lt;dim_gray&gt;the Gambler")

cecho("\n\n&lt;ansi_magenta&gt; Izu-Ari, the gambler - &lt;dim_gray&gt;A single star, representing a gold sovereign")

cecho("\n\n&lt;dim_gray&gt; A rich and powerful man, Izu-Ari could never resist a bet. His last bet")
cecho("\n&lt;dim_gray&gt; cost him his life, however. It was proposed that he could never win a")
cecho("\n&lt;dim_gray&gt; million gold in one week. He took the bet, playing the tables night and")
cecho("\n&lt;dim_gray&gt; day. When he finally reached 999,999 gold, he keeled over from thirst")
cecho("\n&lt;dim_gray&gt; and hunger and as his breath ran out, the ball settled into his number.")
cecho("\n&lt;dim_gray&gt; He had won the bet. The time during which this constellation is")
cecho("\n&lt;dim_gray&gt; prominent would be an unlucky time to gamble.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star izu-ari$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Veithadros</name>
							<script>cecho("\n&lt;magenta&gt; VEITHADROS, &lt;dim_gray&gt;the Hopeful")

cecho("\n\n&lt;ansi_magenta&gt; Veithadros, the hopeful - &lt;dim_gray&gt;5 stars, representing a tower on a hill.")

cecho("\n\n&lt;dim_gray&gt; Veithadros' beloved rode off to war while he stayed behind to aid in")
cecho("\n&lt;dim_gray&gt; their home's defense. He took up a post upon a high hilltop atop a")
cecho("\n&lt;dim_gray&gt; tower, waiting day and night for his love's return. Weeks and months")
cecho("\n&lt;dim_gray&gt; passed, and she never returned, but he yet stayed upon the hilltop,")
cecho("\n&lt;dim_gray&gt; waiting. One day when his fellow villagers went to find him, he was")
cecho("\n&lt;dim_gray&gt; gone, never to be seen again, except in the sky above.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star veithadros$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Jaifryn</name>
							<script>cecho("\n&lt;magenta&gt; JAIFRYN, &lt;dim_gray&gt;the Sphinx")

cecho("\n\n&lt;ansi_magenta&gt; Jaifryn, the sphinx -&lt;dim_gray&gt; 17 stars, in the shape of a sphinx")

cecho("\n\n&lt;dim_gray&gt; The first offspring of a Human and Rajamala, she seemed deformed. She")
cecho("\n&lt;dim_gray&gt; banished herself from civilization, taking up residence in the desert")
cecho("\n&lt;dim_gray&gt; where she could blend into the sand with her tan colored coat. Her lack")
cecho("\n&lt;dim_gray&gt; of adjustment caused her to find riddles fascinating and to attack")
cecho("\n&lt;dim_gray&gt; anyone who did not agree with her opinions.")

cecho("\n\n&lt;dim_gray&gt; The Mhun who built the sphinx in the desert used as their inspiration")
cecho("\n&lt;dim_gray&gt; Jaifryn, so her unique form could be immortalized. The Gods also")
cecho("\n&lt;dim_gray&gt; immortalized her in the heavens.")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^star jaifryn$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>New Mejevsavelnel</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Prime Stars</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Lyrana</name>
								<script>cecho("&lt;white&gt;\n &lt;yellow&gt;LYRANA, &lt;white&gt;the Praying Child")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears in our night skies    |                   |")
cecho("&lt;white&gt;\n as seven stars, forming a curved line above a    |      &lt;cyan&gt;+     +&lt;white&gt;      |")
cecho("&lt;white&gt;\n triangle, representing the outline of a          |                   |")
cecho("&lt;white&gt;\n kneeling child in prayer.                        |  &lt;cyan&gt;+&lt;white&gt;             &lt;cyan&gt;+&lt;white&gt;  |")
cecho("&lt;white&gt;\n                                                  |         &lt;yellow&gt;*&lt;white&gt;         |")
cecho("&lt;white&gt;\n Lyrana, it is said, was a young girl who lived   |                   |")
cecho("&lt;white&gt;\n some years ago. At the time of the War of        |       &lt;yellow&gt;*  *&lt;white&gt;        |")
cecho("&lt;white&gt;\n Change, she was among the girls sent as envoys   |                   |")
cecho("&lt;white&gt;\n to the warring generals, who pleaded for the     |                   |")
cecho("&lt;white&gt;\n ceasing of hostilities. Bad timing, or perhaps   x-------------------x")
cecho("&lt;white&gt;\n fate caused the children to find themselves in")
cecho("&lt;white&gt;\n the middle of the battling armies as they continued to slaughter each")
cecho("&lt;white&gt;\n other. The last to survive, Lyrana stood praying on the battlefield in")
cecho("&lt;white&gt;\n the midst of the dead or dying soldiers, until she rose up to the")
cecho("&lt;white&gt;\n heavens to take her place among the stars.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under the influence of the Praying Child, your strength will be")
cecho("&lt;white&gt;\n decreased, but you will feel more intelligent.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n                        === &lt;yellow&gt;The Praying Child&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Ashtan wars were bloody and desperate; the City walls were sacked")
cecho("&lt;white&gt;\n and rebuilt daily as brutal battles took place around the outlying")
cecho("&lt;white&gt;\n defenses. A small group of villages and settlements bordering the City,")
cecho("&lt;white&gt;\n at the foothills of the Tarean mountains and looking out onto the")
cecho("&lt;white&gt;\n Sapphire Ocean were left largely untouched by the conflict until the")
cecho("&lt;white&gt;\n Ashtanite army saw potential there for materials.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Armies of workers flooded into the villages to chop wood and mine for")
cecho("&lt;white&gt;\n ores, drawing attention from the Enorians who swiftly sent troops to")
cecho("&lt;white&gt;\n take what had quickly become a strategic position. The villagers lived a")
cecho("&lt;white&gt;\n quiet life, unaffected by the big City. The pillaging of their raw")
cecho("&lt;white&gt;\n materials and the occupation by hordes of dwarf and orc workers had left")
cecho("&lt;white&gt;\n the people of the villages destitute. Now they sat in the middle of two")
cecho("&lt;white&gt;\n armies and foresaw their annihilation.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In a desperate attempt to appeal to the better natures of the two sides,")
cecho("&lt;white&gt;\n the villagers sent their children with a plea to each general to")
cecho("&lt;white&gt;\n consider the cost of the battle that lay ahead. The children set out on")
cecho("&lt;white&gt;\n a misty dawn. Their path would take them to both encampments and then on")
cecho("&lt;white&gt;\n to the forests where they would be safe. With the mists to cover their")
cecho("&lt;white&gt;\n approaches, both armies broke camp early and advanced with stealth. The")
cecho("&lt;white&gt;\n children found themselves between two charging armies and were cut down")
cecho("&lt;white&gt;\n without notice from either side.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n The battle was bloody and brutal, with both sides suffering heavy")
cecho("&lt;white&gt;\n losses. The Paladin General, surveying his close victory, caught sight")
cecho("&lt;white&gt;\n of a small child, kneeling in prayer. As he approached, he saw the")
cecho("&lt;white&gt;\n bodies of children lying in the stinking carnage, clutching their toys")
cecho("&lt;white&gt;\n and meager possessions, faces cast as though the death creeping in to")
cecho("&lt;white&gt;\n their wounds had been their last witness.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The child was a little girl, Lyrana, her pure white gown untouched by")
cecho("&lt;white&gt;\n the blood that bubbled all around, her face an image of pure hope and")
cecho("&lt;white&gt;\n innocence and her prayer a simple plea for peace. The general lifted")
cecho("&lt;white&gt;\n Lyrana's face toward his and the simple mantra stopped, her face lost")
cecho("&lt;white&gt;\n its glow and her spirit rose to the heavens.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star lyrana$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Lypi</name>
								<script>
cecho("&lt;yellow&gt;\n LYPI, &lt;white&gt;Qeddwyn's Sorrow or the Shroud")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Lypi appears as a tall arch of five faint        |         &lt;blue&gt;.&lt;white&gt;         |")
cecho("&lt;white&gt;\n stars, seeming to stand above the city of        |                   |")
cecho("&lt;white&gt;\n Spinesreach as a shroud.                         |                   |")
cecho("&lt;white&gt;\n                                                  |     &lt;blue&gt;.&lt;white&gt;       &lt;blue&gt;.&lt;white&gt;     |")
cecho("&lt;white&gt;\n Legends say this constellation stands in the     |                   |")
cecho("&lt;white&gt;\n skies as a shroud over Spinesreach, a reminder   |                   |")
cecho("&lt;white&gt;\n of the sorrow of Qeddwyn, the last surviving     |                   |")
cecho("&lt;white&gt;\n Ankyrean after the fall of the Order, as the     |    &lt;blue&gt;.&lt;white&gt;         &lt;blue&gt;.&lt;white&gt;    |")
cecho("&lt;white&gt;\n God Severn wove the Grand Artifice around the    |                   |")
cecho("&lt;white&gt;\n city of Spinesreach.                             x-------------------x")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under this constellation's effect, you will feel much stronger")
cecho("&lt;white&gt;\n but with weaker constitution.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Shroud&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Lord Severn had told Qeddwyn the scholar several times over that the Age")
cecho("&lt;white&gt;\n of the Ankyreans had passed, and the Third Epoch was at hand. Yet")
cecho("&lt;white&gt;\n Qeddwyn found the ending of his proud legacy fundamentally impossible,")
cecho("&lt;white&gt;\n and could not truly believe his Patron until he saw it for himself - a")
cecho("&lt;white&gt;\n true empiricist, even to this day. Thus it was that Qeddwyn witnessed")
cecho("&lt;white&gt;\n the brilliant, purifying Flame that ended his Order. Qeddwyn was the")
cecho("&lt;white&gt;\n first to find the bodies of his friends charred by their own")
cecho("&lt;white&gt;\n incantation.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n His sorrow was so great that even the Divine had pity and granted him")
cecho("&lt;white&gt;\n forgetfulness for a time, a blessed peace from the savages of grief. The")
cecho("&lt;white&gt;\n heaviness of heart that was lifted that day did not simply vanish,")
cecho("&lt;white&gt;\n however: so epic was Qeddwyn's sorrow that simple amnesia could not")
cecho("&lt;white&gt;\n erase its burden. Instead, the grief was transformed and is destined to")
cecho("&lt;white&gt;\n forever hang over Spinesreach, mourning the loss of the Ankyreans.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star lypi$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Artos</name>
								<script>
cecho("&lt;white&gt;\n\n &lt;yellow&gt;ARTOS, &lt;white&gt;the Sage or the Shapeshifter")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Viewed as a pair of bright stars twinkling in    |                   |")
cecho("&lt;white&gt;\n unison, representing the two piercing eyes of    |                   |")
cecho("&lt;white&gt;\n Artos.                                           |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Ancient is the story of Artos. A very famous     |      &lt;yellow&gt;*     *&lt;white&gt;      |")
cecho("&lt;white&gt;\n sage in his day, he was also in secret a         |                   |")
cecho("&lt;white&gt;\n shapeshifter, and used his powers to teach       |                   |")
cecho("&lt;white&gt;\n order and light in the name of Lanos, God of     |                   |")
cecho("&lt;white&gt;\n Truth. Seeing this as a great affront, the God   |                   |")
cecho("&lt;white&gt;\n Severn appeared to him in disguise, a trick      x-------------------x")
cecho("&lt;white&gt;\n Artos was quick to recognise. Enraged by this,")
cecho("&lt;white&gt;\n Severn proceeded to cast him out into the heavens as far as He could,")
cecho("&lt;white&gt;\n where Artos' eyes can still be seen to this day, observing us all from")
cecho("&lt;white&gt;\n above.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n One of the few surviving constellations of the old Mejevsavelnel,")
cecho("&lt;white&gt;\n while under the influence of Artos you will feel less agile, but")
cecho("&lt;white&gt;\n considerably more intelligent.")
cecho("&lt;white&gt;\n\n                         === &lt;yellow&gt;The Shapeshifter&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n A very famous sage, Artos was renowned for his amazing perception.")
cecho("&lt;white&gt;\n Always savvy to the motivations and tricks of others, Artos had a secret")
cecho("&lt;white&gt;\n of his own. As the Gods would have it, Artos had the ability to change")
cecho("&lt;white&gt;\n his shape into any form he wished. Though this might not be normally")
cecho("&lt;white&gt;\n seen as infuriating to a God such as Severn, in fact it was, for Artos")
cecho("&lt;white&gt;\n worshipped Lanos only.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n That Artos would use his ability for good, and to teach order and light")
cecho("&lt;white&gt;\n to the world, Severn saw as a waste. Severn went to Artos disguised and")
cecho("&lt;white&gt;\n began to question him, hoping to fool him into darker deeds, but Artos")
cecho("&lt;white&gt;\n immediately recognized whom the God was. Enraged, Severn picked him up")
cecho("&lt;white&gt;\n and tossed him as far as he could into the heavens, where his eyes peer")
cecho("&lt;white&gt;\n down on us today, the rest of his form lost due to its inconstancy.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star artos$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Vayua</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;VAYUA&lt;white&gt;, the Theran or the Hero")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Visible in the sky as five stars in a straight   |                &lt;cyan&gt;+&lt;white&gt;  |")
cecho("&lt;white&gt;\n line with a sixth and seventh flanking the       |                   |")
cecho("&lt;white&gt;\n second star of the five, representing a sword.   |            &lt;cyan&gt;+&lt;white&gt;      |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Stories tell of Vayua, a citizen from the lost   |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n village of Thera, which in order to protect      | &lt;cyan&gt;+&lt;white&gt;                 |")
cecho("&lt;white&gt;\n his fellow citizens and his only daughter        |    &lt;cyan&gt;+&lt;white&gt;              |")
cecho("&lt;white&gt;\n threw himself before a vile creature in a        |       &lt;cyan&gt;+&lt;white&gt;           |")
cecho("&lt;white&gt;\n display of selfless heroism, with nothing to     |&lt;cyan&gt;+&lt;white&gt;                  |")
cecho("&lt;white&gt;\n help him but his sword. The battle was won,      x-------------------x")
cecho("&lt;white&gt;\n but at a terrible price, for although the")
cecho("&lt;white&gt;\n villagers were saved, the wounds he suffered were too many, and he")
cecho("&lt;white&gt;\n soon perished. The Gods, noticing his sacrifice, elevated him to the")
cecho("&lt;white&gt;\n heavens, where his sword still shines to lighten many dark nights.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Those affected by this constellation will feel weaker, but at the same")
cecho("&lt;white&gt;\n time with higher constitution.")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Hero&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The village of Thera was a prosperous community, and the people there")
cecho("&lt;white&gt;\n led contented lives. It came as a sudden shock, then, that goblin")
cecho("&lt;white&gt;\n soldiers and warriors should invade their town. But the Therans were not")
cecho("&lt;white&gt;\n completely pacifistic, and fought valiantly to defend their homes. The")
cecho("&lt;white&gt;\n goblins were driven off, but not before successfully stealing a young")
cecho("&lt;white&gt;\n girl, Leine, from her home, to take with them back to Azdun and enslave")
cecho("&lt;white&gt;\n for their cruel purposes.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Horrified and enraged, Leine\'s father Vayua organized a group of brave")
cecho("&lt;white&gt;\n Therans to invade Azdun with him. They dashed swiftly into the")
cecho("&lt;white&gt;\n underground fortress, laying waste to the disorganized soldiers they")
cecho("&lt;white&gt;\n came across, and cut down the goblin army with their righteous strikes.")
cecho("&lt;white&gt;\n They found Leine and unshackled her, and Vayua and his companions were")
cecho("&lt;white&gt;\n greatly relieved. On their way out of the Azdun dungeon, a vampire")
cecho("&lt;white&gt;\n sprang from the shadows. Shouting for his comrades to leave as the")
cecho("&lt;white&gt;\n vampire chased the group, Vayua waited until they had all ascended the")
cecho("&lt;white&gt;\n well, guarding the exit. Then the undead creature and the brave Theran")
cecho("&lt;white&gt;\n dove at each other.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In the courtyard of a ruined castle, the fleeing Therans came to a halt")
cecho("&lt;white&gt;\n when they heard the immortal cry of a defeated vampire, and cheered.")
cecho("&lt;white&gt;\n They waited for Vayua to emerge from the well but, after several minutes")
cecho("&lt;white&gt;\n without a sign of him, began to worry. They travelled back down and, to")
cecho("&lt;white&gt;\n their horror, found him with a deep gash in his abdomen and cuts and")
cecho("&lt;white&gt;\n scratches all over him.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Breathing slowly, he beckoned his party take him home. He was carried by")
cecho("&lt;white&gt;\n the largest of the company, with Leine holding his hand the entire walk")
cecho("&lt;white&gt;\n back to Thera. They stepped through the gates, and Vayua smiled, and")
cecho("&lt;white&gt;\n passed away. Leine wept, and Thera wept with her, and the Gods felt")
cecho("&lt;white&gt;\n their pain. Lord Arion was struck by the bravery and valor of the mortal")
cecho("&lt;white&gt;\n Vayua and gently guided his soul to the celestial reaches of the sky,")
cecho("&lt;white&gt;\n ever to watch over his people.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star vayua$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Alysida</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;ALYSIDA, &lt;white&gt;the Whip")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as a sloping line of six stars, the      |                   |")
cecho("&lt;white&gt;\n last of which is a hazy red star, forming a      | &lt;cyan&gt;+&lt;white&gt;                 |")
cecho("&lt;white&gt;\n curving whip of stars, tipped with red.          |                   |")
cecho("&lt;white&gt;\n                                                  |  &lt;cyan&gt;+&lt;white&gt;                |")
cecho("&lt;white&gt;\n The dark Goddess, Chakrasul, enjoyed using Her   |                   |")
cecho("&lt;white&gt;\n whip Alysida to torture others, considering it   |    &lt;cyan&gt;+&lt;white&gt;              |")
cecho("&lt;white&gt;\n the ultimate instrument of corruption. But       |                   |")
cecho("&lt;white&gt;\n still the pain She inflicted with it served      |        &lt;cyan&gt;+&lt;white&gt;        &lt;red&gt;.&lt;white&gt; |")
cecho("&lt;white&gt;\n only to temper the will of the mortal who        |             &lt;cyan&gt;+&lt;white&gt;     |")
cecho("&lt;white&gt;\n would one day transcend his old form to become   x-------------------x")
cecho("&lt;white&gt;\n Rahn, God of Fire.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While Alysida stands highest in the heavens, all will feel less")
cecho("&lt;white&gt;\n dexterous, but with a higher constitution.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Whip  &lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Many had fallen to Alysida, the Whip of Corruption. Its barbed tip,")
cecho("&lt;white&gt;\n reinforced with shards of metal and glass, was said to be a constant")
cecho("&lt;white&gt;\n dark red from the blood of its victims. Its touch, whether gentle or")
cecho("&lt;white&gt;\n biting, was said to drain the willpower from those who came before it.")
cecho("&lt;white&gt;\n And when its Mistress wielded it, She could break any living being and")
cecho("&lt;white&gt;\n make them grovel before Her.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Thus, as Chakrasul looked over Her instruments of torture while deciding")
cecho("&lt;white&gt;\n how best to corrupt the soul of the mortal who would become Rahn, she")
cecho("&lt;white&gt;\n decided that Alysida was the perfect choice. Picking it up and tossing")
cecho("&lt;white&gt;\n it from hand to hand, She strode over to his supine form and scourged")
cecho("&lt;white&gt;\n his flesh with this instrument of despair. Instantly though, She could")
cecho("&lt;white&gt;\n feel that though She tore his flesh asunder, his spirit remained intact.")
cecho("&lt;white&gt;\n Blow after blow only seemed to strengthen his resolve and forge his")
cecho("&lt;white&gt;\n spirit into a more perfect form.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n For many days She continued, trying to find the weakness in his soul")
cecho("&lt;white&gt;\n that Alysida might strike and begin to process of unravelling; but none")
cecho("&lt;white&gt;\n could She find. Her anger grew and Her patience waned, and soon She saw")
cecho("&lt;white&gt;\n the futility of the Whip. She threw it out of the volcano, high into the")
cecho("&lt;white&gt;\n heavens, where it still soars today, its bloody tip visible.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star alysida$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sukula</name>
								<script>
cecho("&lt;yellow&gt;\n SUKULA, &lt;white&gt;the Xorani Spirit or the Family")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Viewed as a ring of six bright stars, which      |                   |")
cecho("&lt;white&gt;\n surround a pale nebula, representing the         |                   |")
cecho("&lt;white&gt;\n glowing heart of a Mother, encircled by her      |       &lt;yellow&gt;*    *&lt;white&gt;      |")
cecho("&lt;white&gt;\n six Children.                                    |       &lt;pink&gt; ~  ~       &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |    &lt;yellow&gt;*&lt;pink&gt; ~ ~ ~ ~      &lt;white&gt;|")
cecho("&lt;white&gt;\n The lizard-like Xorani possess ancient lore,     |      &lt;pink&gt; ~ ~ ~  &lt;yellow&gt;*    &lt;white&gt;|")
cecho("&lt;white&gt;\n in which they regard Sukula as an example of     |      &lt;pink&gt;  ~ ~        &lt;white&gt;|")
cecho("&lt;white&gt;\n the strength and love shared by all families,    |      &lt;yellow&gt;*    *       &lt;white&gt;|")
cecho("&lt;white&gt;\n the very basis of the Xoran race.                |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n While under its influence, you will feel")
cecho("&lt;white&gt;\n stronger but with less dexterity.")
cecho("\n")
cecho("&lt;white&gt;\n                       === &lt;yellow&gt;The Xorani Spirit &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The origins of the Xorani race are shrouded in lore and legend, but")
cecho("&lt;white&gt;\n their exodus from the valley of Scidve brought with it belief systems")
cecho("&lt;white&gt;\n that have bled into those we are familiar with today. Amongst these was")
cecho("&lt;white&gt;\n the belief that the spirit crystalizes into a star when it leaves the")
cecho("&lt;white&gt;\n mortal frame, and the star shines all the brighter if the spirit is")
cecho("&lt;white&gt;\n invested with deep love, like the love that exists between mother and")
cecho("&lt;white&gt;\n child. Xorani astrologers used the particular constellation of Sukula as")
cecho("&lt;white&gt;\n an example of the power of spirit and the sanctity of the family,")
cecho("&lt;white&gt;\n attributing the arrangement to a mother reflecting her love through the")
cecho("&lt;white&gt;\n children who surround her.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star sukula$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Cthalut</name>
								<script>
cecho("&lt;white&gt;\n\n &lt;yellow&gt;CTHALUT, &lt;white&gt;the Archer")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be seen as seven stars in a loose group,     |                   |")
cecho("&lt;white&gt;\n the brightest three in a vertical crescent,      |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n representing the shape of an archer.             |           &lt;blue&gt;*&lt;white&gt;       |")
cecho("&lt;white&gt;\n                                                  |      &lt;cyan&gt;+&lt;white&gt;            |")
cecho("&lt;white&gt;\n Legends say that Cthalut believed himself such   |             &lt;blue&gt;*&lt;white&gt;     |")
cecho("&lt;white&gt;\n an outstanding archer, that he once attempted    |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n to hit the sun, while standing under a clear     |           &lt;blue&gt;*&lt;white&gt;       |")
cecho("&lt;white&gt;\n night's sky, in which obviously the sun would    |                   |")
cecho("&lt;white&gt;\n not be visible. The arrow he shot sailed         |     &lt;cyan&gt;+&lt;white&gt;             |")
cecho("&lt;white&gt;\n around the earth, and some while later came      x-------------------x")
cecho("&lt;white&gt;\n back, wreathed in flames from the sun's heat.")
cecho("&lt;white&gt;\n And so the first shooting star was created... While this constellation")
cecho("&lt;white&gt;\n rests highest in the heavens, it is said meteor showers are a common")
cecho("&lt;white&gt;\n sight.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Another surviving constellation of the old Mejevsavelnel, while under")
cecho("&lt;white&gt;\n the effect of Cthalut you will feel more dexterous, but somewhat less")
cecho("&lt;white&gt;\n intelligent.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Archer&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Cthalut was one of the greatest archers ever to take arrow in hand. The")
cecho("&lt;white&gt;\n bow of Cthalut was so powerful that he claimed he could hit anything.")
cecho("&lt;white&gt;\n One clear night, with the moon and stars visible in all their splendour")
cecho("&lt;white&gt;\n but the sun of course nowhere to be seen, some of Cthalut's fellows were")
cecho("&lt;white&gt;\n bragging about their own archery skills. One by one their arrows struck")
cecho("&lt;white&gt;\n darting rabbits and distant trees, but all the while Cthalut watched in")
cecho("&lt;white&gt;\n unimpressed silence. Finally, his comrades spurred him to make a")
cecho("&lt;white&gt;\n legendary boast: he would hit the sun itself with an arrow from his bow.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n With the other archers watching in wonder, he shot an arrow with all of")
cecho("&lt;white&gt;\n his strength, and it flew around the world. When it came back into view")
cecho("&lt;white&gt;\n in the night sky, it was flaming with the heat of the sun, the first")
cecho("&lt;white&gt;\n shooting star. The Gods placed Cthalut in the heavens at the end of his")
cecho("&lt;white&gt;\n allotted time, his bow eternally aimed at the sun. And when stars shoot")
cecho("&lt;white&gt;\n through the night sky, those who are wise know that they are Cthalut's")
cecho("&lt;white&gt;\n arrows, continuing in their flight after striking the sun.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star cthalut$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Verdantia</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;VERDANTIA, &lt;white&gt;the Severed or the Brokenhearted Tree")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears as a line of six      |  &lt;yellow&gt;*&lt;white&gt;                |")
cecho("&lt;white&gt;\n stars, the first bright, and each successive     |                   |")
cecho("&lt;white&gt;\n star noticeably darker than the one before,      |    &lt;yellow&gt;*&lt;white&gt;              |")
cecho("&lt;white&gt;\n representing the soul of a tree, fading away     |        &lt;cyan&gt;+&lt;white&gt;          |")
cecho("&lt;white&gt;\n in despair.                                      |                   |")
cecho("&lt;white&gt;\n                                                  |          &lt;cyan&gt;+&lt;white&gt;        |")
cecho("&lt;white&gt;\n When the living trees of the Morgun reach an     |              &lt;blue&gt;.&lt;white&gt;    |")
cecho("&lt;white&gt;\n ancient age, they become attuned to their own    |                   |")
cecho("&lt;white&gt;\n dark dryad, which lives inside the tree as       |                &lt;blue&gt;.&lt;white&gt;  |")
cecho("&lt;white&gt;\n their spirit, caring for them, feeling for       x-------------------x")
cecho("&lt;white&gt;\n them, and which then choose a nayar as a mate,")
cecho("&lt;white&gt;\n who serve as protectors to the tree's power.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n It's said that when Nala, a dark dryad, severed the link with her tree")
cecho("&lt;white&gt;\n and nayar to pursue a career as a minstrel, the ancient tree wasn't")
cecho("&lt;white&gt;\n able to live on with the pain; its soul faded away, until the other")
cecho("&lt;white&gt;\n dryads decided to offer what was left of it to the heavens, to find at")
cecho("&lt;white&gt;\n last some solace.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under its effect, you'll feel your dexterity increasing, but")
cecho("&lt;white&gt;\n your constitution will be diminished.")
cecho("\n")
cecho("&lt;white&gt;\n                    === &lt;yellow&gt;The Broken-hearted Tree &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Nala was a dark dryad of surpassing musical talent. In her life among")
cecho("&lt;white&gt;\n the dryads of Morgun Forest, although she was comfortable and enjoyed")
cecho("&lt;white&gt;\n her companionship with her nayar and tree, she was ultimately")
cecho("&lt;white&gt;\n unfulfilled. She craved an audience, she craved development of her")
cecho("&lt;white&gt;\n talent - the Muse had called her as if by name, and she could not")
cecho("&lt;white&gt;\n refuse.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Of her family and friends, and certainly her nayar, none could truly")
cecho("&lt;white&gt;\n understand, nor could they pretend to. They had all they could want from")
cecho("&lt;white&gt;\n their loved ones - what more is there than happiness? Telling herself it")
cecho("&lt;white&gt;\n was only a phase that she must wait through, Nala suppressed her desires")
cecho("&lt;white&gt;\n for a time, simply playing music for the amusement of those around her.")
cecho("&lt;white&gt;\n Yet as she grew more and more discontent, she came to realize that in")
cecho("&lt;white&gt;\n her life, a pursuit of art was compelling her soul in a way unmatched by")
cecho("&lt;white&gt;\n anything else she had experienced. And in that moment of realization,")
cecho("&lt;white&gt;\n her decision was made.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Though it had never before been attempted, though her methods remain")
cecho("&lt;white&gt;\n unknown, Nala severed her link with the tree, and thereby her link with")
cecho("&lt;white&gt;\n her family, her nayar, and everyone she had ever known. The experience")
cecho("&lt;white&gt;\n gave her the intimacy with loss and grief she had sought for her art,")
cecho("&lt;white&gt;\n more intensely than she had bargained for. Thereafter, Nala traveled the")
cecho("&lt;white&gt;\n world to improve her talents to where they are today. But back in the")
cecho("&lt;white&gt;\n dryad grove, all was not well.")
cecho("&lt;white&gt;\n ")
cecho("&lt;white&gt;\n The tree, in shock and interminable grief, was dying. Spiritually, the")
cecho("&lt;white&gt;\n dryads could feel its severed link with Nala like a stump, dripping sap")
cecho("&lt;white&gt;\n with every touch of the breeze. It could not understand, was struck dumb")
cecho("&lt;white&gt;\n by the volume of its loss. They called to the Gods, they called to the")
cecho("&lt;white&gt;\n very essence of the wilds, for mercy on this creature, for healing. And")
cecho("&lt;white&gt;\n Lady Lleis came to the tree and gently took the severed branch of its")
cecho("&lt;white&gt;\n soul, putting it amidst the stars where it may one day recover from its")
cecho("&lt;white&gt;\n sorrow. Some say her nayar still visits the tree in the sky from time to")
cecho("&lt;white&gt;\n time.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star verdantia$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Treyes</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;TREYES, &lt;white&gt;the Candles")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as three blazing stars, topping three    |                   |")
cecho("&lt;white&gt;\n parallel columns of two dull stars each,         |                   |")
cecho("&lt;white&gt;\n representing the three sacred candles of the     |         &lt;yellow&gt;*&lt;white&gt;         |")
cecho("&lt;white&gt;\n Luminary fellowship and the Triad.               |   &lt;yellow&gt;*&lt;blue&gt;     .     &lt;yellow&gt;*&lt;white&gt;   |")
cecho("&lt;white&gt;\n                                                  |   &lt;blue&gt;.     .     .&lt;white&gt;   |")
cecho("&lt;white&gt;\n When the Cabalist guild was formed, its          |   &lt;blue&gt;.           .&lt;white&gt;   |")
cecho("&lt;white&gt;\n members were refused entrance into the Chaos     |                   |")
cecho("&lt;white&gt;\n Plane by Golgotha, the Emperor of Darkness,      |                   |")
cecho("&lt;white&gt;\n until a bargain was struck. In exchange for      |                   |")
cecho("&lt;white&gt;\n two guardian angels, willingly sacrificed by     x-------------------x")
cecho("&lt;white&gt;\n the priests they protected, and that would be")
cecho("&lt;white&gt;\n bound as brides for the Emperor, the cabalists were granted the safe")
cecho("&lt;white&gt;\n passage they sought.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Treyes represents the sacred candles gifted to the Luminaries by the")
cecho("&lt;white&gt;\n Triad of Angels many years later, which were instrumental in helping")
cecho("&lt;white&gt;\n them finally rescue those two long imprisoned angels from the Chaos")
cecho("&lt;white&gt;\n Plane.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While under the effect of this constellation, you will feel much")
cecho("&lt;white&gt;\n stronger, but also less intelligent.")
cecho("\n")
cecho("&lt;white&gt;\n                      === &lt;yellow&gt;The Candles &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n On a dark day, two gullible priests were persuaded to betray their")
cecho("&lt;white&gt;\n guardian angels, gifting the angels to chaotic demons. The demons meant")
cecho("&lt;white&gt;\n to wed the holy beings, stripping them of their Divine purpose and")
cecho("&lt;white&gt;\n light. The demon plot succeeded until the Triad of Angels, three of the")
cecho("&lt;white&gt;\n most powerful archangels, appeared to members of the Guild of")
cecho("&lt;white&gt;\n Luminaries.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Luminaries had been distraught, trying to find a way to both punish")
cecho("&lt;white&gt;\n the mortals for their grievous sin against the spirit plane and release")
cecho("&lt;white&gt;\n the angelic beings from their cruel captivity. It was the appearance of")
cecho("&lt;white&gt;\n the Triad that gave the Luminaries what they required - the Three")
cecho("&lt;white&gt;\n Candles. The candles burned for light and fire and would surely be")
cecho("&lt;white&gt;\n strong enough to be used in a ceremony to free the enslaved guardians.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Guildmaster and her fellows traveled to the Chaos Plane to perform")
cecho("&lt;white&gt;\n the ritual, guided by the Triad from afar. The holy candles saved the")
cecho("&lt;white&gt;\n guardian angels and restored them to their rightful place on the spirit")
cecho("&lt;white&gt;\n plane. Anyone who looks upon this constellation is reminded of the")
cecho("&lt;white&gt;\n perseverance of light and the sacred bond that was broken and reformed")
cecho("&lt;white&gt;\n with the spirit plane through the Triad's grace.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star treyes$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Sekhtet</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;SEKHTET, &lt;white&gt;the Martyr or the Aakhut")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation is seen in the night skies    |        &lt;yellow&gt;* * &lt;white&gt;       |")
cecho("&lt;white&gt;\n as seven stars in a tall, thin X shape, with     |                   |")
cecho("&lt;white&gt;\n two additional bright stars next to each other   |      &lt;yellow&gt; +   +&lt;white&gt;       |")
cecho("&lt;white&gt;\n in the upper part of the X, forming the body     |                   |")
cecho("&lt;white&gt;\n of Sekhtet, with a silver band around her        |      &lt;yellow&gt;   +&lt;white&gt;         |")
cecho("&lt;white&gt;\n forehead.                                        |                   |")
cecho("&lt;white&gt;\n                                                  |      &lt;yellow&gt; +   +&lt;white&gt;       |")
cecho("&lt;white&gt;\n Having served Niuri, the Goddess of Mystery as   |                   |")
cecho("&lt;white&gt;\n Her high priestess for all her life, Sekhtet     |      &lt;cyan&gt;+     +&lt;white&gt;      |")
cecho("&lt;white&gt;\n died sacrificing herself to elemental earth to   x-------------------x")
cecho("&lt;white&gt;\n save the foundations of her Matron's desert")
cecho("&lt;white&gt;\n temple from total ruin, although she couldn't totally prevent the")
cecho("&lt;white&gt;\n destruction of the Akhenades.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n While affected by this constellation, you'll fell with a worse")
cecho("&lt;white&gt;\n constitution, but higher intelligence.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;yellow&gt;The Martyr &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Sekhtet began life a sage with a keen perception and a glorious destiny.")
cecho("&lt;white&gt;\n As she wandered the sands of the Mhojave desert during the Death of")
cecho("&lt;white&gt;\n Truth in the year 90 of this age, the ankh symbol she wore attracted")
cecho("&lt;white&gt;\n mists of violet that arose from the cursed Mirror on Polyargos. Inspired")
cecho("&lt;white&gt;\n by this essence, Sekhtet parted the sands to the south and began a rite")
cecho("&lt;white&gt;\n that resulted in the manifestation of Lady Niuri. From that moment,")
cecho("&lt;white&gt;\n Sekhtet was the Goddess's Aakhut, servant and high priestess. But fate")
cecho("&lt;white&gt;\n was to decree that servitude short-lived.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n After only a quarter-century, Sekhtet sensed that an imbalance of the")
cecho("&lt;white&gt;\n physical elements, caused by a tainted ritual that summoned the earth")
cecho("&lt;white&gt;\n elemental Fordrock, had the power to remove Niuri's anchor from the")
cecho("&lt;white&gt;\n Mortal plane. In secrecy from her Matron, she ensconced herself in the")
cecho("&lt;white&gt;\n foundation of the Akhenades temple and wove spell after spell, hiding")
cecho("&lt;white&gt;\n Niuri's master shrine from the possibility of harm and protecting the")
cecho("&lt;white&gt;\n precious library of Mystery, knowing full well that she would perish in")
cecho("&lt;white&gt;\n the process. And indeed, after Niuri defeated Fordrock in the Tarea")
cecho("&lt;white&gt;\n Mountains, She returned to the desert to find Sekhtet's body,")
cecho("&lt;white&gt;\n irrevocably slain by elemental stone.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n In anguish She abandoned Akhenades to the sands of time. But through")
cecho("&lt;white&gt;\n guidance in the form of letters penned with visions of the future,")
cecho("&lt;white&gt;\n Sekhtet helped the Order of Mystery lead the Goddess through Her")
cecho("&lt;white&gt;\n transformation, resulting eventually in the foundation of Her new temple")
cecho("&lt;white&gt;\n at Kentorakro. Her essence once again stable, Niuri raised Sekhtet's")
cecho("&lt;white&gt;\n body into the sky, giving her a place of honor in the constellations of")
cecho("&lt;white&gt;\n the night.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star sekhtet$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Izu-Ari</name>
								<script>
cecho("&lt;yellow&gt;\n\n IZU-ARI, &lt;white&gt;the Gambler or the Sovereign")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be seen as a single golden star,             |                   |")
cecho("&lt;white&gt;\n representing Izu-Ari's last gold sovereign.      |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n According to legend, Izu-Ari was once a rich     |                   |")
cecho("&lt;white&gt;\n and powerful man, with one deadly fault: he      |         &lt;yellow&gt;+&lt;white&gt;         |")
cecho("&lt;white&gt;\n couldn't resist a bet. When others bet he        |                   |")
cecho("&lt;white&gt;\n wouldn't be able to win a million gold in one    |                   |")
cecho("&lt;white&gt;\n week, he took that bet, and gambled day and      |                   |")
cecho("&lt;white&gt;\n night in order to gather the amount. When he     |                   |")
cecho("&lt;white&gt;\n had only one gold sovereign to go, he            x-------------------x")
cecho("&lt;white&gt;\n collapsed, dying of thirst and hunger just as")
cecho("&lt;white&gt;\n the ball settled into his number, making him win the bet. He was")
cecho("&lt;white&gt;\n placed in the heavens as a warning, perhaps. It's said it's ill luck")
cecho("&lt;white&gt;\n to gamble while this constellation is prominent in the sky.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The last of the surviving constellations which belonged to the old")
cecho("&lt;white&gt;\n Mejevsavelnel, while under the effect of Izu-Ari you will feel your")
cecho("&lt;white&gt;\n constitution increased, but your intelligence diminished.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n                          === &lt;yellow&gt;The Gambler&lt;white&gt; ===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Izu-Ari was an amazing gambler. A rival once bet him that he couldn't")
cecho("&lt;white&gt;\n win one million gold sovereigns in a single day. Unable to resist, he")
cecho("&lt;white&gt;\n took to the tables. Night ended and daylight passed, and he played")
cecho("&lt;white&gt;\n without pause. He was but a lone sovereign short of the unprecedented")
cecho("&lt;white&gt;\n feat when hunger and thirst took their toll on him, and he breathed his")
cecho("&lt;white&gt;\n last strained breath. He fell out of his chair and died, just as the")
cecho("&lt;white&gt;\n roulette ball settled onto his number at the turning of the symbolic")
cecho("&lt;white&gt;\n hourglass.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Though it cannot be said whether it was out of amusement or sympathy,")
cecho("&lt;white&gt;\n the millionth sovereign of Izu-Ari's lucrative day was lifted into the")
cecho("&lt;white&gt;\n heavens to be forever commemorated.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star izu-ari$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Shenebre</name>
								<script>
cecho("&lt;white&gt;\n &lt;yellow&gt;SHENEBRE, the Beast")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation is visible as a group of      |                   |")
cecho("&lt;white&gt;\n five bright stars in a distorted pentagon,       |                   |")
cecho("&lt;white&gt;\n forming the hulking body of the Beast.           |        &lt;yellow&gt; +&lt;white&gt;         |")
cecho("&lt;white&gt;\n                                                  |  &lt;yellow&gt; +            &lt;white&gt;   |")
cecho("&lt;white&gt;\n The Crypt Beast, after plaguing the village of   |               &lt;yellow&gt; +&lt;white&gt;  |")
cecho("&lt;white&gt;\n Thera for innumerable years was finally freed,   |                   |")
cecho("&lt;white&gt;\n when the village was retaken and destroyed by    |                   |")
cecho("&lt;white&gt;\n the awakened trees of the Morgun Forest. The     |  &lt;cyan&gt;+        +   &lt;white&gt;    |")
cecho("&lt;white&gt;\n Gods took pity on the creature, which had lain   |                   |")
cecho("&lt;white&gt;\n in torment for such a long time, and allowed     x-------------------x")
cecho("&lt;white&gt;\n it passage into the heavens, where it could")
cecho("&lt;white&gt;\n rage in freedom, at last.")
cecho("\n")
cecho("&lt;white&gt;\n While Shenebre is prominent in the heavens, you will feel weaker but")
cecho("&lt;white&gt;\n more agile.")
cecho("&lt;white&gt;\n                           === &lt;yellow&gt;The Beast &lt;white&gt;===")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n Thera was a peaceful village, but in its crypt lurked a Beast of")
cecho("&lt;white&gt;\n insatiable appetite and unending torment. Tortured by hunger,")
cecho("&lt;white&gt;\n loneliness, and all the vices that can drive a creature to insanity, he")
cecho("&lt;white&gt;\n was without remorse or knowledge of his actions. He slew many innocents")
cecho("&lt;white&gt;\n in his pain, and though many brave souls drove him back to his lair,")
cecho("&lt;white&gt;\n never could the wounds they inflicted prevent him from further")
cecho("&lt;white&gt;\n destruction.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n When the Morgan Forest reclaimed Thera in its vines and roots, the")
cecho("&lt;white&gt;\n villagers fled for their lives. The Beast, however, remained, unable to")
cecho("&lt;white&gt;\n comprehend the transition his home was undergoing. The shrubs and bushes")
cecho("&lt;white&gt;\n attempted to rid their new home of the Beast, but his thick hide dulled")
cecho("&lt;white&gt;\n their attacks into mere annoyance. Bushes are not terribly intelligent")
cecho("&lt;white&gt;\n and, although they were making no progress, they continued to try and")
cecho("&lt;white&gt;\n defeat the Beast.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n For days, for weeks, the shrubs stabbed their thorns at him, preventing")
cecho("&lt;white&gt;\n his movement and driving him to rage. Under constant stabbing by tiny")
cecho("&lt;white&gt;\n thorns, tormented by hunger, his food source having fled to southern")
cecho("&lt;white&gt;\n villages, the Beast was a pitiable sight indeed. He seemed doomed to die")
cecho("&lt;white&gt;\n from slow starvation, all the while tortured by ignorant plants. His")
cecho("&lt;white&gt;\n bellowed moans of pain and anguish drifted over the valleys and")
cecho("&lt;white&gt;\n eventually reached the ears of Lord Haern.")
cecho("&lt;white&gt;\n")
cecho("&lt;white&gt;\n The Beast was indeed a creature of the Hunt, gifted by Lord Haern ages")
cecho("&lt;white&gt;\n ago in the ways of tooth and claw. To see His creation suffer so, to die")
cecho("&lt;white&gt;\n a death so ignoble, moved His heart. Though it was time for the Beast to")
cecho("&lt;white&gt;\n leave Thera, he could not be allowed to roam Sapience without the")
cecho("&lt;white&gt;\n confines of his crypt, now inaccessible. Lord Haern instead lifted His")
cecho("&lt;white&gt;\n creature up and allowed him to enter the night sky, where the Beast now")
cecho("&lt;white&gt;\n hunts eternally. As a final parting gift, the Beast was granted the name")
cecho("&lt;white&gt;\n Shenebre, to forever honor his grace and severity.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star shenebre$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Positive Stars</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Alitheia</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;ALITHEIA, &lt;white&gt;the Southern Sword")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Seen as a vertical line of three bright stars,   |    &lt;yellow&gt;*         *    &lt;white&gt;|")
cecho("&lt;white&gt;\n the topmost star itself the center of a short    |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n horizontal line of three stars, forming the      |                   |")
cecho("&lt;white&gt;\n outline of a sword, pointing eternally towards   |                   |")
cecho("&lt;white&gt;\n the city of Enorian.                             |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Legends speak of the great warrior priestess     |                   |")
cecho("&lt;white&gt;\n Alitheia, a servant Lanos, who was honoured in   |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n the heavens for her years of service to the      |                   |")
cecho("&lt;white&gt;\n God of Truth, by having her sword become a       x-------------------x")
cecho("&lt;white&gt;\n constellation destined to guide all towards")
cecho("&lt;white&gt;\n the City of Light.")
cecho("\n")
cecho("&lt;white&gt;\n This constellation will allow you to be less tired, by increasing your")
cecho("&lt;white&gt;\n reserves of endurance.")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Southern Sword&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n The warrior-priestess Alitheia was a devoted servant of Lord Lanos for")
cecho("&lt;white&gt;\n many years, counselling countless confused souls on the meaning and")
cecho("&lt;white&gt;\n importance of the myriad facets of Truth. So dedicated was she to her")
cecho("&lt;white&gt;\n cause that she was renowned for taking on any challenger, brandishing")
cecho("&lt;white&gt;\n her sword with a veracity matched only by her tenacious pursuit of")
cecho("&lt;white&gt;\n philosophy.")
cecho("\n")
cecho("&lt;white&gt;\n She fought with unrivaled honor, and when she spoke, there could be no")
cecho("&lt;white&gt;\n doubt of her wisdom. When Lord Lanos entered the Shadow Realm, Alitheia")
cecho("&lt;white&gt;\n prayed that the city of Shallam (now Enorian) might be protected from")
cecho("&lt;white&gt;\n those who might attack her or her knowledge of the Truth while Lord")
cecho("&lt;white&gt;\n Lanos was otherwise occupied.")
cecho("\n")
cecho("&lt;white&gt;\n Convinced His absence was a temporary, indeed short-lived, necessity,")
cecho("&lt;white&gt;\n Alitheia remained at His shrine in prayer for days and would not accept")
cecho("&lt;white&gt;\n food or water. When her worried Ordermates came to check on her")
cecho("&lt;white&gt;\n condition, however, she was gone; and in the night sky blazed her sword,")
cecho("&lt;white&gt;\n daring the night to try and obscure the brilliance of Enorian.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star alitheia$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Porannas</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;PORANNAS, &lt;white&gt;the Ankyrean Rebel or the Scales")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears as four stars in a diamond pattern,      |                   |")
cecho("&lt;white&gt;\n representing a set of scales, held in absolute   |                   |")
cecho("&lt;white&gt;\n balance.                                         |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n It is said Porannas was the name of an ancient   |  &lt;cyan&gt;+             +  &lt;white&gt;|")
cecho("&lt;white&gt;\n Ankyrean scholar, executed by his own people     |                   |")
cecho("&lt;white&gt;\n for preaching his belief that Ankyreans and      |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n rellyw alike, the common folks, should be        |                   |")
cecho("&lt;white&gt;\n treated as equals.                               |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Ankyrean Rebel&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n A young and idealistic Ankyrean, Porannas believed with all his heart")
cecho("&lt;white&gt;\n that the Ankyrean Order did not deserve to reign over the lesser")
cecho("&lt;white&gt;\n \"rellyw\" races. He spoke out against his brethren, and though they")
cecho("&lt;white&gt;\n imprisoned and soon thereafter executed him, his memory lived on in the")
cecho("&lt;white&gt;\n hearts of the rellyw and in the constellation that they named for him.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star porannas$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Melot</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;MELOT,&lt;white&gt; the Warrior or the Champion")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation can be seen as seven stars    |                   |")
cecho("&lt;white&gt;\n in an inverted T-shape, representing the form    |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n of Melot, standing victorious over her foes.     |                   |")
cecho("&lt;white&gt;\n                                                  |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n The tale of Melot speaks of an accomplished      |                   |")
cecho("&lt;white&gt;\n warrior, whom after defeating her hundredth foe  |         &lt;cyan&gt;+         &lt;white&gt;|")
cecho("&lt;white&gt;\n in battle, and as she lay dying, was raised by   |                   |")
cecho("&lt;white&gt;\n the God of Valor, Arion, to the heavens, as      |   &lt;cyan&gt;+   +   +   +   &lt;white&gt;|")
cecho("&lt;white&gt;\n tribute for her accomplishments.                 |                   |")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Champion&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Without equal in battle, the great warrior Melot constantly sought")
cecho("&lt;white&gt;\n challenges against which she could test herself. At last, she boasted")
cecho("&lt;white&gt;\n that she could fight one hundred men and women at once, and that all her")
cecho("&lt;white&gt;\n possessions would go to the survivors if they could best her. At the end")
cecho("&lt;white&gt;\n of the battle, Melot lay gravely wounded, but her foes all lay slain.")
cecho("&lt;white&gt;\n Out of respect for her strength, Arion raised the dying warrior into the")
cecho("&lt;white&gt;\n heavens.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star melot$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Ulgar</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;ULGAR, &lt;white&gt;the First Troll")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appears in the night sky as five pale,           |                   |")
cecho("&lt;white&gt;\n greenish stars in a wide swath, forming up the   |       &lt;MediumSpringGreen&gt;  .         &lt;white&gt;|")
cecho("&lt;white&gt;\n hulking form of Ulgar, the first troll.          |                   |")
cecho("&lt;white&gt;\n                                                  |     &lt;MediumSpringGreen&gt;.             &lt;white&gt;|")
cecho("&lt;white&gt;\n Formerly a wise and intelligent man tricked by   |             &lt;MediumSpringGreen&gt;.     &lt;white&gt;|")
cecho("&lt;white&gt;\n a corrupt Goddess into becoming a thoughtless    |    &lt;MediumSpringGreen&gt;.              &lt;white&gt;|")
cecho("&lt;white&gt;\n mountain of strength, it was when the God        |                   |")
cecho("&lt;white&gt;\n Arion restored enough of his mind that Ulgar     |            &lt;MediumSpringGreen&gt;.      &lt;white&gt;|")
cecho("&lt;white&gt;\n finally became the father of all Trolls. Now     |                   |")
cecho("&lt;white&gt;\n resting in the heavens, he will forever watch    x-------------------x")
cecho("&lt;white&gt;\n over his progeny from the sky.")
cecho("\n")
cecho("&lt;white&gt;\n While this constellation is high in the sky, all aetolians will feel")
cecho("&lt;white&gt;\n their overall health increased.")
cecho("\n")
cecho("&lt;white&gt;\n                     === &lt;green&gt;The First of the Trolls&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n When the Divine came together to form sentient life, there were many")
cecho("&lt;white&gt;\n experiments performed. There were the Tsol'aa, formed from the life that")
cecho("&lt;white&gt;\n grew upon the earth and gifted with its patience. There were the")
cecho("&lt;white&gt;\n Atavians, drawn from the essence of what we now call clouds. Corruption")
cecho("&lt;white&gt;\n too played its part, as the wisest of all mortals, Ulgar, was seduced")
cecho("&lt;white&gt;\n into foregoing his wisdom for strength. Thus was the first of the Trolls")
cecho("&lt;white&gt;\n created.")
cecho("\n")
cecho("&lt;white&gt;\n He was the pale green of spring soil, with loyalty unfaltering and")
cecho("&lt;white&gt;\n strength unstoppable. His many children would eventually be responsible")
cecho("&lt;white&gt;\n for the Trolls that populate the world today, and upon the day of his")
cecho("&lt;white&gt;\n death, they gathered to pray for his safe passage to the realms beyond.")
cecho("&lt;white&gt;\n He passed indeed, and they returned to their many homes in mourning.")
cecho("\n")
cecho("&lt;white&gt;\n They were relieved, however, to discover in the following evening that a")
cecho("&lt;white&gt;\n new formation in the stars had appeared - a constellation that filled")
cecho("&lt;white&gt;\n them, and fills their progeny still, with a sense of pride and security.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star ulgar$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Drobia</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;DROBIA, &lt;white&gt;the Gears")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation shows itself as fourteen      |                   |")
cecho("&lt;white&gt;\n stars, grouped into three rough circles          | &lt;cyan&gt; +  +       +  +  &lt;white&gt;|")
cecho("&lt;white&gt;\n touching one another, forming the shape of       |                   |")
cecho("&lt;white&gt;\n three turning gears.                             |&lt;cyan&gt;+      +   +      +&lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n Reputedly a trio of three massive gears,         |  &lt;cyan&gt;+  +       +  +  &lt;white&gt;|")
cecho("&lt;white&gt;\n crafted by the Kelki machinists of the closed    |                   |")
cecho("&lt;white&gt;\n underwater city of Kelsys, the gears of Drobia   |       &lt;cyan&gt;+   +       &lt;white&gt;|")
cecho("&lt;white&gt;\n are thought to be able to guide travellers       |                   |")
cecho("&lt;white&gt;\n unerringly towards Kelsys.                       x-------------------x")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;green&gt;The Gears&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Deep beneath the churning surface of the ocean, a civilization lay")
cecho("&lt;white&gt;\n hidden for countless years. Evolved from a medley of sea-creatures")
cecho("&lt;white&gt;\n through the experimentations of Lady Slyphe, the race that came to be")
cecho("&lt;white&gt;\n known as the Kelki built the city of Kelsys and guarded it, keeping it")
cecho("&lt;white&gt;\n safe and away from outsiders.")
cecho("\n")
cecho("&lt;white&gt;\n Tired of the stagnation and overcautiousness displayed by the city and")
cecho("&lt;white&gt;\n its inhabitants, the Goddess Slyphe decided to reveal the city, allowing")
cecho("&lt;white&gt;\n outsiders to intrude for better or for worse. As She did so, three of")
cecho("&lt;white&gt;\n the gears of the Kelki floated up to the night sky, gently coming to a")
cecho("&lt;white&gt;\n halt in their final resting place directly above the city far below.")
cecho("&lt;white&gt;\n Their heavenly forms continue to turn to this day, driven by some")
cecho("&lt;white&gt;\n unknown power, guiding any who wish to find the Hidden City.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star drobia$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Gulbedim</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;GULBEDIM,&lt;white&gt; the Hexer")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Can be viewed as eight dim stars, forming a      |       &lt;cyan&gt;+           &lt;white&gt;|")
cecho("&lt;white&gt;\n misshapen oval, and representing the scowling    |    &lt;cyan&gt;+              &lt;white&gt;|")
cecho("&lt;white&gt;\n countenance of Gulbedim.                         |            &lt;cyan&gt;+      &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n It is said the Gulbedim, a skilled user of       |    &lt;cyan&gt;+              &lt;white&gt;|")
cecho("&lt;white&gt;\n cantrips and spells, found no other purpose      |            &lt;cyan&gt;+      &lt;white&gt;|")
cecho("&lt;white&gt;\n for her skills than to cast hexes on those       |      &lt;cyan&gt;+            &lt;white&gt;|")
cecho("&lt;white&gt;\n poor unfortunates whom she believed had          |              &lt;cyan&gt;+    &lt;white&gt;|")
cecho("&lt;white&gt;\n somehow caused her harm. It was only when she    |          &lt;cyan&gt;+        &lt;white&gt;|")
cecho("&lt;white&gt;\n met someone more powerful then herself, that     x-------------------x")
cecho("&lt;white&gt;\n she was finally punished. A greater witch")
cecho("&lt;white&gt;\n after paralysing her, proceeded to fling her into the firmament, so")
cecho("&lt;white&gt;\n that for all time she would watch her \"enemies\" go unpunished.")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Paranoid&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Gulbedim was never very happy. As a young Grook, she resented her")
cecho("&lt;white&gt;\n parents for every wish they did not grant her, and finally she hopped")
cecho("&lt;white&gt;\n away to learn the ways of magic. She was taught by a great witch whose")
cecho("&lt;white&gt;\n name has been forgotten, and showed herself to be an eager pupil. In but")
cecho("&lt;white&gt;\n a few years, barely a scrap of an adult, she returned home to her")
cecho("&lt;white&gt;\n parents and took her full revenge upon them for their 'miserly")
cecho("&lt;white&gt;\n authoritarian ways'.")
cecho("\n")
cecho("&lt;white&gt;\n Her mentor had not taught her the ways of death and torture, but hexes")
cecho("&lt;white&gt;\n brought her joy - her parents were unable to speak or move their fingers")
cecho("&lt;white&gt;\n correctly, due to her passionate hex. They were the first victims of her")
cecho("&lt;white&gt;\n unfortunate paranoia - many people, animals, and even plants would")
cecho("&lt;white&gt;\n suffer under Gulbedim's magical talents, if she believed they were")
cecho("&lt;white&gt;\n trying to harm or discomfort her in any way.")
cecho("\n")
cecho("&lt;white&gt;\n Word of this magical brat eventually came back to her teacher and,")
cecho("&lt;white&gt;\n embarrassed at her own folly, this great witch went to her pupil. She")
cecho("&lt;white&gt;\n tried to explain rationally, tried to persuade, tried to coerce.")
cecho("&lt;white&gt;\n Finally, with a weary sigh, the witch saw there was no hope for")
cecho("&lt;white&gt;\n Gulbedim. The girl was filled with an irrational hatred and fear,")
cecho("&lt;white&gt;\n without source or reason. The teacher weaved a complex curse upon the")
cecho("&lt;white&gt;\n adolescent Grook, a hex that would preserve her life (perhaps")
cecho("&lt;white&gt;\n eternally), but only allow her to move after she had watched the last of")
cecho("&lt;white&gt;\n her hated enemies perish.")
cecho("\n")
cecho("&lt;white&gt;\n Perhaps it was Lady Khepri that interpreted this hex to mean that")
cecho("&lt;white&gt;\n Gulbedim should be lifted into the stars to watch all of Sapience until")
cecho("&lt;white&gt;\n the end comes, but there she waits. Some now think that the mentor")
cecho("&lt;white&gt;\n should have just fed the girl a bit of prickly ash.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star gulbedim$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Keyo &amp; Shiri</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;KEYO &amp; SHIRI,&lt;white&gt; the Lovers")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears in the night sky      |                   |")
cecho("&lt;white&gt;\n as a V-shaped form, with three stars forming     |   &lt;cyan&gt; +         +    &lt;white&gt;|")
cecho("&lt;white&gt;\n each side, representing the lovers' forever      |                   |")
cecho("&lt;white&gt;\n entwining hands.                                 |                   |")
cecho("&lt;white&gt;\n                                                  |    &lt;cyan&gt; +       +     &lt;white&gt;|")
cecho("&lt;white&gt;\n Legends speak of the true nature of the love     |                   |")
cecho("&lt;white&gt;\n Keyo and Shiri shared. So overwhelming, in       |                   |")
cecho("&lt;white&gt;\n fact, that not even the hatred their families    |       &lt;cyan&gt; + +        &lt;white&gt;|")
cecho("&lt;white&gt;\n and friends felt for each other was enough to    |                   |")
cecho("&lt;white&gt;\n keep them apart. As such a pure love could       x-------------------x")
cecho("&lt;white&gt;\n only be Divine in itself, their souls ascended")
cecho("&lt;white&gt;\n to the stars.")
cecho("\n")
cecho("&lt;white&gt;\n While this constellation remains prominent in the skies, you will feel")
cecho("&lt;white&gt;\n your willpower increased.")
cecho("\n")
cecho("&lt;white&gt;\n                            === &lt;green&gt;The Lovers&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n A young girl of Ashtan, Shiri would run around the city during her")
cecho("&lt;white&gt;\n childhood, as carefree as any little girl. One eventful morning, at the")
cecho("&lt;white&gt;\n gates of the city, she found a pile of rags discarded there. Upon")
cecho("&lt;white&gt;\n further inspection, she noticed that the rags were actually torn")
cecho("&lt;white&gt;\n clothes, worn by an unconscious boy who seemed to be close to her age.")
cecho("&lt;white&gt;\n She quickly ran home and alerted her father, whom she led back to the")
cecho("&lt;white&gt;\n boy.")
cecho("\n")
cecho("&lt;white&gt;\n The father carried the unconscious child home, and Shiri's mother nursed")
cecho("&lt;white&gt;\n him back to health. Shiri's father, meanwhile, was calling for a city")
cecho("&lt;white&gt;\n meeting to discuss the nature of the foundling. A woman named Erinkha,")
cecho("&lt;white&gt;\n well known for her compassion as well as her ability to lead, stood and")
cecho("&lt;white&gt;\n offered to take the boy into her charge. For reasons unknown, Shiri's")
cecho("&lt;white&gt;\n family was at odds with Erinkha and her kinsmen. But the rest of the")
cecho("&lt;white&gt;\n city agreed that it was a good decision, and the boy was handed over to")
cecho("&lt;white&gt;\n Erinkha and lived with her.")
cecho("\n")
cecho("&lt;white&gt;\n He had no memory of where he was from, nor could he glean any")
cecho("&lt;white&gt;\n information about himself. Erinkha named him Keyo. Keyo and Shiri grew")
cecho("&lt;white&gt;\n up together with other Ashtani children, and became close friends and")
cecho("&lt;white&gt;\n confidants. When Shiri started to mature, she was noticed by older boys,")
cecho("&lt;white&gt;\n who began to court her. Keyo, too, tried to court Shiri, and Shiri's")
cecho("&lt;white&gt;\n father was pleased when Shiri dismissed Keyo, assuming that he was only")
cecho("&lt;white&gt;\n joking. Crestfallen, Keyo went home, where Erinkha comforted him.")
cecho("\n")
cecho("&lt;white&gt;\n As time passed, they grew apart. Shiri became promiscuous, developing a")
cecho("&lt;white&gt;\n reputation that Keyo had heard about, one he pretended to ignore as he")
cecho("&lt;white&gt;\n found his own woman and settled with her. Circumstances with the")
cecho("&lt;white&gt;\n organizations they were involved in put Keyo and Shiri together on a lot")
cecho("&lt;white&gt;\n of projects, and their friendship was rekindled after several years.")
cecho("\n")
cecho("&lt;white&gt;\n Shiri's ephemeral relationships continued, much to Keyo's disgust and")
cecho("&lt;white&gt;\n dismay, but he supported his friend and whatever made her happy.")
cecho("&lt;white&gt;\n Finally, Shiri found a steady relationship and settled down. Concealing")
cecho("&lt;white&gt;\n his envy, Keyo expressed relief that she had given up her flirtatious")
cecho("&lt;white&gt;\n lifestyle. But it was then that he understood his true feelings for")
cecho("&lt;white&gt;\n Shiri.")
cecho("\n")
cecho("&lt;white&gt;\n And when her new man suddenly disappeared, it was Keyo that Shiri looked")
cecho("&lt;white&gt;\n to for comfort. When the man finally returned and utterly rejected")
cecho("&lt;white&gt;\n Shiri, which took everyone by surprise, Shiri fell apart. Keyo took it")
cecho("&lt;white&gt;\n upon himself to console her and constantly quell her thoughts of")
cecho("&lt;white&gt;\n suicide. Wiping away her tears, Keyo was taken by surprise when, upon a")
cecho("&lt;white&gt;\n whim, Shiri suddenly kissed him.")
cecho("\n")
cecho("&lt;white&gt;\n At once, he blurted out all his feelings for her. To his greater")
cecho("&lt;white&gt;\n surprise, she felt similarly. This time, when he courted her, she")
cecho("&lt;white&gt;\n accepted. News spread to their families, and both sides were equally")
cecho("&lt;white&gt;\n furious. Erinkha berated Keyo, and Shiri's family gave her vicious")
cecho("&lt;white&gt;\n stares and snide remarks. Their love became secretive, and they were")
cecho("&lt;white&gt;\n forced to have hidden liaisons. The bitterness between the families")
cecho("&lt;white&gt;\n escalated into a feud. If Keyo's family saw Shiri in the steet, or vice")
cecho("&lt;white&gt;\n versa, stones were thrown and insults shouted.")
cecho("\n")
cecho("&lt;white&gt;\n But still their relationship endured, and when Keyo had enough money,")
cecho("&lt;white&gt;\n the two of them were married, and even though only their close friends,")
cecho("&lt;white&gt;\n none of their relatives, attended the humble wedding, their families")
cecho("&lt;white&gt;\n slowly began to accept the choices their children made. Their mortal")
cecho("&lt;white&gt;\n hearts were swayed by the love between the Ashtani girl and foundling")
cecho("&lt;white&gt;\n boy. The Gods were so moved by this unbridled display of pure love,")
cecho("&lt;white&gt;\n emotion that not even the greatest of adversity could stifle, that they")
cecho("&lt;white&gt;\n lifted Keyo and Shiri into the starry heavens so that their love could")
cecho("&lt;white&gt;\n live on eternally.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star keyo &amp; shiri$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Elindes</name>
								<script>
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Radiant Flower&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Pleased by her years of devotion to the studies of the heavens, Lady")
cecho("&lt;white&gt;\n Slyphe wished to grant the beautiful astrologer, Elenina, a gift. Not")
cecho("&lt;white&gt;\n satisfied with the usual boon or favor, She pondered idea after idea,")
cecho("&lt;white&gt;\n searching for the perfect one.")
cecho("\n")
cecho("&lt;white&gt;\n Finally, Her attention was drawn to the silver pendant worn around")
cecho("&lt;white&gt;\n Elenina's neck at all times, depicting a flower with six petals. Through")
cecho("&lt;white&gt;\n Her Divine will, the flower of metal was transformed into the")
cecho("&lt;white&gt;\n constellation Elindes, and placed gently in the sky to serve as a")
cecho("&lt;white&gt;\n reminder to all of the dedication of the Kalebb astrologer.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star elindes$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Eja Kodosa</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;EJA KODOSA,&lt;white&gt; the Tome of Ages")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n This constellation appears as six stars in       |                   |")
cecho("&lt;white&gt;\n three vertically-aligned pairs, the center       |   &lt;cyan&gt;+           +   &lt;white&gt;|")
cecho("&lt;white&gt;\n pair lower than the others, forming the shape    |   &lt;cyan&gt;      +         &lt;white&gt;|")
cecho("&lt;white&gt;\n of an open book.                                 |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n From the oldest legends, we learn of a           |   &lt;cyan&gt;+           +   &lt;white&gt;|")
cecho("&lt;white&gt;\n mysterious tome, where Varian, the Creator of    |   &lt;cyan&gt;      +         &lt;white&gt;|")
cecho("&lt;white&gt;\n All is said to record every detail of His        |                   |")
cecho("&lt;white&gt;\n creation, past, present and future. This         |                   |")
cecho("&lt;white&gt;\n mighty tome is reportedly crafted from His       x-------------------x")
cecho("&lt;white&gt;\n very essence, and was known to those of the")
cecho("&lt;white&gt;\n First Mortal Epoch as Eja Kodosa.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star eja kodosa$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Averroes</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;AVERROES,&lt;white&gt; the Wise")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Visible as a collection of twelve stars          |&lt;cyan&gt;            +      &lt;white&gt;|")
cecho("&lt;white&gt;\n arranged in outward spirals, representing the    | &lt;cyan&gt;   +              &lt;white&gt;|")
cecho("&lt;white&gt;\n endless wisdom of Averroes, the Wise, as it      |&lt;cyan&gt;         +     +   &lt;white&gt;|")
cecho("&lt;white&gt;\n spreads outwards to all.                         | &lt;cyan&gt;     +    +       &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |          &lt;yellow&gt;*        &lt;white&gt;|")
cecho("&lt;white&gt;\n For many years residing in the city of Enorian,  |&lt;cyan&gt; +     +       +   &lt;white&gt;|")
cecho("&lt;white&gt;\n Averroes, the Prophet was known as a kind,       |      &lt;cyan&gt;     +       &lt;white&gt;|")
cecho("&lt;white&gt;\n knowledgeable soul who spent his lifetime        |                   |")
cecho("&lt;white&gt;\n spreading his seemingly endless knowledge to     |   &lt;cyan&gt;   +            &lt;white&gt;|")
cecho("&lt;white&gt;\n generations of aetolians, so earning the right   x-------------------x")
cecho("&lt;white&gt;\n to grace the heavens.")
cecho("\n")
cecho("&lt;white&gt;\n While affected by this constellation, you'll feel more able to cast")
cecho("&lt;white&gt;\n spells, by having your mana reserves increased.")
cecho("\n")
cecho("&lt;white&gt;\n                             === &lt;green&gt;The Wise&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n Residing in the city then known as Shallam for as long as anyone can")
cecho("&lt;white&gt;\n remember, the prophet Averroes lived a relatively quiet life, always")
cecho("&lt;white&gt;\n with his doors open wide to the public. Serving as a teacher to novices")
cecho("&lt;white&gt;\n and veterans alike, he never turned anyone away who sought his")
cecho("&lt;white&gt;\n knowledge, which he was more than happy to share.")
cecho("\n")
cecho("&lt;white&gt;\n Loved by the people, who constantly brought him the seashells he so")
cecho("&lt;white&gt;\n adored, Averroes led an interesting and pleasant existence. When the")
cecho("&lt;white&gt;\n darkness came and Amairgen had Averroes poisoned, the prayers of the")
cecho("&lt;white&gt;\n people of Enorian lifted the sage's soul into the heavens to be forever")
cecho("&lt;white&gt;\n immortalized.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star averroes$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Loskiou</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;LOSKIOU,&lt;white&gt; the Giver or the Selfless")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Seen as a single bright star of simple, pure     |                   |")
cecho("&lt;white&gt;\n white hue, representing the soul of Loskiou,     |                   |")
cecho("&lt;white&gt;\n shining selflessly over all mortals.             |                   |")
cecho("&lt;white&gt;\n                                                  |                   |")
cecho("&lt;white&gt;\n All the days of her life, Loskiou would show     |         &lt;white&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n her generosity by giving a gift to all,          |                   |")
cecho("&lt;white&gt;\n stranger and friend alike. When the time came    |                   |")
cecho("&lt;white&gt;\n for her to die, the Underking offered to give    |                   |")
cecho("&lt;white&gt;\n her a gift of her own. When she answered all     |                   |")
cecho("&lt;white&gt;\n she wanted was to still be able to offer         x-------------------x")
cecho("&lt;white&gt;\n something to everyone, even in death, the")
cecho("&lt;white&gt;\n Underking elevated her to the heavens, where she's now able to shine")
cecho("&lt;white&gt;\n down and give light to all who need her.")
cecho("\n")
cecho("&lt;white&gt;\n                           === &lt;green&gt;The Selfless&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n In some parts of Sapience, it is believed that our actions in this life")
cecho("&lt;white&gt;\n determine the Underking's pronouncement upon us after we have passed")
cecho("&lt;white&gt;\n away. Imagine then, a simple Mhun woman by the name of Loskiou, who")
cecho("&lt;white&gt;\n lived each day with the goal of improving others' lives, even by the")
cecho("&lt;white&gt;\n tiniest bit.")
cecho("\n")
cecho("&lt;white&gt;\n She set herself the task of giving a gift to someone, anyone, before the")
cecho("&lt;white&gt;\n sun set each day. Furthermore, she decided that each gift must be needed")
cecho("&lt;white&gt;\n by the person to whom she gave it, and so much of her days were filled")
cecho("&lt;white&gt;\n with divining the needs of others and (of course) meeting them, even by")
cecho("&lt;white&gt;\n the tiniest margin.")
cecho("\n")
cecho("&lt;white&gt;\n It is perhaps miraculous that we remember her name today, as she was")
cecho("&lt;white&gt;\n never particularly well known for her deeds. She died at an old age,")
cecho("&lt;white&gt;\n happy but unrecognized. When she appeared before the Underking, He was")
cecho("&lt;white&gt;\n surprised. Small kindnesses, given in sincerity, had forged her soul")
cecho("&lt;white&gt;\n into something new, something more deserving of reward than He had seen.")
cecho("\n")
cecho("&lt;white&gt;\n And so, though she could not speak selfishly, He granted her the wish")
cecho("&lt;white&gt;\n she would not put to words. She achieved her heart's desire and was")
cecho("&lt;white&gt;\n allowed to give even in death, as the Underking raised her spirit to")
cecho("&lt;white&gt;\n give light to the entire world.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star loskiou$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Azimel</name>
								<script>
cecho("&lt;white&gt;\n &lt;green&gt;AZIMEL,&lt;white&gt; the Storm Shepherd")
cecho("&lt;white&gt;\n                                                  x-------------------x")
cecho("&lt;white&gt;\n Appearing in the night skies as eleven stars     |                   |")
cecho("&lt;white&gt;\n in the shape of a two-pronged fork, three        |      &lt;yellow&gt;*     *      &lt;white&gt;|")
cecho("&lt;white&gt;\n stars on each prong and five on the central      |      &lt;cyan&gt;+     +      &lt;white&gt;|")
cecho("&lt;white&gt;\n stem, with the central and the tips on each      |       &lt;cyan&gt;+   +       &lt;white&gt;|")
cecho("&lt;white&gt;\n prong the brightest, representing Azimel's       |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n two-pronged fork.                                |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n                                                  |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n Legend says that Azimel, an atavian scholar      |         &lt;yellow&gt;*         &lt;white&gt;|")
cecho("&lt;white&gt;\n of some renown, grew tired of the unreliable     |        &lt;yellow&gt;*          &lt;white&gt;|")
cecho("&lt;white&gt;\n nature of the weather while flying, and so       x-------------------x")
cecho("&lt;white&gt;\n crafted a magnificent instrument, with the")
cecho("&lt;white&gt;\n appearance of a two-pronged fork, with which he was able to divert the")
cecho("&lt;white&gt;\n clouds themselves and so control the path of storms.")
cecho("\n")
cecho("&lt;white&gt;\n                        === &lt;green&gt;The Storm Shepherd&lt;white&gt; ===")
cecho("\n")
cecho("&lt;white&gt;\n In the valley where they await the fulfillment of the prophecies of")
cecho("&lt;white&gt;\n Kalebb, there once lived not an astronomer but a simple Atavian of")
cecho("&lt;white&gt;\n brilliant intelligence but short patience. He came to the Valley on a")
cecho("&lt;white&gt;\n beautiful day in Chakros, looking for a place to fly freely. He")
cecho("&lt;white&gt;\n instantly adored the grassy Putoran hills and built his house such that")
cecho("&lt;white&gt;\n he could easily fly out and watch the youth of the valley cavort in")
cecho("&lt;white&gt;\n play.")
cecho("\n")
cecho("&lt;white&gt;\n Just a few months later, however, just as he was getting settled into")
cecho("&lt;white&gt;\n his new abode, the storms began. In those days, fall and winter in the")
cecho("&lt;white&gt;\n Putoran hills were terribly stormy times - for months, you could not see")
cecho("&lt;white&gt;\n the sky because of the thick clouds and constantly falling snows and")
cecho("&lt;white&gt;\n rains. This irritated Azimel greatly, and as he was unwilling to move")
cecho("&lt;white&gt;\n his house or live half the year indoors, he began inventing.")
cecho("\n")
cecho("&lt;white&gt;\n He read a great many Ankyrean books about weather patterns and prayed")
cecho("&lt;white&gt;\n not infrequently to the Sky Sovereign. What and how exactly he built it")
cecho("&lt;white&gt;\n we cannot now know, but it was called the Fork of Azimel and with it, he")
cecho("&lt;white&gt;\n diverted storms from his beloved valley. The fork now rests in the")
cecho("&lt;white&gt;\n firmament, as perhaps it always did, guiding the storm clouds away from")
cecho("&lt;white&gt;\n the playgrounds of the Kalebb youth and bearing its creator's name.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star azimel$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Negative Stars</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Aidien</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;AIDIEN, &lt;white&gt;the Fishtail or the Drowner")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as five stars in an X-shape, one side-pair  |                   |")
 cecho("\n&lt;white&gt; closer together than the other, representing a   |      &lt;cyan&gt;+     +      &lt;white&gt;|")
 cecho("\n&lt;white&gt; fish's tail.                                     |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt; Legends say Aidien was so entranced by having    |                   |")
 cecho("\n&lt;white&gt; seen a mermaid, that he pursued her into the     |         &lt;cyan&gt;+         &lt;white&gt;|")
 cecho("\n&lt;white&gt; deep ocean, swimming ever deeper after her       |                   |")
 cecho("\n&lt;white&gt; elusive figure. As his strength abandoned him,   |       &lt;cyan&gt;+   +       &lt;white&gt;|")
 cecho("\n&lt;white&gt; and he began to drown, his last sight was her    |                   |")
 cecho("\n&lt;white&gt; fading fish's tail, transforming his drowned     x-------------------x")
 cecho("\n&lt;white&gt; body into something much stranger.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; While under the effect of this constellation, you will feel much less")
 cecho("\n&lt;white&gt; healthier.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                           === &lt;red&gt;The Drowner&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Living most of his life in a small cabin on the edge of Enorian, a young")
 cecho("\n&lt;white&gt; peasant named Aidien would wander by the seaside, collecting shells and")
 cecho("\n&lt;white&gt; various oddities along the beach as he reflected on the meetings and")
 cecho("\n&lt;white&gt; decisions of his life. As fate would have it, one day beside the sea a")
 cecho("\n&lt;white&gt; siren mermaid found her way up through the depths and saw him there,")
 cecho("\n&lt;white&gt; drawn momentarily by his chiseled looks.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At this moment, perchance, Aidien turned his face to the surf, only to")
 cecho("\n&lt;white&gt; see an elusive beauty rising up from the crashing waves. Stumbling")
 cecho("\n&lt;white&gt; almost blindly toward her, Aiden called out to her softly, drawing")
 cecho("\n&lt;white&gt; himself though the water. Though she dove beneath the water, she did not")
 cecho("\n&lt;white&gt; break the spell, and Aidien plunged beneath the surface after her,")
 cecho("\n&lt;white&gt; vainly pawing his way down deep in the water.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; But all was for naught, for the radiant mermaid was disappearing in the")
 cecho("\n&lt;white&gt; depths, and Aidien was out of breath. A last fleeting glimmer of her")
 cecho("\n&lt;white&gt; tail slicing through the water was burned into his mind as his life")
 cecho("\n&lt;white&gt; slipped away, and in death that is what his body became as the waves")
 cecho("\n&lt;white&gt; reflected it into the skies.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star aidien$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Scipter</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt; SCIPTER, &lt;white&gt;the Green Reaper")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be seen as five stars in a diagonal line,    |           &lt;green&gt; *      &lt;white&gt;|")
 cecho("\n&lt;white&gt; with three more in a curved arc extending out    |                   |")
 cecho("\n&lt;white&gt; from one end of the line, the last one glowing   |                &lt;cyan&gt;+  &lt;white&gt;|")
 cecho("\n&lt;white&gt; green, representing the scythe of Scipter, the   |                   |")
 cecho("\n&lt;white&gt; Green Reaper.                                    |       &lt;cyan&gt; +   +      &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |&lt;cyan&gt;      +            &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends claim Scipter was once a Druid, who      |&lt;cyan&gt;    +              &lt;white&gt;|")
 cecho("\n&lt;white&gt; eventually abandoned their ways and took it      |&lt;cyan&gt;  +                &lt;white&gt;|")
 cecho("\n&lt;white&gt; upon himself to gather hundreds of people        |&lt;cyan&gt;+                  &lt;white&gt;|")
 cecho("\n&lt;white&gt; around him, to clear the northern reaches of     x-------------------x")
 cecho("\n&lt;white&gt; the Morgun Forest of their forestal life, to")
 cecho("\n&lt;white&gt; found the village of Thera in its place.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                         === &lt;red&gt;The Green Reaper&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; A desperate group of travelers approached the shady-looking man that")
 cecho("\n&lt;white&gt; lingered beneath the boughs. Or rather, he waited for them to approach.")
 cecho("\n&lt;white&gt; He had waited years, priming his contacts and leaving word in the")
 cecho("\n&lt;white&gt; appropriate villages with their dissatisfied minorities. Sharpening his")
 cecho("\n&lt;white&gt; scythe. He was known as the Green Reaper, a rogue that was once a Druid")
 cecho("\n&lt;white&gt; and yet retained some small affinity with nature, which he used")
 cecho("\n&lt;white&gt; exclusively for its destruction.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This raggedy band was the first of the silent exodus that had begun")
 cecho("\n&lt;white&gt; throughout Aetolia - his carefully orchestrated plan had begun. Without")
 cecho("\n&lt;white&gt; fuss, without fanfare or notice of the general populace, hundreds")
 cecho("\n&lt;white&gt; gathered over the span of a few nights. A few rebellious youths from")
 cecho("\n&lt;white&gt; this town, a handful of bitter minorities from over yonder, etcetera.")
 cecho("\n&lt;white&gt; They camped with Scipter, and listened to his wisdom, for they had been")
 cecho("\n&lt;white&gt; led by his carefully sown hints and trails left throughout the")
 cecho("\n&lt;white&gt; continent. He spoke of evils housed within man-eating plants, of their")
 cecho("\n&lt;white&gt; necessary destruction, of a place of peace and nurtured quiet.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They approached the Morgun, as it was called then, as an enormous mob in")
 cecho("\n&lt;white&gt; the dark of midnight. Into the trees, Scipter vanished. The mob waited,")
 cecho("\n&lt;white&gt; but as Scipter did not re-appear, they muttered amongst themselves. The")
 cecho("\n&lt;white&gt; Morgun rustled hungrily, and the villagers cried out, believing")
 cecho("\n&lt;white&gt; themselves betrayed. Yet before their shouts of dismay could fully rise")
 cecho("\n&lt;white&gt; from their throats, the singing of a blade rang from the trees. A")
 cecho("\n&lt;white&gt; raspberry branch fell, lifeless, to their feet. Scipter had seduced the")
 cecho("\n&lt;white&gt; Morgun shrubberies, and for a few moments, they lay still, as if basking")
 cecho("\n&lt;white&gt; in the moonlight.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The villagers rushed in, with what weapons they had gathered, and hacked")
 cecho("\n&lt;white&gt; as best they could. Of course, the Morgun woke from its trance and many")
 cecho("\n&lt;white&gt; lives were lost that night, but soon enough, the spirit of the hungry")
 cecho("\n&lt;white&gt; forest had (temporarily) been tamed. To forever glorify the \"struggle")
 cecho("\n&lt;white&gt; against evil\" and further justify their slaughter, the Therans (as they")
 cecho("\n&lt;white&gt; would come to be called) re-named the Morgun to the Black Forest.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Scipter lived the rest of his days in Thera as the mayor, though he")
 cecho("\n&lt;white&gt; spent a great deal of their budget unnecessarily \"pruning\" the so-called")
 cecho("\n&lt;white&gt; Black Forest. After the night of Thera's founding, however, his scythe")
 cecho("\n&lt;white&gt; was lost, and with it, the title of Green Reaper. It is this scythe that")
 cecho("\n&lt;white&gt; now carves through the skies, perhaps embittered by the return of the")
 cecho("\n&lt;white&gt; Morgun.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star scipter$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Agorra</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;AGORRA, &lt;white&gt;the Marketplace")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation appears as eight stars in     |                   |")
 cecho("\n&lt;white&gt; an upside-down \"U\" shape, forming a great        |       &lt;cyan&gt;+&lt;white&gt;   &lt;cyan&gt;+&lt;white&gt;       |")
 cecho("\n&lt;white&gt; archway of stars, which would lead to a          |     &lt;cyan&gt;+&lt;white&gt;       &lt;cyan&gt;+&lt;white&gt;     |")
 cecho("\n&lt;white&gt; legendary marketplace.                           |                   |")
 cecho("\n&lt;white&gt;                                                  |    &lt;cyan&gt;+&lt;white&gt;         &lt;cyan&gt;+&lt;white&gt;    |")
 cecho("\n&lt;white&gt; Ancient tales speak of a great contest of the    |                   |")
 cecho("\n&lt;white&gt; Gods, which happened long ago, while the world   |                   |")
 cecho("\n&lt;white&gt; was still young. It's said the Gods wished to    |    &lt;cyan&gt;+&lt;white&gt;         &lt;cyan&gt;+&lt;white&gt;    |")
 cecho("\n&lt;white&gt; know who among Them could build the best         |                   |")
 cecho("\n&lt;white&gt; dwelling place for the life They had created,    x-------------------x")
 cecho("\n&lt;white&gt; and so the largest cities in the world were")
 cecho("\n&lt;white&gt; crafted in those times.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Severn, the Artificer, also joined that contest, and created the city")
 cecho("\n&lt;white&gt; of Hashan, and in it, a grand marketplace, which He proudly named")
 cecho("\n&lt;white&gt; Agorra. However, when He lost the contest to Haern's forests, which")
 cecho("\n&lt;white&gt; were considered the most beautiful creation, and also a home to all")
 cecho("\n&lt;white&gt; the wild creatures the Hunter favored, Severn strode in anger towards")
 cecho("\n&lt;white&gt; Hashan and destroyed it, stone by stone, and the great market of")
 cecho("\n&lt;white&gt; Agorra along with it.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                         ===&lt;red&gt; The Marketplace&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; There are many stories of Hashan's destruction. Perhaps all of them are")
 cecho("\n&lt;white&gt; true, but this is one. When a God dreams, it is a grand thing indeed.")
 cecho("\n&lt;white&gt; The Lord of Artifice conceived of the grandest marketplace ever seen by")
 cecho("\n&lt;white&gt; mortal eye - for aeons it would stretch, beginning in Hashan. It would")
 cecho("\n&lt;white&gt; be filled with fruits that drip juices of youth, glittering jewels")
 cecho("\n&lt;white&gt; plucked from children's laughter, and cloths from isles that would not")
 cecho("\n&lt;white&gt; exist for a thousand Ages hence. Concubines without guilt, winged")
 cecho("\n&lt;white&gt; horrors to call your own, and even your own soul; all would be for sale,")
 cecho("\n&lt;white&gt; and it would be a grand thing indeed.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He dreamed, and He schemed, and He named this place Agorra. But the")
 cecho("\n&lt;white&gt; Celestine determined that there would be a contest in the Garden, and")
 cecho("\n&lt;white&gt; the Lord of Artifice chuckled. He would win the contest, as He always")
 cecho("\n&lt;white&gt; did, and so He tried half-heartedly. Even half of a heart Divine is")
 cecho("\n&lt;white&gt; heart enough for thousands, but Severn was obsessed with Agorra. When He")
 cecho("\n&lt;white&gt; looked up from the beginnings of His precious marketplace, Severn found")
 cecho("\n&lt;white&gt; that He had lost.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The honor deserved had been taken from Him, for Haern was victorious.")
 cecho("\n&lt;white&gt; The Lord of the Hunt and all His forests had a great roaring laugh at")
 cecho("\n&lt;white&gt; that one, and even the butterflies smirked, self-satisfied. The God of")
 cecho("\n&lt;white&gt; Artifice was enraged. The souls of the Ankyri whimper of His schemes,")
 cecho("\n&lt;white&gt; and surely that is His talent. Yet His wrath was something else entirely")
 cecho("\n&lt;white&gt; - in His self-loathing at having lost to His rival, Severn destroyed not")
 cecho("\n&lt;white&gt; only Agorra's beginnings and Hashan, but its future.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He could not bring Himself to destroy His beloved creation completely,")
 cecho("\n&lt;white&gt; but sent it from Himself as one would an undeserved lover. He plucked")
 cecho("\n&lt;white&gt; Agorra from its seat then, now, and forever, and gently blew it into the")
 cecho("\n&lt;white&gt; stars, where it remains for us to marvel at our loss.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star agorra$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Svastusel</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;SVASTUSEL, &lt;white&gt;the Mute")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be seen as three stars, contained within a   |                   |")
 cecho("\n&lt;white&gt; larger oval of four, forming Svastusel's         |                   |")
 cecho("\n&lt;white&gt; silent visage.                                   |    &lt;cyan&gt;+         +    &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;yellow&gt;  *   *       &lt;white&gt;|")
 cecho("\n&lt;white&gt; It is said Svastusel, while born unable to       |                   |")
 cecho("\n&lt;white&gt; utter a single word, was capable of crafting     |  &lt;cyan&gt; +           +   &lt;white&gt;|")
 cecho("\n&lt;white&gt; the most beautiful poems, amazing plays, and     |    &lt;yellow&gt;     *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; soothing angry mobs with nothing but a look.     |                   |")
 cecho("\n&lt;white&gt; Having spent his whole life as an accomplished   |                   |")
 cecho("\n&lt;white&gt; diplomat and artist, at the moment of his        x-------------------x")
 cecho("\n&lt;white&gt; death the Goddess Iosyne rewarded him by")
 cecho("\n&lt;white&gt; elevating him to the firmament, so that his genius would not be lost.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; When this constellation is prominent in the night sky, you will feel")
 cecho("\n&lt;white&gt; your endurance slightly diminished.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                             === &lt;red&gt;The Mute&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; When a woman is diseased during pregnancy, many things may happen to the")
 cecho("\n&lt;white&gt; child within, even if it survives. Svastusel was lucky to have merely")
 cecho("\n&lt;white&gt; his voice stripped from him, when one thinks of the alternatives. Even")
 cecho("\n&lt;white&gt; as a small child, Svastusel understood this and rather than pity")
 cecho("\n&lt;white&gt; himself, he took to what arts he could.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Though he could not sing, he wrote. Though his arguments logical and")
 cecho("\n&lt;white&gt; sound could not be heard, they could be read. As he grew, he learned to")
 cecho("\n&lt;white&gt; understand his silence as a blessing. In expressing himself in writing,")
 cecho("\n&lt;white&gt; he was afforded more time to re-think his statements, more allowance in")
 cecho("\n&lt;white&gt; proofreading his artistry. He pitied those who had to speak, for what is")
 cecho("\n&lt;white&gt; spoken can never be undone in the way a letter can be burned.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In time Svastusel became known as a trustworthy diplomat and his")
 cecho("\n&lt;white&gt; personal poetry was sought after by the ladies and gentlemen of")
 cecho("\n&lt;white&gt; refinement and style. Where there is talent, however, there is danger.")
 cecho("\n&lt;white&gt; It is said by some that Svastusel wrote a beautiful play of a spurned")
 cecho("\n&lt;white&gt; lover that offended a Sultan, who then set a bounty on the playwright.")
 cecho("\n&lt;white&gt; It is held by others that Svastusel's diplomacy could not save him from")
 cecho("\n&lt;white&gt; the many assassins in noble employ. However it came about, as the knife")
 cecho("\n&lt;white&gt; slid into his back, Svastusel prayed, for he could not scream. Lady")
 cecho("\n&lt;white&gt; Iosyne came to his aid and with Her help, rather than death the artist")
 cecho("\n&lt;white&gt; found a place among the stars.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star svastusel$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Mocirn</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;MOCIRN, &lt;white&gt;the River")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation appears as six blue-toned     |                   |")
 cecho("\n&lt;white&gt; stars, outlining a long rectangle with two       |             &lt;blue&gt;.     &lt;white&gt;|")
 cecho("\n&lt;white&gt; yellowish stars within it, representing the      |                   |")
 cecho("\n&lt;white&gt; river Mocirn, sparkling with gold.               |           &lt;yellow&gt;*    &lt;blue&gt;.  &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;blue&gt;.      .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say the river Mocirn was once the        | &lt;blue&gt;.     &lt;yellow&gt;*           &lt;white&gt;|")
 cecho("\n&lt;white&gt; border that divided two warring tribes, each     |                   |")
 cecho("\n&lt;white&gt; fighting the other the gold which could be       |    &lt;blue&gt;.              &lt;white&gt;|")
 cecho("\n&lt;white&gt; found in the river's depths. It was only after   |                   |")
 cecho("\n&lt;white&gt; a shaman asked the river spirits to take the     x-------------------x")
 cecho("\n&lt;white&gt; water along a new path, that the two tribes")
 cecho("\n&lt;white&gt; finally found peace.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The River&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In the old days, the Mitrine were a nomadic people of many tribes and")
 cecho("\n&lt;white&gt; beliefs. Sometimes they were allies and sometimes they clashed, for")
 cecho("\n&lt;white&gt; reasons noble or petty. One such conflict arose when two tribes")
 cecho("\n&lt;white&gt; discovered gold in a riverbed near their tents. Perhaps one had a better")
 cecho("\n&lt;white&gt; claim to ownership than the other, or perhaps they each discovered the")
 cecho("\n&lt;white&gt; gold simultaneously and independently.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This was the start of the Long War, when all Mitrine tribes became")
 cecho("\n&lt;white&gt; embroiled in this claim to wealth and power. Both sides took heavy")
 cecho("\n&lt;white&gt; casualties for many years, and loud was the weeping of the Mitrine")
 cecho("\n&lt;white&gt; children. Finally, a shaman from one of the sides took it upon himself")
 cecho("\n&lt;white&gt; to approach the river spirits. He waded into the stream, now stained and")
 cecho("\n&lt;white&gt; choked with the bodies of fallen warriors, and pleaded that they might")
 cecho("\n&lt;white&gt; take the river far away. The shaman asked the river, as a favor, to go")
 cecho("\n&lt;white&gt; elsewhere and leave them in peace. And so it did.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star mocirn$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Tharabar &amp; Shenna</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;THARABAR and SHENNA, &lt;white&gt;the Noble Protectors")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation can be seen as two very       |                   |")
 cecho("\n&lt;white&gt; close stars, surrounded by several smaller,      |                   |")
 cecho("\n&lt;white&gt; darker ones, representing two bright souls       |       &lt;blue&gt;.  .        &lt;white&gt;|")
 cecho("\n&lt;white&gt; guarding the weaker ones surrounding them.       |    &lt;blue&gt;.        .     &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |   &lt;blue&gt;.   &lt;yellow&gt;* *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; It is said Tharabar and Shenna were two          |     &lt;blue&gt;       .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; exemplary paladins, who eventually gave their    |     &lt;blue&gt;.   .         &lt;white&gt;|")
 cecho("\n&lt;white&gt; own lives in protection of the innocent.         |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                      === &lt;red&gt;The Noble Protectors&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Although they lived long before Syvelium, Tharabar and Shenna were two")
 cecho("\n&lt;white&gt; very valorous and good-hearted warriors, and also a couple united in")
 cecho("\n&lt;white&gt; love. They made their living by guarding caravans and small groups of")
 cecho("\n&lt;white&gt; travellers, protecting them from the evil that roamed their land, always")
 cecho("\n&lt;white&gt; asking only for sustenance as their payment.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They were two of the first that lived the lives of the true Paladin,")
 cecho("\n&lt;white&gt; though this name was yet unknown: chivalrous, honorable, and loyal,")
 cecho("\n&lt;white&gt; always serving the good and protecting the innocent. They died in an")
 cecho("\n&lt;white&gt; assault by orcs upon a monastery that offered shelter to the travelers,")
 cecho("\n&lt;white&gt; but through their enormous effort, the orcs were driven back, and the")
 cecho("\n&lt;white&gt; monks and their proteges in the monastery survived.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; It is said that when their bodies were found, surrounded by dozens of")
 cecho("\n&lt;white&gt; their enemies, they were lying with smiles upon their faces, holding")
 cecho("\n&lt;white&gt; hands. They were buried side by side in the gardens of the monastery,")
 cecho("\n&lt;white&gt; and a stone was planted on their grave, telling the story of their")
 cecho("\n&lt;white&gt; valorous lives and love. The monks came to their resting place each dusk")
 cecho("\n&lt;white&gt; to sing about their efforts and to praise their deeds to all who would")
 cecho("\n&lt;white&gt; listen.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; One night, an ominous glow appeared above the stone. Suddenly, two")
 cecho("\n&lt;white&gt; brilliant balls of light arose from the graves up to the skies, and thus")
 cecho("\n&lt;white&gt; they formed their constellation, as if they were protecting the smaller")
 cecho("\n&lt;white&gt; and darker stars from anything that might threaten them - or, some say,")
 cecho("\n&lt;white&gt; as if they lay once again amidst the bodies of their foes.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star tharabar &amp; shenna$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Peripleko</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;PERIPLEKO, &lt;white&gt;the Pride of the Lost or the Navigator")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Appears as a triangle of brightly glowing        |                   |")
 cecho("\n&lt;white&gt; stars, shining as an arrow, which points         |         &lt;yellow&gt;*         &lt;white&gt;|")
 cecho("\n&lt;white&gt; eternally towards the north.                     |                   |")
 cecho("\n&lt;white&gt;                                                  |      &lt;yellow&gt; *   *       &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say Peripleko was a great navigator,     |                   |")
 cecho("\n&lt;white&gt; at a time the world was still largely            |     &lt;yellow&gt;*       *     &lt;white&gt;|")
 cecho("\n&lt;white&gt; uncharted. He sought after fame by exploring     |        &lt;yellow&gt; *         &lt;white&gt;|")
 cecho("\n&lt;white&gt; all known lands, and then bringing his           |                   |")
 cecho("\n&lt;white&gt; findings home.                                   |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; There came a time, however, when his")
 cecho("\n&lt;white&gt; explorations proved a bit too perilous. While in the middle of a")
 cecho("\n&lt;white&gt; snowstorm, he became lost, and eventually after climbing for hours,")
 cecho("\n&lt;white&gt; came upon an unknown place to him, the fabled Garden of the Gods.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Finding a hooded figure inside, he asked for passage so that he could")
 cecho("\n&lt;white&gt; chart one more land for his books. His pride wouldn't allow him to")
 cecho("\n&lt;white&gt; admit he was lost, however, so he proceeded to invent a new name for")
 cecho("\n&lt;white&gt; the place. This was promptly \"rewarded\" by the figure inside, which")
 cecho("\n&lt;white&gt; turned out to be Lord Severn, in disguise, who transformed him into a")
 cecho("\n&lt;white&gt; navigational guide to others.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; While under the effect of this constellation, you will feel your")
 cecho("\n&lt;white&gt; willpower diminished.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Navigator&lt;white&gt; ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; In the early days of the Ankyrean age, there lived a simple man by the")
 cecho("\n&lt;white&gt; name of Peripleko. During those times, the world was still largely")
 cecho("\n&lt;white&gt; unknown, and the opportunity was there to make a name for oneself with")
 cecho("\n&lt;white&gt; new discoveries. Peripleko saw the scholastic achievement of those")
 cecho("\n&lt;white&gt; around him, and endeavored to map the known world, chronicling his")
 cecho("\n&lt;white&gt; journey.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; He set out from Spinesreach with his goal in mind, and soon he")
 cecho("\n&lt;white&gt; encountered a hooded traveler. \"&lt;dim_grey&gt;Greetings,&lt;white&gt;\" the traveler said. \"&lt;dim_grey&gt;What do")
 cecho("\n&lt;dim_grey&gt; you seek?&lt;white&gt;\" Peripleko thought for a moment, replying, \"&lt;dim_grey&gt;To learn the ways")
 cecho("\n&lt;white&gt; of the world and take them back to my homeland.&lt;white&gt;\" The traveler chuckled,")
 cecho("\n&lt;white&gt; \"&lt;dim_grey&gt;You do not seek fame and glory?&lt;white&gt;\" This struck Peripleko, and he paused")
 cecho("\n&lt;white&gt; in contemplation. \"&lt;dim_grey&gt;Fame and glory,&lt;white&gt;\" he thought, \"&lt;dim_grey&gt;I could make a real")
 cecho("\n&lt;dim_grey&gt; name for myself if I made that my goal instead of simply wishing to")
 cecho("\n&lt;dim_grey&gt; contribute!&lt;white&gt;\" And so, bidding the traveler goodbye, he struck out, making")
 cecho("\n&lt;white&gt; elegant maps and writing eloquent novels of his travels.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Encountering the Dakhota Hills, he came upon a blizzard. Carefully")
 cecho("\n&lt;white&gt; protecting his works, he set into the swirling eddies of snow to see")
 cecho("\n&lt;white&gt; where it would lead. Eventually, he came upon a steep cliff, floating")
 cecho("\n&lt;white&gt; above the ground, and he ascended it. He came to a massive gate, through")
 cecho("\n&lt;white&gt; which he could see the most marvelous of paradises spread out before")
 cecho("\n&lt;white&gt; him. He could also see the traveler he had met earlier in his journey.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; \"&lt;dim_grey&gt;Greetings!&lt;white&gt;\" he called out. \"&lt;dim_grey&gt;Pray sir, open the gates that I might map")
 cecho("\n&lt;dim_grey&gt; this place for my homeland.&lt;white&gt;\" The traveler remained unmoved. Peripleko")
 cecho("\n&lt;white&gt; tried again, \"&lt;dim_grey&gt;Come now, sir, do you not know who I am? I am the great")
 cecho("\n&lt;dim_grey&gt; Peripleko, navigator of Sapience!&lt;white&gt;\" The traveler chuckled, \"&lt;dim_grey&gt;Do you know")
 cecho("\n&lt;dim_grey&gt; where you are?&lt;white&gt;\" Peripleko thought for a moment, and his pride would not")
 cecho("\n&lt;white&gt; allow him to speak the truth. \"&lt;dim_grey&gt;Aye sir,&lt;white&gt;\" he bragged, \"&lt;dim_grey&gt;I am in the great")
 cecho("\n&lt;dim_grey&gt; Atavian land of Arcadia, obviously, for we are floating in mid-air.&lt;white&gt;\" The")
 cecho("\n&lt;white&gt; traveler did not answer. \"&lt;dim_grey&gt;Surely, you are aware of this, sir, for you")
 cecho("\n&lt;dim_grey&gt; are already inside,&lt;white&gt;\" he continued.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Still, the traveler did not speak. Instead, the gates slowly swung open,")
 cecho("\n&lt;white&gt; and Peripleko stepped eagerly inside, his quill ready against a clean")
 cecho("\n&lt;white&gt; sheet of papyrus. As he stepped past the gates, he felt a strange")
 cecho("\n&lt;white&gt; sensation overcome him. The traveler laughed, finally, and pulled back")
 cecho("\n&lt;white&gt; his cloak. Peripleko stared, for as the cloak left the traveller's head,")
 cecho("\n&lt;white&gt; it was revealed that the traveller was Severn, Lord of Artifice.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Peripleko fell to his knees in supplication to the Divine presence, the")
 cecho("\n&lt;white&gt; only thing he could will himself to do. The God laughed at him.")
 cecho("\n&lt;white&gt; \"&lt;dim_grey&gt;Navigator of Sapience indeed. You seek fame and glory? I shall grant it")
 cecho("\n&lt;dim_grey&gt; to you!&lt;white&gt;\" The dark, shadowed essence of Severn shot from His hand,")
 cecho("\n&lt;white&gt; enveloping Peripleko and thrusting him into the sky. His placement in")
 cecho("\n&lt;white&gt; the firmament now marks the northern directional.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star peripleko$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Fionshi</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;FIONSHI, &lt;white&gt;the Wandering or the Hopeful")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as six stars in a small, tight cluster      |                   |")
 cecho("\n&lt;white&gt; and two off to one side, describing Fionshi's    |                   |")
 cecho("\n&lt;white&gt; broad-sailed ship and her narrow wake.           |     &lt;cyan&gt; +            &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt; Fionshi's ship, the 'Essence of the Sea', was    |   &lt;cyan&gt;+  +  +         &lt;white&gt;|")
 cecho("\n&lt;white&gt; highly sought by every sailor. Her last          |    &lt;cyan&gt; + +           &lt;white&gt;|")
 cecho("\n&lt;white&gt; journey, however, has yet to end, as her         |          &lt;blue&gt;  .      &lt;white&gt;|")
 cecho("\n&lt;white&gt; captain sails forever on in our skies.           |               &lt;blue&gt;.   &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Wandering &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The port of Ashtan has long been a thriving business, and once, the")
 cecho("\n&lt;white&gt; Essence of the Sea was the very symbol of its success. Every few months,")
 cecho("\n&lt;white&gt; the grand bow of the Essence of the Sea would sail into port, her sails")
 cecho("\n&lt;white&gt; seemingly wide as the horizon and just as full of potential.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The frigate's captain was Fionshi, a Kelki of undisputed honor, courage,")
 cecho("\n&lt;white&gt; and resilience. They say he defeated a kraken using his ship as a")
 cecho("\n&lt;white&gt; weapon, and they say he never lost a sailor out at sea, save for")
 cecho("\n&lt;white&gt; stowaways and mutineers. He took no lover but instead cared for the")
 cecho("\n&lt;white&gt; Essence as if she was his wife, and for many years, they traded")
 cecho("\n&lt;white&gt; together, exploring every nook of the coast of Sapience along the way.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; It became known on a fine day in Khepary that the Essence was to leave")
 cecho("\n&lt;white&gt; Ashtan's port for new continents. It was murmured in taverns on those")
 cecho("\n&lt;white&gt; long summer evenings, it was shouted by the dockworkers, and though the")
 cecho("\n&lt;white&gt; town crier said not a word, Ashtan was abruptly full with eager sailors.")
 cecho("\n&lt;white&gt; The Overseer of Ashtan had commissioned an exploration and Fionshi was")
 cecho("\n&lt;white&gt; to be the captain. From those sailors that answered his rumored call,")
 cecho("\n&lt;white&gt; Fionshi chose the finest fifty from among them to tend to his beloved")
 cecho("\n&lt;white&gt; Essence.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; They waved from port in farewell, half their pay from the Overseer")
 cecho("\n&lt;white&gt; already divided among the crew. They have not been seen on Sapience")
 cecho("\n&lt;white&gt; since that day, but it is said that the continent they found was not of")
 cecho("\n&lt;white&gt; the same realm as the sun. Perhaps they cannot return, or perhaps the")
 cecho("\n&lt;white&gt; wonders there ensure they do not wish to leave, but even now you can see")
 cecho("\n&lt;white&gt; the Essence of the Sea sailing through the night sky in pursuit of new")
 cecho("\n&lt;white&gt; discoveries.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star fionshi$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Edamil</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;EDAMIL, &lt;white&gt;the Trickster")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; This constellation is seen as a semicircle of    |                   |")
 cecho("\n&lt;white&gt; four stars, enclosing a single, bright star,     |                   |")
 cecho("\n&lt;white&gt; which represents the hand of Edamil, as he       |        &lt;cyan&gt;+          &lt;white&gt;|")
 cecho("\n&lt;white&gt; reaches out to try to grasp a star.              |     &lt;cyan&gt;+      +      &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; Tales tell us that Edamil found himself          |        &lt;yellow&gt;*     &lt;cyan&gt;+    &lt;white&gt;|")
 cecho("\n&lt;white&gt; trapped in the skies, as an act of Divine        |                   |")
 cecho("\n&lt;white&gt; mischief.                                        |                   |")
 cecho("\n&lt;white&gt;                                                  |                   |")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt;                                                  ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Trickster ===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Widely regarded as a nuisance, and just as widely hailed as a brilliant")
 cecho("\n&lt;white&gt; purveyor of jokes and humor, Edamil was a renowned maker of mischief.")
 cecho("\n&lt;white&gt; Not to be outdone, Khepri tricked the trickster into attempting to steal")
 cecho("\n&lt;white&gt; the stars from the sky. When Edamil accepted Khepri's invitation, She")
 cecho("\n&lt;white&gt; trapped her in the nighttime sky. She remains there still with a grin,")
 cecho("\n&lt;white&gt; always attempting to capture a star.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star edamil$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Umbrael</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;UMBRAEL, &lt;white&gt;the Cloak")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Seen as a square of four stars, with darkness    |                   |")
 cecho("\n&lt;white&gt; inside it obscuring any stars behind,            |                   |")
 cecho("\n&lt;white&gt; representing the shape of a four-cornered        |         &lt;cyan&gt;+         &lt;white&gt;|")
 cecho("\n&lt;white&gt; cloak, which conceals all behind it.             |     &lt;cyan&gt;+             &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |             &lt;cyan&gt;+     &lt;white&gt;|")
 cecho("\n&lt;white&gt; Legends say this cloak was presented by the      |                   |")
 cecho("\n&lt;white&gt; Syssin in dedication to Lord Severn, prior to    |       &lt;cyan&gt;+           &lt;white&gt;|")
 cecho("\n&lt;white&gt; the fall of the Ankyreans, not knowing that      |                   |")
 cecho("\n&lt;white&gt; later on He would use it to help bringing        |                   |")
 cecho("\n&lt;white&gt; about the Grand Artifice.                        x-------------------x")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; This constellation will make you feel less able to perform magical")
 cecho("\n&lt;white&gt; feats, by depleting your mana.")
cecho("\n&lt;white&gt;  ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The Cloak &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At the commencement of the Grand Artifice, Severn summoned all of His")
 cecho("\n&lt;white&gt; essence to draw a cloak of artifice across the land, to change that")
 cecho("\n&lt;white&gt; which had been created by Varian. Though they did not know what the")
 cecho("\n&lt;white&gt; gravity of their actions, the Syssin Defenders of the Ankyreans had been")
 cecho("\n&lt;white&gt; commissioned to weave this cloak for their Patron so that He might use")
 cecho("\n&lt;white&gt; it in His plan.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Temporarily forsaking their duties as protectors of the Reach, they sat")
 cecho("\n&lt;white&gt; within the Spire of Artifice to create this mthical garment. The")
 cecho("\n&lt;white&gt; Champion of the Five Spires sat in one corner with three of his most")
 cecho("\n&lt;white&gt; trusted comrades around him. The Syssin stretched out a wide swath of")
 cecho("\n&lt;white&gt; blue fabric that they had brought, not sure of what to do next.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Severn, in the form of a raven, swooped down from the high reaches of")
 cecho("\n&lt;white&gt; the Spire and dropped in the palm of each a spindle of shimmering twine")
 cecho("\n&lt;white&gt; from his black talons. The loyal Syssin began to weave in these magic")
 cecho("\n&lt;white&gt; fibers to the plain cloth, and the square of dark blue grew more")
 cecho("\n&lt;white&gt; strange, its weave ever shifting from bright to dark, illuminating to")
 cecho("\n&lt;white&gt; concealing.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The Syssin worked for hours, stitching in shapes of serpents among")
 cecho("\n&lt;white&gt; detailed and swirling patterns. Finally the cloak was complete. At the")
cecho("\n&lt;white&gt; moment the last stitch had been set, Severn appeared again to the")
 cecho("\n&lt;white&gt; Syssin, this time in his shadowed mortal form. He silently received the")
 cecho("\n&lt;white&gt; cloak and began what is now recorded as the Grand Artifice. The Syssin")
 cecho("\n&lt;white&gt; were left in the room alone and confused. This task had not been")
 cecho("\n&lt;white&gt; explained and never would be, for Severn's shame overwhelmed Him.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The Syssin would forget this job they had done as the cloak they had")
cecho("\n&lt;white&gt; made passed over them, but Severn did not wish for Sapience to lose its")
cecho("\n&lt;white&gt; collective memory of the gorgeous work. After he swept it across the")
 cecho("\n&lt;white&gt; continent, changing everything under its soft shadow, He flung it into")
 cecho("\n&lt;white&gt; the sky, both proud of its workmanship and with a heavy heart for what")
 cecho("\n&lt;white&gt; He had to do. The cloak remains suspended amongst the stars, obscuring")
 cecho("\n&lt;white&gt; the bright points of light behind it with its heavy matter.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star umbrael$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Ontesme</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;ONTESME, &lt;white&gt;the Tormented")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Appears as six pale stars, running generally     |                   |")
 cecho("\n&lt;white&gt; in a horizontal line, representing the body of   |                   |")
 cecho("\n&lt;white&gt; Ontesme at rest.                                 |                   |")
 cecho("\n&lt;white&gt;                                                  | &lt;blue&gt;            .     &lt;white&gt;|")
 cecho("\n&lt;white&gt; The tale of Ontesme is a sad one, for it is      | &lt;blue&gt;.     .  .      . &lt;white&gt;|")
 cecho("\n&lt;white&gt; said that although she had the appearance of a   | &lt;blue&gt;   .              &lt;white&gt;|")
 cecho("\n&lt;white&gt; normal girl, she was cursed by possessing the    |                   |")
 cecho("\n&lt;white&gt; spirits of two beings. This greatly disrupted    |                   |")
 cecho("\n&lt;white&gt; whatever peaceful life she might have had in     |                   |")
 cecho("\n&lt;white&gt; her home village, for the beast inside her       x-------------------x")
 cecho("\n&lt;white&gt; never ceased trying to overcome her humanity.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                          === &lt;red&gt;The Tormented &lt;white&gt;===")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Ontesme was not unusual for village girl, well loved by her family and")
 cecho("\n&lt;white&gt; known as a great lover of flowers and song. She dreamed of being wife to")
 cecho("\n&lt;white&gt; a farmer and reaping great harvests in the fall. Yet we cannot know Who")
 cecho("\n&lt;white&gt; or what was to blame for her plight. She was overtaken on the birthday")
 cecho("\n&lt;white&gt; of her thirteenth year: two spirits resided within her, and perhaps")
 cecho("\n&lt;white&gt; awoken by the growing of their hostess's body, they woke with frightful")
 cecho("\n&lt;white&gt; hunger. We cannot know the identity of these spirits for certain; the")
 cecho("\n&lt;white&gt; girl could only communicate her pain, while the two battled for")
 cecho("\n&lt;white&gt; possession of her very being.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; At times, she snarled, as would an animal, clawing at members of her")
 cecho("\n&lt;white&gt; family with feral rage. At others, she laughed in a manner most unsuited")
 cecho("\n&lt;white&gt; to young throats: deep, throaty, and piercing in its icy contempt. As")
 cecho("\n&lt;white&gt; the little Ontesme vacillated between evil chuckles, howls, and shrieks")
 cecho("\n&lt;white&gt; of pain, it became obvious that her future was not to remain in the")
 cecho("\n&lt;white&gt; village. The village elders threw her into captivity, unwilling to kill")
 cecho("\n&lt;white&gt; the girl that was so charming in years past. Though they passed food and")
 cecho("\n&lt;white&gt; water through the bars, she would not eat, but became distorted in form.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; Her skin grew pale, her lips black, and her very presence frightening.")
 cecho("\n&lt;white&gt; Within days her batterings at the cell door grew astonishingly strong,")
 cecho("\n&lt;white&gt; and still the elders hesitated. And so it was that Ontesme savagely")
 cecho("\n&lt;white&gt; ripped through the very walls of her cell, no longer recognizable as the")
 cecho("\n&lt;white&gt; girl they had loved. She killed many of those in her village before she")
 cecho("\n&lt;white&gt; could be stopped. In death, her body returned to a visage of innocence")
 cecho("\n&lt;white&gt; and was lifted to the night sky where she may rest easy, relieved of her")
 cecho("\n&lt;white&gt; burden.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star ontesme$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Lildegravra</name>
								<script>
 cecho("\n&lt;white&gt; &lt;red&gt;LILDEGRAVRA, &lt;white&gt;the Dragon or the Tyrant")
 cecho("\n&lt;white&gt;                                                  x-------------------x")
 cecho("\n&lt;white&gt; Can be viewed as eight bright, white stars in    |      &lt;cyan&gt; +           &lt;white&gt;|")
 cecho("\n&lt;white&gt; a wandering line, with two more stars above it,  |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; forming Lildegravra's prowling profile, with a   |            &lt;cyan&gt;+      &lt;white&gt;|")
 cecho("\n&lt;white&gt; single outstretched wing.                        |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt;                                                  |     &lt;white&gt;*   *  *      &lt;white&gt;|")
 cecho("\n&lt;white&gt; Ancient legends tell of a fearsome dragon who    |                   &lt;white&gt;|")
 cecho("\n&lt;white&gt; once roamed the lands named Lildegravra, its     |  &lt;white&gt;*            *   &lt;white&gt;|")
 cecho("\n&lt;white&gt; hide a flawless, brilliant white. The dragon     |  &lt;white&gt; *         *     &lt;white&gt;|")
 cecho("\n&lt;white&gt; sought to become dominant over all of the        |          &lt;white&gt;      *  &lt;white&gt;|")
 cecho("\n&lt;white&gt; Aetolian skies, but its disdain for its          x-------------------x")
 cecho("\n&lt;white&gt; distant cousins, the wyverns, proved to be")
 cecho("\n&lt;white&gt; ultimately its undoing.")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt;                            === &lt;red&gt;The Tyrant &lt;white&gt; ===")
 cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; There was a time, when the oldest Ankyrean was yet unborn, when dragons")
 cecho("\n&lt;white&gt; were rulers of the land - or, more precisely, of the sky. One could")
 cecho("\n&lt;white&gt; hardly feel the sun on one's cheek, for the blue above was eternally")
 cecho("\n&lt;white&gt; shadowed by enormous bodies in motion - living, loving, fighting, and")
 cecho("\n&lt;white&gt; learning. The dragons paid no heed to other races of the land, including")
 cecho("\n&lt;white&gt; animals, humanoids, and wyverns.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; The greatest (and most arrogant) of the dragons was Lildegravra, a")
 cecho("\n&lt;white&gt; glorious mountain of snowy scales and ivory wings large enough to cast a")
 cecho("\n&lt;white&gt; shadow upon all of Ulangi. Lildegravra enjoyed the hunting of wyverns")
 cecho("\n&lt;white&gt; for sport, filling the seas with their discarded remains even when it")
 cecho("\n&lt;white&gt; did not hunger. When Lildegravra growled, the stars trembled and the")
 cecho("\n&lt;white&gt; clouds wept. Lildegravra sought dominion over the entirety of Aetolia,")
 cecho("\n&lt;white&gt; which should have been easy. All dragons bowed low in terror, and to its")
 cecho("\n&lt;white&gt; mind, that was all that mattered.")
cecho("\n&lt;white&gt; ")
 cecho("\n&lt;white&gt; But as Lildegravra spread its wings to shadow the lands and proclaim its")
 cecho("\n&lt;white&gt; dominance, the wyverns attacked as one, a beautiful formation streaking")
 cecho("\n&lt;white&gt; through the skies to bring down the white tyrant. They managed to sever")
 cecho("\n&lt;white&gt; its wing, and it fell from the sky, unable to hold its bulk airborne.")
 cecho("\n&lt;white&gt; Lildegravra, shamed in its defeat, retreated to live amongst the stars")
 cecho("\n&lt;white&gt; themselves.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^star lildegravra$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>Stars Help</name>
						<script>cecho("&lt;white&gt;\n COMMANDS:")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;stars  - &lt;dim_grey&gt; overview")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;stars1 - &lt;dim_grey&gt; prime stars")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;stars2 - &lt;dim_grey&gt; negative stars")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;stars3 - &lt;dim_grey&gt; positive stars")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;oldstars - &lt;dim_grey&gt; the old mejevsavelnel")
cecho("&lt;dim_grey&gt;\n * &lt;white&gt;star &lt;starname&gt; - &lt;dim_grey&gt; pull up star-specific lore")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^stars help$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage />
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
